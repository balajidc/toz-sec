/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./browser/b64.js":
/*!************************!*\
  !*** ./browser/b64.js ***!
  \************************/
/***/ ((module) => {

eval("/**\r\n * Adapted from base64-js with URL encoding added.\r\n *\r\n * @see https://github.com/beatgammit/base64-js\r\n */\r\n\r\nconst lookup =\r\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\r\nconst urlLookup =\r\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'\r\nconst revLookup = []\r\nconst urlRevLookup = []\r\n\r\nfor (var i = 0, len = lookup.length; i < len; ++i) {\r\n  revLookup[lookup.charCodeAt(i)] = i\r\n  urlRevLookup[urlLookup.charCodeAt(i)] = i\r\n}\r\n\r\nfunction getLens(b64) {\r\n  let validLen = b64.indexOf('=')\r\n  if (validLen === -1) {\r\n    validLen = b64.length\r\n  }\r\n\r\n  var placeHoldersLen = b64.length - validLen\r\n  return [validLen, placeHoldersLen]\r\n}\r\n\r\nfunction toByteArray(b64, type) {\r\n  const charSet = type === 'url' ? urlRevLookup : revLookup\r\n  var tmp\r\n  var lens = getLens(b64)\r\n  var validLen = lens[0]\r\n  var placeHoldersLen = lens[1]\r\n\r\n  var arr = new Uint8Array(\r\n    ((validLen + placeHoldersLen) * 3) / 4 - placeHoldersLen\r\n  )\r\n\r\n  var curByte = 0\r\n\r\n  // if there are placeholders, only get up to the last complete 4 chars\r\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen\r\n\r\n  var i\r\n  for (i = 0; i < len; i += 4) {\r\n    tmp =\r\n      (charSet[b64.charCodeAt(i)] << 18) |\r\n      (charSet[b64.charCodeAt(i + 1)] << 12) |\r\n      (charSet[b64.charCodeAt(i + 2)] << 6) |\r\n      charSet[b64.charCodeAt(i + 3)]\r\n    arr[curByte++] = (tmp >> 16) & 0xff\r\n    arr[curByte++] = (tmp >> 8) & 0xff\r\n    arr[curByte++] = tmp & 0xff\r\n  }\r\n\r\n  if (placeHoldersLen === 2) {\r\n    tmp =\r\n      (charSet[b64.charCodeAt(i)] << 2) | (charSet[b64.charCodeAt(i + 1)] >> 4)\r\n    arr[curByte++] = tmp & 0xff\r\n  }\r\n\r\n  if (placeHoldersLen === 1) {\r\n    tmp =\r\n      (charSet[b64.charCodeAt(i)] << 10) |\r\n      (charSet[b64.charCodeAt(i + 1)] << 4) |\r\n      (charSet[b64.charCodeAt(i + 2)] >> 2)\r\n    arr[curByte++] = (tmp >> 8) & 0xff\r\n    arr[curByte++] = tmp & 0xff\r\n  }\r\n\r\n  return arr\r\n}\r\n\r\nfunction tripletToBase64(num, charSet) {\r\n  return (\r\n    charSet[(num >> 18) & 0x3f] +\r\n    charSet[(num >> 12) & 0x3f] +\r\n    charSet[(num >> 6) & 0x3f] +\r\n    charSet[num & 0x3f]\r\n  )\r\n}\r\n\r\nfunction encodeChunk(uint8, start, end, charSet) {\r\n  let tmp\r\n  let output = []\r\n  for (var i = start; i < end; i += 3) {\r\n    tmp =\r\n      ((uint8[i] << 16) & 0xff0000) +\r\n      ((uint8[i + 1] << 8) & 0xff00) +\r\n      (uint8[i + 2] & 0xff)\r\n    output.push(tripletToBase64(tmp, charSet))\r\n  }\r\n  return output.join('')\r\n}\r\n\r\nfunction fromByteArray(uint8, type, pad = true) {\r\n  const charSet = type === 'url' ? urlLookup : lookup\r\n  const len = uint8.length\r\n  const extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\r\n  const maxChunkLength = 16383 // must be multiple of 3\r\n  let tmp\r\n  let parts = []\r\n\r\n  // go through the array every three bytes, we'll deal with trailing stuff later\r\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\r\n    parts.push(\r\n      encodeChunk(\r\n        uint8,\r\n        i,\r\n        i + maxChunkLength > len2 ? len2 : i + maxChunkLength,\r\n        charSet\r\n      )\r\n    )\r\n  }\r\n\r\n  // pad the end with zeros, but make sure to not forget the extra bytes\r\n  if (extraBytes === 1) {\r\n    tmp = uint8[len - 1]\r\n    parts.push(charSet[tmp >> 2] + charSet[(tmp << 4) & 0x3f])\r\n    if (pad) {\r\n      parts.push('==')\r\n    }\r\n  } else if (extraBytes === 2) {\r\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\r\n    parts.push(\r\n      charSet[tmp >> 10] +\r\n        charSet[(tmp >> 4) & 0x3f] +\r\n        charSet[(tmp << 2) & 0x3f]\r\n    )\r\n    if (pad) {\r\n      parts.push('=')\r\n    }\r\n  }\r\n\r\n  return parts.join('')\r\n}\r\n\r\nmodule.exports = {\r\n  toByteArray,\r\n  fromByteArray,\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9icm93c2VyL2I2NC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B0b3pueXNlY3VyZS9zZGsvLi9icm93c2VyL2I2NC5qcz85ZjJjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBBZGFwdGVkIGZyb20gYmFzZTY0LWpzIHdpdGggVVJMIGVuY29kaW5nIGFkZGVkLlxyXG4gKlxyXG4gKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9iZWF0Z2FtbWl0L2Jhc2U2NC1qc1xyXG4gKi9cclxuXHJcbmNvbnN0IGxvb2t1cCA9XHJcbiAgJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky8nXHJcbmNvbnN0IHVybExvb2t1cCA9XHJcbiAgJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5LV8nXHJcbmNvbnN0IHJldkxvb2t1cCA9IFtdXHJcbmNvbnN0IHVybFJldkxvb2t1cCA9IFtdXHJcblxyXG5mb3IgKHZhciBpID0gMCwgbGVuID0gbG9va3VwLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XHJcbiAgcmV2TG9va3VwW2xvb2t1cC5jaGFyQ29kZUF0KGkpXSA9IGlcclxuICB1cmxSZXZMb29rdXBbdXJsTG9va3VwLmNoYXJDb2RlQXQoaSldID0gaVxyXG59XHJcblxyXG5mdW5jdGlvbiBnZXRMZW5zKGI2NCkge1xyXG4gIGxldCB2YWxpZExlbiA9IGI2NC5pbmRleE9mKCc9JylcclxuICBpZiAodmFsaWRMZW4gPT09IC0xKSB7XHJcbiAgICB2YWxpZExlbiA9IGI2NC5sZW5ndGhcclxuICB9XHJcblxyXG4gIHZhciBwbGFjZUhvbGRlcnNMZW4gPSBiNjQubGVuZ3RoIC0gdmFsaWRMZW5cclxuICByZXR1cm4gW3ZhbGlkTGVuLCBwbGFjZUhvbGRlcnNMZW5dXHJcbn1cclxuXHJcbmZ1bmN0aW9uIHRvQnl0ZUFycmF5KGI2NCwgdHlwZSkge1xyXG4gIGNvbnN0IGNoYXJTZXQgPSB0eXBlID09PSAndXJsJyA/IHVybFJldkxvb2t1cCA6IHJldkxvb2t1cFxyXG4gIHZhciB0bXBcclxuICB2YXIgbGVucyA9IGdldExlbnMoYjY0KVxyXG4gIHZhciB2YWxpZExlbiA9IGxlbnNbMF1cclxuICB2YXIgcGxhY2VIb2xkZXJzTGVuID0gbGVuc1sxXVxyXG5cclxuICB2YXIgYXJyID0gbmV3IFVpbnQ4QXJyYXkoXHJcbiAgICAoKHZhbGlkTGVuICsgcGxhY2VIb2xkZXJzTGVuKSAqIDMpIC8gNCAtIHBsYWNlSG9sZGVyc0xlblxyXG4gIClcclxuXHJcbiAgdmFyIGN1ckJ5dGUgPSAwXHJcblxyXG4gIC8vIGlmIHRoZXJlIGFyZSBwbGFjZWhvbGRlcnMsIG9ubHkgZ2V0IHVwIHRvIHRoZSBsYXN0IGNvbXBsZXRlIDQgY2hhcnNcclxuICB2YXIgbGVuID0gcGxhY2VIb2xkZXJzTGVuID4gMCA/IHZhbGlkTGVuIC0gNCA6IHZhbGlkTGVuXHJcblxyXG4gIHZhciBpXHJcbiAgZm9yIChpID0gMDsgaSA8IGxlbjsgaSArPSA0KSB7XHJcbiAgICB0bXAgPVxyXG4gICAgICAoY2hhclNldFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMTgpIHxcclxuICAgICAgKGNoYXJTZXRbYjY0LmNoYXJDb2RlQXQoaSArIDEpXSA8PCAxMikgfFxyXG4gICAgICAoY2hhclNldFtiNjQuY2hhckNvZGVBdChpICsgMildIDw8IDYpIHxcclxuICAgICAgY2hhclNldFtiNjQuY2hhckNvZGVBdChpICsgMyldXHJcbiAgICBhcnJbY3VyQnl0ZSsrXSA9ICh0bXAgPj4gMTYpICYgMHhmZlxyXG4gICAgYXJyW2N1ckJ5dGUrK10gPSAodG1wID4+IDgpICYgMHhmZlxyXG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgJiAweGZmXHJcbiAgfVxyXG5cclxuICBpZiAocGxhY2VIb2xkZXJzTGVuID09PSAyKSB7XHJcbiAgICB0bXAgPVxyXG4gICAgICAoY2hhclNldFtiNjQuY2hhckNvZGVBdChpKV0gPDwgMikgfCAoY2hhclNldFtiNjQuY2hhckNvZGVBdChpICsgMSldID4+IDQpXHJcbiAgICBhcnJbY3VyQnl0ZSsrXSA9IHRtcCAmIDB4ZmZcclxuICB9XHJcblxyXG4gIGlmIChwbGFjZUhvbGRlcnNMZW4gPT09IDEpIHtcclxuICAgIHRtcCA9XHJcbiAgICAgIChjaGFyU2V0W2I2NC5jaGFyQ29kZUF0KGkpXSA8PCAxMCkgfFxyXG4gICAgICAoY2hhclNldFtiNjQuY2hhckNvZGVBdChpICsgMSldIDw8IDQpIHxcclxuICAgICAgKGNoYXJTZXRbYjY0LmNoYXJDb2RlQXQoaSArIDIpXSA+PiAyKVxyXG4gICAgYXJyW2N1ckJ5dGUrK10gPSAodG1wID4+IDgpICYgMHhmZlxyXG4gICAgYXJyW2N1ckJ5dGUrK10gPSB0bXAgJiAweGZmXHJcbiAgfVxyXG5cclxuICByZXR1cm4gYXJyXHJcbn1cclxuXHJcbmZ1bmN0aW9uIHRyaXBsZXRUb0Jhc2U2NChudW0sIGNoYXJTZXQpIHtcclxuICByZXR1cm4gKFxyXG4gICAgY2hhclNldFsobnVtID4+IDE4KSAmIDB4M2ZdICtcclxuICAgIGNoYXJTZXRbKG51bSA+PiAxMikgJiAweDNmXSArXHJcbiAgICBjaGFyU2V0WyhudW0gPj4gNikgJiAweDNmXSArXHJcbiAgICBjaGFyU2V0W251bSAmIDB4M2ZdXHJcbiAgKVxyXG59XHJcblxyXG5mdW5jdGlvbiBlbmNvZGVDaHVuayh1aW50OCwgc3RhcnQsIGVuZCwgY2hhclNldCkge1xyXG4gIGxldCB0bXBcclxuICBsZXQgb3V0cHV0ID0gW11cclxuICBmb3IgKHZhciBpID0gc3RhcnQ7IGkgPCBlbmQ7IGkgKz0gMykge1xyXG4gICAgdG1wID1cclxuICAgICAgKCh1aW50OFtpXSA8PCAxNikgJiAweGZmMDAwMCkgK1xyXG4gICAgICAoKHVpbnQ4W2kgKyAxXSA8PCA4KSAmIDB4ZmYwMCkgK1xyXG4gICAgICAodWludDhbaSArIDJdICYgMHhmZilcclxuICAgIG91dHB1dC5wdXNoKHRyaXBsZXRUb0Jhc2U2NCh0bXAsIGNoYXJTZXQpKVxyXG4gIH1cclxuICByZXR1cm4gb3V0cHV0LmpvaW4oJycpXHJcbn1cclxuXHJcbmZ1bmN0aW9uIGZyb21CeXRlQXJyYXkodWludDgsIHR5cGUsIHBhZCA9IHRydWUpIHtcclxuICBjb25zdCBjaGFyU2V0ID0gdHlwZSA9PT0gJ3VybCcgPyB1cmxMb29rdXAgOiBsb29rdXBcclxuICBjb25zdCBsZW4gPSB1aW50OC5sZW5ndGhcclxuICBjb25zdCBleHRyYUJ5dGVzID0gbGVuICUgMyAvLyBpZiB3ZSBoYXZlIDEgYnl0ZSBsZWZ0LCBwYWQgMiBieXRlc1xyXG4gIGNvbnN0IG1heENodW5rTGVuZ3RoID0gMTYzODMgLy8gbXVzdCBiZSBtdWx0aXBsZSBvZiAzXHJcbiAgbGV0IHRtcFxyXG4gIGxldCBwYXJ0cyA9IFtdXHJcblxyXG4gIC8vIGdvIHRocm91Z2ggdGhlIGFycmF5IGV2ZXJ5IHRocmVlIGJ5dGVzLCB3ZSdsbCBkZWFsIHdpdGggdHJhaWxpbmcgc3R1ZmYgbGF0ZXJcclxuICBmb3IgKHZhciBpID0gMCwgbGVuMiA9IGxlbiAtIGV4dHJhQnl0ZXM7IGkgPCBsZW4yOyBpICs9IG1heENodW5rTGVuZ3RoKSB7XHJcbiAgICBwYXJ0cy5wdXNoKFxyXG4gICAgICBlbmNvZGVDaHVuayhcclxuICAgICAgICB1aW50OCxcclxuICAgICAgICBpLFxyXG4gICAgICAgIGkgKyBtYXhDaHVua0xlbmd0aCA+IGxlbjIgPyBsZW4yIDogaSArIG1heENodW5rTGVuZ3RoLFxyXG4gICAgICAgIGNoYXJTZXRcclxuICAgICAgKVxyXG4gICAgKVxyXG4gIH1cclxuXHJcbiAgLy8gcGFkIHRoZSBlbmQgd2l0aCB6ZXJvcywgYnV0IG1ha2Ugc3VyZSB0byBub3QgZm9yZ2V0IHRoZSBleHRyYSBieXRlc1xyXG4gIGlmIChleHRyYUJ5dGVzID09PSAxKSB7XHJcbiAgICB0bXAgPSB1aW50OFtsZW4gLSAxXVxyXG4gICAgcGFydHMucHVzaChjaGFyU2V0W3RtcCA+PiAyXSArIGNoYXJTZXRbKHRtcCA8PCA0KSAmIDB4M2ZdKVxyXG4gICAgaWYgKHBhZCkge1xyXG4gICAgICBwYXJ0cy5wdXNoKCc9PScpXHJcbiAgICB9XHJcbiAgfSBlbHNlIGlmIChleHRyYUJ5dGVzID09PSAyKSB7XHJcbiAgICB0bXAgPSAodWludDhbbGVuIC0gMl0gPDwgOCkgKyB1aW50OFtsZW4gLSAxXVxyXG4gICAgcGFydHMucHVzaChcclxuICAgICAgY2hhclNldFt0bXAgPj4gMTBdICtcclxuICAgICAgICBjaGFyU2V0Wyh0bXAgPj4gNCkgJiAweDNmXSArXHJcbiAgICAgICAgY2hhclNldFsodG1wIDw8IDIpICYgMHgzZl1cclxuICAgIClcclxuICAgIGlmIChwYWQpIHtcclxuICAgICAgcGFydHMucHVzaCgnPScpXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICByZXR1cm4gcGFydHMuam9pbignJylcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgdG9CeXRlQXJyYXksXHJcbiAgZnJvbUJ5dGVBcnJheSxcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./browser/b64.js\n");

/***/ }),

/***/ "./browser/fileOperations.js":
/*!***********************************!*\
  !*** ./browser/fileOperations.js ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const FileOperationsBase = __webpack_require__(/*! ../lib/storage/fileOperations */ \"./lib/storage/fileOperations.js\")\r\n\r\n/**\r\n * Handle browser specific file operations\r\n *\r\n * *Uploads*\r\n * In this version, browsers take a Blob object as the source of a file. This can\r\n * be an in-memory blob, but is just as likely a File object from an input\r\n * element. The blob is read in slices, encrypted, and collected in memory before\r\n * conversion into a new Blob, which is uploaded using the fetch API.\r\n *\r\n * *Download*\r\n * In this version, browsers use fetch to download the file, returning the\r\n * ReadableStream body. This stream is decrypted and the decrypted bytes are\r\n * sent into a new ReadableStream which emits the unencrypted bytes. Only when\r\n * the return is converted to an object, string, or other type are the bytes\r\n * completely held in memory, the rest is processed via the Web Streams API.\r\n */\r\nclass FileOperations extends FileOperationsBase {\r\n  validateHandle(handle) {\r\n    if (!(handle instanceof Blob)) {\r\n      throw new Error('File handles must be an instance of Blob in browsers.')\r\n    }\r\n  }\r\n\r\n  decryptDestination() {\r\n    return new DecryptedStream()\r\n  }\r\n\r\n  encryptDestination() {\r\n    return new BlobTempFile()\r\n  }\r\n\r\n  sourceReader(handle, blockSize) {\r\n    return new BlobReader(handle, blockSize)\r\n  }\r\n\r\n  async download(url) {\r\n    const response = await fetch(url)\r\n    if (!response.ok) {\r\n      const err = new Error(\r\n        `Unable to download file: ${(await response).statusText}`\r\n      )\r\n      err.statusCode = response.status\r\n      throw err\r\n    }\r\n    return response.body.getReader()\r\n  }\r\n\r\n  async upload(url, body, checksum, size) {\r\n    const req = await fetch(url, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/octet-stream',\r\n        'Content-MD5': checksum,\r\n        'Content-Length': size,\r\n      },\r\n      body,\r\n    })\r\n    if (!req.ok) {\r\n      const err = new Error(`Unable to upload file: ${req.statusText}`)\r\n      err.statusCode = req.status\r\n      throw err\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Reads Blob objects in chunks based on blockSize\r\n */\r\nclass BlobReader {\r\n  constructor(blob, blockSize) {\r\n    this._blob = blob\r\n    this._blockSize = blockSize\r\n    this._index = 0\r\n    this._remainingBytes = blob.size\r\n    this._chain = Promise.resolve()\r\n  }\r\n\r\n  read() {\r\n    // Doing this organized in a chain of promises ensures that each chunk is\r\n    // processed and returned sequentially -- byte order is maintained.\r\n    this._chain = this._chain.then(() => {\r\n      return new Promise((res, rej) => {\r\n        const chunkSize = Math.min(this._blockSize, this._remainingBytes)\r\n        const slice = this._blob.slice(this._index, this._index + chunkSize)\r\n        const reader = new FileReader()\r\n        reader.onload = () => {\r\n          this._index += chunkSize\r\n          this._remainingBytes -= chunkSize\r\n          const chunk = {\r\n            value: new Uint8Array(reader.result),\r\n            done: chunkSize !== this._blockSize || this._remainingBytes < 1,\r\n          }\r\n          res(chunk)\r\n        }\r\n        reader.onerror = rej\r\n        reader.readAsArrayBuffer(slice)\r\n      })\r\n    })\r\n    return this._chain\r\n  }\r\n}\r\n\r\n/**\r\n * Collects bytes into a blob file, usable in browser upload bodies.\r\n *\r\n * To prevent extra bytes being necessary, we collect all of the byte arrays\r\n * in the `blocks` array and pass that to the Blob constructor all at once.\r\n */\r\nclass BlobTempFile {\r\n  constructor() {\r\n    this.blocks = []\r\n  }\r\n  write(bytes) {\r\n    this.blocks.push(bytes)\r\n  }\r\n  getUploadable() {\r\n    return new Blob(this.blocks, { type: 'application/octet-stream' })\r\n  }\r\n  remove() {\r\n    this.blocks = []\r\n  }\r\n}\r\n\r\n/**\r\n * Converts decrypted bytes into a standardized ReadableStream.\r\n *\r\n * ReadableStream is the item returned as the response body from Fetch, so in\r\n * general any browser supporting fetch also supports ReadableStream.\r\n */\r\nclass DecryptedStream {\r\n  constructor() {\r\n    this.stream = new ReadableStream({\r\n      start: (controller) => {\r\n        this.controller = controller\r\n      },\r\n    })\r\n  }\r\n\r\n  write(chunk) {\r\n    this.controller.enqueue(chunk)\r\n  }\r\n\r\n  close() {\r\n    this.controller.close()\r\n  }\r\n\r\n  getReader() {\r\n    return this.stream\r\n  }\r\n}\r\n\r\nmodule.exports = FileOperations\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9icm93c2VyL2ZpbGVPcGVyYXRpb25zLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHRvem55c2VjdXJlL3Nkay8uL2Jyb3dzZXIvZmlsZU9wZXJhdGlvbnMuanM/YTE4YiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBGaWxlT3BlcmF0aW9uc0Jhc2UgPSByZXF1aXJlKCcuLi9saWIvc3RvcmFnZS9maWxlT3BlcmF0aW9ucycpXHJcblxyXG4vKipcclxuICogSGFuZGxlIGJyb3dzZXIgc3BlY2lmaWMgZmlsZSBvcGVyYXRpb25zXHJcbiAqXHJcbiAqICpVcGxvYWRzKlxyXG4gKiBJbiB0aGlzIHZlcnNpb24sIGJyb3dzZXJzIHRha2UgYSBCbG9iIG9iamVjdCBhcyB0aGUgc291cmNlIG9mIGEgZmlsZS4gVGhpcyBjYW5cclxuICogYmUgYW4gaW4tbWVtb3J5IGJsb2IsIGJ1dCBpcyBqdXN0IGFzIGxpa2VseSBhIEZpbGUgb2JqZWN0IGZyb20gYW4gaW5wdXRcclxuICogZWxlbWVudC4gVGhlIGJsb2IgaXMgcmVhZCBpbiBzbGljZXMsIGVuY3J5cHRlZCwgYW5kIGNvbGxlY3RlZCBpbiBtZW1vcnkgYmVmb3JlXHJcbiAqIGNvbnZlcnNpb24gaW50byBhIG5ldyBCbG9iLCB3aGljaCBpcyB1cGxvYWRlZCB1c2luZyB0aGUgZmV0Y2ggQVBJLlxyXG4gKlxyXG4gKiAqRG93bmxvYWQqXHJcbiAqIEluIHRoaXMgdmVyc2lvbiwgYnJvd3NlcnMgdXNlIGZldGNoIHRvIGRvd25sb2FkIHRoZSBmaWxlLCByZXR1cm5pbmcgdGhlXHJcbiAqIFJlYWRhYmxlU3RyZWFtIGJvZHkuIFRoaXMgc3RyZWFtIGlzIGRlY3J5cHRlZCBhbmQgdGhlIGRlY3J5cHRlZCBieXRlcyBhcmVcclxuICogc2VudCBpbnRvIGEgbmV3IFJlYWRhYmxlU3RyZWFtIHdoaWNoIGVtaXRzIHRoZSB1bmVuY3J5cHRlZCBieXRlcy4gT25seSB3aGVuXHJcbiAqIHRoZSByZXR1cm4gaXMgY29udmVydGVkIHRvIGFuIG9iamVjdCwgc3RyaW5nLCBvciBvdGhlciB0eXBlIGFyZSB0aGUgYnl0ZXNcclxuICogY29tcGxldGVseSBoZWxkIGluIG1lbW9yeSwgdGhlIHJlc3QgaXMgcHJvY2Vzc2VkIHZpYSB0aGUgV2ViIFN0cmVhbXMgQVBJLlxyXG4gKi9cclxuY2xhc3MgRmlsZU9wZXJhdGlvbnMgZXh0ZW5kcyBGaWxlT3BlcmF0aW9uc0Jhc2Uge1xyXG4gIHZhbGlkYXRlSGFuZGxlKGhhbmRsZSkge1xyXG4gICAgaWYgKCEoaGFuZGxlIGluc3RhbmNlb2YgQmxvYikpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdGaWxlIGhhbmRsZXMgbXVzdCBiZSBhbiBpbnN0YW5jZSBvZiBCbG9iIGluIGJyb3dzZXJzLicpXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBkZWNyeXB0RGVzdGluYXRpb24oKSB7XHJcbiAgICByZXR1cm4gbmV3IERlY3J5cHRlZFN0cmVhbSgpXHJcbiAgfVxyXG5cclxuICBlbmNyeXB0RGVzdGluYXRpb24oKSB7XHJcbiAgICByZXR1cm4gbmV3IEJsb2JUZW1wRmlsZSgpXHJcbiAgfVxyXG5cclxuICBzb3VyY2VSZWFkZXIoaGFuZGxlLCBibG9ja1NpemUpIHtcclxuICAgIHJldHVybiBuZXcgQmxvYlJlYWRlcihoYW5kbGUsIGJsb2NrU2l6ZSlcclxuICB9XHJcblxyXG4gIGFzeW5jIGRvd25sb2FkKHVybCkge1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwpXHJcbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XHJcbiAgICAgIGNvbnN0IGVyciA9IG5ldyBFcnJvcihcclxuICAgICAgICBgVW5hYmxlIHRvIGRvd25sb2FkIGZpbGU6ICR7KGF3YWl0IHJlc3BvbnNlKS5zdGF0dXNUZXh0fWBcclxuICAgICAgKVxyXG4gICAgICBlcnIuc3RhdHVzQ29kZSA9IHJlc3BvbnNlLnN0YXR1c1xyXG4gICAgICB0aHJvdyBlcnJcclxuICAgIH1cclxuICAgIHJldHVybiByZXNwb25zZS5ib2R5LmdldFJlYWRlcigpXHJcbiAgfVxyXG5cclxuICBhc3luYyB1cGxvYWQodXJsLCBib2R5LCBjaGVja3N1bSwgc2l6ZSkge1xyXG4gICAgY29uc3QgcmVxID0gYXdhaXQgZmV0Y2godXJsLCB7XHJcbiAgICAgIG1ldGhvZDogJ1BVVCcsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbScsXHJcbiAgICAgICAgJ0NvbnRlbnQtTUQ1JzogY2hlY2tzdW0sXHJcbiAgICAgICAgJ0NvbnRlbnQtTGVuZ3RoJzogc2l6ZSxcclxuICAgICAgfSxcclxuICAgICAgYm9keSxcclxuICAgIH0pXHJcbiAgICBpZiAoIXJlcS5vaykge1xyXG4gICAgICBjb25zdCBlcnIgPSBuZXcgRXJyb3IoYFVuYWJsZSB0byB1cGxvYWQgZmlsZTogJHtyZXEuc3RhdHVzVGV4dH1gKVxyXG4gICAgICBlcnIuc3RhdHVzQ29kZSA9IHJlcS5zdGF0dXNcclxuICAgICAgdGhyb3cgZXJyXHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogUmVhZHMgQmxvYiBvYmplY3RzIGluIGNodW5rcyBiYXNlZCBvbiBibG9ja1NpemVcclxuICovXHJcbmNsYXNzIEJsb2JSZWFkZXIge1xyXG4gIGNvbnN0cnVjdG9yKGJsb2IsIGJsb2NrU2l6ZSkge1xyXG4gICAgdGhpcy5fYmxvYiA9IGJsb2JcclxuICAgIHRoaXMuX2Jsb2NrU2l6ZSA9IGJsb2NrU2l6ZVxyXG4gICAgdGhpcy5faW5kZXggPSAwXHJcbiAgICB0aGlzLl9yZW1haW5pbmdCeXRlcyA9IGJsb2Iuc2l6ZVxyXG4gICAgdGhpcy5fY2hhaW4gPSBQcm9taXNlLnJlc29sdmUoKVxyXG4gIH1cclxuXHJcbiAgcmVhZCgpIHtcclxuICAgIC8vIERvaW5nIHRoaXMgb3JnYW5pemVkIGluIGEgY2hhaW4gb2YgcHJvbWlzZXMgZW5zdXJlcyB0aGF0IGVhY2ggY2h1bmsgaXNcclxuICAgIC8vIHByb2Nlc3NlZCBhbmQgcmV0dXJuZWQgc2VxdWVudGlhbGx5IC0tIGJ5dGUgb3JkZXIgaXMgbWFpbnRhaW5lZC5cclxuICAgIHRoaXMuX2NoYWluID0gdGhpcy5fY2hhaW4udGhlbigoKSA9PiB7XHJcbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzLCByZWopID0+IHtcclxuICAgICAgICBjb25zdCBjaHVua1NpemUgPSBNYXRoLm1pbih0aGlzLl9ibG9ja1NpemUsIHRoaXMuX3JlbWFpbmluZ0J5dGVzKVxyXG4gICAgICAgIGNvbnN0IHNsaWNlID0gdGhpcy5fYmxvYi5zbGljZSh0aGlzLl9pbmRleCwgdGhpcy5faW5kZXggKyBjaHVua1NpemUpXHJcbiAgICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKVxyXG4gICAgICAgIHJlYWRlci5vbmxvYWQgPSAoKSA9PiB7XHJcbiAgICAgICAgICB0aGlzLl9pbmRleCArPSBjaHVua1NpemVcclxuICAgICAgICAgIHRoaXMuX3JlbWFpbmluZ0J5dGVzIC09IGNodW5rU2l6ZVxyXG4gICAgICAgICAgY29uc3QgY2h1bmsgPSB7XHJcbiAgICAgICAgICAgIHZhbHVlOiBuZXcgVWludDhBcnJheShyZWFkZXIucmVzdWx0KSxcclxuICAgICAgICAgICAgZG9uZTogY2h1bmtTaXplICE9PSB0aGlzLl9ibG9ja1NpemUgfHwgdGhpcy5fcmVtYWluaW5nQnl0ZXMgPCAxLFxyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgcmVzKGNodW5rKVxyXG4gICAgICAgIH1cclxuICAgICAgICByZWFkZXIub25lcnJvciA9IHJlalxyXG4gICAgICAgIHJlYWRlci5yZWFkQXNBcnJheUJ1ZmZlcihzbGljZSlcclxuICAgICAgfSlcclxuICAgIH0pXHJcbiAgICByZXR1cm4gdGhpcy5fY2hhaW5cclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDb2xsZWN0cyBieXRlcyBpbnRvIGEgYmxvYiBmaWxlLCB1c2FibGUgaW4gYnJvd3NlciB1cGxvYWQgYm9kaWVzLlxyXG4gKlxyXG4gKiBUbyBwcmV2ZW50IGV4dHJhIGJ5dGVzIGJlaW5nIG5lY2Vzc2FyeSwgd2UgY29sbGVjdCBhbGwgb2YgdGhlIGJ5dGUgYXJyYXlzXHJcbiAqIGluIHRoZSBgYmxvY2tzYCBhcnJheSBhbmQgcGFzcyB0aGF0IHRvIHRoZSBCbG9iIGNvbnN0cnVjdG9yIGFsbCBhdCBvbmNlLlxyXG4gKi9cclxuY2xhc3MgQmxvYlRlbXBGaWxlIHtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHRoaXMuYmxvY2tzID0gW11cclxuICB9XHJcbiAgd3JpdGUoYnl0ZXMpIHtcclxuICAgIHRoaXMuYmxvY2tzLnB1c2goYnl0ZXMpXHJcbiAgfVxyXG4gIGdldFVwbG9hZGFibGUoKSB7XHJcbiAgICByZXR1cm4gbmV3IEJsb2IodGhpcy5ibG9ja3MsIHsgdHlwZTogJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbScgfSlcclxuICB9XHJcbiAgcmVtb3ZlKCkge1xyXG4gICAgdGhpcy5ibG9ja3MgPSBbXVxyXG4gIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIENvbnZlcnRzIGRlY3J5cHRlZCBieXRlcyBpbnRvIGEgc3RhbmRhcmRpemVkIFJlYWRhYmxlU3RyZWFtLlxyXG4gKlxyXG4gKiBSZWFkYWJsZVN0cmVhbSBpcyB0aGUgaXRlbSByZXR1cm5lZCBhcyB0aGUgcmVzcG9uc2UgYm9keSBmcm9tIEZldGNoLCBzbyBpblxyXG4gKiBnZW5lcmFsIGFueSBicm93c2VyIHN1cHBvcnRpbmcgZmV0Y2ggYWxzbyBzdXBwb3J0cyBSZWFkYWJsZVN0cmVhbS5cclxuICovXHJcbmNsYXNzIERlY3J5cHRlZFN0cmVhbSB7XHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICB0aGlzLnN0cmVhbSA9IG5ldyBSZWFkYWJsZVN0cmVhbSh7XHJcbiAgICAgIHN0YXJ0OiAoY29udHJvbGxlcikgPT4ge1xyXG4gICAgICAgIHRoaXMuY29udHJvbGxlciA9IGNvbnRyb2xsZXJcclxuICAgICAgfSxcclxuICAgIH0pXHJcbiAgfVxyXG5cclxuICB3cml0ZShjaHVuaykge1xyXG4gICAgdGhpcy5jb250cm9sbGVyLmVucXVldWUoY2h1bmspXHJcbiAgfVxyXG5cclxuICBjbG9zZSgpIHtcclxuICAgIHRoaXMuY29udHJvbGxlci5jbG9zZSgpXHJcbiAgfVxyXG5cclxuICBnZXRSZWFkZXIoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5zdHJlYW1cclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gRmlsZU9wZXJhdGlvbnNcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./browser/fileOperations.js\n");

/***/ }),

/***/ "./browser/helpers.js":
/*!****************************!*\
  !*** ./browser/helpers.js ***!
  \****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const sodium = __webpack_require__(/*! libsodium-wrappers */ \"./node_modules/libsodium-wrappers/dist/modules/libsodium-wrappers.js\")\r\n\r\nconst helpers = {\r\n  /**\r\n   * Runs a check to ensure all of the crypto primitives are available.\r\n   *\r\n   * @return {Promise<boolean>} A promising resolving to whether or not the primitives are available.\r\n   */\r\n  async checkCrypto() {\r\n    try {\r\n      // first detect basic subtle crypto support\r\n      if (!window.crypto || !window.crypto.subtle) {\r\n        return false\r\n      }\r\n      // next validate derive key is present\r\n      if ('function' !== typeof window.crypto.subtle.deriveKey) {\r\n        return false\r\n      }\r\n\r\n      // next check if PBKDF2 is present\r\n      const uint8arr = new Uint8Array([20, 21, 22])\r\n      const testKey = await window.crypto.subtle.importKey(\r\n        'raw',\r\n        uint8arr,\r\n        { name: 'PBKDF2' },\r\n        false,\r\n        ['deriveBits', 'deriveKey']\r\n      )\r\n      await window.crypto.subtle.deriveKey(\r\n        {\r\n          name: 'PBKDF2',\r\n          salt: uint8arr,\r\n          iterations: 1,\r\n          hash: 'SHA-256',\r\n        },\r\n        testKey,\r\n        { name: 'AES-GCM', length: 256 },\r\n        true,\r\n        ['encrypt', 'decrypt']\r\n      )\r\n      // finally make sure sodium is available and loaded\r\n      // this will reject if wasm or asmjs are can not load\r\n      await sodium.ready\r\n      return true\r\n    } catch (_) {\r\n      return false\r\n    }\r\n  },\r\n  /**\r\n   * Converts a File object into a native Response object for processing.\r\n   *\r\n   * @param {File} file A File object ready for reading.\r\n   * @param {string} mimeType The MIME type to assign the Response.\r\n   * @return {Promise<Response>} A Response object to process the file with.\r\n   */\r\n  async fileAsResponse(file, mimeType) {\r\n    const stream = await file.read()\r\n    return new Response(stream, {\r\n      headers: { 'Content-Type': mimeType },\r\n    })\r\n  },\r\n  /**\r\n   * Converts a File object into a native Blob object.\r\n   *\r\n   * @param {File} file A File object ready for reading.\r\n   * @param {string} mimeType The MIME type to assign to the blob.\r\n   * @return {Promise<Blob>} A Blob object containing the decrypted file bytes.\r\n   */\r\n  async fileAsBlob(file, mimeType) {\r\n    const response = await helpers.fileAsResponse(file, mimeType)\r\n    return await response.blob()\r\n  },\r\n  /**\r\n   * Converts a file object into an object URL for display or download.\r\n   *\r\n   * Make sure to revoke this url using `window.URL.revokeObjectURL(url)` when\r\n   * the URL is no longer needed or you risk memory leaks.\r\n   *\r\n   * @param {File} file A File object ready for reading.\r\n   * @param {string} mimeType The MIME type to assign to the file.\r\n   * @return {Promise<string>} An object URL to the download file.\r\n   */\r\n  async fileAsUrl(file, mimeType) {\r\n    const blob = await helpers.fileAsBlob(file, mimeType)\r\n    return window.URL.createObjectURL(blob)\r\n  },\r\n  /**\r\n   * Reads the decrypted file bytes and parses them as a JSON object.\r\n   *\r\n   * @param {File} file A File object ready for reading.\r\n   * @return {Promise<object>} The JavaScript object represented in the file.\r\n   */\r\n  async fileAsJSON(file) {\r\n    const response = await helpers.fileAsResponse(file, 'application/json')\r\n    return response.json()\r\n  },\r\n  /**\r\n   * Reads the decrypted file bytes and parses them as a UTF8 string.\r\n   *\r\n   * @param {File} file A File object ready for reading.\r\n   * @return {Promise<string>} The UTF8 text contained in the encrypted file.\r\n   */\r\n  async fileAsText(file) {\r\n    const response = await helpers.fileAsResponse(file, 'text/plain')\r\n    return response.text()\r\n  },\r\n  /**\r\n   * Reads the decrypted file bytes into a new ArrayBuffer.\r\n   *\r\n   * To use the buffer, you will need to wrap it in some kind of view, such as\r\n   * a TypedArray.\r\n   *\r\n   * @param {File} file A File object ready for reading.\r\n   * @return {Promise<ArrayBuffer>} An ArrayBuffer containing the decrypted bytes.\r\n   */\r\n  async fileAsBuffer(file) {\r\n    const blob = await helpers.fileAsBlob(file, 'application/octet-stream')\r\n    return blob.arrayBuffer()\r\n  },\r\n}\r\n\r\nmodule.exports = helpers\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9icm93c2VyL2hlbHBlcnMuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B0b3pueXNlY3VyZS9zZGsvLi9icm93c2VyL2hlbHBlcnMuanM/M2JhYyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzb2RpdW0gPSByZXF1aXJlKCdsaWJzb2RpdW0td3JhcHBlcnMnKVxyXG5cclxuY29uc3QgaGVscGVycyA9IHtcclxuICAvKipcclxuICAgKiBSdW5zIGEgY2hlY2sgdG8gZW5zdXJlIGFsbCBvZiB0aGUgY3J5cHRvIHByaW1pdGl2ZXMgYXJlIGF2YWlsYWJsZS5cclxuICAgKlxyXG4gICAqIEByZXR1cm4ge1Byb21pc2U8Ym9vbGVhbj59IEEgcHJvbWlzaW5nIHJlc29sdmluZyB0byB3aGV0aGVyIG9yIG5vdCB0aGUgcHJpbWl0aXZlcyBhcmUgYXZhaWxhYmxlLlxyXG4gICAqL1xyXG4gIGFzeW5jIGNoZWNrQ3J5cHRvKCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgLy8gZmlyc3QgZGV0ZWN0IGJhc2ljIHN1YnRsZSBjcnlwdG8gc3VwcG9ydFxyXG4gICAgICBpZiAoIXdpbmRvdy5jcnlwdG8gfHwgIXdpbmRvdy5jcnlwdG8uc3VidGxlKSB7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlXHJcbiAgICAgIH1cclxuICAgICAgLy8gbmV4dCB2YWxpZGF0ZSBkZXJpdmUga2V5IGlzIHByZXNlbnRcclxuICAgICAgaWYgKCdmdW5jdGlvbicgIT09IHR5cGVvZiB3aW5kb3cuY3J5cHRvLnN1YnRsZS5kZXJpdmVLZXkpIHtcclxuICAgICAgICByZXR1cm4gZmFsc2VcclxuICAgICAgfVxyXG5cclxuICAgICAgLy8gbmV4dCBjaGVjayBpZiBQQktERjIgaXMgcHJlc2VudFxyXG4gICAgICBjb25zdCB1aW50OGFyciA9IG5ldyBVaW50OEFycmF5KFsyMCwgMjEsIDIyXSlcclxuICAgICAgY29uc3QgdGVzdEtleSA9IGF3YWl0IHdpbmRvdy5jcnlwdG8uc3VidGxlLmltcG9ydEtleShcclxuICAgICAgICAncmF3JyxcclxuICAgICAgICB1aW50OGFycixcclxuICAgICAgICB7IG5hbWU6ICdQQktERjInIH0sXHJcbiAgICAgICAgZmFsc2UsXHJcbiAgICAgICAgWydkZXJpdmVCaXRzJywgJ2Rlcml2ZUtleSddXHJcbiAgICAgIClcclxuICAgICAgYXdhaXQgd2luZG93LmNyeXB0by5zdWJ0bGUuZGVyaXZlS2V5KFxyXG4gICAgICAgIHtcclxuICAgICAgICAgIG5hbWU6ICdQQktERjInLFxyXG4gICAgICAgICAgc2FsdDogdWludDhhcnIsXHJcbiAgICAgICAgICBpdGVyYXRpb25zOiAxLFxyXG4gICAgICAgICAgaGFzaDogJ1NIQS0yNTYnLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgdGVzdEtleSxcclxuICAgICAgICB7IG5hbWU6ICdBRVMtR0NNJywgbGVuZ3RoOiAyNTYgfSxcclxuICAgICAgICB0cnVlLFxyXG4gICAgICAgIFsnZW5jcnlwdCcsICdkZWNyeXB0J11cclxuICAgICAgKVxyXG4gICAgICAvLyBmaW5hbGx5IG1ha2Ugc3VyZSBzb2RpdW0gaXMgYXZhaWxhYmxlIGFuZCBsb2FkZWRcclxuICAgICAgLy8gdGhpcyB3aWxsIHJlamVjdCBpZiB3YXNtIG9yIGFzbWpzIGFyZSBjYW4gbm90IGxvYWRcclxuICAgICAgYXdhaXQgc29kaXVtLnJlYWR5XHJcbiAgICAgIHJldHVybiB0cnVlXHJcbiAgICB9IGNhdGNoIChfKSB7XHJcbiAgICAgIHJldHVybiBmYWxzZVxyXG4gICAgfVxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29udmVydHMgYSBGaWxlIG9iamVjdCBpbnRvIGEgbmF0aXZlIFJlc3BvbnNlIG9iamVjdCBmb3IgcHJvY2Vzc2luZy5cclxuICAgKlxyXG4gICAqIEBwYXJhbSB7RmlsZX0gZmlsZSBBIEZpbGUgb2JqZWN0IHJlYWR5IGZvciByZWFkaW5nLlxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBtaW1lVHlwZSBUaGUgTUlNRSB0eXBlIHRvIGFzc2lnbiB0aGUgUmVzcG9uc2UuXHJcbiAgICogQHJldHVybiB7UHJvbWlzZTxSZXNwb25zZT59IEEgUmVzcG9uc2Ugb2JqZWN0IHRvIHByb2Nlc3MgdGhlIGZpbGUgd2l0aC5cclxuICAgKi9cclxuICBhc3luYyBmaWxlQXNSZXNwb25zZShmaWxlLCBtaW1lVHlwZSkge1xyXG4gICAgY29uc3Qgc3RyZWFtID0gYXdhaXQgZmlsZS5yZWFkKClcclxuICAgIHJldHVybiBuZXcgUmVzcG9uc2Uoc3RyZWFtLCB7XHJcbiAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6IG1pbWVUeXBlIH0sXHJcbiAgICB9KVxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29udmVydHMgYSBGaWxlIG9iamVjdCBpbnRvIGEgbmF0aXZlIEJsb2Igb2JqZWN0LlxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtGaWxlfSBmaWxlIEEgRmlsZSBvYmplY3QgcmVhZHkgZm9yIHJlYWRpbmcuXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IG1pbWVUeXBlIFRoZSBNSU1FIHR5cGUgdG8gYXNzaWduIHRvIHRoZSBibG9iLlxyXG4gICAqIEByZXR1cm4ge1Byb21pc2U8QmxvYj59IEEgQmxvYiBvYmplY3QgY29udGFpbmluZyB0aGUgZGVjcnlwdGVkIGZpbGUgYnl0ZXMuXHJcbiAgICovXHJcbiAgYXN5bmMgZmlsZUFzQmxvYihmaWxlLCBtaW1lVHlwZSkge1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBoZWxwZXJzLmZpbGVBc1Jlc3BvbnNlKGZpbGUsIG1pbWVUeXBlKVxyXG4gICAgcmV0dXJuIGF3YWl0IHJlc3BvbnNlLmJsb2IoKVxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29udmVydHMgYSBmaWxlIG9iamVjdCBpbnRvIGFuIG9iamVjdCBVUkwgZm9yIGRpc3BsYXkgb3IgZG93bmxvYWQuXHJcbiAgICpcclxuICAgKiBNYWtlIHN1cmUgdG8gcmV2b2tlIHRoaXMgdXJsIHVzaW5nIGB3aW5kb3cuVVJMLnJldm9rZU9iamVjdFVSTCh1cmwpYCB3aGVuXHJcbiAgICogdGhlIFVSTCBpcyBubyBsb25nZXIgbmVlZGVkIG9yIHlvdSByaXNrIG1lbW9yeSBsZWFrcy5cclxuICAgKlxyXG4gICAqIEBwYXJhbSB7RmlsZX0gZmlsZSBBIEZpbGUgb2JqZWN0IHJlYWR5IGZvciByZWFkaW5nLlxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBtaW1lVHlwZSBUaGUgTUlNRSB0eXBlIHRvIGFzc2lnbiB0byB0aGUgZmlsZS5cclxuICAgKiBAcmV0dXJuIHtQcm9taXNlPHN0cmluZz59IEFuIG9iamVjdCBVUkwgdG8gdGhlIGRvd25sb2FkIGZpbGUuXHJcbiAgICovXHJcbiAgYXN5bmMgZmlsZUFzVXJsKGZpbGUsIG1pbWVUeXBlKSB7XHJcbiAgICBjb25zdCBibG9iID0gYXdhaXQgaGVscGVycy5maWxlQXNCbG9iKGZpbGUsIG1pbWVUeXBlKVxyXG4gICAgcmV0dXJuIHdpbmRvdy5VUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBSZWFkcyB0aGUgZGVjcnlwdGVkIGZpbGUgYnl0ZXMgYW5kIHBhcnNlcyB0aGVtIGFzIGEgSlNPTiBvYmplY3QuXHJcbiAgICpcclxuICAgKiBAcGFyYW0ge0ZpbGV9IGZpbGUgQSBGaWxlIG9iamVjdCByZWFkeSBmb3IgcmVhZGluZy5cclxuICAgKiBAcmV0dXJuIHtQcm9taXNlPG9iamVjdD59IFRoZSBKYXZhU2NyaXB0IG9iamVjdCByZXByZXNlbnRlZCBpbiB0aGUgZmlsZS5cclxuICAgKi9cclxuICBhc3luYyBmaWxlQXNKU09OKGZpbGUpIHtcclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgaGVscGVycy5maWxlQXNSZXNwb25zZShmaWxlLCAnYXBwbGljYXRpb24vanNvbicpXHJcbiAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBSZWFkcyB0aGUgZGVjcnlwdGVkIGZpbGUgYnl0ZXMgYW5kIHBhcnNlcyB0aGVtIGFzIGEgVVRGOCBzdHJpbmcuXHJcbiAgICpcclxuICAgKiBAcGFyYW0ge0ZpbGV9IGZpbGUgQSBGaWxlIG9iamVjdCByZWFkeSBmb3IgcmVhZGluZy5cclxuICAgKiBAcmV0dXJuIHtQcm9taXNlPHN0cmluZz59IFRoZSBVVEY4IHRleHQgY29udGFpbmVkIGluIHRoZSBlbmNyeXB0ZWQgZmlsZS5cclxuICAgKi9cclxuICBhc3luYyBmaWxlQXNUZXh0KGZpbGUpIHtcclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgaGVscGVycy5maWxlQXNSZXNwb25zZShmaWxlLCAndGV4dC9wbGFpbicpXHJcbiAgICByZXR1cm4gcmVzcG9uc2UudGV4dCgpXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBSZWFkcyB0aGUgZGVjcnlwdGVkIGZpbGUgYnl0ZXMgaW50byBhIG5ldyBBcnJheUJ1ZmZlci5cclxuICAgKlxyXG4gICAqIFRvIHVzZSB0aGUgYnVmZmVyLCB5b3Ugd2lsbCBuZWVkIHRvIHdyYXAgaXQgaW4gc29tZSBraW5kIG9mIHZpZXcsIHN1Y2ggYXNcclxuICAgKiBhIFR5cGVkQXJyYXkuXHJcbiAgICpcclxuICAgKiBAcGFyYW0ge0ZpbGV9IGZpbGUgQSBGaWxlIG9iamVjdCByZWFkeSBmb3IgcmVhZGluZy5cclxuICAgKiBAcmV0dXJuIHtQcm9taXNlPEFycmF5QnVmZmVyPn0gQW4gQXJyYXlCdWZmZXIgY29udGFpbmluZyB0aGUgZGVjcnlwdGVkIGJ5dGVzLlxyXG4gICAqL1xyXG4gIGFzeW5jIGZpbGVBc0J1ZmZlcihmaWxlKSB7XHJcbiAgICBjb25zdCBibG9iID0gYXdhaXQgaGVscGVycy5maWxlQXNCbG9iKGZpbGUsICdhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW0nKVxyXG4gICAgcmV0dXJuIGJsb2IuYXJyYXlCdWZmZXIoKVxyXG4gIH0sXHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gaGVscGVyc1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./browser/helpers.js\n");

/***/ }),

/***/ "./browser/platform.js":
/*!*****************************!*\
  !*** ./browser/platform.js ***!
  \*****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Platform = __webpack_require__(/*! ../lib/crypto/platform */ \"./lib/crypto/platform.js\")\r\nconst b64 = __webpack_require__(/*! ./b64 */ \"./browser/b64.js\")\r\n\r\nclass BrowserPlatform extends Platform {\r\n  b64encode(raw) {\r\n    return b64.fromByteArray(raw)\r\n  }\r\n\r\n  b64decode(encoded) {\r\n    return b64.toByteArray(encoded)\r\n  }\r\n\r\n  b64URLDecode(encoded) {\r\n    return b64.toByteArray(encoded, 'url')\r\n  }\r\n\r\n  b64URLEncode(raw) {\r\n    return b64.fromByteArray(raw, 'url', false)\r\n  }\r\n\r\n  byteToUTF8String(byteArray) {\r\n    let out = ''\r\n    let i = 0\r\n    const length = byteArray.length\r\n\r\n    while (i < length) {\r\n      let byte = byteArray[i++]\r\n      let byte2\r\n      let byte3\r\n      switch (byte >> 4) {\r\n        case 0:\r\n        case 1:\r\n        case 2:\r\n        case 3:\r\n        case 4:\r\n        case 5:\r\n        case 6:\r\n        case 7:\r\n          // 0xxxxxxx\r\n          out += String.fromCharCode(byte)\r\n          break\r\n        case 12:\r\n        case 13:\r\n          // 110x xxxx   10xx xxxx\r\n          byte2 = byteArray[i++]\r\n          out += String.fromCharCode(((byte & 0x1f) << 6) | (byte2 & 0x3f))\r\n          break\r\n        case 14:\r\n          // 1110 xxxx  10xx xxxx  10xx xxxx\r\n          byte2 = byteArray[i++]\r\n          byte3 = byteArray[i++]\r\n          out += String.fromCharCode(\r\n            ((byte & 0x0f) << 12) |\r\n              ((byte2 & 0x3f) << 6) |\r\n              ((byte3 & 0x3f) << 0)\r\n          )\r\n          break\r\n      }\r\n    }\r\n    return out\r\n  }\r\n\r\n  UTF8StringToByte(str) {\r\n    const byteArray = []\r\n    for (var i = 0; i < str.length; i++) {\r\n      let charCode = str.charCodeAt(i)\r\n      if (charCode < 0x80) byteArray.push(charCode)\r\n      else if (charCode < 0x800) {\r\n        byteArray.push(0xc0 | (charCode >> 6), 0x80 | (charCode & 0x3f))\r\n      } else if (charCode < 0xd800 || charCode >= 0xe000) {\r\n        byteArray.push(\r\n          0xe0 | (charCode >> 12),\r\n          0x80 | ((charCode >> 6) & 0x3f),\r\n          0x80 | (charCode & 0x3f)\r\n        )\r\n      }\r\n      // surrogate pair\r\n      else {\r\n        i++\r\n        // UTF-16 encodes 0x10000-0x10FFFF by\r\n        // subtracting 0x10000 and splitting the\r\n        // 20 bits of 0x0-0xFFFFF into two halves\r\n        charCode =\r\n          0x10000 + (((charCode & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff))\r\n        byteArray.push(\r\n          0xf0 | (charCode >> 18),\r\n          0x80 | ((charCode >> 12) & 0x3f),\r\n          0x80 | ((charCode >> 6) & 0x3f),\r\n          0x80 | (charCode & 0x3f)\r\n        )\r\n      }\r\n    }\r\n    return new Uint8Array(byteArray)\r\n  }\r\n}\r\n\r\nmodule.exports = BrowserPlatform\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9icm93c2VyL3BsYXRmb3JtLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHRvem55c2VjdXJlL3Nkay8uL2Jyb3dzZXIvcGxhdGZvcm0uanM/OTNhMyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBQbGF0Zm9ybSA9IHJlcXVpcmUoJy4uL2xpYi9jcnlwdG8vcGxhdGZvcm0nKVxyXG5jb25zdCBiNjQgPSByZXF1aXJlKCcuL2I2NCcpXHJcblxyXG5jbGFzcyBCcm93c2VyUGxhdGZvcm0gZXh0ZW5kcyBQbGF0Zm9ybSB7XHJcbiAgYjY0ZW5jb2RlKHJhdykge1xyXG4gICAgcmV0dXJuIGI2NC5mcm9tQnl0ZUFycmF5KHJhdylcclxuICB9XHJcblxyXG4gIGI2NGRlY29kZShlbmNvZGVkKSB7XHJcbiAgICByZXR1cm4gYjY0LnRvQnl0ZUFycmF5KGVuY29kZWQpXHJcbiAgfVxyXG5cclxuICBiNjRVUkxEZWNvZGUoZW5jb2RlZCkge1xyXG4gICAgcmV0dXJuIGI2NC50b0J5dGVBcnJheShlbmNvZGVkLCAndXJsJylcclxuICB9XHJcblxyXG4gIGI2NFVSTEVuY29kZShyYXcpIHtcclxuICAgIHJldHVybiBiNjQuZnJvbUJ5dGVBcnJheShyYXcsICd1cmwnLCBmYWxzZSlcclxuICB9XHJcblxyXG4gIGJ5dGVUb1VURjhTdHJpbmcoYnl0ZUFycmF5KSB7XHJcbiAgICBsZXQgb3V0ID0gJydcclxuICAgIGxldCBpID0gMFxyXG4gICAgY29uc3QgbGVuZ3RoID0gYnl0ZUFycmF5Lmxlbmd0aFxyXG5cclxuICAgIHdoaWxlIChpIDwgbGVuZ3RoKSB7XHJcbiAgICAgIGxldCBieXRlID0gYnl0ZUFycmF5W2krK11cclxuICAgICAgbGV0IGJ5dGUyXHJcbiAgICAgIGxldCBieXRlM1xyXG4gICAgICBzd2l0Y2ggKGJ5dGUgPj4gNCkge1xyXG4gICAgICAgIGNhc2UgMDpcclxuICAgICAgICBjYXNlIDE6XHJcbiAgICAgICAgY2FzZSAyOlxyXG4gICAgICAgIGNhc2UgMzpcclxuICAgICAgICBjYXNlIDQ6XHJcbiAgICAgICAgY2FzZSA1OlxyXG4gICAgICAgIGNhc2UgNjpcclxuICAgICAgICBjYXNlIDc6XHJcbiAgICAgICAgICAvLyAweHh4eHh4eFxyXG4gICAgICAgICAgb3V0ICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoYnl0ZSlcclxuICAgICAgICAgIGJyZWFrXHJcbiAgICAgICAgY2FzZSAxMjpcclxuICAgICAgICBjYXNlIDEzOlxyXG4gICAgICAgICAgLy8gMTEweCB4eHh4ICAgMTB4eCB4eHh4XHJcbiAgICAgICAgICBieXRlMiA9IGJ5dGVBcnJheVtpKytdXHJcbiAgICAgICAgICBvdXQgKz0gU3RyaW5nLmZyb21DaGFyQ29kZSgoKGJ5dGUgJiAweDFmKSA8PCA2KSB8IChieXRlMiAmIDB4M2YpKVxyXG4gICAgICAgICAgYnJlYWtcclxuICAgICAgICBjYXNlIDE0OlxyXG4gICAgICAgICAgLy8gMTExMCB4eHh4ICAxMHh4IHh4eHggIDEweHggeHh4eFxyXG4gICAgICAgICAgYnl0ZTIgPSBieXRlQXJyYXlbaSsrXVxyXG4gICAgICAgICAgYnl0ZTMgPSBieXRlQXJyYXlbaSsrXVxyXG4gICAgICAgICAgb3V0ICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoXHJcbiAgICAgICAgICAgICgoYnl0ZSAmIDB4MGYpIDw8IDEyKSB8XHJcbiAgICAgICAgICAgICAgKChieXRlMiAmIDB4M2YpIDw8IDYpIHxcclxuICAgICAgICAgICAgICAoKGJ5dGUzICYgMHgzZikgPDwgMClcclxuICAgICAgICAgIClcclxuICAgICAgICAgIGJyZWFrXHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBvdXRcclxuICB9XHJcblxyXG4gIFVURjhTdHJpbmdUb0J5dGUoc3RyKSB7XHJcbiAgICBjb25zdCBieXRlQXJyYXkgPSBbXVxyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyBpKyspIHtcclxuICAgICAgbGV0IGNoYXJDb2RlID0gc3RyLmNoYXJDb2RlQXQoaSlcclxuICAgICAgaWYgKGNoYXJDb2RlIDwgMHg4MCkgYnl0ZUFycmF5LnB1c2goY2hhckNvZGUpXHJcbiAgICAgIGVsc2UgaWYgKGNoYXJDb2RlIDwgMHg4MDApIHtcclxuICAgICAgICBieXRlQXJyYXkucHVzaCgweGMwIHwgKGNoYXJDb2RlID4+IDYpLCAweDgwIHwgKGNoYXJDb2RlICYgMHgzZikpXHJcbiAgICAgIH0gZWxzZSBpZiAoY2hhckNvZGUgPCAweGQ4MDAgfHwgY2hhckNvZGUgPj0gMHhlMDAwKSB7XHJcbiAgICAgICAgYnl0ZUFycmF5LnB1c2goXHJcbiAgICAgICAgICAweGUwIHwgKGNoYXJDb2RlID4+IDEyKSxcclxuICAgICAgICAgIDB4ODAgfCAoKGNoYXJDb2RlID4+IDYpICYgMHgzZiksXHJcbiAgICAgICAgICAweDgwIHwgKGNoYXJDb2RlICYgMHgzZilcclxuICAgICAgICApXHJcbiAgICAgIH1cclxuICAgICAgLy8gc3Vycm9nYXRlIHBhaXJcclxuICAgICAgZWxzZSB7XHJcbiAgICAgICAgaSsrXHJcbiAgICAgICAgLy8gVVRGLTE2IGVuY29kZXMgMHgxMDAwMC0weDEwRkZGRiBieVxyXG4gICAgICAgIC8vIHN1YnRyYWN0aW5nIDB4MTAwMDAgYW5kIHNwbGl0dGluZyB0aGVcclxuICAgICAgICAvLyAyMCBiaXRzIG9mIDB4MC0weEZGRkZGIGludG8gdHdvIGhhbHZlc1xyXG4gICAgICAgIGNoYXJDb2RlID1cclxuICAgICAgICAgIDB4MTAwMDAgKyAoKChjaGFyQ29kZSAmIDB4M2ZmKSA8PCAxMCkgfCAoc3RyLmNoYXJDb2RlQXQoaSkgJiAweDNmZikpXHJcbiAgICAgICAgYnl0ZUFycmF5LnB1c2goXHJcbiAgICAgICAgICAweGYwIHwgKGNoYXJDb2RlID4+IDE4KSxcclxuICAgICAgICAgIDB4ODAgfCAoKGNoYXJDb2RlID4+IDEyKSAmIDB4M2YpLFxyXG4gICAgICAgICAgMHg4MCB8ICgoY2hhckNvZGUgPj4gNikgJiAweDNmKSxcclxuICAgICAgICAgIDB4ODAgfCAoY2hhckNvZGUgJiAweDNmKVxyXG4gICAgICAgIClcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGJ5dGVBcnJheSlcclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gQnJvd3NlclBsYXRmb3JtXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./browser/platform.js\n");

/***/ }),

/***/ "./browser/sodium/browser.js":
/*!***********************************!*\
  !*** ./browser/sodium/browser.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("const Tozny = __webpack_require__(/*! . */ \"./browser/sodium/index.js\")\r\n\r\nwindow.Tozny = Tozny\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9icm93c2VyL3NvZGl1bS9icm93c2VyLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B0b3pueXNlY3VyZS9zZGsvLi9icm93c2VyL3NvZGl1bS9icm93c2VyLmpzPzAwM2UiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgVG96bnkgPSByZXF1aXJlKCcuJylcclxuXHJcbndpbmRvdy5Ub3pueSA9IFRvem55XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./browser/sodium/browser.js\n");

/***/ }),

/***/ "./browser/sodium/index.js":
/*!*********************************!*\
  !*** ./browser/sodium/index.js ***!
  \*********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Sodium = __webpack_require__(/*! ./sodium */ \"./browser/sodium/sodium.js\")\r\nconst Platform = __webpack_require__(/*! ../platform */ \"./browser/platform.js\")\r\nconst FileOperations = __webpack_require__(/*! ../fileOperations */ \"./browser/fileOperations.js\")\r\nconst Tozny = __webpack_require__(/*! ../../lib/tozny */ \"./lib/tozny.js\")\r\nconst helpers = __webpack_require__(/*! ../helpers */ \"./browser/helpers.js\")\r\n\r\n// Option to overwrite default (Crypto)Type mode.\r\nconst platform = new Platform()\r\nconst crypto = new Sodium()\r\nconst fileOperations = new FileOperations()\r\nmodule.exports = new Tozny(crypto, platform, fileOperations, helpers)\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9icm93c2VyL3NvZGl1bS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHRvem55c2VjdXJlL3Nkay8uL2Jyb3dzZXIvc29kaXVtL2luZGV4LmpzPzIyMjQiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU29kaXVtID0gcmVxdWlyZSgnLi9zb2RpdW0nKVxyXG5jb25zdCBQbGF0Zm9ybSA9IHJlcXVpcmUoJy4uL3BsYXRmb3JtJylcclxuY29uc3QgRmlsZU9wZXJhdGlvbnMgPSByZXF1aXJlKCcuLi9maWxlT3BlcmF0aW9ucycpXHJcbmNvbnN0IFRvem55ID0gcmVxdWlyZSgnLi4vLi4vbGliL3Rvem55JylcclxuY29uc3QgaGVscGVycyA9IHJlcXVpcmUoJy4uL2hlbHBlcnMnKVxyXG5cclxuLy8gT3B0aW9uIHRvIG92ZXJ3cml0ZSBkZWZhdWx0IChDcnlwdG8pVHlwZSBtb2RlLlxyXG5jb25zdCBwbGF0Zm9ybSA9IG5ldyBQbGF0Zm9ybSgpXHJcbmNvbnN0IGNyeXB0byA9IG5ldyBTb2RpdW0oKVxyXG5jb25zdCBmaWxlT3BlcmF0aW9ucyA9IG5ldyBGaWxlT3BlcmF0aW9ucygpXHJcbm1vZHVsZS5leHBvcnRzID0gbmV3IFRvem55KGNyeXB0bywgcGxhdGZvcm0sIGZpbGVPcGVyYXRpb25zLCBoZWxwZXJzKVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./browser/sodium/index.js\n");

/***/ }),

/***/ "./browser/sodium/sodium.js":
/*!**********************************!*\
  !*** ./browser/sodium/sodium.js ***!
  \**********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const sodium = __webpack_require__(/*! libsodium-wrappers */ \"./node_modules/libsodium-wrappers/dist/modules/libsodium-wrappers.js\")\r\nconst { ArrayBuffer: MD5 } = __webpack_require__(/*! spark-md5 */ \"./node_modules/spark-md5/spark-md5.js\")\r\nconst CryptoProvider = __webpack_require__(/*! ../../lib/crypto/cryptoProvider */ \"./lib/crypto/cryptoProvider.js\")\r\nconst Platform = __webpack_require__(/*! ../platform */ \"./browser/platform.js\")\r\nconst { DEFAULT_KDF_ITERATIONS } = __webpack_require__(/*! ../../lib/utils/constants */ \"./lib/utils/constants.js\")\r\n\r\nconst encoder = new Platform()\r\n\r\n/**\r\n * Use PBKDF2 to derive a key of a given length using a specified password\r\n * and salt.\r\n *\r\n * @param {string} password     User-specified password\r\n * @param {string} salt         User-specified salt (should be random)\r\n * @param {number} length       Length of the key to generate\r\n * @param {number} [iterations] Option number of hash iterations to create the seed.\r\n *\r\n * @returns {Promise<ArrayBuffer>}\r\n */\r\nasync function deriveKey(password, salt, length, iterations) {\r\n  password = maybeToBytes(password)\r\n  salt = maybeToBytes(salt)\r\n  const keyMaterial = await window.crypto.subtle.importKey(\r\n    'raw',\r\n    password,\r\n    { name: 'PBKDF2' },\r\n    false,\r\n    ['deriveBits', 'deriveKey']\r\n  )\r\n  const key = await window.crypto.subtle.deriveKey(\r\n    {\r\n      name: 'PBKDF2',\r\n      salt,\r\n      iterations,\r\n      hash: 'SHA-512',\r\n    },\r\n    keyMaterial,\r\n    { name: 'HMAC', hash: { name: 'SHA-1' }, length: length * 8 },\r\n    true,\r\n    ['sign', 'verify']\r\n  )\r\n  return window.crypto.subtle.exportKey('raw', key)\r\n}\r\n\r\nfunction maybeToBytes(val) {\r\n  if (\r\n    typeof val === 'object' &&\r\n    val.buffer &&\r\n    val.buffer instanceof ArrayBuffer\r\n  ) {\r\n    return val\r\n  }\r\n  return encoder.UTF8StringToByte(val)\r\n}\r\n\r\nclass SodiumCrypto extends CryptoProvider {\r\n  mode() {\r\n    return 'Sodium'\r\n  }\r\n\r\n  async nonceBytes() {\r\n    await sodium.ready\r\n    return sodium.crypto_secretbox_NONCEBYTES\r\n  }\r\n\r\n  async keyBytes() {\r\n    await sodium.ready\r\n    return sodium.crypto_secretbox_KEYBYTES\r\n  }\r\n\r\n  async keyPairBytes() {\r\n    await sodium.ready\r\n    return sodium.crypto_box_SEEDBYTES\r\n  }\r\n\r\n  async signingKeyPairBytes() {\r\n    await sodium.ready\r\n    return sodium.crypto_sign_SEEDBYTES\r\n  }\r\n\r\n  async streamKeyBytes() {\r\n    await sodium.ready\r\n    return sodium.crypto_secretstream_xchacha20poly1305_KEYBYTES\r\n  }\r\n\r\n  async streamHeaderBytes() {\r\n    await sodium.ready\r\n    return sodium.crypto_secretstream_xchacha20poly1305_HEADERBYTES\r\n  }\r\n\r\n  async streamOverheadBytes() {\r\n    await sodium.ready\r\n    return sodium.crypto_secretstream_xchacha20poly1305_ABYTES\r\n  }\r\n\r\n  async encryptSymmetric(plain, nonce, key) {\r\n    await sodium.ready\r\n    return sodium.crypto_secretbox_easy(plain, nonce, key)\r\n  }\r\n\r\n  async decryptSymmetric(cipher, nonce, key) {\r\n    await sodium.ready\r\n    return sodium.crypto_secretbox_open_easy(cipher, nonce, key)\r\n  }\r\n\r\n  async encryptAsymmetric(message, nonce, publicKey, privateKey) {\r\n    await sodium.ready\r\n    return sodium.crypto_box_easy(message, nonce, publicKey, privateKey)\r\n  }\r\n\r\n  async decryptAsymmetric(cipher, nonce, publicKey, privateKey) {\r\n    await sodium.ready\r\n    return sodium.crypto_box_open_easy(cipher, nonce, publicKey, privateKey)\r\n  }\r\n\r\n  async randomBytes(length) {\r\n    return window.crypto.getRandomValues(new Uint8Array(length))\r\n  }\r\n\r\n  async seedSymmetricKey(seed, salt, iterations = DEFAULT_KDF_ITERATIONS) {\r\n    const key = await deriveKey(seed, salt, await this.keyBytes(), iterations)\r\n    return new Uint8Array(key)\r\n  }\r\n\r\n  async seedCryptoKeyPair(seed, salt, iterations = DEFAULT_KDF_ITERATIONS) {\r\n    await sodium.ready\r\n    const stretchedSeed = await deriveKey(\r\n      seed,\r\n      salt,\r\n      await this.keyPairBytes(),\r\n      iterations\r\n    )\r\n\r\n    return sodium.crypto_box_seed_keypair(new Uint8Array(stretchedSeed))\r\n  }\r\n\r\n  async seedSigningKeyPair(seed, salt, iterations = DEFAULT_KDF_ITERATIONS) {\r\n    await sodium.ready\r\n    const stretchedSeed = await deriveKey(\r\n      seed,\r\n      salt,\r\n      await this.signingKeyPairBytes(),\r\n      iterations\r\n    )\r\n\r\n    return sodium.crypto_sign_seed_keypair(new Uint8Array(stretchedSeed))\r\n  }\r\n\r\n  async generateKeypair() {\r\n    await sodium.ready\r\n    return sodium.crypto_box_keypair()\r\n  }\r\n\r\n  async generateSigningKeypair() {\r\n    await sodium.ready\r\n    return sodium.crypto_sign_keypair()\r\n  }\r\n\r\n  async sign(message, privateKey) {\r\n    await sodium.ready\r\n    return sodium.crypto_sign_detached(message, privateKey)\r\n  }\r\n\r\n  async verify(signature, message, publicKey) {\r\n    await sodium.ready\r\n    return sodium.crypto_sign_verify_detached(signature, message, publicKey)\r\n  }\r\n\r\n  async hash(message, algorithm = 'Blake2B') {\r\n    if (algorithm === 'Blake2B') {\r\n      await sodium.ready\r\n      return sodium.crypto_generichash(sodium.crypto_generichash_BYTES, message)\r\n    } else {\r\n      // Supports SHA-1, SHA-256, SHA-384, SHA-512\r\n      const hashBytes = await crypto.subtle.digest(\r\n        algorithm,\r\n        maybeToBytes(message)\r\n      )\r\n      return new Uint8Array(hashBytes)\r\n    }\r\n  }\r\n\r\n  checksum() {\r\n    const hash = new MD5()\r\n    return {\r\n      update: (b) => hash.append(b),\r\n      digest: () => {\r\n        const hex = hash.end()\r\n        const bytes = new Uint8Array(\r\n          hex.match(/.{1,2}/g).map((b) => parseInt(b, 16))\r\n        )\r\n        return bytes\r\n      },\r\n    }\r\n  }\r\n\r\n  async encryptStream(key) {\r\n    await sodium.ready\r\n    const stream = sodium.crypto_secretstream_xchacha20poly1305_init_push(key)\r\n    return {\r\n      header: stream.header,\r\n      encrypt: function (block, done) {\r\n        const tag = done\r\n          ? sodium.crypto_secretstream_xchacha20poly1305_TAG_FINAL\r\n          : sodium.crypto_secretstream_xchacha20poly1305_TAG_MESSAGE\r\n        return sodium.crypto_secretstream_xchacha20poly1305_push(\r\n          stream.state,\r\n          block,\r\n          null,\r\n          tag\r\n        )\r\n      },\r\n    }\r\n  }\r\n\r\n  async decryptStream(key, header) {\r\n    await sodium.ready\r\n    const state = sodium.crypto_secretstream_xchacha20poly1305_init_pull(\r\n      header,\r\n      key\r\n    )\r\n    return {\r\n      decrypt: function (block) {\r\n        const decrypted = sodium.crypto_secretstream_xchacha20poly1305_pull(\r\n          state,\r\n          block\r\n        )\r\n        if (!decrypted) {\r\n          throw new Error('Invalid cipher text')\r\n        }\r\n        return decrypted.message\r\n      },\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = SodiumCrypto\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./browser/sodium/sodium.js\n");

/***/ }),

/***/ "./lib/crypto/crypto.js":
/*!******************************!*\
  !*** ./lib/crypto/crypto.js ***!
  \******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { v4: uuidv4 } = __webpack_require__(/*! uuid */ \"./node_modules/uuid/dist/esm-browser/index.js\")\r\nconst types = __webpack_require__(/*! ../../types */ \"./types/index.js\")\r\nconst CryptoProvider = __webpack_require__(/*! ./cryptoProvider */ \"./lib/crypto/cryptoProvider.js\")\r\nconst Platform = __webpack_require__(/*! ./platform */ \"./lib/crypto/platform.js\")\r\nconst {\r\n  DEFAULT_KDF_ITERATIONS,\r\n  FILE_VERSION,\r\n  FILE_BLOCK_SIZE,\r\n} = __webpack_require__(/*! ../utils/constants */ \"./lib/utils/constants.js\")\r\nconst StreamTransformer = __webpack_require__(/*! ../utils/streamTransformer */ \"./lib/utils/streamTransformer.js\")\r\nconst {\r\n  versionAndKeys,\r\n  streamCipher,\r\n  decryptBlocks,\r\n  decryptLastBlock,\r\n  errorEOF,\r\n} = __webpack_require__(/*! ./fileHelpers */ \"./lib/crypto/fileHelpers.js\")\r\n\r\n/**\r\n * Provide Tozny specific cryptographic operations give an basic crypto provider.\r\n */\r\nclass Crypto {\r\n  /**\r\n   * Creates a new Crypto object, providing Tozny cryptographic methods.\r\n   *\r\n   * @param {CryptoProvider} cryptoProvider The specific cryptography providing implementation.\r\n   * @param {Platform}       platform       Platform provided/specific functionality\r\n   */\r\n  constructor(cryptoProvider, platform) {\r\n    if (!CryptoProvider.isExtension(cryptoProvider)) {\r\n      throw new Error(\r\n        'A valid crypto provider is required to create a crypto instance'\r\n      )\r\n    }\r\n    if (!Platform.isExtension(platform)) {\r\n      throw new Error(\r\n        'Valid platform functionality is required to create a crypto instance'\r\n      )\r\n    }\r\n    this.provider = cryptoProvider\r\n    this.platform = platform\r\n  }\r\n  /**\r\n   * Mode returns a string denoting which crypto library this implementation uses under the hood.\r\n   */\r\n  mode() {\r\n    return this.provider.mode()\r\n  }\r\n\r\n  /**\r\n   * Gets the signature version currently supported by this crypto object.\r\n   *\r\n   * @return {string} The current signature version in UUID-v5 format.\r\n   */\r\n  get signatureVersion() {\r\n    // UUIDv5 TFSP1;ED25519;BLAKE2B\r\n    return 'e7737e7c-1637-511e-8bab-93c4f3e26fd9'\r\n  }\r\n\r\n  /**\r\n   * Symmetrically encrypt and serialize a string with the given key\r\n   *\r\n   * @param {string} plain The plain text string to encrypt\r\n   * @param {string} key   Base64 encoded key used to encrypt the string.\r\n   *\r\n   * @return {Promise<string>} The encrypted string base64URL encoded with a serialized nonce.\r\n   */\r\n  async encryptString(plain, key) {\r\n    const rawKey = await this.platform.b64URLDecode(key)\r\n    const nonce = await this.randomNonce()\r\n    const encrypted = await this.provider.encryptSymmetric(plain, nonce, rawKey)\r\n    return [nonce, encrypted]\r\n      .map(this.platform.b64URLEncode.bind(this.platform))\r\n      .join(':')\r\n  }\r\n\r\n  /**\r\n   * Decrypt a symmetrically encrypted string\r\n   *\r\n   * @param {string} encrypted Base64 encoded string in nonce:cipherText format.\r\n   * @param {string} key       Base64 encoded key used to encrypt the string.\r\n   *\r\n   * @return {Promise<string>} The decrypted UTF-8 string.\r\n   */\r\n  async decryptString(encrypted, key) {\r\n    const rawKey = this.platform.b64URLDecode(key)\r\n    const [nonce, cipher] = encrypted\r\n      .split(':')\r\n      .map(this.platform.b64URLDecode.bind(this.platform))\r\n    const decrypted = await this.provider.decryptSymmetric(\r\n      cipher,\r\n      nonce,\r\n      rawKey\r\n    )\r\n\r\n    return this.platform.byteToUTF8String(decrypted)\r\n  }\r\n\r\n  /**\r\n   * Encrypt a string into the standard Tozny quad format using Libsodium's secretbox.\r\n   *\r\n   * @param {string} field The string of data to encrypt as a data field.\r\n   * @param {Uint8Array} accessKey The access key bytes to encrypt the field with.\r\n   *\r\n   * @returns {Promise<String>} The Tozny dotted quad encrypted field.\r\n   */\r\n  async encryptField(field, accessKey) {\r\n    const dk = await this.randomKey()\r\n    const efN = await this.randomNonce()\r\n    const ef = await this.provider.encryptSymmetric(field, efN, dk)\r\n    const edkN = await this.randomNonce()\r\n    const edk = await this.provider.encryptSymmetric(dk, edkN, accessKey)\r\n    const encryptedField = [edk, edkN, ef, efN]\r\n      .map(this.platform.b64URLEncode.bind(this.platform))\r\n      .join('.')\r\n\r\n    return encryptedField\r\n  }\r\n\r\n  /**\r\n   * Decrypt a standard Tozny dotted quad using Libsodium's secretbox into a string.\r\n   *\r\n   * @param {string}     encryptedField A standard Tozny dotted quad string.\r\n   * @param {Uint8Array} accessKey      The access key bytes to use as the decryption key.\r\n   *\r\n   * @return {Promise<string>} The decrypted data field as a UTF-8 string.\r\n   */\r\n  async decryptField(encryptedField, accessKey) {\r\n    const [edk, edkN, ef, efN] = encryptedField\r\n      .split('.')\r\n      .map(this.platform.b64URLDecode.bind(this.platform))\r\n\r\n    const dk = await this.provider.decryptSymmetric(edk, edkN, accessKey)\r\n    const field = await this.provider.decryptSymmetric(ef, efN, dk)\r\n\r\n    return this.platform.byteToUTF8String(field)\r\n  }\r\n\r\n  /**\r\n   * Sign a key value pair for use in a data object with optional object nonce.\r\n   *\r\n   * @param {string} key The object key which will be used for this field.\r\n   * @param {string} value The plain text string value of the field.\r\n   * @param {string} signingKey A base64url encoded private signing key\r\n   * @param {string} objectSalt A determined UUID to sign the field with. If not supplied a random one is generated.\r\n   *\r\n   * @return {string} field prefixed with the field signature header and signature.\r\n   */\r\n  async signField(key, value, signingKey, objectSalt) {\r\n    const salt = objectSalt || uuidv4()\r\n    const message = await this.hash(`${salt}${key}${value}`)\r\n    const rawKey = this.platform.b64URLDecode(signingKey)\r\n    const rawSignature = await this.provider.sign(message, rawKey)\r\n    const signature = this.platform.b64URLEncode(rawSignature)\r\n    const length = signature.length\r\n    const prefix = [this.signatureVersion, salt, length, signature].join(';')\r\n    return `${prefix}${value}`\r\n  }\r\n\r\n  /**\r\n   * Verify the key, value, and optionally salt in a field signature.\r\n   *\r\n   * @param {string} key The Key associated with the field.\r\n   * @param {string} value The fully signed string to validate.\r\n   * @param {string} verifyingKey A base64url encoded public signing key\r\n   * @param {string} objectSalt A UUID verified as the salt used in the signature.\r\n   *                            If not sent, the salt contained in the value is used instead.\r\n   *\r\n   * @return {Promise<string>} The field plain text if validated. Throws if validation fails.\r\n   */\r\n  async verifyField(key, value, verifyingKey, objectSalt) {\r\n    const parts = value.split(';', 3)\r\n    // If this field is not prefixed with the signature version, assume it is\r\n    // not a signed field.\r\n    if (parts[0] !== this.signatureVersion) {\r\n      return value\r\n    }\r\n    // If a salt was sent, validate the included salt matches\r\n    if (objectSalt && parts[1] !== objectSalt) {\r\n      throw new Error(`Invalid salt on field signature for ${key}`)\r\n    }\r\n    // Header is each part, plus the three semicolons\r\n    const headerLength = parts.reduce((acc, part) => acc + part.length, 3)\r\n    const signatureLength = parseInt(parts[2], 10)\r\n    const signatureIndex = headerLength\r\n    const plainTextIndex = headerLength + signatureLength\r\n    const signature = value.substring(signatureIndex, plainTextIndex)\r\n    const plainText = value.substring(plainTextIndex)\r\n    const message = await this.hash(`${parts[1]}${key}${plainText}`)\r\n    const rawSignature = this.platform.b64URLDecode(signature)\r\n    const rawKey = this.platform.b64URLDecode(verifyingKey)\r\n\r\n    const valid = await this.provider.verify(rawSignature, message, rawKey)\r\n    if (!valid) {\r\n      throw new Error(`Invalid field signature for \"${key}\"`)\r\n    }\r\n\r\n    return plainText\r\n  }\r\n\r\n  /**\r\n   * Decrypt the access key provided for a specific reader so it can be used\r\n   * to further decrypt a protected record.\r\n   *\r\n   * @param {string} readerKey   Base64url-encoded private key for the reader (current client)\r\n   * @param {EAKInfo} encryptedAk Encrypted access key\r\n   *\r\n   * @return {Promise<string>} Raw binary string of the access key\r\n   */\r\n  async decryptEak(readerKey, encryptedAk) {\r\n    let privateKey = this.platform.b64URLDecode(readerKey)\r\n    // in groups this shape changes to use snake case. It may be because it is\r\n    // not decoded to the EakInfo type, but for now just support either syntax.\r\n    const rawPublicKey =\r\n      encryptedAk.authorizerPublicKey || encryptedAk.authorizer_public_key\r\n    let publicKey = this.platform.b64URLDecode(rawPublicKey.curve25519)\r\n    if (\r\n      Array.isArray(encryptedAk.access_key_wrappers) &&\r\n      encryptedAk.access_key_wrappers.length > 0\r\n    ) {\r\n      // if needed, unwrap the Access Key Wrappers To get the rawPrivateKey\r\n      for (let akWrapper of encryptedAk.access_key_wrappers) {\r\n        privateKey = await this.decryptEakLayer(\r\n          privateKey,\r\n          publicKey,\r\n          akWrapper.membership_key\r\n        )\r\n        // This is odd and should be checked at some point. This unwrap is currently\r\n        // working by using the outer object authorizer public key to seed the chain,\r\n        // and then the public key in the wrapper object replaces that public key. This\r\n        // seems backwards -- I would think the public key in the wrapper would unwrap\r\n        // the layer, and then the final ak decrypt would use the public key in the\r\n        // outer object. This may require a server-side update, but the design should\r\n        // be confirmed. If this is write, this comment can get removed.\r\n        publicKey = this.platform.b64URLDecode(akWrapper.public_key)\r\n      }\r\n    }\r\n    return this.decryptEakLayer(privateKey, publicKey, encryptedAk.eak)\r\n  }\r\n  /**\r\n   * Decrypts one layer off of a an EAK, whether wrapped or direct.\r\n   *\r\n   * @param {Uint8Array} privateKey private key bytes for decrypting the layer\r\n   * @param {Uint8Array} publicKey public key bytes for decrypting the layer\r\n   * @param {string} encryptedAk The encoded dotted key object to decrypt\r\n   *\r\n   * @return {Promise<string>} Raw binary string of the membership key\r\n   */\r\n  async decryptEakLayer(privateKey, publicKey, encryptedAk) {\r\n    let [eak, nonce] = encryptedAk\r\n      .split('.')\r\n      .map(this.platform.b64URLDecode.bind(this.platform))\r\n    return await this.provider.decryptAsymmetric(\r\n      eak,\r\n      nonce,\r\n      publicKey,\r\n      privateKey\r\n    )\r\n  }\r\n\r\n  async decryptNoteEak(readerKey, encryptedAk, writerKey) {\r\n    let encodedEak = encryptedAk.eak\r\n    let publicKey = this.platform.b64URLDecode(writerKey)\r\n    let privateKey = this.platform.b64URLDecode(readerKey)\r\n\r\n    let [eak, nonce] = encodedEak\r\n      .split('.')\r\n      .map(this.platform.b64URLDecode.bind(this.platform))\r\n    return this.provider.decryptAsymmetric(eak, nonce, publicKey, privateKey)\r\n  }\r\n\r\n  /**\r\n   * Encrypt an access key for a given reader.\r\n   *\r\n   * @param {string} writerKey Base64url-encoded private key of the writer\r\n   * @param {string} ak        Raw binary string of the access key\r\n   * @param {string} readerKey Base64url-encoded public key of the reader\r\n   *\r\n   * @return {Promise<string>} Encrypted and encoded access key.\r\n   */\r\n  async encryptAk(writerKey, ak, readerKey) {\r\n    let publicKey = this.platform.b64URLDecode(readerKey)\r\n    let privateKey = this.platform.b64URLDecode(writerKey)\r\n\r\n    let nonce = await this.randomNonce()\r\n    let eak = await this.provider.encryptAsymmetric(\r\n      ak,\r\n      nonce,\r\n      publicKey,\r\n      privateKey\r\n    )\r\n\r\n    return [eak, nonce]\r\n      .map(this.platform.b64URLEncode.bind(this.platform))\r\n      .join('.')\r\n  }\r\n\r\n  /**\r\n   * Encrypt a private key using a public and private key.\r\n   *\r\n   * @param {string} privateKey\r\n   * @param {string} writerPrivateKey\r\n   * @param {string} readerPublicKey\r\n   *\r\n   * @return {Promise<string>}\r\n   */\r\n  async encryptPrivateKey(privateKey, writerPrivateKey, readerPublicKey) {\r\n    let rawPrivateKey = this.platform.b64URLDecode(privateKey)\r\n    let publicEncKey = this.platform.b64URLDecode(readerPublicKey)\r\n    let privateEncKey = this.platform.b64URLDecode(writerPrivateKey)\r\n\r\n    let nonce = await this.randomNonce()\r\n    let pk = await this.provider.encryptAsymmetric(\r\n      rawPrivateKey,\r\n      nonce,\r\n      publicEncKey,\r\n      privateEncKey\r\n    )\r\n\r\n    return [pk, nonce]\r\n      .map(this.platform.b64URLEncode.bind(this.platform))\r\n      .join('.')\r\n  }\r\n\r\n  /**\r\n   * Create a clone of a given record, but decrypting each field in turn based on\r\n   * the provided access key.\r\n   *\r\n   * @param {Record} encrypted Record to be unwrapped\r\n   * @param {string} accessKey Access key to use for decrypting each data key.\r\n   *\r\n   * @return {Promise<Record>}\r\n   */\r\n  async decryptRecord(encrypted, accessKey) {\r\n    // Clone the record meta\r\n    let meta = await types.Meta.decode(encrypted.meta.serializable())\r\n\r\n    // Decrypt the record data\r\n    let data = new types.RecordData({})\r\n    for (let key in encrypted.data) {\r\n      // eslint-disable-next-line no-prototype-builtins\r\n      if (encrypted.data.hasOwnProperty(key)) {\r\n        data[key] = await this.decryptField(encrypted.data[key], accessKey)\r\n      }\r\n    }\r\n    // Return a full record object\r\n    let decrypted = new types.Record(meta, data, encrypted.signature)\r\n    return decrypted\r\n  }\r\n\r\n  /**\r\n   * Create a clone of a plaintext record, encrypting each field in turn with a random\r\n   * data key and protecting the data key with a set access key.\r\n   *\r\n   * @param {Record} record    Record to be encrypted.\r\n   * @param {string} accessKey Access key to use for decrypting each data key.\r\n   *\r\n   * @return {Promise<Record>}\r\n   */\r\n  async encryptRecord(record, accessKey) {\r\n    // Clone the record meta\r\n    let meta = new types.Meta(\r\n      record.meta.writerId,\r\n      record.meta.userId,\r\n      record.meta.type,\r\n      record.meta.plain\r\n    )\r\n    let encrypted = new types.Record(meta, {}, record.signature)\r\n\r\n    // Encrypt the record data\r\n    for (let key in record.data) {\r\n      // eslint-disable-next-line no-prototype-builtins\r\n      if (record.data.hasOwnProperty(key)) {\r\n        encrypted.data[key] = await this.encryptField(\r\n          record.data[key],\r\n          accessKey\r\n        )\r\n      }\r\n    }\r\n\r\n    return encrypted\r\n  }\r\n\r\n  /**\r\n   * Verify the signature on a given JSON document, given a specific public signing key.\r\n   *\r\n   * @param {Serializable} document     Document to be verified\r\n   * @param {string}       signature    Base64URL-encoded signature\r\n   * @param {string}       verifyingKey Base64URL-encoded signing key\r\n   *\r\n   * @returns {Promise<bool>}\r\n   */\r\n  async verifyDocumentSignature(document, signature, verifyingKey) {\r\n    let message = document.stringify()\r\n    let rawSignature = this.platform.b64URLDecode(signature)\r\n    let rawKey = this.platform.b64URLDecode(verifyingKey)\r\n\r\n    return this.provider.verify(rawSignature, message, rawKey)\r\n  }\r\n\r\n  /**\r\n   * Sign a document and return the signature\r\n   *\r\n   * @param {Signable} document   Serializable object to be signed\r\n   * @param {string}   signingKey Key to use to sign the document\r\n   *\r\n   * @returns {Promise<string>}\r\n   */\r\n  async signDocument(document, signingKey) {\r\n    let message = document.stringify()\r\n    let rawKey = this.platform.b64URLDecode(signingKey)\r\n\r\n    let signature = await this.provider.sign(message, rawKey)\r\n    return this.platform.b64URLEncode(signature)\r\n  }\r\n\r\n  /**\r\n   * Generate a random key for use with Libsodium's secretbox interface\r\n   *\r\n   * @returns {Uint8Array} An array of random bytes the default key length\r\n   */\r\n  async randomKey() {\r\n    return this.provider.randomBytes(await this.provider.keyBytes())\r\n  }\r\n\r\n  /**\r\n   * Generate a random key for use with Libsodium's secret stream interface\r\n   *\r\n   * @returns {Uint8Array} An array of random bytes the default stream key length\r\n   */\r\n  async randomStreamKey() {\r\n    return this.provider.randomBytes(await this.provider.streamKeyBytes())\r\n  }\r\n\r\n  /**\r\n   * Generate a random nonce for use with Libsodium's secretbox interface\r\n   *\r\n   * @returns {Uint8Array} An array of random bytes the default nonce length\r\n   */\r\n  async randomNonce() {\r\n    return this.provider.randomBytes(await this.provider.nonceBytes())\r\n  }\r\n\r\n  /**\r\n   * Generate random bytes `length` long.\r\n   *\r\n   * @param {number} length The number of random bytes to generate\r\n   *\r\n   * @returns {Uint8Array} An array of random bytes\r\n   */\r\n  async randomBytes(length) {\r\n    return this.provider.randomBytes(length)\r\n  }\r\n\r\n  /**\r\n   * Derive an Ed25519 keypair from a password and a random salt\r\n   *\r\n   * @param {string} seed         User-specified derivation seed\r\n   * @param {string} salt         User-specified salt (should be random)\r\n   * @param {number} [iterations] Option number of hash iterations to create the seed.\r\n   *\r\n   * @returns {KeyPair} Object containing publicKey and privateKey fields\r\n   */\r\n  async deriveSigningKey(seed, salt, iterations = DEFAULT_KDF_ITERATIONS) {\r\n    const keypair = await this.provider.seedSigningKeyPair(\r\n      seed,\r\n      salt,\r\n      iterations\r\n    )\r\n\r\n    return new types.KeyPair(\r\n      this.platform.b64URLEncode(keypair.publicKey),\r\n      this.platform.b64URLEncode(keypair.privateKey)\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Derive a Curve25519 keypair from a password and a random salt\r\n   *\r\n   * @param {string} seed         User-specified derivation seed\r\n   * @param {string} salt         User-specified salt (should be random)\r\n   * @param {number} [iterations] Option number of hash iterations to create the seed.\r\n   *\r\n   * @returns {KeyPair} Object containing publicKey and privateKey fields\r\n   */\r\n  async deriveCryptoKey(seed, salt, iterations = DEFAULT_KDF_ITERATIONS) {\r\n    const keypair = await this.provider.seedCryptoKeyPair(\r\n      seed,\r\n      salt,\r\n      iterations\r\n    )\r\n\r\n    return new types.KeyPair(\r\n      this.platform.b64URLEncode(keypair.publicKey),\r\n      this.platform.b64URLEncode(keypair.privateKey)\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Derive a symmetric encryption key from a password and a random salt\r\n   *\r\n   * @param {string} password User-specified password\r\n   * @param {string} salt     User-specified salt (should be random)\r\n   * @param {number} [iterations] Option number of hash iterations to create the seed.\r\n   *\r\n   * @returns {string} base64Url encoded string\r\n   */\r\n  async deriveSymmetricKey(\r\n    password,\r\n    salt,\r\n    iterations = DEFAULT_KDF_ITERATIONS\r\n  ) {\r\n    const buffer = await this.provider.seedSymmetricKey(\r\n      password,\r\n      salt,\r\n      iterations\r\n    )\r\n    return this.platform.b64URLEncode(buffer)\r\n  }\r\n\r\n  /**\r\n   * Dynamically generate a Curve25519 keypair for use with registration and cryptographic operations\r\n   *\r\n   * @returns {KeyPair} Base64URL-encoded representation of the new keypair\r\n   */\r\n  async generateKeypair() {\r\n    const keypair = await this.provider.generateKeypair()\r\n    const ret = new types.KeyPair(\r\n      this.platform.b64URLEncode(keypair.publicKey),\r\n      this.platform.b64URLEncode(keypair.privateKey)\r\n    )\r\n    return ret\r\n  }\r\n\r\n  /**\r\n   * Dynamically generate an Ed25519 keypair for use with registration and signing operations\r\n   *\r\n   * @returns {KeyPair} Base64URL-encoded representation of the new keypair\r\n   */\r\n  async generateSigningKeypair() {\r\n    const keypair = await this.provider.generateSigningKeypair()\r\n    return new types.KeyPair(\r\n      this.platform.b64URLEncode(keypair.publicKey),\r\n      this.platform.b64URLEncode(keypair.privateKey)\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Encrypt and sign all of the data fields in a note object.\r\n   *\r\n   * @param {Note} note The note object that has un-encrypted data.\r\n   * @param {Uint8Array} accessKey The raw access key to use in encryption\r\n   * @param {string} signingKey The base64url encoded singing key used to sign each field.\r\n   *\r\n   * @return {Note} a new note object with all the data fields encrypted and signed.\r\n   */\r\n  async encryptNote(note, accessKey, signingKey) {\r\n    const encryptedNote = types.Note.clone(note)\r\n    const encryptedData = {}\r\n    const signatureSalt = uuidv4()\r\n    const noteSignature = await this.signField(\r\n      'signature',\r\n      signatureSalt,\r\n      signingKey\r\n    )\r\n    encryptedNote.signature = noteSignature\r\n    for (let key in note.data) {\r\n      // eslint-disable-next-line no-prototype-builtins\r\n      if (note.data.hasOwnProperty(key)) {\r\n        const signedField = await this.signField(\r\n          key,\r\n          note.data[key],\r\n          signingKey,\r\n          signatureSalt\r\n        )\r\n        encryptedData[key] = await this.encryptField(signedField, accessKey)\r\n      }\r\n    }\r\n    encryptedNote.data = encryptedData\r\n    return encryptedNote\r\n  }\r\n\r\n  /**\r\n   * Decrypt and validate all fields in a note object.\r\n   *\r\n   * @param {Note} encrypted The note object with encrypted and signed data.\r\n   * @param {Uint8Array} accessKey The raw access key to use in decrypting the data.\r\n   * @param {string} verifyingKey The base64url encoded public signing key used to verify field signatures\r\n   *\r\n   * @return {Promise<Note>} A new note object with plain text data.\r\n   */\r\n  async decryptNote(encrypted, accessKey, verifyingKey) {\r\n    const verifiedSalt = await this.verifyField(\r\n      'signature',\r\n      encrypted.signature,\r\n      verifyingKey\r\n    )\r\n    const signatureSalt =\r\n      verifiedSalt === encrypted.signature ? undefined : verifiedSalt\r\n    const decrypted = types.Note.clone(encrypted)\r\n    const decryptedData = {}\r\n    for (let key in encrypted.data) {\r\n      // eslint-disable-next-line no-prototype-builtins\r\n      if (encrypted.data.hasOwnProperty(key)) {\r\n        const rawField = await this.decryptField(encrypted.data[key], accessKey)\r\n        decryptedData[key] = await this.verifyField(\r\n          key,\r\n          rawField,\r\n          verifyingKey,\r\n          signatureSalt\r\n        )\r\n      }\r\n    }\r\n    decrypted.data = decryptedData\r\n    return decrypted\r\n  }\r\n\r\n  /**\r\n   * Creates a generic hash of the message based on the available provider algorithm\r\n   *\r\n   * @param {string} message The message to hash\r\n   * @param {string} algorithm The hashing algorithm to use, default based on the active provider.\r\n   * @returns {string} a base64url encoded digest of the message\r\n   */\r\n  async hash(message, algorithm) {\r\n    const genericHash = await this.provider.hash(message, algorithm)\r\n    return this.platform.b64URLEncode(genericHash)\r\n  }\r\n\r\n  /**\r\n   * Cryptographically signs a message with the given private key.\r\n   *\r\n   * @param {string} message The message to sign\r\n   * @param {string} privateKey The base64url encoded private key to sign with.\r\n   * @returns {string} base64url encoded signature\r\n   */\r\n  async sign(message, privateKey) {\r\n    let rawKey = this.platform.b64URLDecode(privateKey)\r\n    let rawString = this.platform.b64URLDecode(message)\r\n    let signature = await this.provider.sign(rawString, rawKey)\r\n    return this.platform.b64URLEncode(signature)\r\n  }\r\n\r\n  /**\r\n   * Verifies a cryptographically signed message given a signature and public key.\r\n   *\r\n   * @param {string} signature The base64url encoded signature over the message\r\n   * @param {string} message The message that was signed over\r\n   * @param {string} publicKey The base64url encoded public key from the pair used to sign the message.\r\n   * @return {boolean} Whether or not the signature is valid.\r\n   */\r\n  async verify(signature, message, publicKey) {\r\n    let rawKey = this.platform.b64URLDecode(publicKey)\r\n    let rawString = this.platform.b64URLDecode(signature)\r\n    return this.provider.verify(rawString, message, rawKey)\r\n  }\r\n\r\n  /**\r\n   * Encrypts a file from the given handle with the given access key.\r\n   *\r\n   * The handle and operations performed on that handle are platform specific.\r\n   * The Crypto object is responsible for organizing the encryption process, but\r\n   * FileOperations provides the platform specific parts of the process. This\r\n   * allows platforms to utilize available stream primitives and prevent too\r\n   * many bytes from being held in memory at one time.\r\n   *\r\n   * @param {any} handle A platform specific file handle.\r\n   * @param {Uint8Array} accessKey The raw access key to encrypt with.\r\n   * @param {FileOperations} ops The platform specific file operations to use.\r\n   * @return {any} A platform specific encrypted file object.\r\n   */\r\n  async encryptFile(handle, accessKey, ops) {\r\n    // Create temp file, checksum, and keys\r\n    const tempFile = ops.encryptDestination()\r\n    const md5 = this.provider.checksum()\r\n    const dk = await this.randomStreamKey()\r\n    const edkN = await this.randomNonce()\r\n    const edk = await this.provider.encryptSymmetric(dk, edkN, accessKey)\r\n    const headerText = [\r\n      FILE_VERSION,\r\n      this.platform.b64URLEncode(edk),\r\n      this.platform.b64URLEncode(edkN),\r\n    ].join('.')\r\n    // Tozny file header\r\n    const header = this.platform.UTF8StringToByte(`${headerText}.`)\r\n    md5.update(header)\r\n    tempFile.write(header)\r\n    let size = header.length\r\n    // Create the encryption stream and write that header\r\n    const stream = await this.provider.encryptStream(dk)\r\n    md5.update(stream.header)\r\n    tempFile.write(stream.header)\r\n    size += stream.header.length\r\n    // Encrypt the file\r\n    const reader = ops.sourceReader(handle, FILE_BLOCK_SIZE)\r\n    let readBlock\r\n    do {\r\n      readBlock = await reader.read()\r\n      const block = stream.encrypt(readBlock.value, readBlock.done)\r\n      md5.update(block)\r\n      tempFile.write(block)\r\n      size += block.length\r\n    } while (!readBlock.done)\r\n    // Results\r\n    const checksum = await this.platform.b64encode(md5.digest())\r\n    return { size, checksum, tempFile }\r\n  }\r\n\r\n  /**\r\n   * Decrypts a file from the given source with the given access key.\r\n   *\r\n   * The source and operations performed on that source are platform specific.\r\n   * The Crypto object is responsible for organizing the decryption process, but\r\n   * FileOperations provides the platform specific parts of the process. This\r\n   * allows platforms to utilize available stream primitives and prevent too\r\n   * many bytes from being held in memory at one time.\r\n   *\r\n   * @param {any} source A platform specific file source.\r\n   * @param {Uint8Array} accessKey The raw access key to decrypt with.\r\n   * @param {FileOperations} ops The platform specific file operations to use.\r\n   * @return {any} A platform specific decrypted file object.\r\n   */\r\n  async decryptFile(source, accessKey, ops) {\r\n    const extraHeaderSize = await this.provider.streamHeaderBytes()\r\n    const blockSize =\r\n      (await this.provider.streamOverheadBytes()) + FILE_BLOCK_SIZE\r\n    const destination = ops.decryptDestination()\r\n    const context = {\r\n      crypto: this,\r\n      accessKey,\r\n      destination,\r\n      extraHeaderSize,\r\n      blockSize,\r\n      block: new Uint8Array(blockSize),\r\n      pointer: 0,\r\n      supportedVersion: FILE_VERSION,\r\n    }\r\n    const transformer = new StreamTransformer(\r\n      versionAndKeys,\r\n      errorEOF('Tozny header not found in file.'),\r\n      context\r\n    )\r\n    transformer\r\n      .then(streamCipher, errorEOF('Stream cipher header not found in file'))\r\n      .then(decryptBlocks, decryptLastBlock)\r\n    // Begin transformation, but don't await it so the reader can get to the\r\n    // destination stream immediately\r\n    transformer.transform(source)\r\n    return destination.getReader()\r\n  }\r\n  /**\r\n   * createGroupMembershipKey takes the encrypted membership key of the current group member\r\n   * and decrypts it, in order to encrypt it for the new group member.\r\n   *\r\n   * @param {string} groupMemberClientID\r\n   * @param {string} groupMemberPublicKey\r\n   * @param {string} encryptedMembershipKey\r\n   * @param {string} newMemberClientID\r\n   *\r\n   * @return {string} New members encrypted group key\r\n   */\r\n  async createGroupMembershipKey(\r\n    groupMemberPrivateKey,\r\n    encryptedMembershipKey,\r\n    newMemberPublicKey,\r\n    authorizerPublicKey\r\n  ) {\r\n    let groupKey = await this.decryptEakLayer(\r\n      this.platform.b64URLDecode(groupMemberPrivateKey),\r\n      this.platform.b64URLDecode(authorizerPublicKey),\r\n      encryptedMembershipKey\r\n    )\r\n    const groupkeyEncode = this.platform.b64URLEncode(groupKey)\r\n    let eak = await this.encryptPrivateKey(\r\n      groupkeyEncode,\r\n      groupMemberPrivateKey,\r\n      newMemberPublicKey\r\n    )\r\n    return eak\r\n  }\r\n  /**\r\n   * createGroupAccessKey\r\n   *\r\n   * @param {string} privateKey     Base64url-encoded private key of the group member sharing the record\r\n   * @param {string} ak             Raw binary string of the access key\r\n   * @param {string} groupPublicKey Base64url-encoded public key of the group\r\n   *\r\n   * @return {Promise<string>} Encrypted and encoded access key\r\n   */\r\n  async createGroupAccessKey(groupPublicKey, accessKey, privateKey) {\r\n    return await this.encryptAk(privateKey, accessKey, groupPublicKey)\r\n  }\r\n}\r\n\r\nmodule.exports = Crypto\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/crypto/crypto.js\n");

/***/ }),

/***/ "./lib/crypto/cryptoConsumer.js":
/*!**************************************!*\
  !*** ./lib/crypto/cryptoConsumer.js ***!
  \**************************************/
/***/ ((module) => {

eval("class CryptoConsumer {\r\n  /**\r\n   * Abstract crypto instance which must be made concrete by the final implementing code.\r\n   *\r\n   * When creating an object with a concrete crypto instance, extend the and overload this getter to offer up a\r\n   * valid, concrete implementation of the Crypto interface. No other overloading is necessary to make crypto available.\r\n   *\r\n   * example:\r\n   *\r\n   * ```\r\n   * const myCrypto = new ConcreteCrypto()\r\n   * Class MyClient extends Client {\r\n   *   static get crypto() {\r\n   *     return myCrypto\r\n   *   }\r\n   * }\r\n   * ```\r\n   *\r\n   * IMPORTANT:\r\n   * Static methods can use `this.crypto` to reference the concrete crypto methods in implementing classes. When a\r\n   * static method is called, this is bound to the class constructor, which will be the implementing class. It\r\n   * is odd to see `this` in static methods, however `this` is what allows for late static biding. In other words,\r\n   * the static methods defined interface classes can fetch and use concrete crypto instance methods, which are\r\n   * provided by the implementing child class. This is possible referencing `this` instead of referencing the interface\r\n   * class directly.\r\n   *\r\n   * An additional instance level getter is also provided which allows fetching a child class's concrete crypto instance\r\n   * in both static _and_ instance method contexts as `this.crypto`.\r\n   *\r\n   * @returns {Crypto} A Crypto instance allowing crypto operations in the Client methods.\r\n   */\r\n  static get crypto() {\r\n    throw new Error(\r\n      'The Client class must be extended with the get crypto method overloaded to provide a valid crypto instance.'\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Gets the static crypto object so it can be accessed via `this.crypto` in instance methods.\r\n   *\r\n   * @returns {Crypto} The crypto object available in the implementing class\r\n   */\r\n  get crypto() {\r\n    // Use this.constructor to ensure we referencing the implementing class, not an interface class.\r\n    return this.constructor.crypto\r\n  }\r\n}\r\n\r\nmodule.exports = CryptoConsumer\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY3J5cHRvL2NyeXB0b0NvbnN1bWVyLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHRvem55c2VjdXJlL3Nkay8uL2xpYi9jcnlwdG8vY3J5cHRvQ29uc3VtZXIuanM/NjIyNyJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBDcnlwdG9Db25zdW1lciB7XHJcbiAgLyoqXHJcbiAgICogQWJzdHJhY3QgY3J5cHRvIGluc3RhbmNlIHdoaWNoIG11c3QgYmUgbWFkZSBjb25jcmV0ZSBieSB0aGUgZmluYWwgaW1wbGVtZW50aW5nIGNvZGUuXHJcbiAgICpcclxuICAgKiBXaGVuIGNyZWF0aW5nIGFuIG9iamVjdCB3aXRoIGEgY29uY3JldGUgY3J5cHRvIGluc3RhbmNlLCBleHRlbmQgdGhlIGFuZCBvdmVybG9hZCB0aGlzIGdldHRlciB0byBvZmZlciB1cCBhXHJcbiAgICogdmFsaWQsIGNvbmNyZXRlIGltcGxlbWVudGF0aW9uIG9mIHRoZSBDcnlwdG8gaW50ZXJmYWNlLiBObyBvdGhlciBvdmVybG9hZGluZyBpcyBuZWNlc3NhcnkgdG8gbWFrZSBjcnlwdG8gYXZhaWxhYmxlLlxyXG4gICAqXHJcbiAgICogZXhhbXBsZTpcclxuICAgKlxyXG4gICAqIGBgYFxyXG4gICAqIGNvbnN0IG15Q3J5cHRvID0gbmV3IENvbmNyZXRlQ3J5cHRvKClcclxuICAgKiBDbGFzcyBNeUNsaWVudCBleHRlbmRzIENsaWVudCB7XHJcbiAgICogICBzdGF0aWMgZ2V0IGNyeXB0bygpIHtcclxuICAgKiAgICAgcmV0dXJuIG15Q3J5cHRvXHJcbiAgICogICB9XHJcbiAgICogfVxyXG4gICAqIGBgYFxyXG4gICAqXHJcbiAgICogSU1QT1JUQU5UOlxyXG4gICAqIFN0YXRpYyBtZXRob2RzIGNhbiB1c2UgYHRoaXMuY3J5cHRvYCB0byByZWZlcmVuY2UgdGhlIGNvbmNyZXRlIGNyeXB0byBtZXRob2RzIGluIGltcGxlbWVudGluZyBjbGFzc2VzLiBXaGVuIGFcclxuICAgKiBzdGF0aWMgbWV0aG9kIGlzIGNhbGxlZCwgdGhpcyBpcyBib3VuZCB0byB0aGUgY2xhc3MgY29uc3RydWN0b3IsIHdoaWNoIHdpbGwgYmUgdGhlIGltcGxlbWVudGluZyBjbGFzcy4gSXRcclxuICAgKiBpcyBvZGQgdG8gc2VlIGB0aGlzYCBpbiBzdGF0aWMgbWV0aG9kcywgaG93ZXZlciBgdGhpc2AgaXMgd2hhdCBhbGxvd3MgZm9yIGxhdGUgc3RhdGljIGJpZGluZy4gSW4gb3RoZXIgd29yZHMsXHJcbiAgICogdGhlIHN0YXRpYyBtZXRob2RzIGRlZmluZWQgaW50ZXJmYWNlIGNsYXNzZXMgY2FuIGZldGNoIGFuZCB1c2UgY29uY3JldGUgY3J5cHRvIGluc3RhbmNlIG1ldGhvZHMsIHdoaWNoIGFyZVxyXG4gICAqIHByb3ZpZGVkIGJ5IHRoZSBpbXBsZW1lbnRpbmcgY2hpbGQgY2xhc3MuIFRoaXMgaXMgcG9zc2libGUgcmVmZXJlbmNpbmcgYHRoaXNgIGluc3RlYWQgb2YgcmVmZXJlbmNpbmcgdGhlIGludGVyZmFjZVxyXG4gICAqIGNsYXNzIGRpcmVjdGx5LlxyXG4gICAqXHJcbiAgICogQW4gYWRkaXRpb25hbCBpbnN0YW5jZSBsZXZlbCBnZXR0ZXIgaXMgYWxzbyBwcm92aWRlZCB3aGljaCBhbGxvd3MgZmV0Y2hpbmcgYSBjaGlsZCBjbGFzcydzIGNvbmNyZXRlIGNyeXB0byBpbnN0YW5jZVxyXG4gICAqIGluIGJvdGggc3RhdGljIF9hbmRfIGluc3RhbmNlIG1ldGhvZCBjb250ZXh0cyBhcyBgdGhpcy5jcnlwdG9gLlxyXG4gICAqXHJcbiAgICogQHJldHVybnMge0NyeXB0b30gQSBDcnlwdG8gaW5zdGFuY2UgYWxsb3dpbmcgY3J5cHRvIG9wZXJhdGlvbnMgaW4gdGhlIENsaWVudCBtZXRob2RzLlxyXG4gICAqL1xyXG4gIHN0YXRpYyBnZXQgY3J5cHRvKCkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKFxyXG4gICAgICAnVGhlIENsaWVudCBjbGFzcyBtdXN0IGJlIGV4dGVuZGVkIHdpdGggdGhlIGdldCBjcnlwdG8gbWV0aG9kIG92ZXJsb2FkZWQgdG8gcHJvdmlkZSBhIHZhbGlkIGNyeXB0byBpbnN0YW5jZS4nXHJcbiAgICApXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBHZXRzIHRoZSBzdGF0aWMgY3J5cHRvIG9iamVjdCBzbyBpdCBjYW4gYmUgYWNjZXNzZWQgdmlhIGB0aGlzLmNyeXB0b2AgaW4gaW5zdGFuY2UgbWV0aG9kcy5cclxuICAgKlxyXG4gICAqIEByZXR1cm5zIHtDcnlwdG99IFRoZSBjcnlwdG8gb2JqZWN0IGF2YWlsYWJsZSBpbiB0aGUgaW1wbGVtZW50aW5nIGNsYXNzXHJcbiAgICovXHJcbiAgZ2V0IGNyeXB0bygpIHtcclxuICAgIC8vIFVzZSB0aGlzLmNvbnN0cnVjdG9yIHRvIGVuc3VyZSB3ZSByZWZlcmVuY2luZyB0aGUgaW1wbGVtZW50aW5nIGNsYXNzLCBub3QgYW4gaW50ZXJmYWNlIGNsYXNzLlxyXG4gICAgcmV0dXJuIHRoaXMuY29uc3RydWN0b3IuY3J5cHRvXHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IENyeXB0b0NvbnN1bWVyXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/crypto/cryptoConsumer.js\n");

/***/ }),

/***/ "./lib/crypto/cryptoProvider.js":
/*!**************************************!*\
  !*** ./lib/crypto/cryptoProvider.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const {\r\n  isExtension,\r\n  checkConstructor,\r\n  notImplemented,\r\n} = __webpack_require__(/*! ../utils/interface */ \"./lib/utils/interface.js\")\r\n\r\n/* eslint-disable no-unused-vars */\r\n\r\nclass CryptoProvider {\r\n  static isExtension(crypto) {\r\n    return isExtension(crypto, CryptoProvider)\r\n  }\r\n\r\n  constructor() {\r\n    checkConstructor(this, CryptoProvider)\r\n  }\r\n\r\n  /**\r\n   * Mode returns a string denoting which crypto library this implementation uses under the hood.\r\n   */\r\n  mode() {\r\n    notImplemented()\r\n  }\r\n\r\n  async nonceBytes() {\r\n    notImplemented()\r\n  }\r\n\r\n  async keyBytes() {\r\n    notImplemented()\r\n  }\r\n\r\n  async keyPairBytes() {\r\n    notImplemented()\r\n  }\r\n\r\n  async signingKeyBytes() {\r\n    notImplemented()\r\n  }\r\n\r\n  async randomBytes(length) {\r\n    notImplemented()\r\n  }\r\n\r\n  async streamKeyBytes() {\r\n    notImplemented()\r\n  }\r\n\r\n  async streamHeaderBytes() {\r\n    notImplemented()\r\n  }\r\n\r\n  async streamOverheadBytes() {\r\n    notImplemented()\r\n  }\r\n\r\n  async encryptSymmetric(plain, nonce, key) {\r\n    notImplemented()\r\n  }\r\n\r\n  async decryptSymmetric(cipher, nonce, rawKey) {\r\n    notImplemented()\r\n  }\r\n\r\n  async encryptAsymmetric(message, nonce, publicKey, privateKey) {\r\n    notImplemented()\r\n  }\r\n\r\n  async decryptAsymmetric(cipher, nonce, publicKey, privateKey) {\r\n    notImplemented()\r\n  }\r\n\r\n  async seedSymmetricKey(seed, salt, iterations) {\r\n    notImplemented()\r\n  }\r\n\r\n  async seedCryptoKeyPair(seed, salt, iterations) {\r\n    notImplemented()\r\n  }\r\n\r\n  async seedSigningKeyPair(seed, salt, iterations) {\r\n    notImplemented()\r\n  }\r\n\r\n  async generateKeypair() {\r\n    notImplemented()\r\n  }\r\n\r\n  async generateSigningKeypair() {\r\n    notImplemented()\r\n  }\r\n\r\n  async sign(message, privateKey) {\r\n    notImplemented()\r\n  }\r\n\r\n  async verify(signature, message, publicKey) {\r\n    notImplemented()\r\n  }\r\n\r\n  async hash(message) {\r\n    notImplemented()\r\n  }\r\n\r\n  checksum() {\r\n    notImplemented()\r\n  }\r\n\r\n  async encryptStream(key) {\r\n    notImplemented()\r\n  }\r\n\r\n  async decryptStream(key, header) {\r\n    notImplemented()\r\n  }\r\n}\r\n\r\nmodule.exports = CryptoProvider\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY3J5cHRvL2NyeXB0b1Byb3ZpZGVyLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHRvem55c2VjdXJlL3Nkay8uL2xpYi9jcnlwdG8vY3J5cHRvUHJvdmlkZXIuanM/YzZiOCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7XHJcbiAgaXNFeHRlbnNpb24sXHJcbiAgY2hlY2tDb25zdHJ1Y3RvcixcclxuICBub3RJbXBsZW1lbnRlZCxcclxufSA9IHJlcXVpcmUoJy4uL3V0aWxzL2ludGVyZmFjZScpXHJcblxyXG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xyXG5cclxuY2xhc3MgQ3J5cHRvUHJvdmlkZXIge1xyXG4gIHN0YXRpYyBpc0V4dGVuc2lvbihjcnlwdG8pIHtcclxuICAgIHJldHVybiBpc0V4dGVuc2lvbihjcnlwdG8sIENyeXB0b1Byb3ZpZGVyKVxyXG4gIH1cclxuXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICBjaGVja0NvbnN0cnVjdG9yKHRoaXMsIENyeXB0b1Byb3ZpZGVyKVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogTW9kZSByZXR1cm5zIGEgc3RyaW5nIGRlbm90aW5nIHdoaWNoIGNyeXB0byBsaWJyYXJ5IHRoaXMgaW1wbGVtZW50YXRpb24gdXNlcyB1bmRlciB0aGUgaG9vZC5cclxuICAgKi9cclxuICBtb2RlKCkge1xyXG4gICAgbm90SW1wbGVtZW50ZWQoKVxyXG4gIH1cclxuXHJcbiAgYXN5bmMgbm9uY2VCeXRlcygpIHtcclxuICAgIG5vdEltcGxlbWVudGVkKClcclxuICB9XHJcblxyXG4gIGFzeW5jIGtleUJ5dGVzKCkge1xyXG4gICAgbm90SW1wbGVtZW50ZWQoKVxyXG4gIH1cclxuXHJcbiAgYXN5bmMga2V5UGFpckJ5dGVzKCkge1xyXG4gICAgbm90SW1wbGVtZW50ZWQoKVxyXG4gIH1cclxuXHJcbiAgYXN5bmMgc2lnbmluZ0tleUJ5dGVzKCkge1xyXG4gICAgbm90SW1wbGVtZW50ZWQoKVxyXG4gIH1cclxuXHJcbiAgYXN5bmMgcmFuZG9tQnl0ZXMobGVuZ3RoKSB7XHJcbiAgICBub3RJbXBsZW1lbnRlZCgpXHJcbiAgfVxyXG5cclxuICBhc3luYyBzdHJlYW1LZXlCeXRlcygpIHtcclxuICAgIG5vdEltcGxlbWVudGVkKClcclxuICB9XHJcblxyXG4gIGFzeW5jIHN0cmVhbUhlYWRlckJ5dGVzKCkge1xyXG4gICAgbm90SW1wbGVtZW50ZWQoKVxyXG4gIH1cclxuXHJcbiAgYXN5bmMgc3RyZWFtT3ZlcmhlYWRCeXRlcygpIHtcclxuICAgIG5vdEltcGxlbWVudGVkKClcclxuICB9XHJcblxyXG4gIGFzeW5jIGVuY3J5cHRTeW1tZXRyaWMocGxhaW4sIG5vbmNlLCBrZXkpIHtcclxuICAgIG5vdEltcGxlbWVudGVkKClcclxuICB9XHJcblxyXG4gIGFzeW5jIGRlY3J5cHRTeW1tZXRyaWMoY2lwaGVyLCBub25jZSwgcmF3S2V5KSB7XHJcbiAgICBub3RJbXBsZW1lbnRlZCgpXHJcbiAgfVxyXG5cclxuICBhc3luYyBlbmNyeXB0QXN5bW1ldHJpYyhtZXNzYWdlLCBub25jZSwgcHVibGljS2V5LCBwcml2YXRlS2V5KSB7XHJcbiAgICBub3RJbXBsZW1lbnRlZCgpXHJcbiAgfVxyXG5cclxuICBhc3luYyBkZWNyeXB0QXN5bW1ldHJpYyhjaXBoZXIsIG5vbmNlLCBwdWJsaWNLZXksIHByaXZhdGVLZXkpIHtcclxuICAgIG5vdEltcGxlbWVudGVkKClcclxuICB9XHJcblxyXG4gIGFzeW5jIHNlZWRTeW1tZXRyaWNLZXkoc2VlZCwgc2FsdCwgaXRlcmF0aW9ucykge1xyXG4gICAgbm90SW1wbGVtZW50ZWQoKVxyXG4gIH1cclxuXHJcbiAgYXN5bmMgc2VlZENyeXB0b0tleVBhaXIoc2VlZCwgc2FsdCwgaXRlcmF0aW9ucykge1xyXG4gICAgbm90SW1wbGVtZW50ZWQoKVxyXG4gIH1cclxuXHJcbiAgYXN5bmMgc2VlZFNpZ25pbmdLZXlQYWlyKHNlZWQsIHNhbHQsIGl0ZXJhdGlvbnMpIHtcclxuICAgIG5vdEltcGxlbWVudGVkKClcclxuICB9XHJcblxyXG4gIGFzeW5jIGdlbmVyYXRlS2V5cGFpcigpIHtcclxuICAgIG5vdEltcGxlbWVudGVkKClcclxuICB9XHJcblxyXG4gIGFzeW5jIGdlbmVyYXRlU2lnbmluZ0tleXBhaXIoKSB7XHJcbiAgICBub3RJbXBsZW1lbnRlZCgpXHJcbiAgfVxyXG5cclxuICBhc3luYyBzaWduKG1lc3NhZ2UsIHByaXZhdGVLZXkpIHtcclxuICAgIG5vdEltcGxlbWVudGVkKClcclxuICB9XHJcblxyXG4gIGFzeW5jIHZlcmlmeShzaWduYXR1cmUsIG1lc3NhZ2UsIHB1YmxpY0tleSkge1xyXG4gICAgbm90SW1wbGVtZW50ZWQoKVxyXG4gIH1cclxuXHJcbiAgYXN5bmMgaGFzaChtZXNzYWdlKSB7XHJcbiAgICBub3RJbXBsZW1lbnRlZCgpXHJcbiAgfVxyXG5cclxuICBjaGVja3N1bSgpIHtcclxuICAgIG5vdEltcGxlbWVudGVkKClcclxuICB9XHJcblxyXG4gIGFzeW5jIGVuY3J5cHRTdHJlYW0oa2V5KSB7XHJcbiAgICBub3RJbXBsZW1lbnRlZCgpXHJcbiAgfVxyXG5cclxuICBhc3luYyBkZWNyeXB0U3RyZWFtKGtleSwgaGVhZGVyKSB7XHJcbiAgICBub3RJbXBsZW1lbnRlZCgpXHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IENyeXB0b1Byb3ZpZGVyXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/crypto/cryptoProvider.js\n");

/***/ }),

/***/ "./lib/crypto/fileHelpers.js":
/*!***********************************!*\
  !*** ./lib/crypto/fileHelpers.js ***!
  \***********************************/
/***/ ((module) => {

eval("/**\r\n * Finds the third period character in a Uint8Array to locate the Tozny header.\r\n *\r\n * @param {Uint8Array} byteArr The array to search for the Tozny header index\r\n */\r\nfunction toznyHeaderIndex(byteArr) {\r\n  const period = '.'.charCodeAt(0)\r\n  let index = -1\r\n  for (let i = 0; i < 3; i++) {\r\n    index = Array.prototype.indexOf.apply(byteArr, [period, index + 1])\r\n    if (index === -1) {\r\n      break\r\n    }\r\n  }\r\n  return index\r\n}\r\n\r\n/**\r\n * Gets the Tozny header from a stream, checks the version, and sends the data key.\r\n *\r\n * @param {Uint8Array} chunk The next chunk coming from the streaming source\r\n * @param {*} context The context for the transformation operation\r\n * @param {object} control The control objects to allow the transformer to modify\r\n *                         the overall data flow of the transformation process.\r\n */\r\nasync function versionAndKeys(chunk, context, control) {\r\n  // Insanity check -- if we get too far into a file, we wont likely find the header\r\n  // Only do this on the second go around just in case the source chunks are > 1KB\r\n  if (chunk.length > 1024 && context.pastFirst) {\r\n    throw new Error('Tozny header not found in the first KB of the file')\r\n  }\r\n  context.pastFirst = true\r\n  // Locate the end of header index\r\n  const index = toznyHeaderIndex(chunk)\r\n  // If no header was found expand the chunk\r\n  if (index === -1) {\r\n    control.continue(chunk, true)\r\n    return\r\n  }\r\n  // Once found split the chunk into sub arrays, the header and any extra\r\n  const header = chunk.subarray(0, index)\r\n  const extra = chunk.subarray(index + 1)\r\n  // Parse the header\r\n  const [version, edk, edkN] = context.crypto.platform\r\n    .byteToUTF8String(header)\r\n    .split('.')\r\n  // Verify version is supported\r\n  if (parseInt(version, 10) !== context.supportedVersion) {\r\n    throw new Error(\r\n      `Unsupported file version: ${version}. This SDK supports version ${context.supportedVersion}.`\r\n    )\r\n  }\r\n  // Decrypt the data key\r\n  context.dk = await context.crypto.provider.decryptSymmetric(\r\n    context.crypto.platform.b64URLDecode(edk),\r\n    context.crypto.platform.b64URLDecode(edkN),\r\n    context.accessKey\r\n  )\r\n  // Clean up the context\r\n  delete context.headerBytes\r\n  delete context.pastFirst\r\n  delete context.accessKey\r\n  delete context.supportedVersion\r\n  // Mark this as done, and send back the extra bytes\r\n  control.done(extra)\r\n}\r\n\r\n/**\r\n * Gets any extra bytes required from the stream and creates the streaming cipher.\r\n *\r\n * @param {Uint8Array} chunk The next chunk coming from the streaming source\r\n * @param {*} context The context for the transformation operation\r\n * @param {object} control The control objects to allow the transformer to modify\r\n *                         the overall data flow of the transformation process.\r\n */\r\nasync function streamCipher(chunk, context, control) {\r\n  // If not enough bytes are available, expand the chunk\r\n  if (chunk.length < context.extraHeaderSize) {\r\n    control.continue(chunk, true)\r\n  }\r\n  // Split the chunk into the header and extra bytes\r\n  const extraHeader = chunk.subarray(0, context.extraHeaderSize)\r\n  const extra = chunk.subarray(context.extraHeaderSize)\r\n  // Create the stream decryption object and store it in context\r\n  context.stream = await context.crypto.provider.decryptStream(\r\n    context.dk,\r\n    extraHeader\r\n  )\r\n  // Clean up the context\r\n  delete context.dk\r\n  delete context.extraHeaderSize\r\n  // Mark this as done, and send back the extra bytes\r\n  control.done(extra)\r\n}\r\n\r\n/**\r\n * Accumulates chunks into blocks, decrypts them, and sends them to the destination.\r\n *\r\n * @param {Uint8Array} chunk The next chunk coming from the streaming source\r\n * @param {*} context The context for the transformation operation\r\n * @param {object} control The control objects to allow the transformer to modify\r\n *                         the overall data flow of the transformation process.\r\n */\r\nasync function decryptBlocks(chunk, context, control) {\r\n  // Determine the needed remaining bytes\r\n  const needed = context.blockSize - context.pointer\r\n  // If the offset is zero or positive, we have enough bytes to finish the current block\r\n  if (needed <= chunk.length) {\r\n    // Split the block into the remaining current block bytes and any extra bytes\r\n    const remaining = chunk.subarray(0, needed)\r\n    const extra = chunk.subarray(needed)\r\n    // Copy the remaining bytes to finish the block, decrypt, and write to the destination\r\n    context.block.set(remaining, context.pointer)\r\n    const decrypted = await context.stream.decrypt(context.block)\r\n    context.destination.write(decrypted)\r\n    // Reset the block and pointer to zero\r\n    context.block = new Uint8Array(context.blockSize)\r\n    context.pointer = 0\r\n    // Use continue to process the extra bytes (this ensures if the block size)\r\n    // from the source is bigger than our decryption block size, they are split\r\n    // up and processed as necessary.\r\n    control.continue(extra)\r\n    return\r\n  }\r\n  // Block is not done yet, copy chunk bytes to the current block\r\n  context.block.set(chunk, context.pointer)\r\n  context.pointer += chunk.length\r\n}\r\n\r\n/**\r\n * When the source is empty, decrypts the last block and closes the destination.\r\n *\r\n * @param {*} context The context for the transformation operation\r\n */\r\nfunction decryptLastBlock(context) {\r\n  // If any remaining bytes are in the current block, decrypt them and\r\n  // send them to the destination\r\n  if (context.pointer > 0) {\r\n    const lastBlock = context.block.subarray(0, context.pointer)\r\n    context.destination.write(context.stream.decrypt(lastBlock))\r\n  }\r\n  // Tell the destination the file is complete\r\n  context.destination.close()\r\n}\r\n\r\n/**\r\n * Creates an end of file function that errors if the process didn't complete\r\n *\r\n * @param {string} message The message to send on error\r\n */\r\nfunction errorEOF(message) {\r\n  return (_, eof) => {\r\n    if (eof) {\r\n      throw new Error(message)\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  versionAndKeys,\r\n  streamCipher,\r\n  decryptBlocks,\r\n  decryptLastBlock,\r\n  errorEOF,\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/crypto/fileHelpers.js\n");

/***/ }),

/***/ "./lib/crypto/platform.js":
/*!********************************!*\
  !*** ./lib/crypto/platform.js ***!
  \********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const {\r\n  isExtension,\r\n  checkConstructor,\r\n  notImplemented,\r\n} = __webpack_require__(/*! ../utils/interface */ \"./lib/utils/interface.js\")\r\n\r\n/* eslint-disable no-unused-vars */\r\n\r\n/**\r\n * Provide platform specific methods for operations such as encoding and file handling.\r\n */\r\nclass Platform {\r\n  static isExtension(platform) {\r\n    return isExtension(platform, Platform)\r\n  }\r\n  constructor() {\r\n    checkConstructor(this, Platform)\r\n  }\r\n  byteToUTF8String(byteArray) {\r\n    notImplemented()\r\n  }\r\n  UTF8StringToByte(str) {\r\n    notImplemented()\r\n  }\r\n  b64encode(raw) {\r\n    notImplemented()\r\n  }\r\n  b64decode(encoded) {\r\n    notImplemented()\r\n  }\r\n  b64URLEncode(raw) {\r\n    notImplemented()\r\n  }\r\n  b64URLDecode(encoded) {\r\n    notImplemented()\r\n  }\r\n  b64encodeString(raw) {\r\n    return this.b64encode(this.UTF8StringToByte(raw))\r\n  }\r\n  b64decodeString(encoded) {\r\n    return this.byteToUTF8String(this.b64decode(encoded))\r\n  }\r\n  b64URLEncodeString(raw) {\r\n    return this.b64URLEncode(this.UTF8StringToByte(raw))\r\n  }\r\n  b64URLDecodeString(encoded) {\r\n    return this.byteToUTF8String(this.b64URLDecode(encoded))\r\n  }\r\n}\r\n\r\nmodule.exports = Platform\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY3J5cHRvL3BsYXRmb3JtLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B0b3pueXNlY3VyZS9zZGsvLi9saWIvY3J5cHRvL3BsYXRmb3JtLmpzPzA3NDIiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qge1xyXG4gIGlzRXh0ZW5zaW9uLFxyXG4gIGNoZWNrQ29uc3RydWN0b3IsXHJcbiAgbm90SW1wbGVtZW50ZWQsXHJcbn0gPSByZXF1aXJlKCcuLi91dGlscy9pbnRlcmZhY2UnKVxyXG5cclxuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cclxuXHJcbi8qKlxyXG4gKiBQcm92aWRlIHBsYXRmb3JtIHNwZWNpZmljIG1ldGhvZHMgZm9yIG9wZXJhdGlvbnMgc3VjaCBhcyBlbmNvZGluZyBhbmQgZmlsZSBoYW5kbGluZy5cclxuICovXHJcbmNsYXNzIFBsYXRmb3JtIHtcclxuICBzdGF0aWMgaXNFeHRlbnNpb24ocGxhdGZvcm0pIHtcclxuICAgIHJldHVybiBpc0V4dGVuc2lvbihwbGF0Zm9ybSwgUGxhdGZvcm0pXHJcbiAgfVxyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgY2hlY2tDb25zdHJ1Y3Rvcih0aGlzLCBQbGF0Zm9ybSlcclxuICB9XHJcbiAgYnl0ZVRvVVRGOFN0cmluZyhieXRlQXJyYXkpIHtcclxuICAgIG5vdEltcGxlbWVudGVkKClcclxuICB9XHJcbiAgVVRGOFN0cmluZ1RvQnl0ZShzdHIpIHtcclxuICAgIG5vdEltcGxlbWVudGVkKClcclxuICB9XHJcbiAgYjY0ZW5jb2RlKHJhdykge1xyXG4gICAgbm90SW1wbGVtZW50ZWQoKVxyXG4gIH1cclxuICBiNjRkZWNvZGUoZW5jb2RlZCkge1xyXG4gICAgbm90SW1wbGVtZW50ZWQoKVxyXG4gIH1cclxuICBiNjRVUkxFbmNvZGUocmF3KSB7XHJcbiAgICBub3RJbXBsZW1lbnRlZCgpXHJcbiAgfVxyXG4gIGI2NFVSTERlY29kZShlbmNvZGVkKSB7XHJcbiAgICBub3RJbXBsZW1lbnRlZCgpXHJcbiAgfVxyXG4gIGI2NGVuY29kZVN0cmluZyhyYXcpIHtcclxuICAgIHJldHVybiB0aGlzLmI2NGVuY29kZSh0aGlzLlVURjhTdHJpbmdUb0J5dGUocmF3KSlcclxuICB9XHJcbiAgYjY0ZGVjb2RlU3RyaW5nKGVuY29kZWQpIHtcclxuICAgIHJldHVybiB0aGlzLmJ5dGVUb1VURjhTdHJpbmcodGhpcy5iNjRkZWNvZGUoZW5jb2RlZCkpXHJcbiAgfVxyXG4gIGI2NFVSTEVuY29kZVN0cmluZyhyYXcpIHtcclxuICAgIHJldHVybiB0aGlzLmI2NFVSTEVuY29kZSh0aGlzLlVURjhTdHJpbmdUb0J5dGUocmF3KSlcclxuICB9XHJcbiAgYjY0VVJMRGVjb2RlU3RyaW5nKGVuY29kZWQpIHtcclxuICAgIHJldHVybiB0aGlzLmJ5dGVUb1VURjhTdHJpbmcodGhpcy5iNjRVUkxEZWNvZGUoZW5jb2RlZCkpXHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IFBsYXRmb3JtXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/crypto/platform.js\n");

/***/ }),

/***/ "./lib/identity/client.js":
/*!********************************!*\
  !*** ./lib/identity/client.js ***!
  \********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const {\r\n  credentialedDecodeResponse,\r\n  urlEncodeData,\r\n  checkStatus,\r\n  isValidToznySecretNamespace,\r\n} = __webpack_require__(/*! ../utils */ \"./lib/utils/index.js\")\r\nconst fetch = __webpack_require__(/*! cross-fetch */ \"./node_modules/cross-fetch/dist/browser-ponyfill.js\")\r\nconst PartialClient = __webpack_require__(/*! ./partialClient */ \"./lib/identity/partialClient.js\")\r\nconst {\r\n  SECRET_UUID,\r\n  TYPES,\r\n  REQUIRED_CLIENT_KEYS,\r\n  PUBLIC_SIGNING_LENGTH,\r\n  PRIVATE_SIGNING_LENGTH,\r\n  PUBLIC_KEY_LENGTH,\r\n  PRIVATE_KEY_LENGTH,\r\n} = __webpack_require__(/*! ../../lib/utils/constants */ \"./lib/utils/constants.js\")\r\nconst {\r\n  AccessRequest,\r\n  AccessRequestSearchResponse,\r\n  GroupMember,\r\n  InitiateWebAuthnChallengeData,\r\n  Search,\r\n  errors,\r\n  IdentityMFADevices,\r\n} = __webpack_require__(/*! ../../types */ \"./types/index.js\")\r\n\r\nasync function fetchToken(client, appName) {\r\n  /* eslint-disable camelcase */\r\n  const bodyData = {\r\n    grant_type: 'password',\r\n    client_id: appName,\r\n  }\r\n  /* eslint-enable */\r\n\r\n  const sessionToken = await client.agentToken()\r\n\r\n  const request = await client.storage.authenticator.tsv1Fetch(\r\n    client.config.apiUrl +\r\n      `/auth/realms/${client.config.realmDomain}/protocol/openid-connect/token`,\r\n    {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        'X-Tozny-Session': sessionToken,\r\n      },\r\n      body: urlEncodeData(bodyData),\r\n    }\r\n  )\r\n  const response = await credentialedDecodeResponse(request)\r\n  // record the time this token will expire based on the info response.\r\n  // Since we set this date based on the expires_in response, adding 5 seconds\r\n  // helps ensure we do not attempt to use a token that is expired but shows as\r\n  // valid due to network latency.\r\n  response.expires = Math.floor(Date.now() / 1000) + response.expires_in - 5\r\n  return response\r\n}\r\n/**\r\n * getNamespace\r\n * @param {Client} client\r\n * @param {Object} namespace\r\n * @param {Boolean} createIfMissing\r\n * @return {Object} returns the group based on namespace\r\n */\r\nasync function getNamespace(client, namespace, createIfMissing) {\r\n  const groupName = `tozny.secret.${client.config.realmName}.${namespace}`\r\n  const groupList = await client.storage.listGroups(\r\n    client.storage.config.clientId,\r\n    [groupName]\r\n  )\r\n  let currentGroup\r\n  if (groupList.groups.length < 1 && !createIfMissing) {\r\n    return {}\r\n  }\r\n  if (groupList.groups.length < 1 && createIfMissing) {\r\n    // Namespace Does not Exists, create one\r\n    const newGroup = await client.storage.createGroup(groupName, [], '')\r\n    currentGroup = newGroup.group\r\n    let groupMembers = []\r\n    const capabilities = {\r\n      read: true,\r\n      share: true,\r\n      manage: true,\r\n    }\r\n    const owner = new GroupMember(client.storage.config.clientId, capabilities)\r\n    groupMembers.push(owner)\r\n    await client.storage.addGroupMembers(currentGroup.groupID, groupMembers)\r\n  } else {\r\n    // Group Exists, save the group object\r\n    currentGroup = groupList.groups[0]\r\n  }\r\n  return currentGroup\r\n}\r\n/**\r\n * Use the OIDC refresh flow to get a new session token for provided identity.\r\n *\r\n * @param client {Client} The identity client to refresh the session for\r\n * @return {Object} The new _agentToken information with absolute expiry dates\r\n */\r\nasync function refreshAgentToken(client) {\r\n  const now = Math.floor(Date.now() / 1000)\r\n  if (!client._agentToken || client._agentToken.refresh_expiry < now) {\r\n    throw new errors.identity.SessionExpiredError(\r\n      'Agent refresh token has expired'\r\n    )\r\n  }\r\n  const bodyData = {\r\n    refresh_token: client._agentToken.refresh_token,\r\n  }\r\n  const request = await client.storage.authenticator.tsv1Fetch(\r\n    client.config.apiUrl +\r\n      `/v1/identity/auth/realm/${client.config.realmDomain}/refresh`,\r\n    {\r\n      method: 'POST',\r\n      body: JSON.stringify(bodyData),\r\n    }\r\n  )\r\n  const agentToken = await credentialedDecodeResponse(request)\r\n  return convertExpiry(agentToken)\r\n}\r\n\r\n/**\r\n * Convert expiry dates in agent tokens to Date objects\r\n *\r\n * @param {object} agentToken The agent token with string based expiry dates\r\n * @returns {objects} The agent token with expiry as parsed Date objects\r\n */\r\nfunction convertExpiry(agentToken) {\r\n  agentToken.expiry = new Date(agentToken.expiry)\r\n  if (agentToken.refresh_expiry) {\r\n    agentToken.refresh_expiry = new Date(agentToken.refresh_expiry)\r\n  }\r\n  return agentToken\r\n}\r\n\r\nclass Client extends PartialClient {\r\n  constructor(config, storage, agentToken) {\r\n    super(config, storage)\r\n    this._agentToken = convertExpiry(agentToken)\r\n  }\r\n\r\n  serialize() {\r\n    return {\r\n      config: Object.assign({}, this.config),\r\n      storage: this.storage.config.serialize(),\r\n      agent: this._agentToken,\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the current session JWT for this identity.\r\n   *\r\n   * @returns {Promise<string>} The JWT string of the current session token\r\n   */\r\n  async agentToken() {\r\n    const info = await this.agentInfo()\r\n    return info.access_token\r\n  }\r\n\r\n  /**\r\n   * Get the full session token info object.\r\n   *\r\n   * The returned object is a copy to help prevent unintended mutation of the data.\r\n   *\r\n   * @returns {object} the full token info object for the TozID session token.\r\n   */\r\n  async agentInfo() {\r\n    const now = Math.floor(Date.now() / 1000)\r\n    if (!this._agentToken || this._agentToken.expires < now) {\r\n      this._agentToken = await refreshAgentToken(this)\r\n    }\r\n    return Object.assign({}, this._agentToken)\r\n  }\r\n\r\n  async token() {\r\n    const info = await this.tokenInfo()\r\n    return info.access_token\r\n  }\r\n\r\n  async tokenInfo() {\r\n    const now = Math.floor(Date.now() / 1000)\r\n    if (!this._tokenInfo || this._tokenInfo.expires < now) {\r\n      this._tokenInfo = await fetchToken(this, this.config.appName)\r\n    }\r\n    return Object.assign({}, this._tokenInfo)\r\n  }\r\n\r\n  async fetch(url, options) {\r\n    const token = await this.token()\r\n    options.headers = options.headers || {}\r\n    options.headers.Authorization = `Bearer ${token}`\r\n    return fetch(url, options)\r\n  }\r\n\r\n  async logout() {\r\n    const sessionToken = await this.agentToken()\r\n    const request = await this.storage.authenticator.tsv1Fetch(\r\n      `${this.config.apiUrl}/v1/identity/auth/realm/${this.config.realmDomain}/logout`,\r\n      {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          session_token: sessionToken,\r\n        }),\r\n      }\r\n    )\r\n    try {\r\n      await checkStatus(request)\r\n    } catch (e) {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  secretTypes() {\r\n    return TYPES\r\n  }\r\n\r\n  /**\r\n   * verifyClientCreds\r\n   *\r\n   * @param {Object} credential the secret value for a client type secret.\r\n   *\r\n   */\r\n  verifyClientCreds(credential) {\r\n    let cred = credential.split('{').pop().split('}')[0].split(',')\r\n    let keys = {}\r\n    cred.forEach((pair) => {\r\n      let [key, ...value] = pair.split(':')\r\n      key = key.split('\"')[1]\r\n      // checks that values are given in the correct format\r\n      if (value.length === 0 || value[0].trim() === '') {\r\n        throw new Error(`Key-value pairs must be of the form 'key': 'value'`)\r\n      }\r\n      value = value.join(':')\r\n      value = value.split('\"')[1]\r\n      keys[key.trim()] = value.trim()\r\n    })\r\n    // checks that all of the required keys are included\r\n    REQUIRED_CLIENT_KEYS.forEach((key) => {\r\n      if (!(key in keys)) {\r\n        throw new Error(`Key '${key}' must be in client credential`)\r\n      } else if (keys[key] === '') {\r\n        throw new Error(`Value for '${key}' must be non-empty`)\r\n      }\r\n    })\r\n    // checks that client_id is a uuid\r\n    if (\r\n      !/^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$/.test(\r\n        keys['client_id']\r\n      )\r\n    ) {\r\n      throw new Error('Value for client_id should be in UUID format')\r\n    }\r\n    if (keys['public_signing_key'].length !== PUBLIC_SIGNING_LENGTH) {\r\n      throw new Error('Invalid key length: public_signing_key')\r\n    } else if (keys['private_signing_key'].length !== PRIVATE_SIGNING_LENGTH) {\r\n      throw new Error('Invalid key length: private_signing_key')\r\n    } else if (keys['public_key'].length !== PUBLIC_KEY_LENGTH) {\r\n      throw new Error('Invalid key length: public_key')\r\n    } else if (keys['private_key'].length !== PRIVATE_KEY_LENGTH) {\r\n      throw new Error('Invalid key length: private_key')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * createSecret\r\n   *\r\n   * @param {Object} secret the new Secret to create.\r\n   * @param {boolean} update true if this is a secret update, false otherwise\r\n   *\r\n   * @return {Promise<Record>}\r\n   */\r\n  async createSecret(secret, update = false) {\r\n    const trimmedName = secret.secretName.trim()\r\n    const trimmedValue = secret.secretValue.trim()\r\n    if (secret.secretType === '') {\r\n      throw new Error('Type cannot be empty')\r\n    }\r\n    if (!TYPES.includes(secret.secretType)) {\r\n      throw new Error('Invalid type')\r\n    }\r\n    if (trimmedName === '') {\r\n      throw new Error('Name cannot be empty')\r\n    }\r\n    if (!/^[a-zA-Z0-9-_]{1,50}$/.test(trimmedName)) {\r\n      throw new Error(\r\n        'Secret name must contain 1-50 alphanumeric characters, -, or _'\r\n      )\r\n    }\r\n    if (trimmedValue === '' && secret.secretType === 'Credential') {\r\n      throw new Error('Value cannot be empty')\r\n    }\r\n    if (secret.secretType === 'File' && secret.fileName.trim() === '') {\r\n      throw new Error('Filename cannot be empty')\r\n    }\r\n    if (secret.secretType === 'File' && secret.file.size > 5242880) {\r\n      throw new Error('File size must be less that 5MB')\r\n    }\r\n    if (secret.secretType === 'Client') {\r\n      this.verifyClientCreds(secret.secretValue)\r\n    }\r\n    let group = await getNamespace(this, this.storage.config.clientId, true)\r\n    const recordType = `tozny.secret.${SECRET_UUID}.${secret.secretType}.${secret.secretName}`\r\n    let timestamp = Date.now().toString()\r\n    let meta = {\r\n      secretType: secret.secretType,\r\n      secretName: secret.secretName,\r\n      description: secret.description,\r\n      version: timestamp,\r\n    }\r\n    let secretMade\r\n    if (secret.secretType === 'File') {\r\n      meta['fileName'] = secret.fileName\r\n      // in kibibytes\r\n      let size = secret.file.size / 1024\r\n      size = size > 1 ? size.toFixed(1).toString() : '< 1'\r\n      meta['size'] = size\r\n      const file = await this.storage.writeFile(recordType, secret.file, meta)\r\n      secretMade = await file.record()\r\n    } else {\r\n      const data = {\r\n        secretValue: secret.secretValue,\r\n      }\r\n      secretMade = await this.storage.writeRecord(recordType, data, meta)\r\n    }\r\n    // if the secret is new (not a version of a current secret), share the record type with the group\r\n    if (!update) {\r\n      // share record type with the group\r\n      await this.storage.shareRecordWithGroup(group.groupID, recordType)\r\n    }\r\n    return secretMade\r\n  }\r\n  /**\r\n   * get a secret by its ID\r\n   *\r\n   * @param {string} secretID   the ID of the secret\r\n   *\r\n   * @return {Promise<Record>}\r\n   */\r\n  async viewSecret(secretID) {\r\n    var secret\r\n    const groupList = await this.storage.listGroups(\r\n      this.storage.config.clientId\r\n    )\r\n    const groupLength = groupList.groups.length\r\n    let processingErrors = []\r\n    for (var index = 0; index < groupLength; index++) {\r\n      let sharedRecords = []\r\n      try {\r\n        sharedRecords = await this.storage.listRecordsSharedWithGroup(\r\n          groupList.groups[index].groupID\r\n        )\r\n      } catch (e) {\r\n        let error = `viewSecret: could not access group ${groupList.groups[index].groupName} error: ${e.message}`\r\n        processingErrors.push(error)\r\n        continue\r\n      }\r\n      if (sharedRecords[0] !== undefined) {\r\n        for (\r\n          var recordIndex = 0;\r\n          recordIndex < sharedRecords[0].length;\r\n          recordIndex++\r\n        ) {\r\n          if (\r\n            sharedRecords[0][recordIndex].meta.recordId == secretID &&\r\n            sharedRecords[0][recordIndex].meta.writerId !=\r\n              this.storage.config.clientId\r\n          ) {\r\n            secret = sharedRecords[0][recordIndex]\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (secret === undefined) {\r\n      secret = await this.storage.readRecord(secretID)\r\n    }\r\n    return { secret: secret, processingErrors: processingErrors }\r\n  }\r\n  /**\r\n   * getSecrets\r\n   *\r\n   * @param {number} limit   The maximum number of secrets to list per request.\r\n   *\r\n   * @return {Promise<Record>}\r\n   */\r\n  async getSecrets(limit, nextToken) {\r\n    const groupList = await this.storage.listGroups(\r\n      this.storage.config.clientId,\r\n      [],\r\n      nextToken,\r\n      limit\r\n    )\r\n    // no records\r\n    if (groupList.groups.length < 1) {\r\n      return { list: [], nextToken: 0 }\r\n    }\r\n    let sharedRecordList = []\r\n    let processingErrors = []\r\n    const lengthGroup = groupList.groups.length\r\n    for (var index = lengthGroup - 1; index >= 0; index--) {\r\n      if (await !isValidToznySecretNamespace(groupList.groups[0].groupName)) {\r\n        continue\r\n      }\r\n      let sharedRecords = []\r\n      // try to list all the records shared with this group\r\n      // add a processing error and skip the group if this request fails\r\n      try {\r\n        sharedRecords = await this.storage.listRecordsSharedWithGroup(\r\n          groupList.groups[index].groupID\r\n        )\r\n      } catch (e) {\r\n        let errMessage =\r\n          'getSecrets: could not access group ' +\r\n          groupList.groups[index].groupName +\r\n          ' with error ' +\r\n          e.message\r\n        processingErrors.push(errMessage)\r\n        continue\r\n      }\r\n      if (sharedRecords[0] !== undefined) {\r\n        for (\r\n          var recordIndex = 0;\r\n          recordIndex < sharedRecords[0].length;\r\n          recordIndex++\r\n        ) {\r\n          var found = false\r\n          for (\r\n            var recordsListed = 0;\r\n            recordsListed < sharedRecordList.length;\r\n            recordsListed++\r\n          ) {\r\n            // no repeats\r\n            if (\r\n              sharedRecords[0][recordIndex].meta.recordId ==\r\n              sharedRecordList[recordsListed].meta.recordId\r\n            ) {\r\n              found = true\r\n            }\r\n          }\r\n          if (found == false) {\r\n            var shared = 'No'\r\n            var username\r\n            // Check if it is shared\r\n            if (groupList.groups[index].memberCount > 1) {\r\n              shared = 'Yes'\r\n            }\r\n            // Find out Usernames for Users that are not the writer\r\n            if (\r\n              sharedRecords[0][recordIndex].meta.writerId !=\r\n              this.storage.config.clientId\r\n            ) {\r\n              // try to find the username for this clientID\r\n              // if this fails, add a processing error but still add the secret to the list of secrets\r\n              try {\r\n                let response = await this.searchRealmIdentitiesByClientID([\r\n                  sharedRecords[0][recordIndex].meta.writerId,\r\n                ])\r\n                username =\r\n                  response.searched_identities_information[0].realm_username\r\n              } catch (e) {\r\n                let errMessage =\r\n                  'getSecrets: Error while searching for identity with clientID ' +\r\n                  sharedRecords[0][recordIndex].meta.writerId +\r\n                  '. Error: ' +\r\n                  e.message\r\n                processingErrors.push(errMessage)\r\n              }\r\n            }\r\n            sharedRecords[0][recordIndex].meta['username'] = username\r\n            sharedRecords[0][recordIndex].meta['shared'] = shared\r\n            sharedRecordList.push(sharedRecords[0][recordIndex])\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return {\r\n      list: sharedRecordList,\r\n      nextToken: groupList.nextToken,\r\n      processingErrors: processingErrors,\r\n    }\r\n  }\r\n  /**\r\n   * getLatestSecret\r\n   *\r\n   * @param {string} secretName   The name of the Secret given by User.\r\n   * @param {string} secretType   The type of the Secret chosen by User.\r\n   *\r\n   *\r\n   * @return {Promise<Record>}\r\n   */\r\n  async getLatestSecret(secretName, secretType) {\r\n    const request = new Search(true) // Include Data\r\n    let searchType = `tozny.secret.${SECRET_UUID}.${secretType}.${secretName}`\r\n    request.match({ type: searchType }, 'AND', 'EXACT').order('DESCENDING')\r\n    let resultQuery = await this.storage.search(request)\r\n    let resultList = await resultQuery.next()\r\n    if (resultList.length > 0) {\r\n      return { exists: true, results: resultList[0] }\r\n    }\r\n    return { exists: false, results: null }\r\n  }\r\n  /**\r\n   * getSharedSecrets returns all the secrets that are currently shared\r\n   *  with the identity\r\n   *\r\n   *\r\n   * @return {Promise<Record>}\r\n   */\r\n  async getSharedSecrets() {\r\n    const groupList = await this.storage.listGroups(\r\n      this.storage.config.clientId\r\n    )\r\n    // no records shared with groups\r\n    if (groupList.groups.length < 1) {\r\n      return []\r\n    }\r\n    let sharedRecordList = []\r\n    let processingErrors = []\r\n    for (var index = 0; index < groupList.groups.length; index++) {\r\n      if (\r\n        await !isValidToznySecretNamespace(groupList.groups[index].groupName)\r\n      ) {\r\n        continue\r\n      }\r\n      let sharedRecords\r\n      try {\r\n        sharedRecords = await this.storage.listRecordsSharedWithGroup(\r\n          groupList.groups[index].groupID\r\n        )\r\n      } catch (e) {\r\n        let error = `getSharedSecrets: could not access group ${groupList.groups[index].groupName} with error: ${e.message}`\r\n        processingErrors.push(error)\r\n        continue\r\n      }\r\n      if (sharedRecords.length !== 0) {\r\n        for (\r\n          var recordIndex = 0;\r\n          recordIndex < sharedRecords[0].length;\r\n          recordIndex++\r\n        ) {\r\n          if (\r\n            sharedRecords[0][recordIndex].meta.writerId !=\r\n            this.storage.config.clientId\r\n          ) {\r\n            var found = false\r\n            for (\r\n              var recordsListed = 0;\r\n              recordsListed < sharedRecordList.length;\r\n              recordsListed++\r\n            ) {\r\n              if (\r\n                sharedRecords[0][recordIndex].meta.recordId ==\r\n                sharedRecordList[recordsListed].meta.recordId\r\n              ) {\r\n                found = true\r\n              }\r\n            }\r\n            // don't want records written by you\r\n            if (found === false) {\r\n              sharedRecordList.push(sharedRecords[0][recordIndex])\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return { sharedList: sharedRecordList, processingErrors: processingErrors }\r\n  }\r\n  /**\r\n   * updateSecrets\r\n   *\r\n   * @param {Object} oldSecret The current version of Secret.\r\n   * @param {Object} newSecret The new version of the Secret to create.\r\n   *\r\n   * @return {Promise<Record>}\r\n   */\r\n  async updateSecret(oldSecret, newSecret) {\r\n    // check name and type are the same\r\n    if (oldSecret.secretType != newSecret.secretType) {\r\n      throw new Error('Cannot Update Secret of Different Type')\r\n    }\r\n    if (oldSecret.secretName != newSecret.secretName) {\r\n      throw new Error('Cannot Update Secret of Different Name')\r\n    }\r\n    // Create New Secret\r\n    return this.createSecret(newSecret, true)\r\n  }\r\n  /**\r\n   * getFile\r\n   *\r\n   * @param {Object} record the record that contains the file info or the recordId\r\n   *\r\n   * @return {Object} a File object\r\n   */\r\n  async getFile(record) {\r\n    return await this.storage.getFile(record)\r\n  }\r\n  /**\r\n   * shareSecretWithUsername\r\n   *\r\n   * @param {String} secretType\r\n   * @param {String} secretName\r\n   * @param {String} usernameToAdd\r\n   *\r\n   * @return {Boolean}\r\n   */\r\n  async shareSecretWithUsername(secretName, secretType, usernameToAdd) {\r\n    // Validation\r\n    if (usernameToAdd == '') {\r\n      throw new Error('Username Required')\r\n    }\r\n    // Look Up the ClientID for Username\r\n    let clientID = await this.clientIDLookUpByUsername(usernameToAdd)\r\n    if (clientID == null) {\r\n      return null\r\n    }\r\n    // This is the user namespace\r\n    const groupName = `tozny.secret.${this.config.realmName}.${this.storage.config.clientId}.${clientID}.${secretName}.${secretType}`\r\n    const groupList = await this.storage.listGroups(\r\n      this.storage.config.clientId,\r\n      [groupName]\r\n    )\r\n    let currentGroup\r\n    if (groupList.groups.length < 1) {\r\n      // Group Does not Exists, create one\r\n      const groupDescription = `${usernameToAdd}`\r\n      const newGroup = await this.storage.createGroup(\r\n        groupName,\r\n        [],\r\n        groupDescription\r\n      )\r\n      currentGroup = newGroup.group\r\n      let groupMembers = []\r\n      const capabilities = {\r\n        read: true,\r\n        share: true,\r\n      }\r\n      const owner = new GroupMember(this.storage.config.clientId, capabilities)\r\n      groupMembers.push(owner)\r\n      const capabilitiesForNewMember = {\r\n        read: true,\r\n        share: true,\r\n      }\r\n      const newMember = new GroupMember(clientID, capabilitiesForNewMember)\r\n      groupMembers.push(newMember)\r\n      await this.storage.addGroupMembers(currentGroup.groupID, groupMembers)\r\n    } else {\r\n      // Group Exists, save the group object\r\n      currentGroup = groupList.groups[0]\r\n    }\r\n    // Generate the Record Type to share\r\n    const recordType = `tozny.secret.${SECRET_UUID}.${secretType}.${secretName}`\r\n    let sharedWithGroup = await this.storage.shareRecordWithGroup(\r\n      currentGroup.groupID,\r\n      recordType\r\n    )\r\n    return sharedWithGroup.record_type\r\n  }\r\n  /**\r\n   * addSecretToNamespace takes a user defined namespace name and a secret to add to the namespace\r\n   *\r\n   * @param {String} namespace The user given name for the secret stored in the meta data\r\n   * @param {String} secretType The secret type, example 'Credential'\r\n   * @param {String} secretName The user given name for the secret stored in the meta data\r\n   *\r\n   * @return {Boolean}\r\n   */\r\n  async addSecretToNamespace(secretName, secretType, namespace) {\r\n    // Check if the namespace exists\r\n    let currentGroup = await getNamespace(this, namespace, true)\r\n    // Generate the Record Type to share\r\n    const recordType = `tozny.secret.${SECRET_UUID}.${secretType}.${secretName}`\r\n    let sharedWithGroup = await this.storage.shareRecordWithGroup(\r\n      currentGroup.groupID,\r\n      recordType\r\n    )\r\n    return sharedWithGroup.record_type\r\n  }\r\n  /**\r\n   * addIdentityToNamespace takes a user defined namespace name and a username for an identity and gives access to the given namespace for the identity\r\n   *\r\n   * @param {String} namespace The user given name for the secret stored in the meta data\r\n   * @param {String} usernameToAdd The username of the user that will have permissions added\r\n   *\r\n   * @return {Boolean}\r\n   */\r\n  async addIdentityToNamespace(usernameToAdd, namespace) {\r\n    // Validation\r\n    if (usernameToAdd == '') {\r\n      throw new Error('Username Required')\r\n    }\r\n    // Look Up the ClientID for Username\r\n    let clientID = await this.clientIDLookUpByUsername(usernameToAdd)\r\n    if (clientID === null) {\r\n      return null\r\n    }\r\n    // Check if namespace exists\r\n    const currentGroup = await getNamespace(this, namespace, true)\r\n    if (currentGroup.groupID === undefined) {\r\n      return false\r\n    }\r\n    let groupMembers = []\r\n    const capabilitiesForNewMember = {\r\n      read: true,\r\n      share: true,\r\n    }\r\n    // If the namespace exists add the identity\r\n    const newMember = new GroupMember(clientID, capabilitiesForNewMember)\r\n    groupMembers.push(newMember)\r\n    await this.storage.addGroupMembers(currentGroup.groupID, groupMembers)\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * searchRealmIdentitiesByUsername\r\n   *\r\n   * @param {Array} usernamesToSearch\r\n   *\r\n   * @return {Object} An Object containing An array of Information for every\r\n   * Username which was passed in. The information passed back contains, ClientID, UserId, and Usernames\r\n   */\r\n  async searchRealmIdentitiesByUsername(usernamesToSearch = []) {\r\n    const SearchRealmIdentitiesRequest = {\r\n      identity_usernames: usernamesToSearch,\r\n    }\r\n    let response = await this.storage.authenticator.tsv1Fetch(\r\n      `${\r\n        this.storage.config.apiUrl\r\n      }/v1/identity/search/realm/${this.config.realmName.toLowerCase()}/identity`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(SearchRealmIdentitiesRequest),\r\n      }\r\n    )\r\n    return credentialedDecodeResponse(response)\r\n  }\r\n\r\n  /**\r\n   * revokeSecretFromUser takes in a secret type and secret name and a username of the\r\n   * user that you want to revoke reading permissions from\r\n   *\r\n   * @param {String} secretType The secret type, example 'Credential'\r\n   * @param {String} secretName The user given name for the secret stored in the meta data\r\n   * @param {String} userToRevokeShare The username of the user that will have permissions revoked\r\n   *\r\n   * @return {Boolean}\r\n   */\r\n  async revokeSecretFromUser(secretName, secretType, userToRevokeShare) {\r\n    // Validation\r\n    if (userToRevokeShare == '') {\r\n      throw new Error('Username Required')\r\n    }\r\n    // Look Up the ClientID for Username\r\n    let clientID = await this.clientIDLookUpByUsername(userToRevokeShare)\r\n    if (clientID === null) {\r\n      return null\r\n    }\r\n    // Look up group for our current user sharing to the username\r\n    // The group name is ordered by first clientID is the client who wrote the secret\r\n    // and second clientID is the user that we are sharing with\r\n    // This allows visibility to who owns the secret within a pairing\r\n    const groupName = `tozny.secret.${this.config.realmName}.${this.storage.config.clientId}.${clientID}.${secretName}.${secretType}`\r\n    const groupInfo = await this.storage.groupInfo(\r\n      groupName,\r\n      this.storage.config.clientId\r\n    )\r\n    if (groupInfo === {}) {\r\n      // Group Does not Exists, so record is not shared\r\n      return true\r\n    } else {\r\n      // unshare record with group\r\n      const currentGroup = groupInfo\r\n      let recordType = `tozny.secret.${SECRET_UUID}.${secretType}.${secretName}`\r\n      let revokedFromGroup = await this.storage.revokeRecordWithGroup(\r\n        currentGroup.groupID,\r\n        recordType\r\n      )\r\n      return revokedFromGroup\r\n    }\r\n  }\r\n\r\n  /**\r\n   * removeIdentityFromNamespace takes a user defined namespace name and a username for an identity and removes access to the given namespace for the identity\r\n   *\r\n   * @param {String} namespace The user given name for the secret stored in the meta data\r\n   * @param {String} userToRevokeShare The username of the user that will have permissions revoked\r\n   *\r\n   * @return {Promise<>}\r\n   */\r\n  async removeIdentityFromNamespace(userToRevokeShare, namespace) {\r\n    // Validation\r\n    if (userToRevokeShare == '') {\r\n      throw new Error('Username Required')\r\n    }\r\n    // Look Up the ClientID for Username\r\n    let clientID = await this.clientIDLookUpByUsername(userToRevokeShare)\r\n    if (clientID === null) {\r\n      return null\r\n    }\r\n    // Look up group for our current namespace\r\n    const currentGroup = await getNamespace(this, namespace, false)\r\n    if (currentGroup.groupID === undefined) {\r\n      return true\r\n    }\r\n    // Remove identity from namespace\r\n    return await this.storage.removeGroupMembers(currentGroup.groupID, [\r\n      clientID,\r\n    ])\r\n  }\r\n\r\n  /**\r\n   * removeSecretFromNamespace takes a user defined namespace name and a secret to remove from to the namespace\r\n   *\r\n   * @param {String} namespace The user given name for the secret stored in the meta data\r\n   * @param {String} secretType The secret type, example 'Credential'\r\n   * @param {String} secretName The user given name for the secret stored in the meta data\r\n   *\r\n   * @return {Boolean}\r\n   */\r\n  async removeSecretFromNamespace(secretName, secretType, namespace) {\r\n    // Look up group for our current namespace\r\n    const currentGroup = await getNamespace(this, namespace, false)\r\n    if (currentGroup.groupID === undefined) {\r\n      return true\r\n    }\r\n    // unshare record with group\r\n    let recordType = `tozny.secret.${SECRET_UUID}.${secretType}.${secretName}`\r\n    return await this.storage.revokeRecordWithGroup(\r\n      currentGroup.groupID,\r\n      recordType\r\n    )\r\n  }\r\n\r\n  /**\r\n   * validGroupForSecretSharedList checks if the username from this group should be added to the list of usernames\r\n   *\r\n   * @param {object} group\r\n   * @param {string} secretName\r\n   * @param {string} secretType\r\n   *\r\n   * @return {Boolean}\r\n   */\r\n  validGroupForSecretSharedList(group, secretName, secretType) {\r\n    if (group.memberCount < 2) {\r\n      return false\r\n    }\r\n    let groupNameSplit = group.groupName.split('.')\r\n    if (groupNameSplit.length != 7) {\r\n      return false\r\n    }\r\n    if (groupNameSplit[3] !== this.storage.config.clientId) {\r\n      return false\r\n    }\r\n    if (groupNameSplit[5] !== secretName || groupNameSplit[6] !== secretType) {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n  /**\r\n   * getSecretSharedList returns a list of usernames to which the secret is shared with\r\n   *\r\n   * @param {String} secretType secret type that is being used to see the share list\r\n   * @param {String} secretName secret name that is being used to see the share list\r\n   *\r\n   * @return {Promise<Record>}\r\n   */\r\n  async getSecretSharedList(secretName, secretType) {\r\n    const groupList = await this.storage.listGroups(\r\n      this.storage.config.clientId\r\n    )\r\n    let groupSharedList = []\r\n    let processingErrors = []\r\n    for (let index = 0; index < groupList.groups.length; index++) {\r\n      if (\r\n        await isValidToznySecretNamespace(groupList.groups[index].groupName)\r\n      ) {\r\n        // check if they have any records shared with them\r\n        let recordsShared\r\n        try {\r\n          recordsShared = await this.storage.listRecordsSharedWithGroup(\r\n            groupList.groups[index].groupID\r\n          )\r\n        } catch (e) {\r\n          let error = `getSecretSharedList: could not access group ${groupList.groups[index].groupName} with error: ${e.message}`\r\n          processingErrors.push(error)\r\n          continue\r\n        }\r\n        if (recordsShared.length > 0) {\r\n          // Check to make sure they are the writer\r\n          // and secret type and secret name are the same\r\n          if (\r\n            this.validGroupForSecretSharedList(\r\n              groupList.groups[index],\r\n              secretName,\r\n              secretType\r\n            )\r\n          ) {\r\n            groupSharedList.push({\r\n              username: groupList.groups[index].description,\r\n              groupMembers: groupList.groups[index].memberCount,\r\n            }) // add their username to the list which is stored in the group description\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return { list: groupSharedList, processingErrors: processingErrors }\r\n  }\r\n  /**\r\n   * searchRealmIdentitiesByEmail\r\n   *\r\n   * @param {Array} emailsToSearch\r\n   *\r\n   * @return {Object} An Object containing An array of Information for every\r\n   * Username which was passed in. The information passed back contains, ClientID, UserId, and Usernames\r\n   */\r\n  async searchRealmIdentitiesByEmail(emailsToSearch = []) {\r\n    const SearchRealmIdentitiesRequest = {\r\n      identity_emails: emailsToSearch,\r\n    }\r\n    let response = await this.storage.authenticator.tsv1Fetch(\r\n      `${\r\n        this.storage.config.apiUrl\r\n      }/v1/identity/search/realm/${this.config.realmName.toLowerCase()}/identity`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(SearchRealmIdentitiesRequest),\r\n      }\r\n    )\r\n    return await credentialedDecodeResponse(response)\r\n  }\r\n  /**\r\n   * privateRealmInfo fetches private information about a realm\r\n   *\r\n   * @return {Object} information about a realm\r\n   */\r\n  async privateRealmInfo() {\r\n    let response = await this.storage.authenticator.tsv1Fetch(\r\n      `${this.storage.config.apiUrl}/v1/identity/realm/info/${this.config.realmName}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    )\r\n    return await credentialedDecodeResponse(response)\r\n  }\r\n  /**\r\n   * searchIdentityByUsername\r\n   *\r\n   * @param {Array} username the username of the identity to get information about\r\n   *\r\n   * @return {Object} containing information about a the user passed in\r\n   */\r\n  async searchIdentityByUsername(username) {\r\n    if (username == '') {\r\n      throw new Error('Username Required')\r\n    }\r\n    let response = await this.searchRealmIdentitiesByUsername([username])\r\n    if (response.searched_identities_information != null) {\r\n      return response.searched_identities_information[0]\r\n    }\r\n    return {}\r\n  }\r\n  /**\r\n   * searchIdentityByEmail\r\n   *\r\n   * @param {Array} email the email of the identity to get information about\r\n   *\r\n   * @return {Object} containing information about a the user passed in\r\n   */\r\n  async searchIdentityByEmail(email) {\r\n    if (email == '') {\r\n      throw new Error('Username Required')\r\n    }\r\n    let response = await this.searchRealmIdentitiesByEmail([email])\r\n    if (response.searched_identities_information != null) {\r\n      return response.searched_identities_information[0]\r\n    }\r\n    return {}\r\n  }\r\n  /**\r\n   * searchRealmIdentitiesByClientID\r\n   *\r\n   * @param {Array} clientIdsToSearch\r\n   *\r\n   * @return {Object} An Object containing An array of Information for every\r\n   * Username which was passed in. The information passed back contains, ClientID, UserId, and Usernames\r\n   */\r\n  async searchRealmIdentitiesByClientID(clientIdsToSearch = []) {\r\n    const SearchRealmIdentitiesRequest = {\r\n      identity_client_ids: clientIdsToSearch,\r\n    }\r\n    let response = await this.storage.authenticator.tsv1Fetch(\r\n      `${\r\n        this.storage.config.apiUrl\r\n      }/v1/identity/search/realm/${this.config.realmName.toLowerCase()}/identity`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(SearchRealmIdentitiesRequest),\r\n      }\r\n    )\r\n    return await credentialedDecodeResponse(response)\r\n  }\r\n  /**\r\n   * onlyVersionOfSecretInGroup compares the recordType against the records in the list & returns\r\n   * true if secretId is the only version of that secret\r\n   *\r\n   * @param {array} records  a list of records\r\n   * @param {string} recordType  the record type for compare with each record\r\n   * @param {string} secretId  the ID of the secret that is going to be deleted\r\n   * @return {boolean}\r\n   */\r\n  async onlyVersionOfSecretInGroup(records, recordType, secretId) {\r\n    return records.every((record) => {\r\n      if (\r\n        record.meta.writerId === this.storage.config.clientId &&\r\n        record.meta.type === recordType &&\r\n        record.meta.recordId !== secretId\r\n      ) {\r\n        return false\r\n      }\r\n      return true\r\n    })\r\n  }\r\n  /**\r\n   * revokeShareBeforeDeleteSecret\r\n   * @param {object} group\r\n   * @param {String} recordType\r\n   * @param {String} secretId\r\n   *\r\n   * @returns {String}\r\n   */\r\n  async revokeShareBeforeDeleteSecret(group, recordType, secretId) {\r\n    // Group does not exist\r\n    if (group.groupID === undefined) {\r\n      return null\r\n    }\r\n    let processingError\r\n    let sharedRecords\r\n    try {\r\n      sharedRecords = await this.storage.listRecordsSharedWithGroup(\r\n        group.groupID\r\n      )\r\n    } catch (e) {\r\n      processingError = `revokeShareBeforeDeleteSecret: could not access group ${group.groupName} with error: ${e.message}`\r\n      return processingError\r\n    }\r\n    if (sharedRecords.length === 0) {\r\n      return null\r\n    }\r\n    // delete the group when only 1 secret version is shared with the group\r\n    if (sharedRecords[0].length < 2) {\r\n      try {\r\n        await this.storage.revokeRecordWithGroup(group.groupID, recordType)\r\n      } catch (e) {\r\n        processingError = `revokeShareBeforeDeleteSecret: unable to unshare ${recordType} from group ${group.groupName}: ${e.message}`\r\n        return processingError\r\n      }\r\n      try {\r\n        await this.storage.deleteGroup(group.groupID)\r\n      } catch (e) {\r\n        processingError = `revokeShareBeforeDeleteSecret: unable to delete group ${group.groupName}: ${e.message}`\r\n        return processingError\r\n      }\r\n    } else if (\r\n      await this.onlyVersionOfSecretInGroup(\r\n        sharedRecords[0],\r\n        recordType,\r\n        secretId\r\n      )\r\n    ) {\r\n      // if this is the only version of the secret in the group, revoke the share\r\n      try {\r\n        await this.storage.revokeRecordWithGroup(group.groupID, recordType)\r\n      } catch (e) {\r\n        processingError = `revokeShareBeforeDeleteSecret: unable to delete group ${group.groupName}: ${e.message}`\r\n        return processingError\r\n      }\r\n    }\r\n    return null\r\n  }\r\n  /**\r\n   * removeSingleSecret\r\n   * @param {Object} secret\r\n   * @return {Object} returns true and any processing errors if the secret was successfully removed\r\n   */\r\n  async deleteSecretVersion(secret) {\r\n    let listedGroups = await this.storage.listGroups(\r\n      this.storage.config.clientId\r\n    )\r\n    let processingErrors = []\r\n    // unshare the secret from the groups it's shared with\r\n    for (let group of listedGroups.groups) {\r\n      let error = await this.revokeShareBeforeDeleteSecret(\r\n        group,\r\n        secret.meta.type,\r\n        secret.meta.recordId\r\n      )\r\n      if (error !== null) {\r\n        processingErrors.push(error)\r\n      }\r\n    }\r\n    // delete the secret\r\n    let deleteSuccess = await this.storage.deleteRecord(\r\n      secret.meta.recordId,\r\n      secret.meta.version\r\n    )\r\n    return { success: deleteSuccess, processingErrors: processingErrors }\r\n  }\r\n  /**\r\n   * clientIDLookUpByUsername returns the clientID for the username passed in\r\n   * @param {Object} username\r\n   * @return {Object} returns the clientID if it exists\r\n   */\r\n  async clientIDLookUpByUsername(username) {\r\n    let clientResponse = await this.searchRealmIdentitiesByUsername([username])\r\n    let usernameLowerCase = username.toLowerCase()\r\n    let clientID\r\n    if (clientResponse.searched_identities_information === null) {\r\n      return clientID\r\n    }\r\n    for (\r\n      let index = 0;\r\n      index < clientResponse.searched_identities_information.length;\r\n      index++\r\n    ) {\r\n      if (\r\n        clientResponse.searched_identities_information[index].realm_username ===\r\n        usernameLowerCase\r\n      ) {\r\n        clientID =\r\n          clientResponse.searched_identities_information[index].client_id\r\n      }\r\n    }\r\n    return clientID\r\n  }\r\n\r\n  /**\r\n   * createAccessRequest creates an access request\r\n   *\r\n   * @param {Object} accessRequest\r\n   *\r\n   * @param {string} realmName - name of realm\r\n   * @param {Object} groups - object containing `id` of group\r\n   * @param {string} reason - user's explanation for why they are requesting access\r\n   * @param {number} accessDurationSeconds - desired number of seconds approval should last\r\n   * @return {AccessRequest} The created access request\r\n   */\r\n  async createAccessRequest(realmName, groups, reason, accessDurationSeconds) {\r\n    const requestorId = this.storage.config.clientId\r\n    const accessRequest = new AccessRequest(\r\n      reason,\r\n      requestorId,\r\n      realmName,\r\n      groups,\r\n      accessDurationSeconds\r\n    )\r\n    const response = await this.storage.authenticator.tsv1Fetch(\r\n      `${this.storage.config.apiUrl}/v1/identity/pam/access_requests/open`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: accessRequest.stringify(),\r\n      }\r\n    )\r\n    await checkStatus(response)\r\n    return AccessRequest.decode(await response.json())\r\n  }\r\n\r\n  /**\r\n   * searchAccessRequests allows for searching for all access requests associated or authorizable\r\n   * by the searcher, allowing for filtering based off group id to access or requestor id\r\n   *\r\n   * @param {Object} filters Information about filters by which to search access requests.\r\n   * @param {string[]} [filters.groupIds] List of ids of which group the access request is for\r\n   * @param {string[]} [filters.requestorIds] List of ids of who created the access request\r\n   * @param {number} [nextToken] Pagination token of the search results\r\n   * @param {number} [limit] Maximum number of responses per search page. Defaults to 1000.\r\n   *\r\n   * @return {Object} Access requests matching the search filter\r\n   */\r\n  async searchAccessRequests(filters = {}, nextToken = 0, limit = 1000) {\r\n    let response = await this.storage.authenticator.tsv1Fetch(\r\n      `${this.storage.config.apiUrl}/v1/identity/pam/access_requests/search`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          access_request_search_filters: {\r\n            access_controlled_group_ids: filters.groupIds,\r\n            requestor_ids: filters.requestorIds,\r\n          },\r\n          next_token: nextToken,\r\n          limit,\r\n        }),\r\n      }\r\n    )\r\n    await checkStatus(response)\r\n    return AccessRequestSearchResponse.decode(await response.json())\r\n  }\r\n\r\n  /**\r\n   * describeAccessRequest fetches the current state of a single access request\r\n   *\r\n   * @param {Object} accessRequestID The id of the access request to describe\r\n   *\r\n   * @return {Object} An access request\r\n   */\r\n  async describeAccessRequest(accessRequestID) {\r\n    let response = await this.storage.authenticator.tsv1Fetch(\r\n      `${this.storage.config.apiUrl}/v1/identity/pam/access_requests/resource/${accessRequestID}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    )\r\n    await checkStatus(response)\r\n    return AccessRequest.decode(await response.json())\r\n  }\r\n\r\n  /**\r\n   * deleteAccessRequest deletes a single access request\r\n   *\r\n   * @param {Object} accessRequestID The id of the access request to delete\r\n   *\r\n   * @return {Object} No content if deleted / non existant\r\n   */\r\n  async deleteAccessRequest(accessRequestID) {\r\n    let response = await this.storage.authenticator.tsv1Fetch(\r\n      `${this.storage.config.apiUrl}/v1/identity/pam/access_requests/resource/${accessRequestID}`,\r\n      {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    )\r\n    await checkStatus(response)\r\n    return { success: true }\r\n  }\r\n\r\n  /**\r\n   * approveAccessRequests approves one or more access requests\r\n   *\r\n   * @param {string} realmName - name of realm\r\n   * @param {Array} approvals an array of objects containing info about the approvals\r\n   * @param {number} approvals[].accessRequestId id of request to approve\r\n   * @param {string} [approvals[].comment] user-entered comment on the approval\r\n   *\r\n   * @return {Array} The updated access requests\r\n   */\r\n  async approveAccessRequests(realmName, approvals) {\r\n    const response = await this.storage.authenticator.tsv1Fetch(\r\n      `${this.storage.config.apiUrl}/v1/identity/pam/access_requests/approve`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          realm_name: realmName,\r\n          approvals: approvals.map(({ accessRequestId, comment }) => ({\r\n            access_request_id: accessRequestId,\r\n            comment,\r\n          })),\r\n        }),\r\n      }\r\n    )\r\n    await checkStatus(response)\r\n    const data = await response.json()\r\n    return data.access_requests.map(AccessRequest.decode)\r\n  }\r\n\r\n  /**\r\n   * denyAccessRequests denies one or more access requests\r\n   *\r\n   * @param {string} realmName - name of realm\r\n   * @param {Array} denials an array of objects containing info about the denials\r\n   * @param {number} denials[].accessRequestId id of request to deny\r\n   * @param {string} [denials[].comment] user-entered comment on the denial\r\n   *\r\n   * @return {Array} The updated access requests\r\n   */\r\n  async denyAccessRequests(realmName, denials) {\r\n    const response = await this.storage.authenticator.tsv1Fetch(\r\n      `${this.storage.config.apiUrl}/v1/identity/pam/access_requests/deny`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          realm_name: realmName,\r\n          denials: denials.map(({ accessRequestId, comment }) => ({\r\n            access_request_id: accessRequestId,\r\n            comment,\r\n          })),\r\n        }),\r\n      }\r\n    )\r\n    await checkStatus(response)\r\n    const data = await response.json()\r\n    return data.access_requests.map(AccessRequest.decode)\r\n  }\r\n\r\n  /**\r\n   * availableAccessRequestGroups returns Realm Groups with MPC Enabled\r\n   *\r\n   * @param {string} realmName - name of realm\r\n   *\r\n   * @return {Array} list of groups available for access requesting\r\n   */\r\n  async availableAccessRequestGroups(realmName) {\r\n    const response = await this.storage.authenticator.tsv1Fetch(\r\n      `${this.storage.config.apiUrl}/v1/identity/pam/groups`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ realm_name: realmName }),\r\n      }\r\n    )\r\n    await checkStatus(response)\r\n    const data = await response.json()\r\n    return data.groups.map(({ group_id, group_name, access_policies }) => ({\r\n      id: group_id,\r\n      groupName: group_name,\r\n      accessPolicies: (access_policies || []).map(\r\n        ({ id, max_access_duration_seconds, required_approvals }) => ({\r\n          id,\r\n          requiredApprovals: required_approvals,\r\n          maxAccessDurationSeconds: max_access_duration_seconds,\r\n        })\r\n      ),\r\n    }))\r\n  }\r\n\r\n  /**\r\n   * Initiates the challenge for registering a WebAuthn MFA device for this identity.\r\n   * @returns {Promise<InitiateWebAuthnChallengeData>}\r\n   */\r\n  // Note: extending for use w/ different tozny id? make the prop optional with a fallback to this client.\r\n  async initiateWebAuthnChallenge() {\r\n    const sessionToken = await this.agentToken()\r\n    const toznyId = this.storage.config.clientId\r\n    const response = await this.storage.authenticator.tsv1Fetch(\r\n      `${this.storage.config.apiUrl}/v1/identity/mfa/webauthn-challenge`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-Tozny-Session': sessionToken,\r\n        },\r\n        body: JSON.stringify({ tozny_id: toznyId }),\r\n      }\r\n    )\r\n    await checkStatus(response)\r\n    const data = await response.json()\r\n    return InitiateWebAuthnChallengeData.decode(data)\r\n  }\r\n\r\n  /**\r\n   * `registerWebAuthnDevice` finalizes the registration of a WebAuthn MFA device for this identity.\r\n   * @param {PublicKeyCredential} publicKeyCredential this is the response from a call to `navigator.credentials.create`\r\n   * @param {string} deviceName a name for this device.\r\n   * @param {string} tabId the id from the initiation challenge call. used to track session across api calls.\r\n   * @returns {IdentityMFADevices}\r\n   */\r\n  // Note: Supporting cross identity registration? Add an optional tozny id arg w/ fallback to this client.\r\n  async registerWebAuthnDevice(publicKeyCredential, deviceName, tabId) {\r\n    const sessionToken = await this.agentToken()\r\n    const toznyId = this.storage.config.clientId\r\n    const response = await this.storage.authenticator.tsv1Fetch(\r\n      `${this.storage.config.apiUrl}/v1/identity/mfa`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-Tozny-Session': sessionToken,\r\n        },\r\n        body: JSON.stringify({\r\n          tozny_id: toznyId,\r\n          tab_id: tabId,\r\n          mfa_devices: {\r\n            webauthn:\r\n              InitiateWebAuthnChallengeData.convertPublicKeyCredentialToRegistrationData(\r\n                publicKeyCredential,\r\n                deviceName\r\n              ),\r\n          },\r\n        }),\r\n      }\r\n    )\r\n    await checkStatus(response)\r\n    const data = await response.json()\r\n    return IdentityMFADevices.decode(data)\r\n  }\r\n\r\n  /**\r\n   * `searchIdentityMFADeviceCredentials` finds details of MFA devices for the identities matching the `searchParams`.\r\n   * If no `searchParams` are provided, it will query for the current identity's MFA devices.\r\n   * Only realm admins have permission to query the details of other identities' MFA devices.\r\n   * @param {string} realmName Name of realm\r\n   * @param {object} [searchParams] Data containing info on which users to find MFA devices for. defaults to this client's identity.\r\n   *                                All search parameters are taken as to be an OR query.\r\n   * @param {string[]} [searchParams.toznyIds] List of Tozny client ids to search over\r\n   * @param {string[]} [searchParams.userIds] List of user ids to search over\r\n   * @returns {IdentityMFADevices}\r\n   */\r\n  async searchIdentityMFADeviceCredentials(realmName, searchParams) {\r\n    const toznyIds = (searchParams && searchParams.toznyIds) || []\r\n    const userIds = (searchParams && searchParams.userIds) || []\r\n    const searchIsEmpty =\r\n      !searchParams || (toznyIds.length === 0 && userIds.length === 0)\r\n    if (searchIsEmpty) {\r\n      // fallback to this client's identity if search is empty.\r\n      toznyIds.push(this.storage.config.clientId)\r\n    }\r\n    const response = await this.storage.authenticator.tsv1Fetch(\r\n      `${this.storage.config.apiUrl}/v1/identity/mfa/search`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          realm_name: realmName,\r\n          tozny_ids: toznyIds,\r\n          user_ids: userIds,\r\n        }),\r\n      }\r\n    )\r\n    await checkStatus(response)\r\n    const data = await response.json()\r\n    return data.identities_credentials.map(IdentityMFADevices.decode)\r\n  }\r\n\r\n  /**\r\n   * `removeMFADevice` removes an MFA device that is registered to an Identity\r\n   * @param {string} mfaID the ID of the MFA device\r\n   * @returns {boolean} true if removing the MFA device was successful\r\n   */\r\n  async removeMFADevice(mfaID) {\r\n    const response = await this.storage.authenticator.tsv1Fetch(\r\n      `${this.storage.config.apiUrl}/v1/identity/mfa/${mfaID}`,\r\n      {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    )\r\n    await checkStatus(response)\r\n    return true\r\n  }\r\n}\r\n\r\nmodule.exports = Client\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/identity/client.js\n");

/***/ }),

/***/ "./lib/identity/config.js":
/*!********************************!*\
  !*** ./lib/identity/config.js ***!
  \********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { DEFAULT_API_URL } = __webpack_require__(/*! ../utils/constants */ \"./lib/utils/constants.js\")\r\nconst { RealmConfigurationError } = __webpack_require__(/*! ../../types/errors/identity */ \"./types/errors/identity.js\")\r\n\r\n/**\r\n * Configuration for communicating with the Tozny Identity service.\r\n */\r\nclass Config {\r\n  /**\r\n   * Create a new config object from a JSON string or JS object.\r\n   *\r\n   * If a string is passed, it is first parsed as JSON into an object.\r\n   *\r\n   * Camel case version of object keys are checked first. If the camel case version\r\n   * of the configuration key is undefined, this method falls back to the snake case\r\n   * version of the supported keys.\r\n   *\r\n   * @param {Object|string} obj A JSON string or javascript object containing identity configuration.\r\n   *\r\n   * @returns {Config} A new Config object based on the passed JS object or JSON string.\r\n   */\r\n  static fromObject(obj) {\r\n    if (typeof obj === 'string') {\r\n      try {\r\n        obj = JSON.parse(obj)\r\n      } catch (err) {\r\n        throw new RealmConfigurationError(\r\n          'Config.fromObject param JSON string could not be parsed.'\r\n        )\r\n      }\r\n    }\r\n    const realmName = obj.realmName || obj.realm_name\r\n    let realmDomain\r\n    if (obj.realmDomain || obj.realm_domain) {\r\n      realmDomain = obj.realmDomain || obj.realm_domain\r\n    } else {\r\n      realmDomain = realmName.toLowerCase()\r\n    }\r\n    const appName = obj.appName || obj.app_name\r\n    const username = obj.username\r\n    const userId = obj.userId || obj.user_id\r\n    const apiUrl = obj.apiUrl || obj.api_url\r\n    const brokerTargetUrl = obj.brokerTargetUrl || obj.broker_target_url\r\n    const firstName = obj.firstName || obj.first_name\r\n    const lastName = obj.lastName || obj.last_name\r\n    return new this(\r\n      realmName,\r\n      realmDomain,\r\n      appName,\r\n      apiUrl,\r\n      username,\r\n      userId,\r\n      brokerTargetUrl,\r\n      firstName,\r\n      lastName\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Create a new instance of Config\r\n   *\r\n   * @param {string} realmName       The realms case sensitive name\r\n   * @param {string} realmDomain The realms globally unique case insensitive name\r\n   * @param {string} appName         The app identity will interact with.\r\n   * @param {string} [apiUrl]        Optional base URL for the Tozny Platform API\r\n   * @param {string} username        The user defined identifier for the user\r\n   * @param {string} userId          A specific realm user's unique identifier\r\n   * @param {string} brokerTargetUrl The URL which will process broker-based login flows.\r\n   * @param {string} firstName       The user defined first name for the identity\r\n   * @param {string} lastName        The user defined last name for the identity\r\n   *\r\n   * @returns {Config} The constructed Config object.\r\n   */\r\n  constructor(\r\n    realmName,\r\n    realmDomain,\r\n    appName,\r\n    apiUrl = DEFAULT_API_URL,\r\n    username,\r\n    userId,\r\n    brokerTargetUrl,\r\n    firstName,\r\n    lastName\r\n  ) {\r\n    if (!realmName) {\r\n      throw new RealmConfigurationError(\r\n        'Realm name is required to use Tozny Identity services. If you need to create a realm, visit the Tozny Dashboard.'\r\n      )\r\n    }\r\n    if (!appName) {\r\n      throw new RealmConfigurationError(\r\n        'App name is required to use Tozny Identity services. If you need to create an app, visit realm admin.'\r\n      )\r\n    }\r\n    this.realmName = realmName\r\n    this.realmDomain = realmDomain\r\n    this.appName = appName\r\n    this.username = username\r\n    this.userId = userId\r\n    this.apiUrl = apiUrl\r\n    this.brokerTargetUrl = brokerTargetUrl\r\n    this.firstName = firstName\r\n    this.lastName = lastName\r\n  }\r\n\r\n  serialize() {\r\n    /* eslint-disable camelcase */\r\n    return {\r\n      realm_name: this.realmName,\r\n      realm_domain: this.realmDomain,\r\n      app_name: this.appName,\r\n      api_url: this.apiUrl,\r\n      user_id: this.userId,\r\n      broker_target_url: this.brokerTargetUrl,\r\n      first_name: this.firstName,\r\n      last_name: this.lastName,\r\n    }\r\n    /* eslint-enable */\r\n  }\r\n}\r\n\r\nmodule.exports = Config\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvaWRlbnRpdHkvY29uZmlnLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHRvem55c2VjdXJlL3Nkay8uL2xpYi9pZGVudGl0eS9jb25maWcuanM/ZmFjZSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IERFRkFVTFRfQVBJX1VSTCB9ID0gcmVxdWlyZSgnLi4vdXRpbHMvY29uc3RhbnRzJylcclxuY29uc3QgeyBSZWFsbUNvbmZpZ3VyYXRpb25FcnJvciB9ID0gcmVxdWlyZSgnLi4vLi4vdHlwZXMvZXJyb3JzL2lkZW50aXR5JylcclxuXHJcbi8qKlxyXG4gKiBDb25maWd1cmF0aW9uIGZvciBjb21tdW5pY2F0aW5nIHdpdGggdGhlIFRvem55IElkZW50aXR5IHNlcnZpY2UuXHJcbiAqL1xyXG5jbGFzcyBDb25maWcge1xyXG4gIC8qKlxyXG4gICAqIENyZWF0ZSBhIG5ldyBjb25maWcgb2JqZWN0IGZyb20gYSBKU09OIHN0cmluZyBvciBKUyBvYmplY3QuXHJcbiAgICpcclxuICAgKiBJZiBhIHN0cmluZyBpcyBwYXNzZWQsIGl0IGlzIGZpcnN0IHBhcnNlZCBhcyBKU09OIGludG8gYW4gb2JqZWN0LlxyXG4gICAqXHJcbiAgICogQ2FtZWwgY2FzZSB2ZXJzaW9uIG9mIG9iamVjdCBrZXlzIGFyZSBjaGVja2VkIGZpcnN0LiBJZiB0aGUgY2FtZWwgY2FzZSB2ZXJzaW9uXHJcbiAgICogb2YgdGhlIGNvbmZpZ3VyYXRpb24ga2V5IGlzIHVuZGVmaW5lZCwgdGhpcyBtZXRob2QgZmFsbHMgYmFjayB0byB0aGUgc25ha2UgY2FzZVxyXG4gICAqIHZlcnNpb24gb2YgdGhlIHN1cHBvcnRlZCBrZXlzLlxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtPYmplY3R8c3RyaW5nfSBvYmogQSBKU09OIHN0cmluZyBvciBqYXZhc2NyaXB0IG9iamVjdCBjb250YWluaW5nIGlkZW50aXR5IGNvbmZpZ3VyYXRpb24uXHJcbiAgICpcclxuICAgKiBAcmV0dXJucyB7Q29uZmlnfSBBIG5ldyBDb25maWcgb2JqZWN0IGJhc2VkIG9uIHRoZSBwYXNzZWQgSlMgb2JqZWN0IG9yIEpTT04gc3RyaW5nLlxyXG4gICAqL1xyXG4gIHN0YXRpYyBmcm9tT2JqZWN0KG9iaikge1xyXG4gICAgaWYgKHR5cGVvZiBvYmogPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgb2JqID0gSlNPTi5wYXJzZShvYmopXHJcbiAgICAgIH0gY2F0Y2ggKGVycikge1xyXG4gICAgICAgIHRocm93IG5ldyBSZWFsbUNvbmZpZ3VyYXRpb25FcnJvcihcclxuICAgICAgICAgICdDb25maWcuZnJvbU9iamVjdCBwYXJhbSBKU09OIHN0cmluZyBjb3VsZCBub3QgYmUgcGFyc2VkLidcclxuICAgICAgICApXHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIGNvbnN0IHJlYWxtTmFtZSA9IG9iai5yZWFsbU5hbWUgfHwgb2JqLnJlYWxtX25hbWVcclxuICAgIGxldCByZWFsbURvbWFpblxyXG4gICAgaWYgKG9iai5yZWFsbURvbWFpbiB8fCBvYmoucmVhbG1fZG9tYWluKSB7XHJcbiAgICAgIHJlYWxtRG9tYWluID0gb2JqLnJlYWxtRG9tYWluIHx8IG9iai5yZWFsbV9kb21haW5cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJlYWxtRG9tYWluID0gcmVhbG1OYW1lLnRvTG93ZXJDYXNlKClcclxuICAgIH1cclxuICAgIGNvbnN0IGFwcE5hbWUgPSBvYmouYXBwTmFtZSB8fCBvYmouYXBwX25hbWVcclxuICAgIGNvbnN0IHVzZXJuYW1lID0gb2JqLnVzZXJuYW1lXHJcbiAgICBjb25zdCB1c2VySWQgPSBvYmoudXNlcklkIHx8IG9iai51c2VyX2lkXHJcbiAgICBjb25zdCBhcGlVcmwgPSBvYmouYXBpVXJsIHx8IG9iai5hcGlfdXJsXHJcbiAgICBjb25zdCBicm9rZXJUYXJnZXRVcmwgPSBvYmouYnJva2VyVGFyZ2V0VXJsIHx8IG9iai5icm9rZXJfdGFyZ2V0X3VybFxyXG4gICAgY29uc3QgZmlyc3ROYW1lID0gb2JqLmZpcnN0TmFtZSB8fCBvYmouZmlyc3RfbmFtZVxyXG4gICAgY29uc3QgbGFzdE5hbWUgPSBvYmoubGFzdE5hbWUgfHwgb2JqLmxhc3RfbmFtZVxyXG4gICAgcmV0dXJuIG5ldyB0aGlzKFxyXG4gICAgICByZWFsbU5hbWUsXHJcbiAgICAgIHJlYWxtRG9tYWluLFxyXG4gICAgICBhcHBOYW1lLFxyXG4gICAgICBhcGlVcmwsXHJcbiAgICAgIHVzZXJuYW1lLFxyXG4gICAgICB1c2VySWQsXHJcbiAgICAgIGJyb2tlclRhcmdldFVybCxcclxuICAgICAgZmlyc3ROYW1lLFxyXG4gICAgICBsYXN0TmFtZVxyXG4gICAgKVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ3JlYXRlIGEgbmV3IGluc3RhbmNlIG9mIENvbmZpZ1xyXG4gICAqXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IHJlYWxtTmFtZSAgICAgICBUaGUgcmVhbG1zIGNhc2Ugc2Vuc2l0aXZlIG5hbWVcclxuICAgKiBAcGFyYW0ge3N0cmluZ30gcmVhbG1Eb21haW4gVGhlIHJlYWxtcyBnbG9iYWxseSB1bmlxdWUgY2FzZSBpbnNlbnNpdGl2ZSBuYW1lXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IGFwcE5hbWUgICAgICAgICBUaGUgYXBwIGlkZW50aXR5IHdpbGwgaW50ZXJhY3Qgd2l0aC5cclxuICAgKiBAcGFyYW0ge3N0cmluZ30gW2FwaVVybF0gICAgICAgIE9wdGlvbmFsIGJhc2UgVVJMIGZvciB0aGUgVG96bnkgUGxhdGZvcm0gQVBJXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJuYW1lICAgICAgICBUaGUgdXNlciBkZWZpbmVkIGlkZW50aWZpZXIgZm9yIHRoZSB1c2VyXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IHVzZXJJZCAgICAgICAgICBBIHNwZWNpZmljIHJlYWxtIHVzZXIncyB1bmlxdWUgaWRlbnRpZmllclxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBicm9rZXJUYXJnZXRVcmwgVGhlIFVSTCB3aGljaCB3aWxsIHByb2Nlc3MgYnJva2VyLWJhc2VkIGxvZ2luIGZsb3dzLlxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBmaXJzdE5hbWUgICAgICAgVGhlIHVzZXIgZGVmaW5lZCBmaXJzdCBuYW1lIGZvciB0aGUgaWRlbnRpdHlcclxuICAgKiBAcGFyYW0ge3N0cmluZ30gbGFzdE5hbWUgICAgICAgIFRoZSB1c2VyIGRlZmluZWQgbGFzdCBuYW1lIGZvciB0aGUgaWRlbnRpdHlcclxuICAgKlxyXG4gICAqIEByZXR1cm5zIHtDb25maWd9IFRoZSBjb25zdHJ1Y3RlZCBDb25maWcgb2JqZWN0LlxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcmVhbG1OYW1lLFxyXG4gICAgcmVhbG1Eb21haW4sXHJcbiAgICBhcHBOYW1lLFxyXG4gICAgYXBpVXJsID0gREVGQVVMVF9BUElfVVJMLFxyXG4gICAgdXNlcm5hbWUsXHJcbiAgICB1c2VySWQsXHJcbiAgICBicm9rZXJUYXJnZXRVcmwsXHJcbiAgICBmaXJzdE5hbWUsXHJcbiAgICBsYXN0TmFtZVxyXG4gICkge1xyXG4gICAgaWYgKCFyZWFsbU5hbWUpIHtcclxuICAgICAgdGhyb3cgbmV3IFJlYWxtQ29uZmlndXJhdGlvbkVycm9yKFxyXG4gICAgICAgICdSZWFsbSBuYW1lIGlzIHJlcXVpcmVkIHRvIHVzZSBUb3pueSBJZGVudGl0eSBzZXJ2aWNlcy4gSWYgeW91IG5lZWQgdG8gY3JlYXRlIGEgcmVhbG0sIHZpc2l0IHRoZSBUb3pueSBEYXNoYm9hcmQuJ1xyXG4gICAgICApXHJcbiAgICB9XHJcbiAgICBpZiAoIWFwcE5hbWUpIHtcclxuICAgICAgdGhyb3cgbmV3IFJlYWxtQ29uZmlndXJhdGlvbkVycm9yKFxyXG4gICAgICAgICdBcHAgbmFtZSBpcyByZXF1aXJlZCB0byB1c2UgVG96bnkgSWRlbnRpdHkgc2VydmljZXMuIElmIHlvdSBuZWVkIHRvIGNyZWF0ZSBhbiBhcHAsIHZpc2l0IHJlYWxtIGFkbWluLidcclxuICAgICAgKVxyXG4gICAgfVxyXG4gICAgdGhpcy5yZWFsbU5hbWUgPSByZWFsbU5hbWVcclxuICAgIHRoaXMucmVhbG1Eb21haW4gPSByZWFsbURvbWFpblxyXG4gICAgdGhpcy5hcHBOYW1lID0gYXBwTmFtZVxyXG4gICAgdGhpcy51c2VybmFtZSA9IHVzZXJuYW1lXHJcbiAgICB0aGlzLnVzZXJJZCA9IHVzZXJJZFxyXG4gICAgdGhpcy5hcGlVcmwgPSBhcGlVcmxcclxuICAgIHRoaXMuYnJva2VyVGFyZ2V0VXJsID0gYnJva2VyVGFyZ2V0VXJsXHJcbiAgICB0aGlzLmZpcnN0TmFtZSA9IGZpcnN0TmFtZVxyXG4gICAgdGhpcy5sYXN0TmFtZSA9IGxhc3ROYW1lXHJcbiAgfVxyXG5cclxuICBzZXJpYWxpemUoKSB7XHJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSBjYW1lbGNhc2UgKi9cclxuICAgIHJldHVybiB7XHJcbiAgICAgIHJlYWxtX25hbWU6IHRoaXMucmVhbG1OYW1lLFxyXG4gICAgICByZWFsbV9kb21haW46IHRoaXMucmVhbG1Eb21haW4sXHJcbiAgICAgIGFwcF9uYW1lOiB0aGlzLmFwcE5hbWUsXHJcbiAgICAgIGFwaV91cmw6IHRoaXMuYXBpVXJsLFxyXG4gICAgICB1c2VyX2lkOiB0aGlzLnVzZXJJZCxcclxuICAgICAgYnJva2VyX3RhcmdldF91cmw6IHRoaXMuYnJva2VyVGFyZ2V0VXJsLFxyXG4gICAgICBmaXJzdF9uYW1lOiB0aGlzLmZpcnN0TmFtZSxcclxuICAgICAgbGFzdF9uYW1lOiB0aGlzLmxhc3ROYW1lLFxyXG4gICAgfVxyXG4gICAgLyogZXNsaW50LWVuYWJsZSAqL1xyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBDb25maWdcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/identity/config.js\n");

/***/ }),

/***/ "./lib/identity/index.js":
/*!*******************************!*\
  !*** ./lib/identity/index.js ***!
  \*******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const RealmBase = __webpack_require__(/*! ./realm */ \"./lib/identity/realm.js\")\r\nconst PartialClientBase = __webpack_require__(/*! ./partialClient */ \"./lib/identity/partialClient.js\")\r\nconst ClientBase = __webpack_require__(/*! ./client */ \"./lib/identity/client.js\")\r\nconst Config = __webpack_require__(/*! ./config */ \"./lib/identity/config.js\")\r\nconst Crypto = __webpack_require__(/*! ../crypto/crypto */ \"./lib/crypto/crypto.js\")\r\nconst Storage = __webpack_require__(/*! ../storage */ \"./lib/storage/index.js\")\r\n\r\n/**\r\n * Identity represents a connection to the Tozny Identity service on behalf of a realm.\r\n *\r\n * Before registration, login, or other client creation methods are possible, the configuration\r\n * for a Tozny Identity realm is needed. Identity holds this configuration and provides methods\r\n * for all pre-client operations. In other words, the methods this object make identity clients\r\n * for users that belong to the configured realm. It helps authenticate users.\r\n */\r\nclass Identity {\r\n  constructor(crypto, storage) {\r\n    if (!(crypto instanceof Crypto)) {\r\n      throw new Error(\r\n        'To create an identity object you must provide a valid crypto instance.'\r\n      )\r\n    }\r\n    if (!(storage instanceof Storage)) {\r\n      throw new Error(\r\n        'To create an identity object you must provide a valid storage instance.'\r\n      )\r\n    }\r\n    const clientConstructor = class Client extends ClientBase {\r\n      static get crypto() {\r\n        return crypto\r\n      }\r\n    }\r\n\r\n    const partialClientConstructor = class PartialClient extends PartialClientBase {\r\n      static get crypto() {\r\n        return crypto\r\n      }\r\n    }\r\n    this.Realm = class Realm extends RealmBase {\r\n      static get crypto() {\r\n        return crypto\r\n      }\r\n      static get Client() {\r\n        return clientConstructor\r\n      }\r\n      static get PartialClient() {\r\n        return partialClientConstructor\r\n      }\r\n      static get storage() {\r\n        return storage\r\n      }\r\n    }\r\n    this.Client = clientConstructor\r\n    this.Config = Config\r\n    this.crypto = crypto\r\n  }\r\n}\r\n\r\nmodule.exports = Identity\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvaWRlbnRpdHkvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B0b3pueXNlY3VyZS9zZGsvLi9saWIvaWRlbnRpdHkvaW5kZXguanM/MzM2ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBSZWFsbUJhc2UgPSByZXF1aXJlKCcuL3JlYWxtJylcclxuY29uc3QgUGFydGlhbENsaWVudEJhc2UgPSByZXF1aXJlKCcuL3BhcnRpYWxDbGllbnQnKVxyXG5jb25zdCBDbGllbnRCYXNlID0gcmVxdWlyZSgnLi9jbGllbnQnKVxyXG5jb25zdCBDb25maWcgPSByZXF1aXJlKCcuL2NvbmZpZycpXHJcbmNvbnN0IENyeXB0byA9IHJlcXVpcmUoJy4uL2NyeXB0by9jcnlwdG8nKVxyXG5jb25zdCBTdG9yYWdlID0gcmVxdWlyZSgnLi4vc3RvcmFnZScpXHJcblxyXG4vKipcclxuICogSWRlbnRpdHkgcmVwcmVzZW50cyBhIGNvbm5lY3Rpb24gdG8gdGhlIFRvem55IElkZW50aXR5IHNlcnZpY2Ugb24gYmVoYWxmIG9mIGEgcmVhbG0uXHJcbiAqXHJcbiAqIEJlZm9yZSByZWdpc3RyYXRpb24sIGxvZ2luLCBvciBvdGhlciBjbGllbnQgY3JlYXRpb24gbWV0aG9kcyBhcmUgcG9zc2libGUsIHRoZSBjb25maWd1cmF0aW9uXHJcbiAqIGZvciBhIFRvem55IElkZW50aXR5IHJlYWxtIGlzIG5lZWRlZC4gSWRlbnRpdHkgaG9sZHMgdGhpcyBjb25maWd1cmF0aW9uIGFuZCBwcm92aWRlcyBtZXRob2RzXHJcbiAqIGZvciBhbGwgcHJlLWNsaWVudCBvcGVyYXRpb25zLiBJbiBvdGhlciB3b3JkcywgdGhlIG1ldGhvZHMgdGhpcyBvYmplY3QgbWFrZSBpZGVudGl0eSBjbGllbnRzXHJcbiAqIGZvciB1c2VycyB0aGF0IGJlbG9uZyB0byB0aGUgY29uZmlndXJlZCByZWFsbS4gSXQgaGVscHMgYXV0aGVudGljYXRlIHVzZXJzLlxyXG4gKi9cclxuY2xhc3MgSWRlbnRpdHkge1xyXG4gIGNvbnN0cnVjdG9yKGNyeXB0bywgc3RvcmFnZSkge1xyXG4gICAgaWYgKCEoY3J5cHRvIGluc3RhbmNlb2YgQ3J5cHRvKSkge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXHJcbiAgICAgICAgJ1RvIGNyZWF0ZSBhbiBpZGVudGl0eSBvYmplY3QgeW91IG11c3QgcHJvdmlkZSBhIHZhbGlkIGNyeXB0byBpbnN0YW5jZS4nXHJcbiAgICAgIClcclxuICAgIH1cclxuICAgIGlmICghKHN0b3JhZ2UgaW5zdGFuY2VvZiBTdG9yYWdlKSkge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXHJcbiAgICAgICAgJ1RvIGNyZWF0ZSBhbiBpZGVudGl0eSBvYmplY3QgeW91IG11c3QgcHJvdmlkZSBhIHZhbGlkIHN0b3JhZ2UgaW5zdGFuY2UuJ1xyXG4gICAgICApXHJcbiAgICB9XHJcbiAgICBjb25zdCBjbGllbnRDb25zdHJ1Y3RvciA9IGNsYXNzIENsaWVudCBleHRlbmRzIENsaWVudEJhc2Uge1xyXG4gICAgICBzdGF0aWMgZ2V0IGNyeXB0bygpIHtcclxuICAgICAgICByZXR1cm4gY3J5cHRvXHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBwYXJ0aWFsQ2xpZW50Q29uc3RydWN0b3IgPSBjbGFzcyBQYXJ0aWFsQ2xpZW50IGV4dGVuZHMgUGFydGlhbENsaWVudEJhc2Uge1xyXG4gICAgICBzdGF0aWMgZ2V0IGNyeXB0bygpIHtcclxuICAgICAgICByZXR1cm4gY3J5cHRvXHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIHRoaXMuUmVhbG0gPSBjbGFzcyBSZWFsbSBleHRlbmRzIFJlYWxtQmFzZSB7XHJcbiAgICAgIHN0YXRpYyBnZXQgY3J5cHRvKCkge1xyXG4gICAgICAgIHJldHVybiBjcnlwdG9cclxuICAgICAgfVxyXG4gICAgICBzdGF0aWMgZ2V0IENsaWVudCgpIHtcclxuICAgICAgICByZXR1cm4gY2xpZW50Q29uc3RydWN0b3JcclxuICAgICAgfVxyXG4gICAgICBzdGF0aWMgZ2V0IFBhcnRpYWxDbGllbnQoKSB7XHJcbiAgICAgICAgcmV0dXJuIHBhcnRpYWxDbGllbnRDb25zdHJ1Y3RvclxyXG4gICAgICB9XHJcbiAgICAgIHN0YXRpYyBnZXQgc3RvcmFnZSgpIHtcclxuICAgICAgICByZXR1cm4gc3RvcmFnZVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICB0aGlzLkNsaWVudCA9IGNsaWVudENvbnN0cnVjdG9yXHJcbiAgICB0aGlzLkNvbmZpZyA9IENvbmZpZ1xyXG4gICAgdGhpcy5jcnlwdG8gPSBjcnlwdG9cclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gSWRlbnRpdHlcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/identity/index.js\n");

/***/ }),

/***/ "./lib/identity/partialClient.js":
/*!***************************************!*\
  !*** ./lib/identity/partialClient.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { deriveNoteCreds, writePasswordNote } = __webpack_require__(/*! ./shared */ \"./lib/identity/shared.js\")\r\nconst CryptoConsumer = __webpack_require__(/*! ../crypto/cryptoConsumer */ \"./lib/crypto/cryptoConsumer.js\")\r\nconst AuthenticatedRequest = __webpack_require__(/*! ../request/authenticatedRequest */ \"./lib/request/authenticatedRequest.js\")\r\nconst { checkStatus } = __webpack_require__(/*! ../utils */ \"./lib/utils/index.js\")\r\n\r\nclass PartialClient extends CryptoConsumer {\r\n  constructor(config, storage) {\r\n    super()\r\n    // Construct this object.\r\n    this.config = config\r\n    this.storage = storage\r\n    this._tokenInfo = false\r\n  }\r\n\r\n  serialize() {\r\n    return {\r\n      config: this.config.serialize(),\r\n      storage: this.storage.config.serialize(),\r\n    }\r\n  }\r\n\r\n  serializeData() {\r\n    return {\r\n      config: JSON.stringify(this.config.serialize()),\r\n      storage: JSON.stringify(this.storage.config.serialize()),\r\n    }\r\n  }\r\n\r\n  stringify() {\r\n    return JSON.stringify(this.serialize())\r\n  }\r\n\r\n  async changePassword(newPassword) {\r\n    return writePasswordNote(this, newPassword, true)\r\n  }\r\n\r\n  async validatePassword(password) {\r\n    try {\r\n      const { noteName, signingKeyPair } = await deriveNoteCreds(\r\n        this.config.realmName,\r\n        this.storage.crypto,\r\n        this.config.username,\r\n        password,\r\n        'password'\r\n      )\r\n      let anonAuth = await AuthenticatedRequest.anonymousAuth(\r\n        this.crypto,\r\n        signingKeyPair.publicKey,\r\n        signingKeyPair.privateKey,\r\n        this.apiUrl\r\n      )\r\n      const body = {\r\n        tozid_eacp: {\r\n          expiry_seconds: 1,\r\n        },\r\n      }\r\n      const response = await anonAuth.tsv1Fetch(\r\n        `${this.config.apiUrl}/v2/storage/notes/challenge?id_string=${noteName}`,\r\n        {\r\n          method: 'PATCH',\r\n          'Content-Type': 'application/json',\r\n          body: JSON.stringify(body),\r\n        }\r\n      )\r\n      await checkStatus(response)\r\n      return { success: true }\r\n    } catch (e) {\r\n      let ret = { success: false, message: 'Something went wrong.' }\r\n      if (!e.response) {\r\n        return ret\r\n      }\r\n      switch (e.response.status) {\r\n        case 401:\r\n          ret.message = 'Current password is incorrect.'\r\n          break\r\n        case 417:\r\n          ret.message =\r\n            'Your Identity is currently locked due to too many failed login attempts. Please try again later.'\r\n      }\r\n      return ret\r\n    }\r\n  }\r\n\r\n  async updatePassword(currentPassword, newPassword) {\r\n    const valid = await this.validatePassword(currentPassword)\r\n    if (!valid.success) {\r\n      throw new Error(valid.message)\r\n    }\r\n    return this.changePassword(newPassword)\r\n  }\r\n}\r\n\r\nmodule.exports = PartialClient\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvaWRlbnRpdHkvcGFydGlhbENsaWVudC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdG96bnlzZWN1cmUvc2RrLy4vbGliL2lkZW50aXR5L3BhcnRpYWxDbGllbnQuanM/ZmI1YSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGRlcml2ZU5vdGVDcmVkcywgd3JpdGVQYXNzd29yZE5vdGUgfSA9IHJlcXVpcmUoJy4vc2hhcmVkJylcclxuY29uc3QgQ3J5cHRvQ29uc3VtZXIgPSByZXF1aXJlKCcuLi9jcnlwdG8vY3J5cHRvQ29uc3VtZXInKVxyXG5jb25zdCBBdXRoZW50aWNhdGVkUmVxdWVzdCA9IHJlcXVpcmUoJy4uL3JlcXVlc3QvYXV0aGVudGljYXRlZFJlcXVlc3QnKVxyXG5jb25zdCB7IGNoZWNrU3RhdHVzIH0gPSByZXF1aXJlKCcuLi91dGlscycpXHJcblxyXG5jbGFzcyBQYXJ0aWFsQ2xpZW50IGV4dGVuZHMgQ3J5cHRvQ29uc3VtZXIge1xyXG4gIGNvbnN0cnVjdG9yKGNvbmZpZywgc3RvcmFnZSkge1xyXG4gICAgc3VwZXIoKVxyXG4gICAgLy8gQ29uc3RydWN0IHRoaXMgb2JqZWN0LlxyXG4gICAgdGhpcy5jb25maWcgPSBjb25maWdcclxuICAgIHRoaXMuc3RvcmFnZSA9IHN0b3JhZ2VcclxuICAgIHRoaXMuX3Rva2VuSW5mbyA9IGZhbHNlXHJcbiAgfVxyXG5cclxuICBzZXJpYWxpemUoKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBjb25maWc6IHRoaXMuY29uZmlnLnNlcmlhbGl6ZSgpLFxyXG4gICAgICBzdG9yYWdlOiB0aGlzLnN0b3JhZ2UuY29uZmlnLnNlcmlhbGl6ZSgpLFxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc2VyaWFsaXplRGF0YSgpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGNvbmZpZzogSlNPTi5zdHJpbmdpZnkodGhpcy5jb25maWcuc2VyaWFsaXplKCkpLFxyXG4gICAgICBzdG9yYWdlOiBKU09OLnN0cmluZ2lmeSh0aGlzLnN0b3JhZ2UuY29uZmlnLnNlcmlhbGl6ZSgpKSxcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHN0cmluZ2lmeSgpIHtcclxuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh0aGlzLnNlcmlhbGl6ZSgpKVxyXG4gIH1cclxuXHJcbiAgYXN5bmMgY2hhbmdlUGFzc3dvcmQobmV3UGFzc3dvcmQpIHtcclxuICAgIHJldHVybiB3cml0ZVBhc3N3b3JkTm90ZSh0aGlzLCBuZXdQYXNzd29yZCwgdHJ1ZSlcclxuICB9XHJcblxyXG4gIGFzeW5jIHZhbGlkYXRlUGFzc3dvcmQocGFzc3dvcmQpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHsgbm90ZU5hbWUsIHNpZ25pbmdLZXlQYWlyIH0gPSBhd2FpdCBkZXJpdmVOb3RlQ3JlZHMoXHJcbiAgICAgICAgdGhpcy5jb25maWcucmVhbG1OYW1lLFxyXG4gICAgICAgIHRoaXMuc3RvcmFnZS5jcnlwdG8sXHJcbiAgICAgICAgdGhpcy5jb25maWcudXNlcm5hbWUsXHJcbiAgICAgICAgcGFzc3dvcmQsXHJcbiAgICAgICAgJ3Bhc3N3b3JkJ1xyXG4gICAgICApXHJcbiAgICAgIGxldCBhbm9uQXV0aCA9IGF3YWl0IEF1dGhlbnRpY2F0ZWRSZXF1ZXN0LmFub255bW91c0F1dGgoXHJcbiAgICAgICAgdGhpcy5jcnlwdG8sXHJcbiAgICAgICAgc2lnbmluZ0tleVBhaXIucHVibGljS2V5LFxyXG4gICAgICAgIHNpZ25pbmdLZXlQYWlyLnByaXZhdGVLZXksXHJcbiAgICAgICAgdGhpcy5hcGlVcmxcclxuICAgICAgKVxyXG4gICAgICBjb25zdCBib2R5ID0ge1xyXG4gICAgICAgIHRvemlkX2VhY3A6IHtcclxuICAgICAgICAgIGV4cGlyeV9zZWNvbmRzOiAxLFxyXG4gICAgICAgIH0sXHJcbiAgICAgIH1cclxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBhbm9uQXV0aC50c3YxRmV0Y2goXHJcbiAgICAgICAgYCR7dGhpcy5jb25maWcuYXBpVXJsfS92Mi9zdG9yYWdlL25vdGVzL2NoYWxsZW5nZT9pZF9zdHJpbmc9JHtub3RlTmFtZX1gLFxyXG4gICAgICAgIHtcclxuICAgICAgICAgIG1ldGhvZDogJ1BBVENIJyxcclxuICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcbiAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShib2R5KSxcclxuICAgICAgICB9XHJcbiAgICAgIClcclxuICAgICAgYXdhaXQgY2hlY2tTdGF0dXMocmVzcG9uc2UpXHJcbiAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUgfVxyXG4gICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICBsZXQgcmV0ID0geyBzdWNjZXNzOiBmYWxzZSwgbWVzc2FnZTogJ1NvbWV0aGluZyB3ZW50IHdyb25nLicgfVxyXG4gICAgICBpZiAoIWUucmVzcG9uc2UpIHtcclxuICAgICAgICByZXR1cm4gcmV0XHJcbiAgICAgIH1cclxuICAgICAgc3dpdGNoIChlLnJlc3BvbnNlLnN0YXR1cykge1xyXG4gICAgICAgIGNhc2UgNDAxOlxyXG4gICAgICAgICAgcmV0Lm1lc3NhZ2UgPSAnQ3VycmVudCBwYXNzd29yZCBpcyBpbmNvcnJlY3QuJ1xyXG4gICAgICAgICAgYnJlYWtcclxuICAgICAgICBjYXNlIDQxNzpcclxuICAgICAgICAgIHJldC5tZXNzYWdlID1cclxuICAgICAgICAgICAgJ1lvdXIgSWRlbnRpdHkgaXMgY3VycmVudGx5IGxvY2tlZCBkdWUgdG8gdG9vIG1hbnkgZmFpbGVkIGxvZ2luIGF0dGVtcHRzLiBQbGVhc2UgdHJ5IGFnYWluIGxhdGVyLidcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gcmV0XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBhc3luYyB1cGRhdGVQYXNzd29yZChjdXJyZW50UGFzc3dvcmQsIG5ld1Bhc3N3b3JkKSB7XHJcbiAgICBjb25zdCB2YWxpZCA9IGF3YWl0IHRoaXMudmFsaWRhdGVQYXNzd29yZChjdXJyZW50UGFzc3dvcmQpXHJcbiAgICBpZiAoIXZhbGlkLnN1Y2Nlc3MpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKHZhbGlkLm1lc3NhZ2UpXHJcbiAgICB9XHJcbiAgICByZXR1cm4gdGhpcy5jaGFuZ2VQYXNzd29yZChuZXdQYXNzd29yZClcclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gUGFydGlhbENsaWVudFxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/identity/partialClient.js\n");

/***/ }),

/***/ "./lib/identity/realm.js":
/*!*******************************!*\
  !*** ./lib/identity/realm.js ***!
  \*******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Config = __webpack_require__(/*! ./config */ \"./lib/identity/config.js\")\r\nconst fetch = __webpack_require__(/*! cross-fetch */ \"./node_modules/cross-fetch/dist/browser-ponyfill.js\")\r\nconst {\r\n  validateResponseAsJSON,\r\n  credentialedDecodeResponse,\r\n  credentialNoteCall,\r\n  checkStatus,\r\n  urlEncodeData,\r\n} = __webpack_require__(/*! ../utils */ \"./lib/utils/index.js\")\r\nconst {\r\n  deriveNoteCreds,\r\n  writeBrokerNotes,\r\n  writePasswordNote,\r\n  writeFederationNote,\r\n} = __webpack_require__(/*! ./shared */ \"./lib/identity/shared.js\")\r\nconst CryptoConsumer = __webpack_require__(/*! ../crypto/cryptoConsumer */ \"./lib/crypto/cryptoConsumer.js\")\r\nconst { CredentialDataError } = __webpack_require__(/*! ../../types/errors/identity */ \"./types/errors/identity.js\")\r\nconst { PublicKey, SigningKey } = __webpack_require__(/*! ../../types */ \"./types/index.js\")\r\nconst { DEFAULT_API_URL } = __webpack_require__(/*! ../utils/constants */ \"./lib/utils/constants.js\")\r\nconst AuthenticatedRequest = __webpack_require__(/*! ../request/authenticatedRequest */ \"./lib/request/authenticatedRequest.js\")\r\n\r\nconst publicInfoCache = []\r\nconst tozIDFederationProvider = 'tozid'\r\n/**\r\n * Identity represents a connection to the Tozny Identity service on behalf of a realm.\r\n *\r\n * Before registration, login, or other client creation methods are possible, the configuration\r\n * for a Tozny Identity realm is needed. Identity holds this configuration and provides methods\r\n * for all pre-client operations. In other words, the methods this object make identity clients\r\n * for users that belong to the configured realm. It helps authenticate users.\r\n */\r\nclass Realm extends CryptoConsumer {\r\n  /**\r\n   * Abstract getter for a storage Client constructor function.\r\n   *\r\n   * When implementing this class, this getter must be overloaded. When called it\r\n   * should offer up a storage Client constructor function. Identity constructs\r\n   * storage clients as part of creating Identity clients.\r\n   *\r\n   * An additional instance level getter is also provided which allows fetching\r\n   * the storage client constructor in both static _and_ instance method\r\n   * contexts as `this.StorageClient`.\r\n   *\r\n   * @return {Storage} The storage Client constructor.\r\n   */\r\n  static get storage() {\r\n    throw new Error(\r\n      'Implementing classes must overloaded the storage method to provide a valid storage instance.'\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Allows `this.storage` syntax in instance methods.\r\n   *\r\n   * Gets the static storage instance available in the static class. By\r\n   * returning it as a getter `this.storage` syntax is support in\r\n   * instance methods.\r\n   *\r\n   * @returns {Storage} The storage instance to use in this identity realm.\r\n   */\r\n  get storage() {\r\n    // Use this.constructor to ensure we referencing the implementing class, not an interface class.\r\n    return this.constructor.storage\r\n  }\r\n\r\n  /**\r\n   * Abstract getter for a Client constructor function.\r\n   *\r\n   * When implementing this class, this getter must be overloaded. When called it\r\n   * should offer up a Client constructor function.\r\n   *\r\n   * An additional instance level getter is also provided which allows fetching\r\n   * the Client constructor in both static _and_ instance method\r\n   * contexts as `this.Client`.\r\n   *\r\n   * @return {function} The Client constructor.\r\n   */\r\n  static get Client() {\r\n    throw new Error(\r\n      'Implementing classes must overloaded the storage method to provide a valid storage instance.'\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Abstract getter for a PartialClient constructor function.\r\n   *\r\n   * When implementing this class, this getter must be overloaded. When called it\r\n   * should offer up a PartialClient constructor function.\r\n   *\r\n   * An additional instance level getter is also provided which allows fetching\r\n   * the partial client constructor in both static _and_ instance method\r\n   * contexts as `this.PartialClient`.\r\n   *\r\n   * @return {function} The Partial Client constructor.\r\n   */\r\n  static get PartialClient() {\r\n    throw new Error(\r\n      'Implementing classes must overloaded the PartialClient method to provide a valid PartialClient constructor.'\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Allows `this.Client` syntax in instance methods.\r\n   *\r\n   * Gets the static Client constructor available in the static class. By\r\n   * returning it as a getter `this.Client` syntax is support in\r\n   * instance methods.\r\n   *\r\n   * @returns {function} The Client constructor to use in this identity realm.\r\n   */\r\n  get Client() {\r\n    // Use this.constructor to ensure we referencing the implementing class, not an interface class.\r\n    return this.constructor.Client\r\n  }\r\n\r\n  /**\r\n   * Allows `this.PartialClient` syntax in instance methods.\r\n   *\r\n   * Gets the static PartialClient constructor available in the static class. By\r\n   * returning it as a getter `this.PartialClient` syntax is support in\r\n   * instance methods.\r\n   *\r\n   * @returns {function} The PartialClient constructor to use in this identity realm.\r\n   */\r\n  get PartialClient() {\r\n    // Use this.constructor to ensure we referencing the implementing class, not an interface class.\r\n    return this.constructor.PartialClient\r\n  }\r\n\r\n  constructor(realmDomain, appName, brokerTargetUrl, apiUrl = DEFAULT_API_URL) {\r\n    super()\r\n    this.realmDomain = realmDomain.toLowerCase()\r\n    this.appName = appName\r\n    this.brokerTargetUrl = brokerTargetUrl\r\n    this.apiUrl = apiUrl\r\n  }\r\n\r\n  /**\r\n   * Gets the public realm info\r\n   *\r\n   * If the info is available in the cache, the cache is returned without a\r\n   * network request. If a refresh is requested, or the cache is empty it gets\r\n   * a copy of the info from the realms public info endpoint and updates the\r\n   * cache for future requests.\r\n   *\r\n   * @param {boolean} refresh Whether or not to force refresh the cache\r\n   * @returns {Promise<object>} A promise resolving to the public info object.\r\n   */\r\n  async info(refresh = false) {\r\n    if (!publicInfoCache[this.realmDomain] || refresh) {\r\n      try {\r\n        const info = await validateResponseAsJSON(\r\n          await fetch(\r\n            `${this.apiUrl}/v1/identity/info/realm/${this.realmDomain}`\r\n          )\r\n        )\r\n        publicInfoCache[this.realmDomain] = info\r\n      } catch (e) {\r\n        throw new Error(`Unable to fetch public realm info: '${e.message}'`)\r\n      }\r\n    }\r\n    return publicInfoCache[this.realmDomain]\r\n  }\r\n\r\n  /**\r\n   * Register a new identity with the Tozny identity service.\r\n   *\r\n   * This method creates a new identity service user and associated storage identity. Using the\r\n   * passed username and password it derives encryption keys and writes those credentials to a\r\n   * Tozny Storage Secure Note. This note is fetch-able using the username/password derived keys.\r\n   *\r\n   * It also create a broker-based set of recovery notes protected by the provided email that are\r\n   * used to recover the account in the event the user forgets their password.\r\n   *\r\n   * Finally, the fully constructed Client for the user is returned, ready to make requests using\r\n   * the user identity that was just created.\r\n   *\r\n   * @param {string} username The name to associate with the user in the configured realm.\r\n   *                          may be the same as the email value.\r\n   * @param {string} password The secret used to protect the users identity and encryption keys.\r\n   * @param {string} token The registration token to create the storage client with.\r\n   * @param {string} email The email address used for email brokered access to the identity.\r\n   * @param {string} firstName The first name to associate with the identity.\r\n   * @param {string} lastName The last name to associate with the identity.\r\n   * @param {int}    emailEACPExpiryMinutes The number of minutes email eacps should be valid for\r\n   *\r\n   *\r\n   * @return {Client} The identity Client for the user that was just registered with the realm.\r\n   */\r\n  async register(\r\n    username,\r\n    password,\r\n    token,\r\n    email,\r\n    firstName,\r\n    lastName,\r\n    emailEACPExpiryMinutes = 60\r\n  ) {\r\n    username = username.toLowerCase()\r\n    const cryptoKeys = await this.storage.generateKeypair()\r\n    const signingKeys = await this.storage.generateSigningKeypair()\r\n    const payload = {\r\n      realm_registration_token: token,\r\n      realm_name: this.realmDomain,\r\n      identity: {\r\n        realm_name: this.realmDomain,\r\n        name: username,\r\n        public_key: new PublicKey(cryptoKeys.publicKey),\r\n        signing_key: new SigningKey(signingKeys.publicKey),\r\n        first_name: firstName,\r\n        last_name: lastName,\r\n        email: email,\r\n        credentials: [\r\n          {\r\n            \"type\": \"password\",\r\n            \"value\": password,\r\n            \"temporary\": true\r\n          }\r\n        ]\r\n      },\r\n    }\r\n    const request = await fetch(this.apiUrl + '/v1/identity/register', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(payload),\r\n    })\r\n    const json = await validateResponseAsJSON(request)\r\n    const realmInfo = await this.info()\r\n    const idConfig = new Config(\r\n      realmInfo.name,\r\n      this.realmDomain,\r\n      this.appName,\r\n      this.apiUrl,\r\n      username,\r\n      json.identity.id,\r\n      this.brokerTargetUrl\r\n    )\r\n    const storageClientConfig = new this.storage.Config(\r\n      json.identity.tozny_id,\r\n      json.identity.api_key_id,\r\n      json.identity.api_secret_key,\r\n      cryptoKeys.publicKey,\r\n      cryptoKeys.privateKey,\r\n      signingKeys.publicKey,\r\n      signingKeys.privateKey,\r\n      this.apiUrl\r\n    )\r\n    const storageClient = new this.storage.Client(storageClientConfig)\r\n    const idClient = new this.PartialClient(idConfig, storageClient)\r\n    // Login note\r\n    await writePasswordNote(idClient, password, false)\r\n    await writeBrokerNotes(\r\n      idClient,\r\n      email,\r\n      json.realm_broker_identity_tozny_id,\r\n      false,\r\n      emailEACPExpiryMinutes\r\n    )\r\n\r\n    return idClient\r\n  }\r\n\r\n  async registerFederatedUser(username, data, cryptoKeys, signingKeys) {\r\n    const { result } = data.context\r\n    const realmInfo = await this.info()\r\n    const user = await this.fromObject({\r\n      config: {\r\n        api_url: this.apiUrl,\r\n        realm_name: realmInfo.name,\r\n        realm_domain: this.realmDomain,\r\n        username: username,\r\n        user_id: result.identity.id,\r\n      },\r\n      storage: {\r\n        version: 2,\r\n        client_id: result.identity.tozny_id,\r\n        api_key_id: result.identity.api_key_id,\r\n        api_secret: result.identity.api_secret_key,\r\n        public_key: cryptoKeys.publicKey,\r\n        private_key: cryptoKeys.privateKey,\r\n        public_signing_key: signingKeys.publicKey,\r\n        private_signing_key: signingKeys.privateKey,\r\n        api_url: this.apiUrl,\r\n      },\r\n    })\r\n    const brokerId = result.realm_broker_identity_tozny_id\r\n    await writeFederationNote(user, brokerId, true)\r\n  }\r\n\r\n  /**\r\n   * Get the stored identity credentials for a user and create a Client for them.\r\n   *\r\n   * The username and password are used to derive encryption keys used to fetch a pre-stored\r\n   * note which contains the users identity credentials.\r\n   *\r\n   * Broker mode is used when another identity holds the seed (password) used for\r\n   * the login. Standard login flows with username and password should always use\r\n   * `broker = false` or omit the parameter.\r\n   *\r\n   * @param {string} username The username of the identity to create a Client for.\r\n   * @param {string} password The secret password of the identity to create a Client for.\r\n   * @param {Function} actionHandler If any login actions occur, this callback is responsible for handling them.\r\n   * @param {boolean} credentialType What style credentials to complete the login with `password` for normal logins.\r\n   *\r\n   * @return {Promise<object>} An object containing the proper OIDC redirect URL\r\n   */\r\n  async login(username, password, actionHandler, credentialType = 'password') {\r\n    // TODO: consider breaking out sub-functions for better readability.\r\n    username = username.toLowerCase()\r\n    const realmInfo = await this.info()\r\n    const { noteName, cryptoKeyPair, signingKeyPair } = await deriveNoteCreds(\r\n      realmInfo.name,\r\n      this.crypto,\r\n      username,\r\n      password,\r\n      credentialType\r\n    )\r\n    let anonAuth = await AuthenticatedRequest.anonymousAuth(\r\n      this.crypto,\r\n      signingKeyPair.publicKey,\r\n      signingKeyPair.privateKey,\r\n      this.apiUrl\r\n    )\r\n\r\n    const pkceVerifier = await this.crypto.platform.b64URLEncode(\r\n      await this.crypto.randomBytes(32)\r\n    )\r\n    const pkceChallenge = await this.crypto.hash(pkceVerifier, 'SHA-256')\r\n\r\n    const request = await anonAuth.tsv1Fetch(\r\n      `${this.apiUrl}/v1/identity/login`,\r\n      {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          username: username,\r\n          realm_name: this.realmDomain,\r\n          app_name: this.appName,\r\n          code_challenge: pkceChallenge,\r\n          login_style: 'api',\r\n        }),\r\n      }\r\n    )\r\n    let resp = await credentialedDecodeResponse(request)\r\n    // TozID Federated Login Registration Path\r\n    // This will only be used if the TozID Identity is a TozID Federated Identity\r\n    // That has not registered on first login only\r\n    if (resp.tozid_federation_registration) {\r\n      // Generate Keys\r\n      const cryptoKeys = await this.storage.generateKeypair()\r\n      const signingKeys = await this.storage.generateSigningKeypair()\r\n      // Send Registration\r\n      const payload = {\r\n        realm_name: this.realmDomain,\r\n        username: username,\r\n        federation_source: tozIDFederationProvider,\r\n        public_key: new PublicKey(cryptoKeys.publicKey),\r\n        signing_key: new SigningKey(signingKeys.publicKey),\r\n      }\r\n\r\n      const requestRegister = await anonAuth.tsv1Fetch(\r\n        `${this.apiUrl}/v1/identity/federation/${this.realmDomain}/identity/register`,\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(payload),\r\n        }\r\n      )\r\n      const responseRegister = await validateResponseAsJSON(requestRegister)\r\n      const identityFederatedConfig = new Config(\r\n        realmInfo.name,\r\n        this.realmDomain,\r\n        this.appName,\r\n        this.apiUrl,\r\n        username,\r\n        responseRegister.identity.id,\r\n        this.brokerTargetUrl\r\n      )\r\n      const storageClientFedaratedConfig = new this.storage.Config(\r\n        responseRegister.identity.tozny_id,\r\n        responseRegister.identity.api_key_id,\r\n        responseRegister.identity.api_secret_key,\r\n        cryptoKeys.publicKey,\r\n        cryptoKeys.privateKey,\r\n        signingKeys.publicKey,\r\n        signingKeys.privateKey,\r\n        this.apiUrl\r\n      )\r\n      const storageClientRegister = new this.storage.Client(\r\n        storageClientFedaratedConfig\r\n      )\r\n      const idClientRegister = new this.PartialClient(\r\n        identityFederatedConfig,\r\n        storageClientRegister\r\n      )\r\n      // Write Login notes\r\n      await writePasswordNote(idClientRegister, password, false)\r\n      await writeBrokerNotes(\r\n        idClientRegister,\r\n        resp.email,\r\n        responseRegister.realm_broker_identity_tozny_id,\r\n        false,\r\n        60\r\n      )\r\n      // Upon first call to intiate login. we cannot create a challenge for a user that\r\n      // isn't registered. After Registration we must begin the login flow once again\r\n      // to create the challenge correctly for the user or we get a 401\r\n      return this.login(username, password, actionHandler, credentialType)\r\n    }\r\n    // End of TozID Registration Path\r\n\r\n    // TozID Federated Password Update\r\n    if (resp.tozid_federation_password_update) {\r\n      const identity = await this.toznyRecovery(resp.tozid_otp, resp.note_id)\r\n      await writePasswordNote(identity, password, true)\r\n      return this.login(username, password, actionHandler, credentialType)\r\n    }\r\n    // End of TozID Federated Password Update Path\r\n\r\n    // Scope the key variables here so they are persistent between iterations in\r\n    // this while block. When registering an identity it requires two round\r\n    // responses from the server. The first to indicate that registering a\r\n    // new client is required, the second to provide the new clients server\r\n    // created details. We have to keep the private keys in state while the\r\n    // call to register the new credentials is made. Scoping these here keeps\r\n    // the private keys in memory.\r\n    // The register-brokered-user and complete-broker-registration must always\r\n    // run in series.\r\n    let cryptoKeys\r\n    let signingKeys\r\n    let federated = false\r\n    while (resp.login_action) {\r\n      if (resp.type == 'fetch') {\r\n        break\r\n      }\r\n      const err =\r\n        resp.message && resp.message.type == 'error'\r\n          ? new Error(resp.message.summary)\r\n          : null\r\n      const actionData = {\r\n        type: resp.type,\r\n        fields: resp.fields,\r\n        context: resp.context,\r\n      }\r\n      let data\r\n      switch (resp.type) {\r\n        case 'continue':\r\n          data = {}\r\n          break\r\n        case 'password-challenge':\r\n          federated = true\r\n          data = { password }\r\n          break\r\n        // The server has hinted this federated user doesn't have a client yet\r\n        case 'register-brokered-user':\r\n          cryptoKeys = await this.storage.generateKeypair()\r\n          signingKeys = await this.storage.generateSigningKeypair()\r\n          data = {\r\n            public_key: cryptoKeys.publicKey,\r\n            public_signing_key: signingKeys.publicKey,\r\n          }\r\n          break\r\n        // The federated client was created, now we can create the full user\r\n        // object for TozID with the returned client data and write the notes\r\n        // for future client fetching.\r\n        case 'complete-broker-registration':\r\n          await this.registerFederatedUser(\r\n            username,\r\n            resp,\r\n            cryptoKeys,\r\n            signingKeys\r\n          )\r\n          data = {}\r\n          break\r\n        default:\r\n          data = await actionHandler(err, actionData)\r\n          break\r\n      }\r\n      let body\r\n      if (resp.content_type === 'application/x-www-form-urlencoded') {\r\n        body = urlEncodeData(data)\r\n      } else {\r\n        body = JSON.stringify(data)\r\n      }\r\n      const actionRequest = await anonAuth.tsv1Fetch(resp.action_url, {\r\n        method: 'POST',\r\n        body,\r\n        headers: {\r\n          'Content-Type': resp.content_type,\r\n        },\r\n      })\r\n      resp = await credentialedDecodeResponse(actionRequest)\r\n    }\r\n    const finalRequest = await anonAuth.tsv1Fetch(\r\n      `${this.apiUrl}/v1/identity/tozid/redirect`,\r\n      {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          realm_name: this.realmDomain,\r\n          session_code: resp.context.session_code,\r\n          execution: resp.context.execution,\r\n          tab_id: resp.context.tab_id,\r\n          client_id: resp.context.client_id,\r\n          auth_session_id: resp.context.auth_session_id,\r\n          code_verifier: pkceVerifier,\r\n        }),\r\n      }\r\n    )\r\n    const tokenInfo = await credentialedDecodeResponse(finalRequest)\r\n    const token = tokenInfo.access_token\r\n    let storedCreds\r\n    if (federated) {\r\n      const keyNoteName = await this.crypto.hash(\r\n        `federated:${username}@realm:${realmInfo.name}`\r\n      )\r\n      const parameters = {\r\n        note_name: keyNoteName,\r\n        auth_headers: {\r\n          'X-TOZID-LOGIN-TOKEN': token,\r\n        },\r\n      }\r\n      storedCreds = await this.directBrokeredCreds(parameters, 'password')\r\n    } else {\r\n      storedCreds = await credentialNoteCall(\r\n        this.storage.readNoteByName(\r\n          noteName,\r\n          cryptoKeyPair,\r\n          signingKeyPair,\r\n          {},\r\n          {\r\n            'X-TOZID-LOGIN-TOKEN': token,\r\n          },\r\n          this.apiUrl\r\n        )\r\n      )\r\n    }\r\n\r\n    const configObject = storedCreds.data\r\n    configObject.agent = tokenInfo\r\n    const user = this.fromObject(configObject)\r\n\r\n    // Detect old format configuration. If found, migrate it.\r\n    // The config is a string here. Rather than parse it twice, check to see\r\n    // if the storage object contain a came case key string\r\n    if (\r\n      configObject.storage.indexOf('clientId') !== -1 &&\r\n      credentialType === 'password'\r\n    ) {\r\n      // Run this in an IIFE to ensure it is a fire-and-forget update (do not\r\n      // await these async functions).\r\n      ;(async () => {\r\n        const info = await this.info()\r\n        writePasswordNote(user, password, true)\r\n        writeBrokerNotes(user, user.config.username, info.broker_id, true)\r\n      })()\r\n    }\r\n\r\n    // Backwards compatibility for any identity user whose username was not\r\n    // written to the credentials note.\r\n    if (user.config.username !== username) {\r\n      user.config.username = username\r\n    }\r\n\r\n    return user\r\n  }\r\n\r\n  /**\r\n   * Recreate a identity Client from a serialized representation.\r\n   *\r\n   * When storing an identity client, this method will reconstitute the Client from\r\n   * a serialized representation. The plain JS object is unpacked a new, fully ready\r\n   * Client instance is returned based on the serialized values.\r\n   *\r\n   * @param {Object} obj The serialized Javascript object representing a user.\r\n   *\r\n   * @return {Client} The reconstituted identity client for the user.\r\n   */\r\n  fromObject(obj) {\r\n    // Allow JSON string objects for ease of use.\r\n    try {\r\n      if (typeof obj === 'string') {\r\n        obj = JSON.parse(obj)\r\n      }\r\n      if (typeof obj.config === 'string') {\r\n        obj.config = JSON.parse(obj.config)\r\n      }\r\n    } catch (err) {\r\n      throw new CredentialDataError(\r\n        'Config.fromObject param JSON string could not be parsed.'\r\n      )\r\n    }\r\n    // Ensure object shape is generally correct\r\n    if (!obj.config) {\r\n      throw new CredentialDataError(\r\n        'To create an identity client from an object it must contain identity configuration'\r\n      )\r\n    }\r\n    if (!obj.storage) {\r\n      throw new CredentialDataError(\r\n        'To create an identity client from an object it must contain a storage object with valid Storage Client configuration'\r\n      )\r\n    }\r\n\r\n    // Set up identity client config\r\n    const configRealm = obj.config.realm_name || obj.config.realmName\r\n\r\n    if (this.realmDomain !== configRealm.toLowerCase()) {\r\n      throw new CredentialDataError(\r\n        'The identity must be part of the configured realm'\r\n      )\r\n    }\r\n    const idConfig = new Config(\r\n      configRealm,\r\n      this.realmDomain,\r\n      this.appName,\r\n      this.apiUrl,\r\n      obj.config.username,\r\n      obj.config.user_id || obj.config.userId,\r\n      this.brokerTargetUrl\r\n    )\r\n\r\n    // Set up storage client\r\n    const storageClientConfig = this.storage.Config.fromObject(obj.storage)\r\n    // Make sure the client always uses the configured API URL\r\n    storageClientConfig.apiUrl = this.apiUrl\r\n    const storageClient = new this.storage.Client(storageClientConfig)\r\n\r\n    // Create the realm client, partial if not agent token is available\r\n    if (obj.agent && obj.agent.access_token) {\r\n      return new this.Client(idConfig, storageClient, obj.agent)\r\n    } else {\r\n      return new this.PartialClient(idConfig, storageClient)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A wrapper around the broker login flow used for email account recovery.\r\n   *\r\n   * @param {string} username The username to recover.\r\n   * @param {object} options The options to send when issuing the challenge to recover the account\r\n   * @param {string} recoveryUrl The URL to send the reset initiation to.\r\n   */\r\n  initiateRecovery(username, options = {}, recoveryUrl) {\r\n    const brokerOpts = Object.assign(\r\n      {\r\n        template_name: 'password_reset',\r\n        expiry_minutes: 60,\r\n      },\r\n      options\r\n    )\r\n    return this.initiateBrokerLogin(\r\n      username,\r\n      {\r\n        email_eacp: brokerOpts,\r\n      },\r\n      recoveryUrl\r\n    )\r\n  }\r\n\r\n  /**\r\n   * A wrapper around the completion of a broker flow used for email account recovery.\r\n   *\r\n   * Once complete a password update should immediately be initiated for the user.\r\n   *\r\n   * @param {string} otp The one-time password from the email challenge issued.\r\n   * @param {string} noteId The ID of the note the email challenge was for.\r\n   * @param {string} recoveryUrl The URL to send the recovery authentication to.\r\n   *\r\n   * @return{Promise<Client>} The recovered identity Client.\r\n   */\r\n  completeEmailRecovery(otp, noteId, recoveryUrl) {\r\n    return this.completeBrokerLogin(\r\n      {\r\n        auth_response: { email_otp: otp },\r\n        note_id: noteId,\r\n      },\r\n      'email_otp',\r\n      recoveryUrl\r\n    )\r\n  }\r\n\r\n  /**\r\n   * A wrapper around the completion of a broker flow used for tozny link account recovery.\r\n   *\r\n   * Once complete a password update should immediately be initiated for the user.\r\n   *\r\n   * @param {string} otp The one-time password from the link issued.\r\n   * @param {string} noteId The ID of the note the link was for.\r\n   * @param {string} recoveryUrl The URL to send the recovery authentication to.\r\n   *\r\n   * @return{Promise<Client>} The recovered identity Client.\r\n   */\r\n  toznyRecovery(otp, noteId, recoveryUrl) {\r\n    return this.completeBrokerLogin(\r\n      {\r\n        auth_response: { tozny_otp: otp },\r\n        note_id: noteId,\r\n      },\r\n      'tozny_otp',\r\n      recoveryUrl\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Begin a broker-based login flow.\r\n   *\r\n   * Broker flows are when another party holds the seed material used to access an\r\n   * identity account. The broker's access to the seed material is generally protected\r\n   * by an extra policy check controlled by the user. The initiation request informs\r\n   * the broker that the user wishes to collect their seed, which causes the broker\r\n   * to initiate any challenges required by to access the seed material.\r\n   *\r\n   * @param {string} username The username of the user wishing to access their credentials.\r\n   * @param {string} brokerUrl The URL where the broker can be contacted.\r\n   */\r\n  async initiateBrokerLogin(\r\n    username,\r\n    meta,\r\n    brokerUrl = `${this.apiUrl}/v1/identity/broker/realm/${this.realmDomain}/challenge`\r\n  ) {\r\n    username = username.toLowerCase()\r\n    const payload = {\r\n      username,\r\n      meta,\r\n      action: 'challenge',\r\n    }\r\n    const request = await fetch(brokerUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(payload),\r\n    })\r\n    await checkStatus(request)\r\n    const contentType = request.headers.get('content-type')\r\n    return contentType && contentType.indexOf('application/json') !== -1\r\n      ? request.json()\r\n      : true\r\n  }\r\n\r\n  /**\r\n   * Complete a broker based login flow by giving the broker the needed authentication information.\r\n   *\r\n   * After initiating a broker-based login, the storage system will issue a challenge to the user,\r\n   * such as an email containing a one-time password. This information is passed back to the broker\r\n   * proving the user has granted them access to the seed material. The broker then encrypts and\r\n   * returns the seed to the user who is then able to derive the keys needed to fetch their identity\r\n   * credentials and create a Client instance.\r\n   *\r\n   * @param {*} parameters The authentication material to allow a broker to access the seed material.\r\n   * @param {string} brokerType\r\n   * @param {string} brokerUrl The URL where the broker can be contacted.\r\n   *\r\n   * @return {PartialClient} A partial identity Client for the user usable to update passwords.\r\n   */\r\n  async completeBrokerLogin(\r\n    parameters,\r\n    brokerType,\r\n    brokerUrl = `${this.apiUrl}/v1/identity/broker/realm/${this.realmDomain}/login`\r\n  ) {\r\n    const storedCreds = await this.directBrokeredCreds(\r\n      parameters,\r\n      brokerType,\r\n      brokerUrl\r\n    )\r\n\r\n    const user = this.fromObject(storedCreds.data)\r\n\r\n    // Detect old format configuration. If found, migrate it.\r\n    // The config is a string here. Rather than parse it twice, check to see\r\n    // if the storage object contain a camel case key string\r\n    if (storedCreds.data.storage.indexOf('clientId') !== -1) {\r\n      // Run this in an IIFE to ensure it is a fire-and-forget update (do not\r\n      // await these async functions).\r\n      ;(async () => {\r\n        const info = await this.info()\r\n        writeBrokerNotes(user, user.config.username, info.broker_id, true)\r\n      })()\r\n    }\r\n\r\n    return user\r\n  }\r\n\r\n  async directBrokeredCreds(\r\n    parameters,\r\n    brokerType,\r\n    brokerUrl = `${this.apiUrl}/v1/identity/broker/realm/${this.realmDomain}/login`\r\n  ) {\r\n    // Generate ephemeral keys for broker key transfer\r\n    const cryptoKeys = await this.storage.generateKeypair()\r\n    const signingKeys = await this.storage.generateSigningKeypair()\r\n    // Request the broker write the key transfer note.\r\n    const payload = Object.assign({}, parameters, {\r\n      public_key: cryptoKeys.publicKey,\r\n      signing_key: signingKeys.publicKey,\r\n      action: 'login',\r\n    })\r\n    const request = await fetch(brokerUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(payload),\r\n    })\r\n    const { transferId } = await credentialedDecodeResponse(request)\r\n    // Fetch the broker key transfer note\r\n    const brokerKeyNote = await this.storage.readNote(\r\n      transferId,\r\n      cryptoKeys,\r\n      signingKeys,\r\n      {},\r\n      {},\r\n      this.apiUrl\r\n    )\r\n    // Use the broker key to complete the login flow\r\n    const realmInfo = await this.info()\r\n    const { noteName, cryptoKeyPair, signingKeyPair } = await deriveNoteCreds(\r\n      realmInfo.name,\r\n      this.crypto,\r\n      brokerKeyNote.data.username,\r\n      brokerKeyNote.data.broker_key || brokerKeyNote.data.brokerKey, // When migration code gets removed, only support snake case\r\n      brokerType\r\n    )\r\n    const storedCreds = await credentialNoteCall(\r\n      this.storage.readNoteByName(\r\n        noteName,\r\n        cryptoKeyPair,\r\n        signingKeyPair,\r\n        {},\r\n        {},\r\n        this.apiUrl\r\n      )\r\n    )\r\n\r\n    // Backwards compatibility for any identity user whose username was not\r\n    // written to the credentials note.\r\n    if (typeof storedCreds.data.config === 'string') {\r\n      storedCreds.data.config = JSON.parse(storedCreds.data.config)\r\n    }\r\n    if (storedCreds.data.config.username !== brokerKeyNote.data.username) {\r\n      storedCreds.data.config.username = brokerKeyNote.data.username\r\n    }\r\n\r\n    // Return the stored credentials\r\n    return storedCreds\r\n  }\r\n\r\n  logoutRedirectUrl(params) {\r\n    const allowList = ['post_logout_redirect_uri', 'state', 'initiating_idp']\r\n    const queryParams = { id_token_hint: 'client_logout_redirect' }\r\n    for (let key of allowList) {\r\n      if (params[key]) {\r\n        queryParams[key] = params[key]\r\n      }\r\n    }\r\n    const baseUrl = `${this.apiUrl}/auth/realms/${this.realmDomain}/protocol/openid-connect/logout`\r\n    return `${baseUrl}?${urlEncodeData(queryParams)}`\r\n  }\r\n}\r\n\r\nmodule.exports = Realm\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/identity/realm.js\n");

/***/ }),

/***/ "./lib/identity/shared.js":
/*!********************************!*\
  !*** ./lib/identity/shared.js ***!
  \********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { IDENTITY_DERIVATION_ROUNDS } = __webpack_require__(/*! ../utils/constants */ \"./lib/utils/constants.js\")\r\nconst { credentialNoteCall } = __webpack_require__(/*! ../utils */ \"./lib/utils/index.js\")\r\n\r\n/**\r\n * Derive the note name, crypto, and signing keys for an note containing identity credentials.\r\n *\r\n * @param {string} realmName The identity realm name.\r\n * @param {Crypto} crypto The concrete Tozny crypto implementation.\r\n * @param {string} username The username credentials are being derived for.\r\n * @param {string} password The secret password for the user.\r\n * @param {string} credType The type of derived credentials for the note,\r\n *                          options are `password`, `email_otp`, and `tozny_otp`.\r\n */\r\nasync function deriveNoteCreds(\r\n  realmName,\r\n  crypto,\r\n  username,\r\n  password,\r\n  credType = 'password'\r\n) {\r\n  username = username.toLowerCase()\r\n  let nameSeed = `${username}@realm:${realmName}`\r\n  switch (credType) {\r\n    case 'email_otp':\r\n      nameSeed = `broker:${nameSeed}`\r\n      break\r\n    case 'tozny_otp':\r\n      nameSeed = `tozny_otp:${nameSeed}`\r\n      break\r\n    case 'password':\r\n      break\r\n    default:\r\n      throw new Error(`An invalid credential type was provided ${credType}`)\r\n  }\r\n  const noteName = await crypto.hash(nameSeed)\r\n  const cryptoKeyPair = await crypto.deriveCryptoKey(\r\n    password,\r\n    nameSeed,\r\n    IDENTITY_DERIVATION_ROUNDS\r\n  )\r\n  const signingKeyPair = await crypto.deriveSigningKey(\r\n    password,\r\n    cryptoKeyPair.publicKey + cryptoKeyPair.privateKey,\r\n    IDENTITY_DERIVATION_ROUNDS\r\n  )\r\n  return { noteName, cryptoKeyPair, signingKeyPair }\r\n}\r\n\r\n/**\r\n * Write the note required for a password based login\r\n *\r\n * @param {Client} user A partial identity client to write a login note for\r\n * @param {string} password The password use when fetching the login note\r\n * @param {*} replace Whether to write a new note, or replace an existing one\r\n */\r\nasync function writePasswordNote(user, password, replace = false) {\r\n  const method = replace ? 'replaceNoteByName' : 'writeNote'\r\n  const { noteName, cryptoKeyPair, signingKeyPair } = await deriveNoteCreds(\r\n    user.config.realmName,\r\n    user.crypto,\r\n    user.config.username,\r\n    password\r\n  )\r\n  return credentialNoteCall(\r\n    user.storage[method](\r\n      user.serializeData(),\r\n      cryptoKeyPair.publicKey,\r\n      signingKeyPair.publicKey,\r\n      {\r\n        id_string: noteName,\r\n        max_views: -1,\r\n        expires: false,\r\n        eacp: {\r\n          tozid_eacp: {\r\n            realm_name: user.config.realmDomain,\r\n          },\r\n        },\r\n      }\r\n    )\r\n  )\r\n}\r\n\r\n/**\r\n * Write the notes required for a brokered login.\r\n *\r\n * @param {Client} user A partial identity client to write broker login notes for\r\n * @param {string} email The email address for the user, for email recovery\r\n * @param {string} brokerId The UUID of the broker storage client of this realm\r\n * @param {boolean} replace Whether to replace the note, or write a new one\r\n * @param {number} expMinutes The number of minutes before the reset link expires\r\n */\r\nasync function writeBrokerNotes(\r\n  user,\r\n  email,\r\n  brokerId,\r\n  replace = false,\r\n  expMinutes = 60\r\n) {\r\n  // If there is no broker, do not try to write broker notes\r\n  // otherwise, get the broker's info\r\n  if (!brokerId || brokerId === '00000000-0000-0000-0000-000000000000') {\r\n    return\r\n  }\r\n  const brokerInfo = await user.storage.clientInfo(brokerId)\r\n  // Switch the method run to allow writes and updates\r\n  const method = replace ? 'replaceNoteByName' : 'writeNote'\r\n  // Set up meta options\r\n  const emailRecoveryOptions = {\r\n    keyName: 'brokerKey',\r\n    keyType: 'email_otp',\r\n    eacp: {\r\n      email_eacp: {\r\n        email_address: email,\r\n        template: 'reset_password',\r\n        provider_link: user.config.brokerTargetUrl,\r\n        default_expiration_minutes: expMinutes,\r\n      },\r\n    },\r\n  }\r\n  emailRecoveryOptions.eacp.email_eacp.template_fields = {}\r\n  if (\r\n    user.config.firstName !== undefined ||\r\n    user.config.lastName !== undefined\r\n  ) {\r\n    emailRecoveryOptions.eacp.email_eacp.template_fields['name'] = [\r\n      user.config.firstName,\r\n      user.config.lastName,\r\n    ]\r\n      .filter((n) => n !== undefined)\r\n      .join(' ')\r\n  }\r\n  if (user.config.username !== undefined) {\r\n    emailRecoveryOptions.eacp.email_eacp.template_fields['username'] =\r\n      user.config.username\r\n  }\r\n  const toznyOTPOptions = {\r\n    keyName: 'broker_otp',\r\n    keyType: 'tozny_otp',\r\n    eacp: {\r\n      tozny_otp_eacp: {\r\n        include: true,\r\n      },\r\n    },\r\n  }\r\n  // Write the notes\r\n  return Promise.all(\r\n    [emailRecoveryOptions, toznyOTPOptions].map(async (options) => {\r\n      const keyNoteName = await user.crypto.hash(\r\n        `${options.keyName}:${user.config.username}@realm:${user.config.realmName}`\r\n      )\r\n      const keyBytes = await user.crypto.randomBytes(64)\r\n      const key = await user.crypto.platform.b64URLEncode(keyBytes)\r\n      const { noteName, cryptoKeyPair, signingKeyPair } = await deriveNoteCreds(\r\n        user.config.realmName,\r\n        user.crypto,\r\n        user.config.username,\r\n        key,\r\n        options.keyType\r\n      )\r\n      const meta = {\r\n        id_string: keyNoteName,\r\n        max_views: -1,\r\n        expires: false,\r\n        eacp: options.eacp,\r\n      }\r\n      const keyNote = await credentialNoteCall(\r\n        user.storage[method](\r\n          { broker_key: key, username: user.config.username },\r\n          brokerInfo.publicKey.curve25519,\r\n          brokerInfo.signingKey.ed25519,\r\n          meta\r\n        )\r\n      )\r\n      return credentialNoteCall(\r\n        user.storage[method](\r\n          user.serializeData(),\r\n          cryptoKeyPair.publicKey,\r\n          signingKeyPair.publicKey,\r\n          {\r\n            id_string: noteName,\r\n            max_views: -1,\r\n            expires: false,\r\n            eacp: {\r\n              last_access_eacp: {\r\n                last_read_note_id: keyNote.noteId,\r\n              },\r\n            },\r\n          }\r\n        )\r\n      )\r\n    })\r\n  )\r\n}\r\n\r\n/**\r\n * Write the notes required for a federated user's login.\r\n *\r\n * @param {Client} user A partial identity client to write broker login notes for\r\n * @param {string} brokerId The UUID of the broker storage client of this realm\r\n * @param {boolean} replace Whether to replace the note, or write a new one\r\n */\r\nasync function writeFederationNote(user, brokerId, replace = false) {\r\n  // If there is no broker, do not try to write broker notes\r\n  // otherwise, get the broker's info\r\n  if (!brokerId || brokerId === '00000000-0000-0000-0000-000000000000') {\r\n    return\r\n  }\r\n  const brokerInfo = await user.storage.clientInfo(brokerId)\r\n  // Switch the method run to allow writes and updates\r\n  const method = replace ? 'replaceNoteByName' : 'writeNote'\r\n\r\n  const keyNoteName = await user.crypto.hash(\r\n    `federated:${user.config.username}@realm:${user.config.realmName}`\r\n  )\r\n  const keyBytes = await user.crypto.randomBytes(64)\r\n  const key = await user.crypto.platform.b64URLEncode(keyBytes)\r\n  const { noteName, cryptoKeyPair, signingKeyPair } = await deriveNoteCreds(\r\n    user.config.realmName,\r\n    user.crypto,\r\n    user.config.username,\r\n    key\r\n  )\r\n  const meta = {\r\n    id_string: keyNoteName,\r\n    max_views: -1,\r\n    expires: false,\r\n    eacp: {\r\n      tozid_eacp: {\r\n        realm_name: user.config.realmDomain,\r\n        basic: true,\r\n      },\r\n    },\r\n  }\r\n  const keyNote = await credentialNoteCall(\r\n    user.storage[method](\r\n      { broker_key: key, username: user.config.username },\r\n      brokerInfo.publicKey.curve25519,\r\n      brokerInfo.signingKey.ed25519,\r\n      meta\r\n    )\r\n  )\r\n  return credentialNoteCall(\r\n    user.storage[method](\r\n      user.serializeData(),\r\n      cryptoKeyPair.publicKey,\r\n      signingKeyPair.publicKey,\r\n      {\r\n        id_string: noteName,\r\n        max_views: -1,\r\n        expires: false,\r\n        eacp: {\r\n          last_access_eacp: {\r\n            last_read_note_id: keyNote.noteId,\r\n          },\r\n        },\r\n      }\r\n    )\r\n  )\r\n}\r\n\r\nmodule.exports = {\r\n  deriveNoteCreds,\r\n  writePasswordNote,\r\n  writeBrokerNotes,\r\n  writeFederationNote,\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/identity/shared.js\n");

/***/ }),

/***/ "./lib/request/authenticatedRequest.js":
/*!*********************************************!*\
  !*** ./lib/request/authenticatedRequest.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const fetch = __webpack_require__(/*! cross-fetch */ \"./node_modules/cross-fetch/dist/browser-ponyfill.js\")\r\nconst { v4: uuidv4 } = __webpack_require__(/*! uuid */ \"./node_modules/uuid/dist/esm-browser/index.js\")\r\nconst Config = __webpack_require__(/*! ../storage/config */ \"./lib/storage/config.js\")\r\nconst { TSV1_SUPPORTED_ALGORITHMS } = __webpack_require__(/*! ../utils/constants */ \"./lib/utils/constants.js\")\r\n\r\nfunction sortQueryParams(queryString) {\r\n  // Parse query string into field=values\r\n  var query = queryString.split('&')\r\n  for (var i = 0; i < query.length; i++) {\r\n    // Separate fields from values\r\n    let splitQuery = query[i].split('=')\r\n    query[i] = splitQuery\r\n  }\r\n  // Sort alphabetically\r\n  query.sort(function (a, b) {\r\n    return a[0] < b[0] ? -1 : 1\r\n  })\r\n  // Reconstruct query\r\n  for (var j = 0; j < query.length; j++) {\r\n    query[j] = query[j].join('=')\r\n  }\r\n  return query.join('&')\r\n}\r\n\r\nfunction parseUrl(url) {\r\n  const parts = url.split('?')\r\n  const pathMatch = parts[0].match(/:\\/\\/.*?(\\/[^?#].*)?$/)\r\n  return {\r\n    path: pathMatch && pathMatch[1] ? pathMatch[1] : '/',\r\n    queryString: parts[1] ? parts[1].split('#')[0] : '',\r\n  }\r\n}\r\n\r\nclass AuthenticatedRequest {\r\n  /**\r\n   * Create an AuthenticatedRequest object for interacting with ToznyPlatform in an authenticated manner.\r\n   *\r\n   * @param {Config} config A configuration object for making requests.\r\n   * @param {Crypto} crypto The cryptography implementation.\r\n   */\r\n  constructor(config, crypto) {\r\n    // Populate object values\r\n    this.config = config\r\n    this.crypto = crypto\r\n    this._authToken = null\r\n    this._authTokenTimeout = 0 // Minimum UNIX timestamp\r\n  }\r\n\r\n  /**\r\n   * Wrapper method to generate the Authentication header through tsv1 if possible, but defaults to oauth if tsv1 is missing signing keys\r\n   * Throws if both methods of authentication are not possible\r\n   *\r\n   * @param {string} urlString Absolute URL to fetch from the server\r\n   * @param {object} options Object representing additional settings for the fetch\r\n   *\r\n   * @returns {Promise<string>} Promise of a valid authentication header\r\n   */\r\n  async authenticateHeader(urlString, options, userId) {\r\n    if (this.canPerformTSV1Auth(urlString, options)) {\r\n      return this.tsv1Auth(urlString, options, userId)\r\n    }\r\n    if (this.canPerformTokenAuth()) {\r\n      return this.tokenAuth()\r\n    }\r\n    throw new Error(\r\n      'This client is missing the keys to perform any supported authentication method'\r\n    )\r\n  }\r\n\r\n  canPerformTSV1Auth(urlString, options) {\r\n    return (\r\n      this.config.publicSigningKey !== undefined &&\r\n      this.config.privateSigningKey !== undefined &&\r\n      urlString !== undefined &&\r\n      options !== undefined\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Wrapper method to generate the Authentication header using tsv1\r\n   * Throws if tsv1 is missing needed signing keys or url options\r\n   *\r\n   * @param {string} urlString Absolute URL to fetch from the server\r\n   * @param {object} options Object representing additional settings for the fetch\r\n   *\r\n   * @returns {Promise<string>} Promise of a valid authentication header\r\n   */\r\n  async getTSV1Header(urlString, options) {\r\n    if (this.canPerformTSV1Auth(urlString, options)) {\r\n      return this.tsv1Auth(urlString, options)\r\n    }\r\n    throw new Error('Missing public or private signing key')\r\n  }\r\n\r\n  /**\r\n   * Generates and a signed request header according to the tsv1 specifications\r\n   *\r\n   * @returns {Promise<string>} Promise of a valid authentication header\r\n   */\r\n  async tsv1Auth(urlString, options) {\r\n    let { path, queryString } = parseUrl(urlString)\r\n    queryString = sortQueryParams(queryString)\r\n    const timestamp = (Date.now() / 1000) | 0\r\n    // Only one sodium cipher is currently supported.\r\n    const authMethod = TSV1_SUPPORTED_ALGORITHMS[0]\r\n    const nonce = uuidv4()\r\n    const userId = this.config.clientId || ''\r\n    const headerString = `${authMethod}; ${this.config.publicSigningKey}; ${timestamp}; ${nonce}; uid:${userId}`\r\n    const strToSign = `${path}; ${queryString}; ${options.method}; ${headerString}`\r\n    const hashToSign = await this.crypto.hash(strToSign)\r\n    const fullSignature = await this.crypto.sign(\r\n      hashToSign,\r\n      this.config.privateSigningKey\r\n    )\r\n    const authHeader = `${headerString}; ${fullSignature}`\r\n    return authHeader\r\n  }\r\n\r\n  canPerformTokenAuth() {\r\n    return (\r\n      this.config.apiKeyId !== undefined && this.config.apiSecret !== undefined\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Wrapper method to cache and generate the Authentication header using oAuth\r\n   * Throws if auth object is missing needed API keys\r\n   *\r\n   * @returns {Promise<string>} Promise of a valid authentication header\r\n   */\r\n  async getTokenHeader() {\r\n    if (this._authToken === null || Date.now() > this._authTokenTimeout) {\r\n      if (this.canPerformTokenAuth()) {\r\n        return 'Bearer ' + (await this.tokenAuth())\r\n      }\r\n      throw new Error('Missing needed API keys to perform token auth')\r\n    }\r\n    return 'Bearer ' + this._authToken\r\n  }\r\n\r\n  /**\r\n   * Retrieves token for an API key and secret\r\n   *\r\n   * @returns {Promise<string>} Promise of a valid authentication header\r\n   */\r\n  async tokenAuth() {\r\n    let response\r\n    response = await fetch(this.config.apiUrl + '/v1/auth/token', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'x-www-form-urlencoded',\r\n        Authorization:\r\n          'Basic ' +\r\n          // eslint-disable-next-line no-undef\r\n          this.crypto.platform.b64encodeString(\r\n            `${this.config.apiKeyId}:${this.config.apiSecret}`\r\n          ),\r\n      },\r\n      body: 'grant_type=client_credentials',\r\n    })\r\n    let json = await response.json()\r\n    this._authToken = json.access_token\r\n    this._authTokenTimeout = Date.parse(json.expires_at)\r\n    return this._authToken\r\n  }\r\n\r\n  /**\r\n   * Transparent fetch() wrapper to set up authentication headers for oAuth based authentication\r\n   *\r\n   * @param {string} urlString Absolute URL to fetch from the server\r\n   * @param {object} options Object representing additional settings for the fetch\r\n   *\r\n   * @returns {Promise}\r\n   */\r\n  async tokenFetch(urlString, options = {}) {\r\n    let authHeader = await this.getTokenHeader()\r\n    options.headers = options.headers || {}\r\n    options.headers.Authorization = authHeader\r\n    return fetch(urlString, options)\r\n  }\r\n\r\n  /**\r\n   * Transparent fetch() wrapper to set up authentication headers for either tsv1 or oAuth based authentication\r\n   *\r\n   * @param {string} urlString Absolute URL to fetch from the server\r\n   * @param {object} options Object representing additional settings for the fetch\r\n   *\r\n   * @returns {Promise}\r\n   */\r\n  async fetch(urlString, options) {\r\n    let authHeader = await this.authenticateHeader(urlString, options)\r\n    // eslint-disable-next-line require-atomic-updates\r\n    options.headers = options.headers || {}\r\n    // eslint-disable-next-line require-atomic-updates\r\n    options.headers.Authorization = authHeader\r\n    return fetch(urlString, options)\r\n  }\r\n\r\n  /**\r\n   * Transparent fetch() wrapper to set up authentication headers for oAuth based authentication\r\n   *\r\n   * @param {string} urlString Absolute URL to fetch from the server\r\n   * @param {object} options Object representing additional settings for the fetch\r\n   *\r\n   * @returns {Promise}\r\n   */\r\n  async tsv1Fetch(urlString, options) {\r\n    let authHeader = await this.getTSV1Header(urlString, options)\r\n    // eslint-disable-next-line require-atomic-updates\r\n    options.headers = options.headers || {}\r\n    // eslint-disable-next-line require-atomic-updates\r\n    options.headers.Authorization = authHeader\r\n    return fetch(urlString, options)\r\n  }\r\n\r\n  static async anonymousAuth(crypto, publicSigningKey, privateSigningKey) {\r\n    let config = Config.fromObject({\r\n      publicSigningKey,\r\n      privateSigningKey,\r\n    })\r\n    return new AuthenticatedRequest(config, crypto)\r\n  }\r\n}\r\n\r\nmodule.exports = AuthenticatedRequest\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/request/authenticatedRequest.js\n");

/***/ }),

/***/ "./lib/storage/client.js":
/*!*******************************!*\
  !*** ./lib/storage/client.js ***!
  \*******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const fetch = __webpack_require__(/*! cross-fetch */ \"./node_modules/cross-fetch/dist/browser-ponyfill.js\")\r\nconst AuthenticatedRequest = __webpack_require__(/*! ../request/authenticatedRequest */ \"./lib/request/authenticatedRequest.js\")\r\nconst CryptoConsumer = __webpack_require__(/*! ../crypto/cryptoConsumer */ \"./lib/crypto/cryptoConsumer.js\")\r\nconst Config = __webpack_require__(/*! ./config */ \"./lib/storage/config.js\")\r\nconst File = __webpack_require__(/*! ./file */ \"./lib/storage/file.js\")\r\nconst { urlEncodeData } = __webpack_require__(/*! ../utils */ \"./lib/utils/index.js\")\r\nconst { checkStatus, validateResponseAsJSON } = __webpack_require__(/*! ../utils */ \"./lib/utils/index.js\")\r\nconst { DEFAULT_QUERY_COUNT, EMAIL } = __webpack_require__(/*! ../utils/constants */ \"./lib/utils/constants.js\")\r\nconst shared = __webpack_require__(/*! ./shared */ \"./lib/storage/shared.js\")\r\nconst DefaultEncryptionKeyType = 'curve25519'\r\nconst {\r\n  AuthorizerPolicy,\r\n  Capabilities,\r\n  ClientInfo,\r\n  EAKInfo,\r\n  FileMeta,\r\n  Group,\r\n  IncomingSharingPolicy,\r\n  Meta,\r\n  OutgoingSharingPolicy,\r\n  Query,\r\n  QueryResult,\r\n  Record,\r\n  RecordData,\r\n  RecordInfo,\r\n  SignedDocument,\r\n  KeyPair,\r\n  Note,\r\n  NoteOptions,\r\n  Search,\r\n  SearchResult,\r\n  GroupMembership,\r\n} = __webpack_require__(/*! ../../types */ \"./types/index.js\")\r\n\r\n/**\r\n * Core client module used to interact with the Tozny Storage API.\r\n */\r\nclass Client extends CryptoConsumer {\r\n  constructor(config) {\r\n    super()\r\n    if (!(config instanceof Config)) {\r\n      throw new Error('Config must be a valid Config object')\r\n    }\r\n    this.config = config\r\n    this.authenticator = new AuthenticatedRequest(config, this.crypto)\r\n    this._akCache = {}\r\n  }\r\n\r\n  /**\r\n   * Implemented in the final client class to provide platform specific file operations.\r\n   *\r\n   * @return {FileOperations} A platform-specific set of file operations.\r\n   */\r\n  get _fileOperations() {\r\n    throw new Error('file operations return a FileOperations instance')\r\n  }\r\n\r\n  /**\r\n   * Get an access key from the cache if it exists, otherwise decrypt\r\n   * the provided EAK and populate the cache.\r\n   *\r\n   * @param {string}  writerId\r\n   * @param {string}  userId\r\n   * @param {string}  readerId\r\n   * @param {string}  type\r\n   * @param {EAKInfo} eak\r\n   *\r\n   * @returns {Promise<string>}\r\n   */\r\n  async _getCachedAk(writerId, userId, readerId, type, eak) {\r\n    let cacheKey = `${writerId}.${userId}.${type}`\r\n    let ak = this._akCache[cacheKey]\r\n\r\n    if (ak === undefined) {\r\n      ak = await this.crypto.decryptEak(this.config.privateKey, eak)\r\n      this._akCache[cacheKey] = ak\r\n    }\r\n\r\n    return Promise.resolve(ak)\r\n  }\r\n\r\n  /**\r\n   * Get a client's information based on their ID.\r\n   *\r\n   * @param {string} clientId UUID of the client to fetch\r\n   *\r\n   * @returns {Promise<ClientInfo>}\r\n   */\r\n  async clientInfo(clientId) {\r\n    let request = await this.authenticator.tokenFetch(\r\n      this.config.apiUrl + '/v1/storage/clients/' + clientId,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    )\r\n\r\n    let response = await checkStatus(request)\r\n\r\n    let json = await response.json()\r\n    return ClientInfo.decode(json)\r\n  }\r\n\r\n  /**\r\n   * Create a key for the current client as a writer if one does not exist\r\n   * in the cache already. If no access key does exist, create a random one\r\n   * and store it with the server.\r\n   *\r\n   * @param {string} type Record type for this key\r\n   *\r\n   * @returns {Promise<EAKInfo>}\r\n   */\r\n  async createWriterKey(type) {\r\n    let ak = await shared.getAccessKey(\r\n      this,\r\n      this.config.clientId,\r\n      this.config.clientId,\r\n      this.config.clientId,\r\n      type\r\n    )\r\n\r\n    if (ak === null) {\r\n      ak = await this.crypto.randomKey()\r\n      await shared.putAccessKey(\r\n        this,\r\n        this.config.clientId,\r\n        this.config.clientId,\r\n        this.config.clientId,\r\n        type,\r\n        ak\r\n      )\r\n    }\r\n\r\n    let eak = await this.crypto.encryptAk(\r\n      this.config.privateKey,\r\n      ak,\r\n      this.config.publicKey\r\n    )\r\n\r\n    return new EAKInfo(\r\n      eak,\r\n      this.config.clientId,\r\n      this.config.publicKey,\r\n      this.config.clientId,\r\n      this.config.publicSigningKey\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Get a key for the current client as the reader of a specific record written by someone else.\r\n   *\r\n   * @param {string} writerId Writer of the record in the database\r\n   * @param {string} userID   Subject of the record in the database\r\n   * @param {string} type     Type of record\r\n   *\r\n   * @returns {Promise<EAKInfo>}\r\n   */\r\n  async getReaderKey(writerId, userId, type) {\r\n    return shared.getEncryptedAccessKey(\r\n      this,\r\n      writerId,\r\n      userId,\r\n      this.config.clientId,\r\n      type\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Reads a record from the E3DB system and decrypts it automatically.\r\n   *\r\n   * @param {string} recordId\r\n   * @param {array}  [fields] Optional fields to select on the record\r\n   *\r\n   * @returns {Promise<Record>}\r\n   */\r\n  async readRecord(recordId, fields = null) {\r\n    let path = this.config.apiUrl + '/v1/storage/records/' + recordId\r\n\r\n    if (fields !== null) {\r\n      let mapped = []\r\n      for (let field of fields) {\r\n        mapped.push('field=' + field)\r\n      }\r\n\r\n      path += '?' + mapped.join('&')\r\n    }\r\n\r\n    let request = await this.authenticator.tokenFetch(path, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    let response = await checkStatus(request)\r\n    let json = await response.json()\r\n    let record = await Record.decode(json)\r\n    return shared.decryptRecord(this, record)\r\n  }\r\n\r\n  /**\r\n   * Create a new record entry with E3DB.\r\n   *\r\n   * @param {string} type  The content type with which to associate the record.\r\n   * @param {object} data  A hashmap of the data to encrypt and store\r\n   * @param {object} plain Optional hashmap of data to store with the record's meta in plaintext\r\n   *\r\n   * @return {Promise<Record>}\r\n   */\r\n  async writeRecord(type, data, plain = {}) {\r\n    // Build the record\r\n    if (typeof data === 'object' && !(data instanceof RecordData)) {\r\n      data = new RecordData(data)\r\n    }\r\n    let meta = new Meta(this.config.clientId, this.config.clientId, type, plain)\r\n    let info = new RecordInfo(meta, data)\r\n    let signature = this.config.version > 1 ? await this.sign(info) : null\r\n    let record = new Record(meta, data, signature)\r\n    let encrypted = await shared.encryptRecord(this, record)\r\n    const done = await this.writeRaw(encrypted)\r\n    return done\r\n  }\r\n\r\n  /**\r\n   * Write a previously stored encrypted/signed record directly to E3DB.\r\n   *\r\n   * @param {Record} record The fully-constructed record object, as returned by `encrypt()`\r\n   *\r\n   * @return {Promise<Record>}\r\n   */\r\n  async writeRaw(record) {\r\n    if (!(record instanceof Record)) {\r\n      throw new Error(\r\n        'Can only write encrypted/signed records directly to the server!'\r\n      )\r\n    }\r\n    let request = await this.authenticator.tokenFetch(\r\n      this.config.apiUrl + '/v1/storage/records',\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: record.stringify(),\r\n      }\r\n    )\r\n    let response = await checkStatus(request)\r\n    let json = await response.json()\r\n    let written = await Record.decode(json)\r\n    return shared.decryptRecord(this, written)\r\n  }\r\n\r\n  /**\r\n   * Update a record, with optimistic concurrent locking, that already exists in the E3DB system.\r\n   *\r\n   * @param {Record} record Record to be updated.\r\n   *\r\n   * @returns {Promise<Record>} Updated record\r\n   */\r\n  async updateRecord(record) {\r\n    let recordId = record.meta.recordId\r\n    let version = record.meta.version\r\n\r\n    // Update record signature\r\n    let recordInfo = new RecordInfo(record.meta, record.data)\r\n    // eslint-disable-next-line require-atomic-updates\r\n    record.signature =\r\n      this.config.version > 1 ? await this.sign(recordInfo) : null\r\n    let encrypted = await shared.encryptRecord(this, record)\r\n    return this.authenticator\r\n      .tokenFetch(\r\n        this.config.apiUrl +\r\n          '/v1/storage/records/safe/' +\r\n          recordId +\r\n          '/' +\r\n          version,\r\n        {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: encrypted.stringify(),\r\n        }\r\n      )\r\n      .then(checkStatus)\r\n      .then((response) => response.json())\r\n      .then(Record.decode)\r\n      .then((rec) => {\r\n        return rec\r\n      })\r\n      .then((record) => shared.decryptRecord(this, record))\r\n  }\r\n\r\n  /**\r\n   * Deletes a record from the E3DB system\r\n   *\r\n   * @param {string} recordId  ID of the record to remove\r\n   * @param {string} version version ID to remove safely\r\n   *\r\n   * @returns {Promise<bool>}\r\n   */\r\n  async deleteRecord(recordId, version) {\r\n    const response = await this.authenticator.tokenFetch(\r\n      `${this.config.apiUrl}/v1/storage/records/safe/${recordId}/${version}`,\r\n      {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    )\r\n    switch (response.status) {\r\n      case 204:\r\n      case 403:\r\n        return true\r\n      case 409:\r\n        throw new Error('Conflict')\r\n      default:\r\n        throw new Error('Error while deleting record data!')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates a new File record in Tozny Storage.\r\n   *\r\n   * @param {string} type The record type for the file.\r\n   * @param {any} handle The platform specific handle to the uploadable file.\r\n   * @param {object} plain The string->string metadata added to the record.\r\n   * @return {Promise<File>} A promise resolving to the written File object.\r\n   */\r\n  async writeFile(type, handle, plain) {\r\n    const { clientId } = this.config\r\n    const ops = this._fileOperations\r\n    ops.validateHandle(handle)\r\n    let ak = await shared.getAccessKey(this, clientId, clientId, clientId, type)\r\n    if (ak === null) {\r\n      ak = await this.crypto.randomKey()\r\n      await shared.putAccessKey(this, clientId, clientId, clientId, type, ak)\r\n    }\r\n    const { size, checksum, tempFile } = await this.crypto.encryptFile(\r\n      handle,\r\n      ak,\r\n      ops\r\n    )\r\n    const meta = new Meta(clientId, clientId, type, plain)\r\n    meta.fileMeta = new FileMeta()\r\n    meta.fileMeta.size = size\r\n    meta.fileMeta.checksum = checksum\r\n    meta.fileMeta.compression = 'raw'\r\n    const signature = await this.sign(new RecordInfo(meta, null))\r\n    const record = new Record(meta, new RecordData(), signature)\r\n    const pendingResponse = await this.authenticator.tokenFetch(\r\n      `${this.config.apiUrl}/v1/storage/files`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: record.stringify(),\r\n      }\r\n    )\r\n    const pendingFile = await validateResponseAsJSON(pendingResponse)\r\n    const uploadFile = tempFile.getUploadable()\r\n    await ops.upload(pendingFile.file_url, uploadFile, checksum, size)\r\n    tempFile.remove()\r\n    const finalizeResponse = await this.authenticator.tokenFetch(\r\n      `${this.config.apiUrl}/v1/storage/files/${pendingFile.id}`,\r\n      {\r\n        method: 'PATCH',\r\n      }\r\n    )\r\n    const serializedFileRecord = await validateResponseAsJSON(finalizeResponse)\r\n    const fileRecord = await Record.decode(serializedFileRecord)\r\n    return new File(fileRecord, this, ops)\r\n  }\r\n\r\n  /**\r\n   * Transforms a file Record or the ID of a file Record into a File object.\r\n   *\r\n   * @param {Record|string} file Either a file Record or a file record ID.\r\n   */\r\n  getFile(file) {\r\n    const { clientId } = this.config\r\n    const ops = this._fileOperations\r\n    let record\r\n    // If file is just an ID, stub enough to allow operations to occur\r\n    if (!(file instanceof Record)) {\r\n      const meta = new Meta(clientId, clientId, '__', {})\r\n      meta.recordId = file\r\n      meta.fileMeta = new FileMeta()\r\n      record = new Record(meta, null)\r\n    } else {\r\n      record = file\r\n    }\r\n    return new File(record, this, ops)\r\n  }\r\n\r\n  /**\r\n   * Encrypt a plaintext record using the AK wrapped and encrypted for the current\r\n   * client. The key will be cached for future use.\r\n   *\r\n   * @param {string}            type  The content type with which to associate the record.\r\n   * @param {RecordData|object} data  A hashmap of the data to encrypt and store\r\n   * @param {object}            eak   Encrypted access key instance\r\n   * @param {object}            plain Optional hashmap of data to store with the record's meta in plaintext\r\n   *\r\n   * @returns {Promise<Record>}\r\n   */\r\n  async localEncrypt(type, data, eak, plain = {}) {\r\n    let ak = await this._getCachedAk(\r\n      this.config.clientId,\r\n      this.config.clientId,\r\n      this.config.clientId,\r\n      type,\r\n      eak\r\n    )\r\n\r\n    if (typeof data === 'object' && !(data instanceof RecordData)) {\r\n      data = new RecordData(data)\r\n    }\r\n\r\n    // Build the record\r\n    let meta = new Meta(this.config.clientId, this.config.clientId, type, plain)\r\n    let recordInfo = new RecordInfo(meta, data)\r\n    let signature = this.config.version > 1 ? await this.sign(recordInfo) : null\r\n    let record = new Record(meta, data, signature)\r\n\r\n    return this.crypto.encryptRecord(record, ak)\r\n  }\r\n\r\n  /**\r\n   * Decrypt an encrypted record using the AK wrapped and encrypted for the current\r\n   * client. The key will be cached for future use.\r\n   *\r\n   * @param {Record}  record Record instance with encrypted data for decryption\r\n   * @param {EAKInfo} eak    Encrypted access key instance\r\n   *\r\n   * @returns {Promise<Record>}\r\n   */\r\n  async localDecrypt(record, eak) {\r\n    if (eak.signerSigningKey === null) {\r\n      throw new Error('EAKInfo has no signing key!')\r\n    }\r\n\r\n    let ak = await this._getCachedAk(\r\n      record.meta.writerId,\r\n      record.meta.userId,\r\n      this.config.clientId,\r\n      record.meta.type,\r\n      eak\r\n    )\r\n\r\n    let decrypted = await this.crypto.decryptRecord(record, ak)\r\n    let info = new RecordInfo(decrypted.meta, decrypted.data)\r\n    let signed = new SignedDocument(info, decrypted.signature)\r\n\r\n    // Use this.constructor to ensure the implementing class's crypto is available\r\n    let verify = await this.constructor.verify(\r\n      signed,\r\n      eak.signerSigningKey.ed25519\r\n    )\r\n    if (!verify) {\r\n      throw new Error('Document failed verification')\r\n    }\r\n\r\n    return decrypted\r\n  }\r\n\r\n  /**\r\n   * Sign a document and return the signature\r\n   *\r\n   * @param {Signable} document Serializable object to be signed.\r\n   *\r\n   * @returns {Promise<string>}\r\n   */\r\n  async sign(document) {\r\n    if (this.config.version === 1) {\r\n      throw new Error('Cannot sign documents without a signing key!')\r\n    }\r\n\r\n    return this.crypto.signDocument(document, this.config.privateSigningKey)\r\n  }\r\n\r\n  /**\r\n   * Verify the signature attached to a specific document.\r\n   *\r\n   * @param {SignedDocument} signed        Document with an attached signature\r\n   * @param {string}         publicSignKey Key to use during signature verification\r\n   *\r\n   * @returns {Promise<bool>}\r\n   */\r\n  static async verify(signed, publicSignKey) {\r\n    return shared.verify(this.crypto, signed, publicSignKey)\r\n  }\r\n\r\n  /**\r\n   * Back up the client's configuration to E3DB in a serialized format that can be read\r\n   * by the Admin Console. The stored configuration will be shared with the specified client,\r\n   * and the account service notified that the sharing has taken place.\r\n   *\r\n   * @param {string} clientId          Unique ID of the client to which we're backing up\r\n   * @param {string} registrationToken Original registration token used to create the client\r\n   *\r\n   * @returns {Promise<bool>}\r\n   */\r\n  async backup(clientId, registrationToken) {\r\n    /* eslint-disable camelcase */\r\n    let credentials = {\r\n      version: '\"' + this.config.version.toString() + '\"',\r\n      client_id: '\"' + this.config.clientId + '\"',\r\n      api_key_id: '\"' + this.config.apiKeyId + '\"',\r\n      api_secret: '\"' + this.config.apiSecret + '\"',\r\n      client_email: '\"\"',\r\n      public_key: '\"' + this.config.publicKey + '\"',\r\n      private_key: '\"' + this.config.privateKey + '\"',\r\n    }\r\n    if (this.config.version === 2) {\r\n      credentials.public_signing_key = '\"' + this.config.publicSigningKey + '\"'\r\n      credentials.private_signing_key =\r\n        '\"' + this.config.privateSigningKey + '\"'\r\n    }\r\n\r\n    credentials.api_url = '\"' + this.config.apiUrl + '\"'\r\n    /* eslint-enable */\r\n    await this.writeRecord('tozny.key_backup', credentials, {\r\n      client: this.config.clientId,\r\n    })\r\n    await this.share('tozny.key_backup', clientId)\r\n    await fetch(\r\n      this.config.apiUrl +\r\n        '/v1/account/backup/' +\r\n        registrationToken +\r\n        '/' +\r\n        this.config.clientId,\r\n      {\r\n        method: 'POST',\r\n      }\r\n    )\r\n    return Promise.resolve(true)\r\n  }\r\n\r\n  /**\r\n   * Query E3DB records according to a set of selection criteria.\r\n   *\r\n   * The default behavior is to return all records written by the\r\n   * current authenticated client.\r\n   *\r\n   * To restrict the results to a particular type, pass a type or\r\n   * list of types as the `type` argument.\r\n   *\r\n   * To restrict the results to a set of clients, pass a single or\r\n   * list of client IDs as the `writer` argument. To list records\r\n   * written by any client that has shared with the current client,\r\n   * pass the special string 'all' as the `writer` argument.\r\n   *\r\n   * @param {bool}         data     Flag to include data in records\r\n   * @param {string|array} writer   Select records written by a single writer, a list of writers, or 'all'\r\n   * @param {string|array} record   Select a single record or list of records\r\n   * @param {string|array} type     Select records of a single type or a list of types\r\n   * @param {array}        plain    Associative array of plaintext meta to use as a filter\r\n   * @param {number}       pageSize Number of records to fetch per request\r\n   *\r\n   * @returns {QueryResult}\r\n   */\r\n  query(\r\n    data = true,\r\n    writer = null,\r\n    record = null,\r\n    type = null,\r\n    plain = null,\r\n    pageSize = DEFAULT_QUERY_COUNT\r\n  ) {\r\n    let allWriters = false\r\n    if (writer === 'all') {\r\n      allWriters = true\r\n      writer = []\r\n    }\r\n\r\n    let query = new Query(\r\n      0,\r\n      data,\r\n      writer,\r\n      record,\r\n      type,\r\n      plain,\r\n      null,\r\n      pageSize,\r\n      allWriters\r\n    )\r\n    return new QueryResult(this, query)\r\n  }\r\n\r\n  /**\r\n   * Internal-only method to execute a query against the server and parse the response.\r\n   *\r\n   * @param {Query} query Query request to execute against the server\r\n   *\r\n   * @returns {QueryResult}\r\n   */\r\n  async _query(query) {\r\n    let response = await this.authenticator.tokenFetch(\r\n      this.config.apiUrl + '/v1/storage/search',\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: query.stringify(),\r\n      }\r\n    )\r\n    await checkStatus(response)\r\n    return response.json()\r\n  }\r\n\r\n  async search(searchRequest) {\r\n    if (!(searchRequest instanceof Search)) {\r\n      throw new Error('A search query must be a Search instance.')\r\n    }\r\n\r\n    return new SearchResult(this, searchRequest)\r\n  }\r\n\r\n  async _search(searchRequest) {\r\n    let response = await this.authenticator.tokenFetch(\r\n      this.config.apiUrl + '/v2/search',\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: searchRequest.stringify(),\r\n      }\r\n    )\r\n    await checkStatus(response)\r\n    return response.json()\r\n  }\r\n\r\n  /**\r\n   * Allow another client to grant read access this client's records of a specific type\r\n   *\r\n   * @param {string} type The record type to grant sharing access for\r\n   * @param {string} authorizerId The client ID to grant sharing privileges to\r\n   *\r\n   * @returns {Promise<bool>} Whether the authorizer was added successfully.\r\n   */\r\n  async addAuthorizer(type, authorizerId) {\r\n    const clientId = this.config.clientId\r\n    if (authorizerId === clientId) {\r\n      return true\r\n    }\r\n\r\n    await shared.putAccessKeyForReader(this, clientId, type, authorizerId)\r\n\r\n    const policy = { allow: [{ authorizer: {} }] }\r\n    return shared.putPolicy(\r\n      this,\r\n      policy,\r\n      clientId,\r\n      clientId,\r\n      authorizerId,\r\n      type\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Remove another client's ability to grant read access this client's records of a specific type\r\n   *\r\n   * @param {string} type The record type to revoke sharing access for\r\n   * @param {string} authorizerId The client ID to revoke sharing privileges from\r\n   *\r\n   * @returns {Promise<bool>} Whether the authorizer was removed successfully.\r\n   */\r\n  async removeAuthorizer(type, authorizerId) {\r\n    const clientId = this.config.clientId\r\n    if (authorizerId === clientId) {\r\n      return true\r\n    }\r\n\r\n    await shared.deleteAccessKey(this, clientId, clientId, authorizerId, type)\r\n\r\n    const policy = { deny: [{ authorizer: {} }] }\r\n    return shared.putPolicy(\r\n      this,\r\n      policy,\r\n      clientId,\r\n      clientId,\r\n      authorizerId,\r\n      type\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Grant another E3DB client access to records of a particular type.\r\n   *\r\n   * @param {string} type     Type of records to share\r\n   * @param {string} readerId Client ID or email address of reader to grant access to\r\n   *\r\n   * @returns {Promise<bool>}\r\n   */\r\n  async share(type, readerId) {\r\n    if (EMAIL.test(readerId)) {\r\n      let clientInfo = await this.clientInfo(readerId)\r\n      return this.share(type, clientInfo.clientId)\r\n    }\r\n    // Share on behalf of ourself\r\n    return this.shareOnBehalfOf(this.config.clientId, type, readerId)\r\n  }\r\n\r\n  /**\r\n   * Grant another E3DB client access to records of a particular type for a writer.\r\n   *\r\n   * @param {string} writerId Client ID of the writer to grant for\r\n   * @param {string} type     Type of records to share\r\n   * @param {string} readerId Client ID or reader to grant access to\r\n   *\r\n   * @returns {Promise<bool>}\r\n   */\r\n  async shareOnBehalfOf(writerId, type, readerId) {\r\n    // Don't need to share if the reader is the writer\r\n    if (readerId === writerId) {\r\n      return true\r\n    }\r\n    await shared.putAccessKeyForReader(this, writerId, type, readerId)\r\n    const policy = { allow: [{ read: {} }] }\r\n    return shared.putPolicy(this, policy, writerId, writerId, readerId, type)\r\n  }\r\n\r\n  /**\r\n   * Revoke another E3DB client's access to records of a particular type.\r\n   *\r\n   * @param {string} type     Type of records to share\r\n   * @param {string} readerId Client ID or email address of reader to grant access from\r\n   *\r\n   * @returns {Promise<bool>}\r\n   */\r\n  async revoke(type, readerId) {\r\n    if (EMAIL.test(readerId)) {\r\n      let clientInfo = await this.clientInfo(readerId)\r\n      return this.revoke(type, clientInfo.clientId)\r\n    }\r\n\r\n    // Revoke on behalf of self\r\n    return this.revokeOnBehalfOf(this.config.clientId, type, readerId)\r\n  }\r\n\r\n  /**\r\n   * Revoke another E3DB client's access to records of a particular writer and type.\r\n   *\r\n   * @param {string} writerId Client ID of the writer to revoke access to\r\n   * @param {string} type     Type of records to revoke share for\r\n   * @param {string} readerId Client ID of reader to revoke access from\r\n   *\r\n   * @returns {Promise<bool>}\r\n   */\r\n  async revokeOnBehalfOf(writerId, type, readerId) {\r\n    if (readerId === writerId) {\r\n      return true\r\n    }\r\n    // Delete any existing access keys\r\n    await shared.deleteAccessKey(this, writerId, writerId, readerId, type)\r\n    let policy = { deny: [{ read: {} }] }\r\n    return shared.putPolicy(this, policy, writerId, writerId, readerId, type)\r\n  }\r\n\r\n  /**\r\n   * Get a list of all outgoing sharing policy relationships\r\n   *\r\n   * @returns {Promise<array>}\r\n   */\r\n  async outgoingSharing() {\r\n    let request = await this.authenticator.tokenFetch(\r\n      this.config.apiUrl + '/v1/storage/policy/outgoing',\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    )\r\n    let response = await checkStatus(request)\r\n    let json = await response.json()\r\n\r\n    return Promise.all(json.map(OutgoingSharingPolicy.decode))\r\n  }\r\n\r\n  /**\r\n   * Get a list of all incoming sharing policy relationships\r\n   *\r\n   * @returns {Promise<array>}\r\n   */\r\n  async incomingSharing() {\r\n    let request = await this.authenticator.tokenFetch(\r\n      this.config.apiUrl + '/v1/storage/policy/incoming',\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    )\r\n    let response = await checkStatus(request)\r\n    let json = await response.json()\r\n\r\n    return Promise.all(json.map(IncomingSharingPolicy.decode))\r\n  }\r\n\r\n  async getAuthorizers() {\r\n    const request = await this.authenticator.tokenFetch(\r\n      this.config.apiUrl + '/v1/storage/policy/proxies',\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    )\r\n    const response = await checkStatus(request)\r\n    const proxies = await response.json()\r\n\r\n    return proxies.map(AuthorizerPolicy.decode)\r\n  }\r\n\r\n  async getAuthorizedBy() {\r\n    const request = await this.authenticator.tokenFetch(\r\n      this.config.apiUrl + '/v1/storage/policy/granted',\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    )\r\n    const response = await checkStatus(request)\r\n    const granted = await response.json()\r\n\r\n    return granted.map(AuthorizerPolicy.decode)\r\n  }\r\n\r\n  /**\r\n   * WriteNote is a static method that encrypts a note and sends it to TozStore,\r\n   * allowing you to supply your own signingKey and encryptionKey pairs.\r\n   *\r\n   * Using this method you are not allowed to provide premium options to TozStore,\r\n   * such as additional views, extended expiration time, etc.\r\n   *\r\n   * @param {object} data  A hashmap of the data to encrypt and store\r\n   * @param {string} recipientEncryptionKey The public encryption key of the reader of this note\r\n   * @param {string} recipientSigningKey signing key of the reader of this note\r\n   * @param {object} options json hashmap of a NoteOptions object.\r\n   *\r\n   * @returns {Note} A response from TozStore; the note that has been written.\r\n   */\r\n  async writeNote(data, recipientEncryptionKey, recipientSigningKey, options) {\r\n    // This method requires an instantiated client, and thus by default it will be a premium note written by an identifiable client,\r\n    // so we automatically mix in the client id unless it is overridden in the provided options.\r\n    /* eslint-disable camelcase */\r\n    const decodedOptions = NoteOptions.decode(\r\n      Object.assign({ client_id: this.config.clientId }, options)\r\n    )\r\n    /* eslint-enable */\r\n    const encryptionKeys = new KeyPair(\r\n      this.config.publicKey,\r\n      this.config.privateKey\r\n    )\r\n    let signingKeys = new KeyPair(\r\n      this.config.publicSigningKey,\r\n      this.config.privateSigningKey\r\n    )\r\n    return shared.writeNote(\r\n      this.crypto,\r\n      this.authenticator,\r\n      data,\r\n      recipientEncryptionKey,\r\n      recipientSigningKey,\r\n      encryptionKeys,\r\n      signingKeys,\r\n      decodedOptions,\r\n      this.config.apiUrl\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Remove and re-insert a new note with the same name as the old one.\r\n   *\r\n   * Named notes are useful due to the fact the name is user determined, However,\r\n   * sometime you need to update the data stored at that name. This is a problem\r\n   * since notes are immutable. This method allows the old note to be removed\r\n   * and a new named note written into its place in a single transaction, which\r\n   * is rolled back if there are issues. This is much safer than performing the\r\n   * two transactions individually.\r\n   *\r\n   * @param {Object} data The data to include in the replace note\r\n   * @param {string} recipientEncryptionKey The public encryption key of the reader of this note\r\n   * @param {string} recipientSigningKey The public signing key of the reader of this note\r\n   * @param {Object} options json hashmap of a NoteOptions object\r\n   *\r\n   * @return {Note} The replaced note written to TozStore.\r\n   */\r\n  async replaceNoteByName(\r\n    data,\r\n    recipientEncryptionKey,\r\n    recipientSigningKey,\r\n    options\r\n  ) {\r\n    // This method requires an instantiated client, and thus by default it will be a premium note written by an identifiable client,\r\n    // so we automatically mix in the client id unless it is overridden in the provided options.\r\n    /* eslint-disable camelcase */\r\n    const decodedOptions = NoteOptions.decode(\r\n      Object.assign({ client_id: this.config.clientId }, options)\r\n    )\r\n    const encryptionKeys = new KeyPair(\r\n      this.config.publicKey,\r\n      this.config.privateKey\r\n    )\r\n    let signingKeys = new KeyPair(\r\n      this.config.publicSigningKey,\r\n      this.config.privateSigningKey\r\n    )\r\n    let encryptedNote = await shared.createEncryptedNote(\r\n      this.crypto,\r\n      data,\r\n      recipientEncryptionKey,\r\n      recipientSigningKey,\r\n      encryptionKeys,\r\n      signingKeys,\r\n      decodedOptions\r\n    )\r\n    let response = await this.authenticator.tsv1Fetch(\r\n      `${this.config.apiUrl}/v2/storage/notes`,\r\n      {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: encryptedNote.stringify(),\r\n      },\r\n      options.clientId\r\n    )\r\n    let storedNoteResp = await checkStatus(response)\r\n    let noteJson = await storedNoteResp.json()\r\n    return Note.decode(noteJson)\r\n  }\r\n\r\n  /**\r\n   * ReadNote makes call to TozStore to read note by noteId (uuid).\r\n   *\r\n   * @param {string} noteId  UUID assigned by TozStore, used to identify a note.\r\n   * @param {Object} authParams Extra request parameters for EACP authorizations.\r\n   *\r\n   * @returns {Note} A note from TozStore unencrypted with the client's keys.\r\n   */\r\n  async readNote(noteId, authParams = {}, authHeaders = {}) {\r\n    if (this.config.version === 1) {\r\n      throw new Error('Cannot read notes without a signing key!')\r\n    }\r\n    let encryptionKeys = new KeyPair(\r\n      this.config.publicKey,\r\n      this.config.privateKey\r\n    )\r\n    // eslint-disable-next-line camelcase\r\n    const params = Object.assign(authParams, { note_id: noteId })\r\n    // Use this.constructor to ensure we referencing the implementing class.\r\n    return shared.readNote(\r\n      this.crypto,\r\n      this.authenticator,\r\n      encryptionKeys,\r\n      params,\r\n      authHeaders,\r\n      this.config.apiUrl\r\n    )\r\n  }\r\n\r\n  /**\r\n   * ReadNoteByName makes call to TozStore to read note by user defined id_string.\r\n   * Only premium notes can define this id string or name.\r\n   *\r\n   * @param {string} noteName  name given to this note with premium features\r\n   * @param {Object} authParams Extra request parameters for EACP authorizations.\r\n   *\r\n   * @returns {Note} A note from TozStore unencrypted with the client's keys.\r\n   */\r\n  async readNoteByName(noteName, authParams = {}, authHeaders = {}) {\r\n    if (this.config.version === 1) {\r\n      throw new Error('Cannot read notes without a signing key!')\r\n    }\r\n    let encryptionKeys = new KeyPair(\r\n      this.config.publicKey,\r\n      this.config.privateKey\r\n    )\r\n    // eslint-disable-next-line camelcase\r\n    const params = Object.assign(authParams, { id_string: noteName })\r\n    // Use this.constructor to ensure we referencing the implementing class.\r\n    return shared.readNote(\r\n      this.crypto,\r\n      this.authenticator,\r\n      encryptionKeys,\r\n      params,\r\n      authHeaders,\r\n      this.config.apiUrl\r\n    )\r\n  }\r\n\r\n  /**\r\n   * DeleteNote deletes a note from TozStore based on the note identifier.\r\n   *\r\n   * @param {string} noteId  UUID assigned by TozStore, used to identify a note.\r\n   */\r\n  async deleteNote(noteId) {\r\n    if (this.config.version === 1) {\r\n      throw new Error('Cannot delete notes without a signing key!')\r\n    }\r\n    // Use this.constructor to ensure we referencing the implementing class.\r\n    return shared.deleteNote(this.authenticator, noteId, this.config.apiUrl)\r\n  }\r\n\r\n  /**\r\n   * Issue an EACP challenge for a note identified by note ID.\r\n   *\r\n   * A note with an EACP will sometimes require issuing a challenge before the\r\n   * note can be read. This will issue that challenge when the note ID is\r\n   * known. This feature is only available for full clients.\r\n   *\r\n   * @param {string} noteId The UUID of the note to issue the challenge for\r\n   * @param {Object} meta Metadata to send as the body of the challenge request\r\n   *\r\n   * @return {Array.<string>} An array of strings for challenges issued\r\n   */\r\n  async noteChallenge(noteId, meta = {}) {\r\n    // eslint-disable-next-line camelcase\r\n    const params = { note_id: noteId }\r\n    return shared.issueNoteChallenge(this, params, meta)\r\n  }\r\n\r\n  /**\r\n   * Issue an EACP challenge for a note identified by name.\r\n   *\r\n   * A note with an EACP will sometimes require issuing a challenge before the\r\n   * note can be read. This will issue that challenge when the note name is\r\n   * known. This feature is only available for full clients.\r\n   *\r\n   * @param {string} noteName The name of the note to issue the challenge for\r\n   * @param {Object} meta Metadata to send as the body of the challenge request\r\n   *\r\n   * @return {Array.<string>} An array of strings for challenges issued\r\n   */\r\n  async noteChallengeByName(noteName, meta = {}) {\r\n    // eslint-disable-next-line camelcase\r\n    const params = { id_string: noteName }\r\n    return shared.issueNoteChallenge(this, params, meta)\r\n  }\r\n\r\n  /**\r\n   * createGroup creates a group and sends it to TozStore.\r\n   *\r\n   * @param {string} name  the name of the group\r\n   * @param {array} capabilities an array of strings of the capabilities the group will have\r\n   * @param {string} description  details about the group\r\n   *\r\n   * @returns {Group} A response from TozStore; the group that has been written.\r\n   */\r\n  async createGroup(name, capabilities = [], description) {\r\n    const encryptionKeyPair = new KeyPair(\r\n      this.config.publicKey,\r\n      this.config.privateKey\r\n    )\r\n    const groupKeyPair = await this.crypto.generateKeypair()\r\n    const pk = await this.crypto.encryptPrivateKey(\r\n      groupKeyPair.privateKey,\r\n      encryptionKeyPair.privateKey,\r\n      encryptionKeyPair.publicKey\r\n    )\r\n    const capabilitiesArray = Capabilities.toArray(capabilities)\r\n    let createGroupReq = {\r\n      group_name: name,\r\n      public_key: groupKeyPair.publicKey,\r\n      capabilities: capabilitiesArray,\r\n      encrypted_group_key: pk,\r\n      description: description,\r\n    }\r\n    const createGroupReqKeys = Object.keys(createGroupReq)\r\n    for (const key of createGroupReqKeys) {\r\n      if (createGroupReq[key] === null || createGroupReq[key] === []) {\r\n        delete createGroupReq[key]\r\n      }\r\n    }\r\n    let response = await this.authenticator.tsv1Fetch(\r\n      `${this.config.apiUrl}/v2/storage/groups`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(createGroupReq),\r\n      }\r\n    )\r\n    const groupJson = await validateResponseAsJSON(response)\r\n    const group = Group.decode(groupJson)\r\n    const groupMembership = new GroupMembership(null, group, capabilitiesArray)\r\n    return groupMembership\r\n  }\r\n  /**\r\n   * Delete the group with the specific group_id.\r\n   * @param {string} groupID  ID of the group to delete\r\n   *\r\n   * @returns {Promise<bool>}\r\n   */\r\n  async deleteGroup(groupID) {\r\n    const response = await this.authenticator.tsv1Fetch(\r\n      `${this.config.apiUrl}/v2/storage/groups/${groupID}`,\r\n      {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    )\r\n    switch (response.status) {\r\n      case 204:\r\n        return true\r\n      case 403:\r\n        throw new Error('Unauthorized')\r\n      default:\r\n        throw new Error('Error while deleting record data.')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ReadGroup makes call to TozStore to read group by groupId (uuid).\r\n   *\r\n   * @param {string} groupId  UUID assigned by TozStore, used to identify a group.\r\n   *\r\n   * @returns {Group} A group from TozStore.\r\n   */\r\n  async readGroup(groupID) {\r\n    let response = await this.authenticator.tsv1Fetch(\r\n      `${this.config.apiUrl}/v2/storage/groups/${groupID}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    )\r\n    let groupJson = await validateResponseAsJSON(response)\r\n    let group = Group.decode(groupJson)\r\n    return group\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} clientID   UUID assigned by TozStore, used to identify the client; optional.\r\n   * @param {Array} groupNames  Array of string group names to filter responses by; optional.\r\n   * @param {number} nextToken  Indicates where to start pagination; optional.\r\n   * @param {number} max        The maximum number of groups to list per request; optional.\r\n   *\r\n   * @return {Array}  An array of groups returned from TozStore.\r\n   */\r\n  async listGroups(\r\n    clientID = null,\r\n    groupNames = [],\r\n    nextToken = null,\r\n    max = null\r\n  ) {\r\n    const urlData = {\r\n      client_id: clientID,\r\n      nextToken: nextToken,\r\n      max: max,\r\n    }\r\n    let encodedUrl = urlEncodeData(urlData)\r\n    groupNames.forEach((name) => {\r\n      let current = 'group_names=' + name\r\n      if (encodedUrl === '') {\r\n        encodedUrl = current\r\n      } else {\r\n        encodedUrl += '&' + current\r\n      }\r\n    })\r\n    let response = await this.authenticator.tsv1Fetch(\r\n      `${this.config.apiUrl}/v2/storage/groups?${encodedUrl}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    )\r\n    let groupsJson = await validateResponseAsJSON(response)\r\n    let listGroups = []\r\n    groupsJson.groups.forEach((group) => {\r\n      listGroups.push(Group.decode(group))\r\n    })\r\n    const returnValues = {\r\n      groups: listGroups,\r\n      nextToken: groupsJson.next_token,\r\n    }\r\n    return returnValues\r\n  }\r\n  /**\r\n   *\r\n   * @param {string} clientID   UUID assigned by TozStore, used to identify the client; optional.\r\n   * @param {String} groupName Group name you want to get information regarding.\r\n   *\r\n   * @return {Object}  The group object or null if it does not exist.\r\n   */\r\n  async groupInfo(groupName, clientID = null) {\r\n    const urlData = {\r\n      client_id: clientID,\r\n      group_names: groupName,\r\n    }\r\n    let encodedUrl = urlEncodeData(urlData)\r\n\r\n    let response = await this.authenticator.tsv1Fetch(\r\n      `${this.config.apiUrl}/v2/storage/groups?${encodedUrl}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    )\r\n    let groupsJson = await validateResponseAsJSON(response)\r\n    const finalGroup = groupsJson.groups.find((g) => g.group_name == groupName)\r\n    if (!finalGroup) {\r\n      return {}\r\n    }\r\n    return Group.decode(finalGroup)\r\n  }\r\n\r\n  /**\r\n   * addGroupMembers adds members to the TozStore Group given.\r\n   *\r\n   * @param {string} groupId  UUID assigned by TozStore, used to identify a group.\r\n   * @param {GroupMember[]} groupMembers wraps together the ClientID, Capability and Membership Key for each client being added to the group\r\n   *\r\n   *\r\n   * @returns {GroupMember} A response from TozStore; the group members who have been added.\r\n   *\r\n   */\r\n  async addGroupMembers(groupId, groupMembers = []) {\r\n    // Get Group Membership key for current client\r\n    let membershipResponse = await this.authenticator.tsv1Fetch(\r\n      `${this.config.apiUrl}/v2/storage/groups/${groupId}/membership_key`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    )\r\n    let groupMembershipJson = await validateResponseAsJSON(membershipResponse)\r\n    // Get the public key for the authorizer, in order to unwrap the encrypted group key\r\n    // of the client adding these members\r\n    let publicKeysAuthResp = await this.authenticator.tokenFetch(\r\n      `${this.config.apiUrl}/v1/client/${groupMembershipJson.authorizer_id}/public`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    )\r\n    let publicKeysAuthJSON = await validateResponseAsJSON(publicKeysAuthResp)\r\n    // Get All members Public Keys to create their membership keys\r\n    let clientIDs = []\r\n    groupMembers.forEach((member) => {\r\n      clientIDs.push(member.clientID)\r\n    })\r\n    // Create the API object\r\n    let groupMembersPublicKeysRequest = {\r\n      client_ids: clientIDs,\r\n    }\r\n    let publicKeysResponse = await this.authenticator.tokenFetch(\r\n      `${this.config.apiUrl}/v1/client/public`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(groupMembersPublicKeysRequest),\r\n      }\r\n    )\r\n    let publicKeysJSON = await validateResponseAsJSON(publicKeysResponse)\r\n    // Create the new membership key\r\n    for (var i = 0; i < groupMembers.length; i++) {\r\n      let newMembershipKey = await this.crypto.createGroupMembershipKey(\r\n        this.config.privateKey,\r\n        groupMembershipJson.encrypted_membership_key,\r\n        publicKeysJSON.clients[groupMembers[i].clientID].public_key[\r\n          DefaultEncryptionKeyType\r\n        ],\r\n        publicKeysAuthJSON.public_key[DefaultEncryptionKeyType]\r\n      )\r\n      groupMembers[i].membershipKey = newMembershipKey\r\n    }\r\n    // Take the Given Paramaters and create the object needed for endpoint\r\n    let groupMembersToAdd = []\r\n    groupMembers.forEach((member) => {\r\n      groupMembersToAdd.push({\r\n        client_id: member.clientID,\r\n        membership_key: member.membershipKey,\r\n        capability_names: member.capabilities,\r\n      })\r\n    })\r\n    let addGroupMembersRequest = {\r\n      group_id: groupId,\r\n      group_members: groupMembersToAdd,\r\n    }\r\n    // Call the API endpoint to add group members\r\n    let response = await this.authenticator.tsv1Fetch(\r\n      `${this.config.apiUrl}/v2/storage/groups/${groupId}/members`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(addGroupMembersRequest),\r\n      }\r\n    )\r\n    // Await the Response from the API with the Added Group member Response\r\n    let groupMembersJson = await validateResponseAsJSON(response)\r\n    let listGroupMembers = []\r\n    groupMembersJson.forEach((member) => {\r\n      listGroupMembers.push(member)\r\n    })\r\n    return listGroupMembers\r\n  }\r\n\r\n  /**\r\n   * removeGroupMembers removes members to the TozStore Group given.\r\n   *\r\n   * @param {string} groupId  UUID assigned by TozStore, used to identify a group.\r\n   * @param {Array} clientIds all the clientIDs corresponding to the group members you want to remove\r\n   *\r\n   *\r\n   * @returns {Promise<bool>}\r\n   *\r\n   */\r\n  async removeGroupMembers(groupId, clientIds = []) {\r\n    // Take the Given Paramaters and create the object needed for endpoint\r\n    let groupMemberToRemove = []\r\n    clientIds.forEach((client) => {\r\n      groupMemberToRemove.push({\r\n        client_id: client,\r\n      })\r\n    })\r\n    let removeGroupMembersRequest = {\r\n      group_id: groupId,\r\n      group_members: groupMemberToRemove,\r\n    }\r\n    // Call the API endpoint to remove group members\r\n    let response = await this.authenticator.tsv1Fetch(\r\n      `${this.config.apiUrl}/v2/storage/groups/${groupId}/members`,\r\n      {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(removeGroupMembersRequest),\r\n      }\r\n    )\r\n    // Check the response code\r\n    switch (response.status) {\r\n      case 204:\r\n        return true\r\n      case 403:\r\n        throw new Error('Unauthorized')\r\n      default:\r\n        throw new Error('Error while removing group members.')\r\n    }\r\n  }\r\n  /**\r\n   * listGroupMembers lists members of the TozStore Group given.\r\n   *\r\n   * @param {string} groupId  UUID assigned by TozStore, used to identify a group.\r\n   *\r\n   * @returns {GroupMember[]} A response from TozStore; the group members of the group.\r\n   */\r\n  async listGroupMembers(groupId) {\r\n    // Call the API endpoint to remove group members\r\n    let response = await this.authenticator.tsv1Fetch(\r\n      `${this.config.apiUrl}/v2/storage/groups/${groupId}/members`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    )\r\n    let groupMembersJson = await validateResponseAsJSON(response)\r\n    return groupMembersJson\r\n  }\r\n  /**\r\n   * listRecordsSharedWithGroup\r\n   *\r\n   * @param {string} groupId   UUID assigned by TozStore, used to identify a group.\r\n   * @param {Array} writerIds  Array of writerIds to filter responses by; optional.\r\n   * @param {number} nextToken  Indicates where to start pagination; optional.\r\n   * @param {number} max        The maximum number of groups to list per request; optional.\r\n   *\r\n   * @return {Array}  An array of records returned from TozStore.\r\n   */\r\n  async listRecordsSharedWithGroup(\r\n    groupId,\r\n    writerIds = [],\r\n    nextToken = null,\r\n    max = null\r\n  ) {\r\n    const listSharedRequest = {\r\n      group_id: groupId,\r\n      writer_ids: writerIds,\r\n      nextToken: nextToken,\r\n      max: max,\r\n    }\r\n    let encodedUrl = urlEncodeData(listSharedRequest)\r\n    let response = await this.authenticator.tsv1Fetch(\r\n      `${this.config.apiUrl}/v2/storage/groups/${groupId}/share?${encodedUrl}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    )\r\n    let returnValues = []\r\n    let listSharedWithGroups = []\r\n    let recordsJson = await validateResponseAsJSON(response)\r\n    if (recordsJson.results == null) {\r\n      return listSharedWithGroups\r\n    }\r\n    for (var i = 0; i < recordsJson.results.length; i++) {\r\n      let meta = await Meta.decode(recordsJson.results[i].meta)\r\n      let recordData = await new RecordData(recordsJson.results[i].record_data)\r\n      let record = await new Record(\r\n        meta,\r\n        recordData,\r\n        recordsJson.results[i].rec_sig\r\n      )\r\n      // Note: When fetching group records, particularly for the files use-case\r\n      // using the cached AK gives us the benefit of placing the AK in the cache\r\n      // which means later when downloading the file, the AK does not need to\r\n      // be fetched from the API. The gotcha here for now is that the API does\r\n      // not currently support AK fetches when access is granted via group\r\n      // permissions. This hides that by making sure the direct fetch is not\r\n      // needed, however for it to work the group records must be fetched via\r\n      // this list method first. This method is currently the only viable way\r\n      // of reading records that have been shared via the groups API.\r\n      let ak = await this._getCachedAk(\r\n        meta.writerId,\r\n        meta.userId,\r\n        this.config.clientId,\r\n        meta.type,\r\n        recordsJson.results[i].access_key\r\n      )\r\n      let decryptedRecord = await this.crypto.decryptRecord(record, ak)\r\n      listSharedWithGroups.push(decryptedRecord)\r\n    }\r\n    let NextToken = {\r\n      nextToken: recordsJson.next_token,\r\n    }\r\n    returnValues.push(listSharedWithGroups)\r\n    returnValues.push(NextToken)\r\n    return returnValues\r\n  }\r\n\r\n  /**\r\n   * shareRecordWithGroup\r\n   *\r\n   * @param {string} groupId   UUID assigned by TozStore, used to identify a group.\r\n   * @param {string} recordType Record type to be shared with the group.\r\n   *\r\n   * @return {Promise<Record>}\r\n   */\r\n  async shareRecordWithGroup(groupId, recordType) {\r\n    // Get the Groups Public key\r\n    let groupInfo = await this.readGroup(groupId)\r\n    // Get the access Key\r\n    let accessKey = await shared.getAccessKey(\r\n      this,\r\n      this.config.clientId,\r\n      this.config.clientId,\r\n      this.config.clientId,\r\n      recordType\r\n    )\r\n    //create group access key\r\n    let groupEAK = await this.crypto.createGroupAccessKey(\r\n      groupInfo.publicKey,\r\n      accessKey,\r\n      this.config.privateKey\r\n    )\r\n    // Share with group\r\n    const shareRecordRequest = {\r\n      group_id: groupId,\r\n      record_type: recordType,\r\n      encrypted_access_key: groupEAK,\r\n      public_key: groupInfo.publicKey,\r\n    }\r\n    let response = await this.authenticator.tsv1Fetch(\r\n      `${this.config.apiUrl}/v2/storage/groups/${groupId}/share`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(shareRecordRequest),\r\n      }\r\n    )\r\n    return await validateResponseAsJSON(response)\r\n  }\r\n\r\n  /**\r\n   * revokeRecordWithGroup\r\n   *\r\n   * @param {string} groupId   UUID assigned by TozStore, used to identify a group.\r\n   * @param {string} recordType Record type to be unshared with the group.\r\n   *\r\n   *\r\n   */\r\n  async revokeRecordWithGroup(groupId, recordType) {\r\n    const removeRecordSharedWithGroupRequest = {\r\n      record_type: recordType,\r\n    }\r\n    let response = await this.authenticator.tsv1Fetch(\r\n      `${this.config.apiUrl}/v2/storage/groups/${groupId}/share`,\r\n      {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(removeRecordSharedWithGroupRequest),\r\n      }\r\n    )\r\n    // Check the response code\r\n\r\n    switch (response.status) {\r\n      case 204:\r\n        return true\r\n      case 401:\r\n        throw new Error('Unauthorized')\r\n      default:\r\n        throw new Error(\r\n          `Error while unsharing record with group, Error: ${response.status}`\r\n        )\r\n    }\r\n  }\r\n}\r\nmodule.exports = Client\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/storage/client.js\n");

/***/ }),

/***/ "./lib/storage/config.js":
/*!*******************************!*\
  !*** ./lib/storage/config.js ***!
  \*******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { DEFAULT_API_URL } = __webpack_require__(/*! ../utils/constants */ \"./lib/utils/constants.js\")\r\n\r\n/**\r\n * Configuration and credentials for E3DB.\r\n *\r\n * @property {string} clientId          The client's unique client identifier\r\n * @property {string} apiKeyId          The client's non-secret API key component\r\n * @property {string} apiSecret         The client's confidential API key component\r\n * @property {string} publicKey         The client's Base64URL encoded Curve25519 public key\r\n * @property {string} privateKey        The client's Base64URL encoded Curve25519 private key\r\n * @property {string} publicSigningKey  The client's Base64URL encoded Ed25519 public key\r\n * @property {string} privateSigningKey The client's Base64URL encoded Ed25519 private key\r\n * @property {string} [apiUrl]          Optional base URL for the E3DB API service\r\n */\r\nclass Config {\r\n  static fromObject(obj) {\r\n    if (typeof obj === 'string') {\r\n      try {\r\n        obj = JSON.parse(obj)\r\n      } catch (err) {\r\n        throw new Error(\r\n          'Config.fromObject param JSON string could not be parsed.'\r\n        )\r\n      }\r\n    }\r\n    const apiUrl = obj.apiUrl || obj.api_url\r\n    const apiKeyId = obj.apiKeyId || obj.api_key_id\r\n    const apiSecret = obj.apiSecret || obj.api_secret\r\n    const clientId = obj.clientId || obj.client_id\r\n    const publicKey = obj.publicKey || obj.public_key\r\n    const privateKey = obj.privateKey || obj.private_key\r\n    const publicSigningKey = obj.publicSigningKey || obj.public_signing_key\r\n    const privateSigningKey = obj.privateSigningKey || obj.private_signing_key\r\n    return new Config(\r\n      clientId,\r\n      apiKeyId,\r\n      apiSecret,\r\n      publicKey,\r\n      privateKey,\r\n      publicSigningKey,\r\n      privateSigningKey,\r\n      apiUrl\r\n    )\r\n  }\r\n\r\n  constructor(\r\n    clientId,\r\n    apiKeyId,\r\n    apiSecret,\r\n    publicKey,\r\n    privateKey,\r\n    publicSigningKey,\r\n    privateSigningKey,\r\n    apiUrl = DEFAULT_API_URL\r\n  ) {\r\n    if (publicSigningKey === '' || privateSigningKey === '') {\r\n      this.version = 1\r\n    } else {\r\n      this.version = 2\r\n      this.publicSigningKey = publicSigningKey\r\n      this.privateSigningKey = privateSigningKey\r\n    }\r\n\r\n    this.clientId = clientId\r\n    this.apiKeyId = apiKeyId\r\n    this.apiSecret = apiSecret\r\n    this.publicKey = publicKey\r\n    this.privateKey = privateKey\r\n    this.apiUrl = apiUrl\r\n  }\r\n\r\n  serialize() {\r\n    /* eslint-disable camelcase */\r\n    return {\r\n      version: this.version,\r\n      api_url: this.apiUrl,\r\n      api_key_id: this.apiKeyId,\r\n      api_secret: this.apiSecret,\r\n      client_id: this.clientId,\r\n      public_key: this.publicKey,\r\n      private_key: this.privateKey,\r\n      public_signing_key: this.publicSigningKey,\r\n      private_signing_key: this.privateSigningKey,\r\n    }\r\n    /* eslint-enable */\r\n  }\r\n}\r\n\r\nmodule.exports = Config\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvc3RvcmFnZS9jb25maWcuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B0b3pueXNlY3VyZS9zZGsvLi9saWIvc3RvcmFnZS9jb25maWcuanM/ODMyNyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IERFRkFVTFRfQVBJX1VSTCB9ID0gcmVxdWlyZSgnLi4vdXRpbHMvY29uc3RhbnRzJylcclxuXHJcbi8qKlxyXG4gKiBDb25maWd1cmF0aW9uIGFuZCBjcmVkZW50aWFscyBmb3IgRTNEQi5cclxuICpcclxuICogQHByb3BlcnR5IHtzdHJpbmd9IGNsaWVudElkICAgICAgICAgIFRoZSBjbGllbnQncyB1bmlxdWUgY2xpZW50IGlkZW50aWZpZXJcclxuICogQHByb3BlcnR5IHtzdHJpbmd9IGFwaUtleUlkICAgICAgICAgIFRoZSBjbGllbnQncyBub24tc2VjcmV0IEFQSSBrZXkgY29tcG9uZW50XHJcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBhcGlTZWNyZXQgICAgICAgICBUaGUgY2xpZW50J3MgY29uZmlkZW50aWFsIEFQSSBrZXkgY29tcG9uZW50XHJcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBwdWJsaWNLZXkgICAgICAgICBUaGUgY2xpZW50J3MgQmFzZTY0VVJMIGVuY29kZWQgQ3VydmUyNTUxOSBwdWJsaWMga2V5XHJcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBwcml2YXRlS2V5ICAgICAgICBUaGUgY2xpZW50J3MgQmFzZTY0VVJMIGVuY29kZWQgQ3VydmUyNTUxOSBwcml2YXRlIGtleVxyXG4gKiBAcHJvcGVydHkge3N0cmluZ30gcHVibGljU2lnbmluZ0tleSAgVGhlIGNsaWVudCdzIEJhc2U2NFVSTCBlbmNvZGVkIEVkMjU1MTkgcHVibGljIGtleVxyXG4gKiBAcHJvcGVydHkge3N0cmluZ30gcHJpdmF0ZVNpZ25pbmdLZXkgVGhlIGNsaWVudCdzIEJhc2U2NFVSTCBlbmNvZGVkIEVkMjU1MTkgcHJpdmF0ZSBrZXlcclxuICogQHByb3BlcnR5IHtzdHJpbmd9IFthcGlVcmxdICAgICAgICAgIE9wdGlvbmFsIGJhc2UgVVJMIGZvciB0aGUgRTNEQiBBUEkgc2VydmljZVxyXG4gKi9cclxuY2xhc3MgQ29uZmlnIHtcclxuICBzdGF0aWMgZnJvbU9iamVjdChvYmopIHtcclxuICAgIGlmICh0eXBlb2Ygb2JqID09PSAnc3RyaW5nJykge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIG9iaiA9IEpTT04ucGFyc2Uob2JqKVxyXG4gICAgICB9IGNhdGNoIChlcnIpIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXHJcbiAgICAgICAgICAnQ29uZmlnLmZyb21PYmplY3QgcGFyYW0gSlNPTiBzdHJpbmcgY291bGQgbm90IGJlIHBhcnNlZC4nXHJcbiAgICAgICAgKVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBjb25zdCBhcGlVcmwgPSBvYmouYXBpVXJsIHx8IG9iai5hcGlfdXJsXHJcbiAgICBjb25zdCBhcGlLZXlJZCA9IG9iai5hcGlLZXlJZCB8fCBvYmouYXBpX2tleV9pZFxyXG4gICAgY29uc3QgYXBpU2VjcmV0ID0gb2JqLmFwaVNlY3JldCB8fCBvYmouYXBpX3NlY3JldFxyXG4gICAgY29uc3QgY2xpZW50SWQgPSBvYmouY2xpZW50SWQgfHwgb2JqLmNsaWVudF9pZFxyXG4gICAgY29uc3QgcHVibGljS2V5ID0gb2JqLnB1YmxpY0tleSB8fCBvYmoucHVibGljX2tleVxyXG4gICAgY29uc3QgcHJpdmF0ZUtleSA9IG9iai5wcml2YXRlS2V5IHx8IG9iai5wcml2YXRlX2tleVxyXG4gICAgY29uc3QgcHVibGljU2lnbmluZ0tleSA9IG9iai5wdWJsaWNTaWduaW5nS2V5IHx8IG9iai5wdWJsaWNfc2lnbmluZ19rZXlcclxuICAgIGNvbnN0IHByaXZhdGVTaWduaW5nS2V5ID0gb2JqLnByaXZhdGVTaWduaW5nS2V5IHx8IG9iai5wcml2YXRlX3NpZ25pbmdfa2V5XHJcbiAgICByZXR1cm4gbmV3IENvbmZpZyhcclxuICAgICAgY2xpZW50SWQsXHJcbiAgICAgIGFwaUtleUlkLFxyXG4gICAgICBhcGlTZWNyZXQsXHJcbiAgICAgIHB1YmxpY0tleSxcclxuICAgICAgcHJpdmF0ZUtleSxcclxuICAgICAgcHVibGljU2lnbmluZ0tleSxcclxuICAgICAgcHJpdmF0ZVNpZ25pbmdLZXksXHJcbiAgICAgIGFwaVVybFxyXG4gICAgKVxyXG4gIH1cclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBjbGllbnRJZCxcclxuICAgIGFwaUtleUlkLFxyXG4gICAgYXBpU2VjcmV0LFxyXG4gICAgcHVibGljS2V5LFxyXG4gICAgcHJpdmF0ZUtleSxcclxuICAgIHB1YmxpY1NpZ25pbmdLZXksXHJcbiAgICBwcml2YXRlU2lnbmluZ0tleSxcclxuICAgIGFwaVVybCA9IERFRkFVTFRfQVBJX1VSTFxyXG4gICkge1xyXG4gICAgaWYgKHB1YmxpY1NpZ25pbmdLZXkgPT09ICcnIHx8IHByaXZhdGVTaWduaW5nS2V5ID09PSAnJykge1xyXG4gICAgICB0aGlzLnZlcnNpb24gPSAxXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLnZlcnNpb24gPSAyXHJcbiAgICAgIHRoaXMucHVibGljU2lnbmluZ0tleSA9IHB1YmxpY1NpZ25pbmdLZXlcclxuICAgICAgdGhpcy5wcml2YXRlU2lnbmluZ0tleSA9IHByaXZhdGVTaWduaW5nS2V5XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5jbGllbnRJZCA9IGNsaWVudElkXHJcbiAgICB0aGlzLmFwaUtleUlkID0gYXBpS2V5SWRcclxuICAgIHRoaXMuYXBpU2VjcmV0ID0gYXBpU2VjcmV0XHJcbiAgICB0aGlzLnB1YmxpY0tleSA9IHB1YmxpY0tleVxyXG4gICAgdGhpcy5wcml2YXRlS2V5ID0gcHJpdmF0ZUtleVxyXG4gICAgdGhpcy5hcGlVcmwgPSBhcGlVcmxcclxuICB9XHJcblxyXG4gIHNlcmlhbGl6ZSgpIHtcclxuICAgIC8qIGVzbGludC1kaXNhYmxlIGNhbWVsY2FzZSAqL1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgdmVyc2lvbjogdGhpcy52ZXJzaW9uLFxyXG4gICAgICBhcGlfdXJsOiB0aGlzLmFwaVVybCxcclxuICAgICAgYXBpX2tleV9pZDogdGhpcy5hcGlLZXlJZCxcclxuICAgICAgYXBpX3NlY3JldDogdGhpcy5hcGlTZWNyZXQsXHJcbiAgICAgIGNsaWVudF9pZDogdGhpcy5jbGllbnRJZCxcclxuICAgICAgcHVibGljX2tleTogdGhpcy5wdWJsaWNLZXksXHJcbiAgICAgIHByaXZhdGVfa2V5OiB0aGlzLnByaXZhdGVLZXksXHJcbiAgICAgIHB1YmxpY19zaWduaW5nX2tleTogdGhpcy5wdWJsaWNTaWduaW5nS2V5LFxyXG4gICAgICBwcml2YXRlX3NpZ25pbmdfa2V5OiB0aGlzLnByaXZhdGVTaWduaW5nS2V5LFxyXG4gICAgfVxyXG4gICAgLyogZXNsaW50LWVuYWJsZSAqL1xyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBDb25maWdcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/storage/config.js\n");

/***/ }),

/***/ "./lib/storage/file.js":
/*!*****************************!*\
  !*** ./lib/storage/file.js ***!
  \*****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { Record } = __webpack_require__(/*! ../../types */ \"./types/index.js\")\r\nconst FileOperations = __webpack_require__(/*! ./fileOperations */ \"./lib/storage/fileOperations.js\")\r\nconst shared = __webpack_require__(/*! ./shared */ \"./lib/storage/shared.js\")\r\nconst { validateResponseAsJSON } = __webpack_require__(/*! ../utils */ \"./lib/utils/index.js\")\r\n\r\n/**\r\n * A wrapper around file Records allowing efficient operations\r\n *\r\n * When a file Record is fetched, the associated file is not always needed\r\n * immediately. This wrapper over the file Record delays reading the file until\r\n * after the Record was originally fetched (such as from a search operation).\r\n * Delaying removes any risk of the pre-signed download URL expiring before use.\r\n */\r\nclass File {\r\n  constructor(record, client, operations) {\r\n    if (!(record instanceof Record) || !record.isFile) {\r\n      throw new Error('Files must be constructed with a file record object.')\r\n    }\r\n    // Run a very basic duck type check here because when importing client we\r\n    // create a circular dependency and it doesn't actually work.\r\n    // Reality is this is an internal type that is not directly exposed for\r\n    // construction. This check is just a little extra insurance.\r\n    if (!client.config || !client.authenticator || !client.crypto) {\r\n      throw new Error('Files must have access to a client instance')\r\n    }\r\n    if (!(operations instanceof FileOperations)) {\r\n      throw new Error('Files must have access to a FileOperations instance')\r\n    }\r\n    this._record = record\r\n    this._client = client\r\n    this._fileOps = operations\r\n  }\r\n\r\n  /**\r\n   * Gets the record contained within the File object.\r\n   *\r\n   * This returns a promise. When a File is constructed, the full file record\r\n   * is not always available. If that is the case, or if the file URL is needed\r\n   * the record is fetched fresh, decoded, and returned. This also ensures that\r\n   * the filesUrl is always valid when needed.\r\n   *\r\n   * If url is false, and the Record has already been fetched, a cached version\r\n   * is returned rather than going to the server every time.\r\n   *\r\n   * @param {boolean} url Whether or not to get the fileUrl for download. Default: false\r\n   * @return {Promise<Record>} The underlying record associated with this File.\r\n   */\r\n  async record(url = false) {\r\n    // update the cache if needed, or if a file URL is requested\r\n    if (!this._record.meta.fileMeta.fileName || url) {\r\n      const method = url ? 'files' : 'records'\r\n      const recordResponse = await this._client.authenticator.tokenFetch(\r\n        `${this._client.config.apiUrl}/v1/storage/${method}/${this._record.meta.recordId}`\r\n      )\r\n      const serializedRecord = await validateResponseAsJSON(recordResponse)\r\n      this._record = Record.decode(serializedRecord)\r\n    }\r\n    return this._record\r\n  }\r\n\r\n  /**\r\n   * Downloads and decrypts the associated file for reading.\r\n   *\r\n   * This returns a platform specific object. That object is usable in helpers\r\n   * to convert it to a more standard primitive for your platform.\r\n   *\r\n   * @return {Promise<any>} A promise resolving to the platform specific stream\r\n   *                        of decrypted bytes.\r\n   */\r\n  async read() {\r\n    const ops = this._fileOps\r\n    const record = await this.record(true)\r\n    const accessKey = await shared.getAccessKey(\r\n      this._client,\r\n      record.meta.writerId,\r\n      record.meta.userId,\r\n      this._client.config.clientId,\r\n      record.meta.type\r\n    )\r\n    const source = await ops.download(record.meta.fileMeta.fileUrl)\r\n    return await this._client.crypto.decryptFile(source, accessKey, ops)\r\n  }\r\n}\r\n\r\nmodule.exports = File\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvc3RvcmFnZS9maWxlLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHRvem55c2VjdXJlL3Nkay8uL2xpYi9zdG9yYWdlL2ZpbGUuanM/NGNiNyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IFJlY29yZCB9ID0gcmVxdWlyZSgnLi4vLi4vdHlwZXMnKVxyXG5jb25zdCBGaWxlT3BlcmF0aW9ucyA9IHJlcXVpcmUoJy4vZmlsZU9wZXJhdGlvbnMnKVxyXG5jb25zdCBzaGFyZWQgPSByZXF1aXJlKCcuL3NoYXJlZCcpXHJcbmNvbnN0IHsgdmFsaWRhdGVSZXNwb25zZUFzSlNPTiB9ID0gcmVxdWlyZSgnLi4vdXRpbHMnKVxyXG5cclxuLyoqXHJcbiAqIEEgd3JhcHBlciBhcm91bmQgZmlsZSBSZWNvcmRzIGFsbG93aW5nIGVmZmljaWVudCBvcGVyYXRpb25zXHJcbiAqXHJcbiAqIFdoZW4gYSBmaWxlIFJlY29yZCBpcyBmZXRjaGVkLCB0aGUgYXNzb2NpYXRlZCBmaWxlIGlzIG5vdCBhbHdheXMgbmVlZGVkXHJcbiAqIGltbWVkaWF0ZWx5LiBUaGlzIHdyYXBwZXIgb3ZlciB0aGUgZmlsZSBSZWNvcmQgZGVsYXlzIHJlYWRpbmcgdGhlIGZpbGUgdW50aWxcclxuICogYWZ0ZXIgdGhlIFJlY29yZCB3YXMgb3JpZ2luYWxseSBmZXRjaGVkIChzdWNoIGFzIGZyb20gYSBzZWFyY2ggb3BlcmF0aW9uKS5cclxuICogRGVsYXlpbmcgcmVtb3ZlcyBhbnkgcmlzayBvZiB0aGUgcHJlLXNpZ25lZCBkb3dubG9hZCBVUkwgZXhwaXJpbmcgYmVmb3JlIHVzZS5cclxuICovXHJcbmNsYXNzIEZpbGUge1xyXG4gIGNvbnN0cnVjdG9yKHJlY29yZCwgY2xpZW50LCBvcGVyYXRpb25zKSB7XHJcbiAgICBpZiAoIShyZWNvcmQgaW5zdGFuY2VvZiBSZWNvcmQpIHx8ICFyZWNvcmQuaXNGaWxlKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignRmlsZXMgbXVzdCBiZSBjb25zdHJ1Y3RlZCB3aXRoIGEgZmlsZSByZWNvcmQgb2JqZWN0LicpXHJcbiAgICB9XHJcbiAgICAvLyBSdW4gYSB2ZXJ5IGJhc2ljIGR1Y2sgdHlwZSBjaGVjayBoZXJlIGJlY2F1c2Ugd2hlbiBpbXBvcnRpbmcgY2xpZW50IHdlXHJcbiAgICAvLyBjcmVhdGUgYSBjaXJjdWxhciBkZXBlbmRlbmN5IGFuZCBpdCBkb2Vzbid0IGFjdHVhbGx5IHdvcmsuXHJcbiAgICAvLyBSZWFsaXR5IGlzIHRoaXMgaXMgYW4gaW50ZXJuYWwgdHlwZSB0aGF0IGlzIG5vdCBkaXJlY3RseSBleHBvc2VkIGZvclxyXG4gICAgLy8gY29uc3RydWN0aW9uLiBUaGlzIGNoZWNrIGlzIGp1c3QgYSBsaXR0bGUgZXh0cmEgaW5zdXJhbmNlLlxyXG4gICAgaWYgKCFjbGllbnQuY29uZmlnIHx8ICFjbGllbnQuYXV0aGVudGljYXRvciB8fCAhY2xpZW50LmNyeXB0bykge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZpbGVzIG11c3QgaGF2ZSBhY2Nlc3MgdG8gYSBjbGllbnQgaW5zdGFuY2UnKVxyXG4gICAgfVxyXG4gICAgaWYgKCEob3BlcmF0aW9ucyBpbnN0YW5jZW9mIEZpbGVPcGVyYXRpb25zKSkge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZpbGVzIG11c3QgaGF2ZSBhY2Nlc3MgdG8gYSBGaWxlT3BlcmF0aW9ucyBpbnN0YW5jZScpXHJcbiAgICB9XHJcbiAgICB0aGlzLl9yZWNvcmQgPSByZWNvcmRcclxuICAgIHRoaXMuX2NsaWVudCA9IGNsaWVudFxyXG4gICAgdGhpcy5fZmlsZU9wcyA9IG9wZXJhdGlvbnNcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEdldHMgdGhlIHJlY29yZCBjb250YWluZWQgd2l0aGluIHRoZSBGaWxlIG9iamVjdC5cclxuICAgKlxyXG4gICAqIFRoaXMgcmV0dXJucyBhIHByb21pc2UuIFdoZW4gYSBGaWxlIGlzIGNvbnN0cnVjdGVkLCB0aGUgZnVsbCBmaWxlIHJlY29yZFxyXG4gICAqIGlzIG5vdCBhbHdheXMgYXZhaWxhYmxlLiBJZiB0aGF0IGlzIHRoZSBjYXNlLCBvciBpZiB0aGUgZmlsZSBVUkwgaXMgbmVlZGVkXHJcbiAgICogdGhlIHJlY29yZCBpcyBmZXRjaGVkIGZyZXNoLCBkZWNvZGVkLCBhbmQgcmV0dXJuZWQuIFRoaXMgYWxzbyBlbnN1cmVzIHRoYXRcclxuICAgKiB0aGUgZmlsZXNVcmwgaXMgYWx3YXlzIHZhbGlkIHdoZW4gbmVlZGVkLlxyXG4gICAqXHJcbiAgICogSWYgdXJsIGlzIGZhbHNlLCBhbmQgdGhlIFJlY29yZCBoYXMgYWxyZWFkeSBiZWVuIGZldGNoZWQsIGEgY2FjaGVkIHZlcnNpb25cclxuICAgKiBpcyByZXR1cm5lZCByYXRoZXIgdGhhbiBnb2luZyB0byB0aGUgc2VydmVyIGV2ZXJ5IHRpbWUuXHJcbiAgICpcclxuICAgKiBAcGFyYW0ge2Jvb2xlYW59IHVybCBXaGV0aGVyIG9yIG5vdCB0byBnZXQgdGhlIGZpbGVVcmwgZm9yIGRvd25sb2FkLiBEZWZhdWx0OiBmYWxzZVxyXG4gICAqIEByZXR1cm4ge1Byb21pc2U8UmVjb3JkPn0gVGhlIHVuZGVybHlpbmcgcmVjb3JkIGFzc29jaWF0ZWQgd2l0aCB0aGlzIEZpbGUuXHJcbiAgICovXHJcbiAgYXN5bmMgcmVjb3JkKHVybCA9IGZhbHNlKSB7XHJcbiAgICAvLyB1cGRhdGUgdGhlIGNhY2hlIGlmIG5lZWRlZCwgb3IgaWYgYSBmaWxlIFVSTCBpcyByZXF1ZXN0ZWRcclxuICAgIGlmICghdGhpcy5fcmVjb3JkLm1ldGEuZmlsZU1ldGEuZmlsZU5hbWUgfHwgdXJsKSB7XHJcbiAgICAgIGNvbnN0IG1ldGhvZCA9IHVybCA/ICdmaWxlcycgOiAncmVjb3JkcydcclxuICAgICAgY29uc3QgcmVjb3JkUmVzcG9uc2UgPSBhd2FpdCB0aGlzLl9jbGllbnQuYXV0aGVudGljYXRvci50b2tlbkZldGNoKFxyXG4gICAgICAgIGAke3RoaXMuX2NsaWVudC5jb25maWcuYXBpVXJsfS92MS9zdG9yYWdlLyR7bWV0aG9kfS8ke3RoaXMuX3JlY29yZC5tZXRhLnJlY29yZElkfWBcclxuICAgICAgKVxyXG4gICAgICBjb25zdCBzZXJpYWxpemVkUmVjb3JkID0gYXdhaXQgdmFsaWRhdGVSZXNwb25zZUFzSlNPTihyZWNvcmRSZXNwb25zZSlcclxuICAgICAgdGhpcy5fcmVjb3JkID0gUmVjb3JkLmRlY29kZShzZXJpYWxpemVkUmVjb3JkKVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRoaXMuX3JlY29yZFxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRG93bmxvYWRzIGFuZCBkZWNyeXB0cyB0aGUgYXNzb2NpYXRlZCBmaWxlIGZvciByZWFkaW5nLlxyXG4gICAqXHJcbiAgICogVGhpcyByZXR1cm5zIGEgcGxhdGZvcm0gc3BlY2lmaWMgb2JqZWN0LiBUaGF0IG9iamVjdCBpcyB1c2FibGUgaW4gaGVscGVyc1xyXG4gICAqIHRvIGNvbnZlcnQgaXQgdG8gYSBtb3JlIHN0YW5kYXJkIHByaW1pdGl2ZSBmb3IgeW91ciBwbGF0Zm9ybS5cclxuICAgKlxyXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gQSBwcm9taXNlIHJlc29sdmluZyB0byB0aGUgcGxhdGZvcm0gc3BlY2lmaWMgc3RyZWFtXHJcbiAgICogICAgICAgICAgICAgICAgICAgICAgICBvZiBkZWNyeXB0ZWQgYnl0ZXMuXHJcbiAgICovXHJcbiAgYXN5bmMgcmVhZCgpIHtcclxuICAgIGNvbnN0IG9wcyA9IHRoaXMuX2ZpbGVPcHNcclxuICAgIGNvbnN0IHJlY29yZCA9IGF3YWl0IHRoaXMucmVjb3JkKHRydWUpXHJcbiAgICBjb25zdCBhY2Nlc3NLZXkgPSBhd2FpdCBzaGFyZWQuZ2V0QWNjZXNzS2V5KFxyXG4gICAgICB0aGlzLl9jbGllbnQsXHJcbiAgICAgIHJlY29yZC5tZXRhLndyaXRlcklkLFxyXG4gICAgICByZWNvcmQubWV0YS51c2VySWQsXHJcbiAgICAgIHRoaXMuX2NsaWVudC5jb25maWcuY2xpZW50SWQsXHJcbiAgICAgIHJlY29yZC5tZXRhLnR5cGVcclxuICAgIClcclxuICAgIGNvbnN0IHNvdXJjZSA9IGF3YWl0IG9wcy5kb3dubG9hZChyZWNvcmQubWV0YS5maWxlTWV0YS5maWxlVXJsKVxyXG4gICAgcmV0dXJuIGF3YWl0IHRoaXMuX2NsaWVudC5jcnlwdG8uZGVjcnlwdEZpbGUoc291cmNlLCBhY2Nlc3NLZXksIG9wcylcclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gRmlsZVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/storage/file.js\n");

/***/ }),

/***/ "./lib/storage/fileOperations.js":
/*!***************************************!*\
  !*** ./lib/storage/fileOperations.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { checkConstructor, notImplemented } = __webpack_require__(/*! ../utils/interface */ \"./lib/utils/interface.js\")\r\n\r\n/* eslint-disable no-unused-vars */\r\n\r\nclass FileOperations {\r\n  constructor() {\r\n    checkConstructor(this, FileOperations)\r\n  }\r\n\r\n  /**\r\n   * validateHandle ensures the correct platform specific file handle is provided.\r\n   *\r\n   * @param {any} fileHandle The file handle for the platform\r\n   * @return {undefined} returns nothing, throws if the handle is not valid\r\n   */\r\n  validateHandle(handle) {\r\n    notImplemented()\r\n  }\r\n\r\n  /**\r\n   * Gets an object which fits the interface needed to collect decrypted bytes.\r\n   *\r\n   * @return {object} Object containing write, close, and getReader methods.\r\n   */\r\n  decryptDestination() {\r\n    notImplemented()\r\n  }\r\n\r\n  /**\r\n   * Gets an object which fits the interface needed to store encrypted bytes.\r\n   *\r\n   * @return {object} Object containing write, remove, and getUploadable methods.\r\n   */\r\n  encryptDestination() {\r\n    notImplemented()\r\n  }\r\n\r\n  /**\r\n   * Gets an object which knows how to read the underlying platform specific file handle.\r\n   *\r\n   * @param {any} handle The platform specific file handle\r\n   * @param {number} blockSize The number of block to return on each read()\r\n   */\r\n  sourceReader(handle, blockSize) {\r\n    notImplemented()\r\n  }\r\n\r\n  /**\r\n   * Platform specific download to allow streaming processing of the bytes\r\n   *\r\n   * @param {string} url The URL where the object is available for download\r\n   */\r\n  async download(url) {\r\n    notImplemented()\r\n  }\r\n\r\n  /**\r\n   * Platform specific upload allowing streaming upload of the bytes\r\n   *\r\n   * @param {string} url The URL where the object can be uploaded\r\n   * @param {any} body The platform specific body object\r\n   * @param {string} checksum A base64 encoded md5 of the body bytes\r\n   * @param {number} size The total number of body bytes\r\n   */\r\n  async upload(url, body, checksum, size) {\r\n    notImplemented()\r\n  }\r\n}\r\n\r\nmodule.exports = FileOperations\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvc3RvcmFnZS9maWxlT3BlcmF0aW9ucy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B0b3pueXNlY3VyZS9zZGsvLi9saWIvc3RvcmFnZS9maWxlT3BlcmF0aW9ucy5qcz85ODFmIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgY2hlY2tDb25zdHJ1Y3Rvciwgbm90SW1wbGVtZW50ZWQgfSA9IHJlcXVpcmUoJy4uL3V0aWxzL2ludGVyZmFjZScpXHJcblxyXG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xyXG5cclxuY2xhc3MgRmlsZU9wZXJhdGlvbnMge1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgY2hlY2tDb25zdHJ1Y3Rvcih0aGlzLCBGaWxlT3BlcmF0aW9ucylcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIHZhbGlkYXRlSGFuZGxlIGVuc3VyZXMgdGhlIGNvcnJlY3QgcGxhdGZvcm0gc3BlY2lmaWMgZmlsZSBoYW5kbGUgaXMgcHJvdmlkZWQuXHJcbiAgICpcclxuICAgKiBAcGFyYW0ge2FueX0gZmlsZUhhbmRsZSBUaGUgZmlsZSBoYW5kbGUgZm9yIHRoZSBwbGF0Zm9ybVxyXG4gICAqIEByZXR1cm4ge3VuZGVmaW5lZH0gcmV0dXJucyBub3RoaW5nLCB0aHJvd3MgaWYgdGhlIGhhbmRsZSBpcyBub3QgdmFsaWRcclxuICAgKi9cclxuICB2YWxpZGF0ZUhhbmRsZShoYW5kbGUpIHtcclxuICAgIG5vdEltcGxlbWVudGVkKClcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEdldHMgYW4gb2JqZWN0IHdoaWNoIGZpdHMgdGhlIGludGVyZmFjZSBuZWVkZWQgdG8gY29sbGVjdCBkZWNyeXB0ZWQgYnl0ZXMuXHJcbiAgICpcclxuICAgKiBAcmV0dXJuIHtvYmplY3R9IE9iamVjdCBjb250YWluaW5nIHdyaXRlLCBjbG9zZSwgYW5kIGdldFJlYWRlciBtZXRob2RzLlxyXG4gICAqL1xyXG4gIGRlY3J5cHREZXN0aW5hdGlvbigpIHtcclxuICAgIG5vdEltcGxlbWVudGVkKClcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEdldHMgYW4gb2JqZWN0IHdoaWNoIGZpdHMgdGhlIGludGVyZmFjZSBuZWVkZWQgdG8gc3RvcmUgZW5jcnlwdGVkIGJ5dGVzLlxyXG4gICAqXHJcbiAgICogQHJldHVybiB7b2JqZWN0fSBPYmplY3QgY29udGFpbmluZyB3cml0ZSwgcmVtb3ZlLCBhbmQgZ2V0VXBsb2FkYWJsZSBtZXRob2RzLlxyXG4gICAqL1xyXG4gIGVuY3J5cHREZXN0aW5hdGlvbigpIHtcclxuICAgIG5vdEltcGxlbWVudGVkKClcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEdldHMgYW4gb2JqZWN0IHdoaWNoIGtub3dzIGhvdyB0byByZWFkIHRoZSB1bmRlcmx5aW5nIHBsYXRmb3JtIHNwZWNpZmljIGZpbGUgaGFuZGxlLlxyXG4gICAqXHJcbiAgICogQHBhcmFtIHthbnl9IGhhbmRsZSBUaGUgcGxhdGZvcm0gc3BlY2lmaWMgZmlsZSBoYW5kbGVcclxuICAgKiBAcGFyYW0ge251bWJlcn0gYmxvY2tTaXplIFRoZSBudW1iZXIgb2YgYmxvY2sgdG8gcmV0dXJuIG9uIGVhY2ggcmVhZCgpXHJcbiAgICovXHJcbiAgc291cmNlUmVhZGVyKGhhbmRsZSwgYmxvY2tTaXplKSB7XHJcbiAgICBub3RJbXBsZW1lbnRlZCgpXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBQbGF0Zm9ybSBzcGVjaWZpYyBkb3dubG9hZCB0byBhbGxvdyBzdHJlYW1pbmcgcHJvY2Vzc2luZyBvZiB0aGUgYnl0ZXNcclxuICAgKlxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSB1cmwgVGhlIFVSTCB3aGVyZSB0aGUgb2JqZWN0IGlzIGF2YWlsYWJsZSBmb3IgZG93bmxvYWRcclxuICAgKi9cclxuICBhc3luYyBkb3dubG9hZCh1cmwpIHtcclxuICAgIG5vdEltcGxlbWVudGVkKClcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFBsYXRmb3JtIHNwZWNpZmljIHVwbG9hZCBhbGxvd2luZyBzdHJlYW1pbmcgdXBsb2FkIG9mIHRoZSBieXRlc1xyXG4gICAqXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IHVybCBUaGUgVVJMIHdoZXJlIHRoZSBvYmplY3QgY2FuIGJlIHVwbG9hZGVkXHJcbiAgICogQHBhcmFtIHthbnl9IGJvZHkgVGhlIHBsYXRmb3JtIHNwZWNpZmljIGJvZHkgb2JqZWN0XHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IGNoZWNrc3VtIEEgYmFzZTY0IGVuY29kZWQgbWQ1IG9mIHRoZSBib2R5IGJ5dGVzXHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IHNpemUgVGhlIHRvdGFsIG51bWJlciBvZiBib2R5IGJ5dGVzXHJcbiAgICovXHJcbiAgYXN5bmMgdXBsb2FkKHVybCwgYm9keSwgY2hlY2tzdW0sIHNpemUpIHtcclxuICAgIG5vdEltcGxlbWVudGVkKClcclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gRmlsZU9wZXJhdGlvbnNcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/storage/fileOperations.js\n");

/***/ }),

/***/ "./lib/storage/index.js":
/*!******************************!*\
  !*** ./lib/storage/index.js ***!
  \******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Config = __webpack_require__(/*! ./config */ \"./lib/storage/config.js\")\r\nconst ClientBase = __webpack_require__(/*! ./client */ \"./lib/storage/client.js\")\r\nconst Crypto = __webpack_require__(/*! ../crypto/crypto */ \"./lib/crypto/crypto.js\")\r\nconst FileOperations = __webpack_require__(/*! ./fileOperations */ \"./lib/storage/fileOperations.js\")\r\nconst shared = __webpack_require__(/*! ./shared */ \"./lib/storage/shared.js\")\r\nconst { DEFAULT_API_URL } = __webpack_require__(/*! ../utils/constants */ \"./lib/utils/constants.js\")\r\nconst {\r\n  PublicKey,\r\n  SigningKey,\r\n  ClientDetails,\r\n  NoteOptions,\r\n} = __webpack_require__(/*! ../../types */ \"./types/index.js\")\r\nconst fetch = __webpack_require__(/*! cross-fetch */ \"./node_modules/cross-fetch/dist/browser-ponyfill.js\")\r\nconst { checkStatus } = __webpack_require__(/*! ../../lib/utils */ \"./lib/utils/index.js\")\r\nconst AuthenticatedRequest = __webpack_require__(/*! ../request/authenticatedRequest */ \"./lib/request/authenticatedRequest.js\")\r\n\r\n/**\r\n * The primary storage object, providing registration and client instantiation.\r\n */\r\nclass Storage {\r\n  /**\r\n   * Create an instance of Storage with a specific crypto mode.\r\n   *\r\n   * @param {Crypto} crypto An instance of Crypto for storage use.\r\n   */\r\n  constructor(crypto, fileOperations) {\r\n    if (!(crypto instanceof Crypto)) {\r\n      throw new Error(\r\n        'To create a storage object you must provide a valid crypto instance.'\r\n      )\r\n    }\r\n    if (!(fileOperations instanceof FileOperations)) {\r\n      throw new Error(\r\n        'To create a storage object you must provide a valid file operations instance'\r\n      )\r\n    }\r\n    this.Client = class Client extends ClientBase {\r\n      static get crypto() {\r\n        return crypto\r\n      }\r\n\r\n      get _fileOperations() {\r\n        return fileOperations\r\n      }\r\n    }\r\n    this.Config = Config\r\n    this.crypto = crypto\r\n  }\r\n\r\n  /**\r\n   * Register a new client with a specific account.\r\n   *\r\n   * @param {string}  registrationToken Registration token as presented by the admin console\r\n   * @param {string}  clientName        Distinguishable name to be used for the token in the console\r\n   * @param {KeyPair} cryptoKeys        Curve25519 key pair used for encryption\r\n   * @param {KeyPair} signingKeys       Ed25519 key pair used for signing\r\n   * @param {bool}    [backup]          Optional flag to automatically back up the newly-created credentials to the account service\r\n   * @param {string}  [apiUrl]          Base URI for the e3DB API\r\n   *\r\n   * @returns {ClientDetails}\r\n   */\r\n  async register(\r\n    registrationToken,\r\n    clientName,\r\n    cryptoKeys,\r\n    signingKeys,\r\n    backup = false,\r\n    apiUrl = DEFAULT_API_URL\r\n  ) {\r\n    /* eslint-disable camelcase */\r\n    let payload\r\n    if (signingKeys) {\r\n      payload = {\r\n        token: registrationToken,\r\n        client: {\r\n          name: clientName,\r\n          public_key: new PublicKey(cryptoKeys.publicKey),\r\n          signing_key: new SigningKey(signingKeys.publicKey),\r\n        },\r\n      }\r\n    } else {\r\n      payload = {\r\n        token: registrationToken,\r\n        client: {\r\n          name: clientName,\r\n          public_key: new PublicKey(cryptoKeys.publicKey),\r\n        },\r\n      }\r\n    }\r\n    /* eslint-enable */\r\n    let backupClientId = false\r\n    let request = await fetch(apiUrl + '/v1/account/e3db/clients/register', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(payload),\r\n    })\r\n    let response = await checkStatus(request)\r\n    if (response.headers.has('X-Backup-Client')) {\r\n      backupClientId = response.headers.get('X-Backup-Client')\r\n    }\r\n    let json = await response.json()\r\n    let details = await ClientDetails.decode(json)\r\n    if (backup && backupClientId) {\r\n      if (cryptoKeys.privateKey === null) {\r\n        throw new Error('Cannot back up credentials without a private key!')\r\n      }\r\n      let config = signingKeys\r\n        ? new this.Config(\r\n            details.clientId,\r\n            details.apiKeyId,\r\n            details.apiSecret,\r\n            cryptoKeys.publicKey,\r\n            cryptoKeys.privateKey,\r\n            signingKeys.publicKey,\r\n            signingKeys.privateKey,\r\n            apiUrl\r\n          )\r\n        : new this.Config(\r\n            details.clientId,\r\n            details.apiKeyId,\r\n            details.apiSecret,\r\n            cryptoKeys.publicKey,\r\n            cryptoKeys.privateKey,\r\n            undefined,\r\n            undefined,\r\n            apiUrl\r\n          )\r\n      // Using `this` as the constructor creates an instance of the implementing\r\n      // concrete class rather than the interface\r\n      let client = new this.Client(config)\r\n      await client.backup(backupClientId, registrationToken)\r\n    }\r\n\r\n    return Promise.resolve(details)\r\n  }\r\n\r\n  /**\r\n   * Proxy to generating a new key pair using the crypto module provided.\r\n   *\r\n   * @returns {KeyPair} Base64URL-encoded representation of the new keypair\r\n   */\r\n  async generateKeypair() {\r\n    return this.crypto.generateKeypair()\r\n  }\r\n\r\n  /**\r\n   * Proxy to generating a new signing key pair using the crypto module provided.\r\n   *\r\n   * @returns {KeyPair} Base64URL-encoded representation of the new keypair\r\n   */\r\n  async generateSigningKeypair() {\r\n    return this.crypto.generateSigningKeypair()\r\n  }\r\n\r\n  /**\r\n   * WriteNote is a static method that encrypts a note and sends it to TozStore,\r\n   * allowing you to supply your own signingKey and encryptionKey pairs.\r\n   *\r\n   * Using this method you are not allowed to provide premium options to TozStore,\r\n   * such as additional views, extended expiration time, etc.\r\n   *\r\n   * @param {object} data  A hashmap of the data to encrypt and store\r\n   * @param {string} recipientEncryptionKey The public encryption key of the reader of this note\r\n   * @param {string} recipientSigningKey The public signing key of the reader of this note\r\n   * @param {KeyPair} signingKeyPair Object that has signing public and private keys\r\n   * @param {KeyPair} encryptionKeyPair Object that has encryption public and private keys\r\n   * @param {object} options json hashmap of a NoteOptions object, minus premium features.\r\n   * @param {string} apiUrl Url of the TozStore api that you want to hit (Default is recommended).\r\n   *\r\n   * @returns {Note} A response from TozStore; the note that has been written.\r\n   */\r\n  async writeNote(\r\n    data,\r\n    recipientEncryptionKey,\r\n    recipientSigningKey,\r\n    encryptionKeyPair,\r\n    signingKeyPair,\r\n    options,\r\n    apiUrl = DEFAULT_API_URL\r\n  ) {\r\n    let anonAuth = await AuthenticatedRequest.anonymousAuth(\r\n      this.crypto,\r\n      signingKeyPair.publicKey,\r\n      signingKeyPair.privateKey,\r\n      apiUrl\r\n    )\r\n\r\n    // Premium options are not extracted\r\n    /* eslint-disable camelcase */\r\n    var decodedOptions = NoteOptions.decode({\r\n      type: options.type,\r\n      plain: options.plain,\r\n      max_views: options.max_views,\r\n    })\r\n    /* eslint-enable */\r\n    return shared.writeNote(\r\n      this.crypto,\r\n      anonAuth,\r\n      data,\r\n      recipientEncryptionKey,\r\n      recipientSigningKey,\r\n      encryptionKeyPair,\r\n      signingKeyPair,\r\n      decodedOptions,\r\n      apiUrl\r\n    )\r\n  }\r\n\r\n  /**\r\n   * ReadNote is a static method used to read a note,\r\n   * allowing you to supply your own signingKey and encryptionKey pairs.\r\n   *\r\n   * @param {string} noteId  UUID assigned by TozStore, used to identify a note.\r\n   * @param {KeyPair} signingKeyPair Object that has signing public and private keys\r\n   * @param {KeyPair} encryptionKeyPair Object that has encryption public and private keys\r\n   * @param {string} apiUrl Url of the TozStore api that you want to hit (Default is recommended).\r\n   *\r\n   * @returns {Note} A note from TozStore unencrypted with the client's keys.\r\n   */\r\n  async readNote(\r\n    noteId,\r\n    encryptionKeyPair,\r\n    signingKeyPair,\r\n    authParams = {},\r\n    authHeaders = {},\r\n    apiUrl = DEFAULT_API_URL\r\n  ) {\r\n    let anonAuth = await AuthenticatedRequest.anonymousAuth(\r\n      this.crypto,\r\n      signingKeyPair.publicKey,\r\n      signingKeyPair.privateKey,\r\n      apiUrl\r\n    )\r\n    // eslint-disable-next-line camelcase\r\n    const params = Object.assign({}, authParams, { note_id: noteId })\r\n    // Use this to ensure we referencing the implementing class.\r\n    return shared.readNote(\r\n      this.crypto,\r\n      anonAuth,\r\n      encryptionKeyPair,\r\n      params,\r\n      authHeaders,\r\n      apiUrl\r\n    )\r\n  }\r\n\r\n  /**\r\n   * ReadNoteByName is a static method used to read a note by name,\r\n   * allowing you to supply your own signingKey and encryptionKey pairs.\r\n   *\r\n   * PLEASE NOTE: only notes written by a client, not the static writeNote method,\r\n   * can have a noteName attached.\r\n   *\r\n   * @param {string} noteName  name given to this note with premium features\r\n   * @param {KeyPair} signingKeyPair Object that has signing public and private keys\r\n   * @param {KeyPair} encryptionKeyPair Object that has encryption public and private keys\r\n   * @param {string} apiUrl Url of the TozStore api that you want to hit (Default is recommended).\r\n   *\r\n   * @returns {Note} A note from TozStore unencrypted with the client's keys.\r\n   */\r\n  async readNoteByName(\r\n    noteName,\r\n    encryptionKeyPair,\r\n    signingKeyPair,\r\n    authParams = {},\r\n    authHeaders = {},\r\n    apiUrl = DEFAULT_API_URL\r\n  ) {\r\n    let anonAuth = await AuthenticatedRequest.anonymousAuth(\r\n      this.crypto,\r\n      signingKeyPair.publicKey,\r\n      signingKeyPair.privateKey,\r\n      apiUrl\r\n    )\r\n    // Use this to ensure we referencing the implementing class.\r\n    // eslint-disable-next-line camelcase\r\n\r\n    const params = Object.assign({}, authParams, { id_string: noteName })\r\n    return shared.readNote(\r\n      this.crypto,\r\n      anonAuth,\r\n      encryptionKeyPair,\r\n      params,\r\n      authHeaders,\r\n      apiUrl\r\n    )\r\n  }\r\n\r\n  /**\r\n   * DeleteNote is a static method that deletes a note from TozStore based on the note identifier,\r\n   * allowing you to supply your own signingKey pair.\r\n   *\r\n   * @param {string} noteId  UUID assigned by TozStore, used to identify a note.\r\n   */\r\n  async deleteNote(noteId, signingKeyPair, apiUrl = DEFAULT_API_URL) {\r\n    let anonAuth = await AuthenticatedRequest.anonymousAuth(\r\n      this.crypto,\r\n      signingKeyPair.publicKey,\r\n      signingKeyPair.privateKey,\r\n      apiUrl\r\n    )\r\n    return shared.deleteNote(anonAuth, noteId, apiUrl)\r\n  }\r\n}\r\n\r\nmodule.exports = Storage\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvc3RvcmFnZS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHRvem55c2VjdXJlL3Nkay8uL2xpYi9zdG9yYWdlL2luZGV4LmpzP2I3ZDAiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQ29uZmlnID0gcmVxdWlyZSgnLi9jb25maWcnKVxyXG5jb25zdCBDbGllbnRCYXNlID0gcmVxdWlyZSgnLi9jbGllbnQnKVxyXG5jb25zdCBDcnlwdG8gPSByZXF1aXJlKCcuLi9jcnlwdG8vY3J5cHRvJylcclxuY29uc3QgRmlsZU9wZXJhdGlvbnMgPSByZXF1aXJlKCcuL2ZpbGVPcGVyYXRpb25zJylcclxuY29uc3Qgc2hhcmVkID0gcmVxdWlyZSgnLi9zaGFyZWQnKVxyXG5jb25zdCB7IERFRkFVTFRfQVBJX1VSTCB9ID0gcmVxdWlyZSgnLi4vdXRpbHMvY29uc3RhbnRzJylcclxuY29uc3Qge1xyXG4gIFB1YmxpY0tleSxcclxuICBTaWduaW5nS2V5LFxyXG4gIENsaWVudERldGFpbHMsXHJcbiAgTm90ZU9wdGlvbnMsXHJcbn0gPSByZXF1aXJlKCcuLi8uLi90eXBlcycpXHJcbmNvbnN0IGZldGNoID0gcmVxdWlyZSgnY3Jvc3MtZmV0Y2gnKVxyXG5jb25zdCB7IGNoZWNrU3RhdHVzIH0gPSByZXF1aXJlKCcuLi8uLi9saWIvdXRpbHMnKVxyXG5jb25zdCBBdXRoZW50aWNhdGVkUmVxdWVzdCA9IHJlcXVpcmUoJy4uL3JlcXVlc3QvYXV0aGVudGljYXRlZFJlcXVlc3QnKVxyXG5cclxuLyoqXHJcbiAqIFRoZSBwcmltYXJ5IHN0b3JhZ2Ugb2JqZWN0LCBwcm92aWRpbmcgcmVnaXN0cmF0aW9uIGFuZCBjbGllbnQgaW5zdGFudGlhdGlvbi5cclxuICovXHJcbmNsYXNzIFN0b3JhZ2Uge1xyXG4gIC8qKlxyXG4gICAqIENyZWF0ZSBhbiBpbnN0YW5jZSBvZiBTdG9yYWdlIHdpdGggYSBzcGVjaWZpYyBjcnlwdG8gbW9kZS5cclxuICAgKlxyXG4gICAqIEBwYXJhbSB7Q3J5cHRvfSBjcnlwdG8gQW4gaW5zdGFuY2Ugb2YgQ3J5cHRvIGZvciBzdG9yYWdlIHVzZS5cclxuICAgKi9cclxuICBjb25zdHJ1Y3RvcihjcnlwdG8sIGZpbGVPcGVyYXRpb25zKSB7XHJcbiAgICBpZiAoIShjcnlwdG8gaW5zdGFuY2VvZiBDcnlwdG8pKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihcclxuICAgICAgICAnVG8gY3JlYXRlIGEgc3RvcmFnZSBvYmplY3QgeW91IG11c3QgcHJvdmlkZSBhIHZhbGlkIGNyeXB0byBpbnN0YW5jZS4nXHJcbiAgICAgIClcclxuICAgIH1cclxuICAgIGlmICghKGZpbGVPcGVyYXRpb25zIGluc3RhbmNlb2YgRmlsZU9wZXJhdGlvbnMpKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihcclxuICAgICAgICAnVG8gY3JlYXRlIGEgc3RvcmFnZSBvYmplY3QgeW91IG11c3QgcHJvdmlkZSBhIHZhbGlkIGZpbGUgb3BlcmF0aW9ucyBpbnN0YW5jZSdcclxuICAgICAgKVxyXG4gICAgfVxyXG4gICAgdGhpcy5DbGllbnQgPSBjbGFzcyBDbGllbnQgZXh0ZW5kcyBDbGllbnRCYXNlIHtcclxuICAgICAgc3RhdGljIGdldCBjcnlwdG8oKSB7XHJcbiAgICAgICAgcmV0dXJuIGNyeXB0b1xyXG4gICAgICB9XHJcblxyXG4gICAgICBnZXQgX2ZpbGVPcGVyYXRpb25zKCkge1xyXG4gICAgICAgIHJldHVybiBmaWxlT3BlcmF0aW9uc1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICB0aGlzLkNvbmZpZyA9IENvbmZpZ1xyXG4gICAgdGhpcy5jcnlwdG8gPSBjcnlwdG9cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFJlZ2lzdGVyIGEgbmV3IGNsaWVudCB3aXRoIGEgc3BlY2lmaWMgYWNjb3VudC5cclxuICAgKlxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSAgcmVnaXN0cmF0aW9uVG9rZW4gUmVnaXN0cmF0aW9uIHRva2VuIGFzIHByZXNlbnRlZCBieSB0aGUgYWRtaW4gY29uc29sZVxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSAgY2xpZW50TmFtZSAgICAgICAgRGlzdGluZ3Vpc2hhYmxlIG5hbWUgdG8gYmUgdXNlZCBmb3IgdGhlIHRva2VuIGluIHRoZSBjb25zb2xlXHJcbiAgICogQHBhcmFtIHtLZXlQYWlyfSBjcnlwdG9LZXlzICAgICAgICBDdXJ2ZTI1NTE5IGtleSBwYWlyIHVzZWQgZm9yIGVuY3J5cHRpb25cclxuICAgKiBAcGFyYW0ge0tleVBhaXJ9IHNpZ25pbmdLZXlzICAgICAgIEVkMjU1MTkga2V5IHBhaXIgdXNlZCBmb3Igc2lnbmluZ1xyXG4gICAqIEBwYXJhbSB7Ym9vbH0gICAgW2JhY2t1cF0gICAgICAgICAgT3B0aW9uYWwgZmxhZyB0byBhdXRvbWF0aWNhbGx5IGJhY2sgdXAgdGhlIG5ld2x5LWNyZWF0ZWQgY3JlZGVudGlhbHMgdG8gdGhlIGFjY291bnQgc2VydmljZVxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSAgW2FwaVVybF0gICAgICAgICAgQmFzZSBVUkkgZm9yIHRoZSBlM0RCIEFQSVxyXG4gICAqXHJcbiAgICogQHJldHVybnMge0NsaWVudERldGFpbHN9XHJcbiAgICovXHJcbiAgYXN5bmMgcmVnaXN0ZXIoXHJcbiAgICByZWdpc3RyYXRpb25Ub2tlbixcclxuICAgIGNsaWVudE5hbWUsXHJcbiAgICBjcnlwdG9LZXlzLFxyXG4gICAgc2lnbmluZ0tleXMsXHJcbiAgICBiYWNrdXAgPSBmYWxzZSxcclxuICAgIGFwaVVybCA9IERFRkFVTFRfQVBJX1VSTFxyXG4gICkge1xyXG4gICAgLyogZXNsaW50LWRpc2FibGUgY2FtZWxjYXNlICovXHJcbiAgICBsZXQgcGF5bG9hZFxyXG4gICAgaWYgKHNpZ25pbmdLZXlzKSB7XHJcbiAgICAgIHBheWxvYWQgPSB7XHJcbiAgICAgICAgdG9rZW46IHJlZ2lzdHJhdGlvblRva2VuLFxyXG4gICAgICAgIGNsaWVudDoge1xyXG4gICAgICAgICAgbmFtZTogY2xpZW50TmFtZSxcclxuICAgICAgICAgIHB1YmxpY19rZXk6IG5ldyBQdWJsaWNLZXkoY3J5cHRvS2V5cy5wdWJsaWNLZXkpLFxyXG4gICAgICAgICAgc2lnbmluZ19rZXk6IG5ldyBTaWduaW5nS2V5KHNpZ25pbmdLZXlzLnB1YmxpY0tleSksXHJcbiAgICAgICAgfSxcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcGF5bG9hZCA9IHtcclxuICAgICAgICB0b2tlbjogcmVnaXN0cmF0aW9uVG9rZW4sXHJcbiAgICAgICAgY2xpZW50OiB7XHJcbiAgICAgICAgICBuYW1lOiBjbGllbnROYW1lLFxyXG4gICAgICAgICAgcHVibGljX2tleTogbmV3IFB1YmxpY0tleShjcnlwdG9LZXlzLnB1YmxpY0tleSksXHJcbiAgICAgICAgfSxcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyogZXNsaW50LWVuYWJsZSAqL1xyXG4gICAgbGV0IGJhY2t1cENsaWVudElkID0gZmFsc2VcclxuICAgIGxldCByZXF1ZXN0ID0gYXdhaXQgZmV0Y2goYXBpVXJsICsgJy92MS9hY2NvdW50L2UzZGIvY2xpZW50cy9yZWdpc3RlcicsIHtcclxuICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gICAgICB9LFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShwYXlsb2FkKSxcclxuICAgIH0pXHJcbiAgICBsZXQgcmVzcG9uc2UgPSBhd2FpdCBjaGVja1N0YXR1cyhyZXF1ZXN0KVxyXG4gICAgaWYgKHJlc3BvbnNlLmhlYWRlcnMuaGFzKCdYLUJhY2t1cC1DbGllbnQnKSkge1xyXG4gICAgICBiYWNrdXBDbGllbnRJZCA9IHJlc3BvbnNlLmhlYWRlcnMuZ2V0KCdYLUJhY2t1cC1DbGllbnQnKVxyXG4gICAgfVxyXG4gICAgbGV0IGpzb24gPSBhd2FpdCByZXNwb25zZS5qc29uKClcclxuICAgIGxldCBkZXRhaWxzID0gYXdhaXQgQ2xpZW50RGV0YWlscy5kZWNvZGUoanNvbilcclxuICAgIGlmIChiYWNrdXAgJiYgYmFja3VwQ2xpZW50SWQpIHtcclxuICAgICAgaWYgKGNyeXB0b0tleXMucHJpdmF0ZUtleSA9PT0gbnVsbCkge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IGJhY2sgdXAgY3JlZGVudGlhbHMgd2l0aG91dCBhIHByaXZhdGUga2V5IScpXHJcbiAgICAgIH1cclxuICAgICAgbGV0IGNvbmZpZyA9IHNpZ25pbmdLZXlzXHJcbiAgICAgICAgPyBuZXcgdGhpcy5Db25maWcoXHJcbiAgICAgICAgICAgIGRldGFpbHMuY2xpZW50SWQsXHJcbiAgICAgICAgICAgIGRldGFpbHMuYXBpS2V5SWQsXHJcbiAgICAgICAgICAgIGRldGFpbHMuYXBpU2VjcmV0LFxyXG4gICAgICAgICAgICBjcnlwdG9LZXlzLnB1YmxpY0tleSxcclxuICAgICAgICAgICAgY3J5cHRvS2V5cy5wcml2YXRlS2V5LFxyXG4gICAgICAgICAgICBzaWduaW5nS2V5cy5wdWJsaWNLZXksXHJcbiAgICAgICAgICAgIHNpZ25pbmdLZXlzLnByaXZhdGVLZXksXHJcbiAgICAgICAgICAgIGFwaVVybFxyXG4gICAgICAgICAgKVxyXG4gICAgICAgIDogbmV3IHRoaXMuQ29uZmlnKFxyXG4gICAgICAgICAgICBkZXRhaWxzLmNsaWVudElkLFxyXG4gICAgICAgICAgICBkZXRhaWxzLmFwaUtleUlkLFxyXG4gICAgICAgICAgICBkZXRhaWxzLmFwaVNlY3JldCxcclxuICAgICAgICAgICAgY3J5cHRvS2V5cy5wdWJsaWNLZXksXHJcbiAgICAgICAgICAgIGNyeXB0b0tleXMucHJpdmF0ZUtleSxcclxuICAgICAgICAgICAgdW5kZWZpbmVkLFxyXG4gICAgICAgICAgICB1bmRlZmluZWQsXHJcbiAgICAgICAgICAgIGFwaVVybFxyXG4gICAgICAgICAgKVxyXG4gICAgICAvLyBVc2luZyBgdGhpc2AgYXMgdGhlIGNvbnN0cnVjdG9yIGNyZWF0ZXMgYW4gaW5zdGFuY2Ugb2YgdGhlIGltcGxlbWVudGluZ1xyXG4gICAgICAvLyBjb25jcmV0ZSBjbGFzcyByYXRoZXIgdGhhbiB0aGUgaW50ZXJmYWNlXHJcbiAgICAgIGxldCBjbGllbnQgPSBuZXcgdGhpcy5DbGllbnQoY29uZmlnKVxyXG4gICAgICBhd2FpdCBjbGllbnQuYmFja3VwKGJhY2t1cENsaWVudElkLCByZWdpc3RyYXRpb25Ub2tlbilcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGRldGFpbHMpXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBQcm94eSB0byBnZW5lcmF0aW5nIGEgbmV3IGtleSBwYWlyIHVzaW5nIHRoZSBjcnlwdG8gbW9kdWxlIHByb3ZpZGVkLlxyXG4gICAqXHJcbiAgICogQHJldHVybnMge0tleVBhaXJ9IEJhc2U2NFVSTC1lbmNvZGVkIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBuZXcga2V5cGFpclxyXG4gICAqL1xyXG4gIGFzeW5jIGdlbmVyYXRlS2V5cGFpcigpIHtcclxuICAgIHJldHVybiB0aGlzLmNyeXB0by5nZW5lcmF0ZUtleXBhaXIoKVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogUHJveHkgdG8gZ2VuZXJhdGluZyBhIG5ldyBzaWduaW5nIGtleSBwYWlyIHVzaW5nIHRoZSBjcnlwdG8gbW9kdWxlIHByb3ZpZGVkLlxyXG4gICAqXHJcbiAgICogQHJldHVybnMge0tleVBhaXJ9IEJhc2U2NFVSTC1lbmNvZGVkIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBuZXcga2V5cGFpclxyXG4gICAqL1xyXG4gIGFzeW5jIGdlbmVyYXRlU2lnbmluZ0tleXBhaXIoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5jcnlwdG8uZ2VuZXJhdGVTaWduaW5nS2V5cGFpcigpXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBXcml0ZU5vdGUgaXMgYSBzdGF0aWMgbWV0aG9kIHRoYXQgZW5jcnlwdHMgYSBub3RlIGFuZCBzZW5kcyBpdCB0byBUb3pTdG9yZSxcclxuICAgKiBhbGxvd2luZyB5b3UgdG8gc3VwcGx5IHlvdXIgb3duIHNpZ25pbmdLZXkgYW5kIGVuY3J5cHRpb25LZXkgcGFpcnMuXHJcbiAgICpcclxuICAgKiBVc2luZyB0aGlzIG1ldGhvZCB5b3UgYXJlIG5vdCBhbGxvd2VkIHRvIHByb3ZpZGUgcHJlbWl1bSBvcHRpb25zIHRvIFRvelN0b3JlLFxyXG4gICAqIHN1Y2ggYXMgYWRkaXRpb25hbCB2aWV3cywgZXh0ZW5kZWQgZXhwaXJhdGlvbiB0aW1lLCBldGMuXHJcbiAgICpcclxuICAgKiBAcGFyYW0ge29iamVjdH0gZGF0YSAgQSBoYXNobWFwIG9mIHRoZSBkYXRhIHRvIGVuY3J5cHQgYW5kIHN0b3JlXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IHJlY2lwaWVudEVuY3J5cHRpb25LZXkgVGhlIHB1YmxpYyBlbmNyeXB0aW9uIGtleSBvZiB0aGUgcmVhZGVyIG9mIHRoaXMgbm90ZVxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSByZWNpcGllbnRTaWduaW5nS2V5IFRoZSBwdWJsaWMgc2lnbmluZyBrZXkgb2YgdGhlIHJlYWRlciBvZiB0aGlzIG5vdGVcclxuICAgKiBAcGFyYW0ge0tleVBhaXJ9IHNpZ25pbmdLZXlQYWlyIE9iamVjdCB0aGF0IGhhcyBzaWduaW5nIHB1YmxpYyBhbmQgcHJpdmF0ZSBrZXlzXHJcbiAgICogQHBhcmFtIHtLZXlQYWlyfSBlbmNyeXB0aW9uS2V5UGFpciBPYmplY3QgdGhhdCBoYXMgZW5jcnlwdGlvbiBwdWJsaWMgYW5kIHByaXZhdGUga2V5c1xyXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zIGpzb24gaGFzaG1hcCBvZiBhIE5vdGVPcHRpb25zIG9iamVjdCwgbWludXMgcHJlbWl1bSBmZWF0dXJlcy5cclxuICAgKiBAcGFyYW0ge3N0cmluZ30gYXBpVXJsIFVybCBvZiB0aGUgVG96U3RvcmUgYXBpIHRoYXQgeW91IHdhbnQgdG8gaGl0IChEZWZhdWx0IGlzIHJlY29tbWVuZGVkKS5cclxuICAgKlxyXG4gICAqIEByZXR1cm5zIHtOb3RlfSBBIHJlc3BvbnNlIGZyb20gVG96U3RvcmU7IHRoZSBub3RlIHRoYXQgaGFzIGJlZW4gd3JpdHRlbi5cclxuICAgKi9cclxuICBhc3luYyB3cml0ZU5vdGUoXHJcbiAgICBkYXRhLFxyXG4gICAgcmVjaXBpZW50RW5jcnlwdGlvbktleSxcclxuICAgIHJlY2lwaWVudFNpZ25pbmdLZXksXHJcbiAgICBlbmNyeXB0aW9uS2V5UGFpcixcclxuICAgIHNpZ25pbmdLZXlQYWlyLFxyXG4gICAgb3B0aW9ucyxcclxuICAgIGFwaVVybCA9IERFRkFVTFRfQVBJX1VSTFxyXG4gICkge1xyXG4gICAgbGV0IGFub25BdXRoID0gYXdhaXQgQXV0aGVudGljYXRlZFJlcXVlc3QuYW5vbnltb3VzQXV0aChcclxuICAgICAgdGhpcy5jcnlwdG8sXHJcbiAgICAgIHNpZ25pbmdLZXlQYWlyLnB1YmxpY0tleSxcclxuICAgICAgc2lnbmluZ0tleVBhaXIucHJpdmF0ZUtleSxcclxuICAgICAgYXBpVXJsXHJcbiAgICApXHJcblxyXG4gICAgLy8gUHJlbWl1bSBvcHRpb25zIGFyZSBub3QgZXh0cmFjdGVkXHJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSBjYW1lbGNhc2UgKi9cclxuICAgIHZhciBkZWNvZGVkT3B0aW9ucyA9IE5vdGVPcHRpb25zLmRlY29kZSh7XHJcbiAgICAgIHR5cGU6IG9wdGlvbnMudHlwZSxcclxuICAgICAgcGxhaW46IG9wdGlvbnMucGxhaW4sXHJcbiAgICAgIG1heF92aWV3czogb3B0aW9ucy5tYXhfdmlld3MsXHJcbiAgICB9KVxyXG4gICAgLyogZXNsaW50LWVuYWJsZSAqL1xyXG4gICAgcmV0dXJuIHNoYXJlZC53cml0ZU5vdGUoXHJcbiAgICAgIHRoaXMuY3J5cHRvLFxyXG4gICAgICBhbm9uQXV0aCxcclxuICAgICAgZGF0YSxcclxuICAgICAgcmVjaXBpZW50RW5jcnlwdGlvbktleSxcclxuICAgICAgcmVjaXBpZW50U2lnbmluZ0tleSxcclxuICAgICAgZW5jcnlwdGlvbktleVBhaXIsXHJcbiAgICAgIHNpZ25pbmdLZXlQYWlyLFxyXG4gICAgICBkZWNvZGVkT3B0aW9ucyxcclxuICAgICAgYXBpVXJsXHJcbiAgICApXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBSZWFkTm90ZSBpcyBhIHN0YXRpYyBtZXRob2QgdXNlZCB0byByZWFkIGEgbm90ZSxcclxuICAgKiBhbGxvd2luZyB5b3UgdG8gc3VwcGx5IHlvdXIgb3duIHNpZ25pbmdLZXkgYW5kIGVuY3J5cHRpb25LZXkgcGFpcnMuXHJcbiAgICpcclxuICAgKiBAcGFyYW0ge3N0cmluZ30gbm90ZUlkICBVVUlEIGFzc2lnbmVkIGJ5IFRvelN0b3JlLCB1c2VkIHRvIGlkZW50aWZ5IGEgbm90ZS5cclxuICAgKiBAcGFyYW0ge0tleVBhaXJ9IHNpZ25pbmdLZXlQYWlyIE9iamVjdCB0aGF0IGhhcyBzaWduaW5nIHB1YmxpYyBhbmQgcHJpdmF0ZSBrZXlzXHJcbiAgICogQHBhcmFtIHtLZXlQYWlyfSBlbmNyeXB0aW9uS2V5UGFpciBPYmplY3QgdGhhdCBoYXMgZW5jcnlwdGlvbiBwdWJsaWMgYW5kIHByaXZhdGUga2V5c1xyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBhcGlVcmwgVXJsIG9mIHRoZSBUb3pTdG9yZSBhcGkgdGhhdCB5b3Ugd2FudCB0byBoaXQgKERlZmF1bHQgaXMgcmVjb21tZW5kZWQpLlxyXG4gICAqXHJcbiAgICogQHJldHVybnMge05vdGV9IEEgbm90ZSBmcm9tIFRvelN0b3JlIHVuZW5jcnlwdGVkIHdpdGggdGhlIGNsaWVudCdzIGtleXMuXHJcbiAgICovXHJcbiAgYXN5bmMgcmVhZE5vdGUoXHJcbiAgICBub3RlSWQsXHJcbiAgICBlbmNyeXB0aW9uS2V5UGFpcixcclxuICAgIHNpZ25pbmdLZXlQYWlyLFxyXG4gICAgYXV0aFBhcmFtcyA9IHt9LFxyXG4gICAgYXV0aEhlYWRlcnMgPSB7fSxcclxuICAgIGFwaVVybCA9IERFRkFVTFRfQVBJX1VSTFxyXG4gICkge1xyXG4gICAgbGV0IGFub25BdXRoID0gYXdhaXQgQXV0aGVudGljYXRlZFJlcXVlc3QuYW5vbnltb3VzQXV0aChcclxuICAgICAgdGhpcy5jcnlwdG8sXHJcbiAgICAgIHNpZ25pbmdLZXlQYWlyLnB1YmxpY0tleSxcclxuICAgICAgc2lnbmluZ0tleVBhaXIucHJpdmF0ZUtleSxcclxuICAgICAgYXBpVXJsXHJcbiAgICApXHJcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY2FtZWxjYXNlXHJcbiAgICBjb25zdCBwYXJhbXMgPSBPYmplY3QuYXNzaWduKHt9LCBhdXRoUGFyYW1zLCB7IG5vdGVfaWQ6IG5vdGVJZCB9KVxyXG4gICAgLy8gVXNlIHRoaXMgdG8gZW5zdXJlIHdlIHJlZmVyZW5jaW5nIHRoZSBpbXBsZW1lbnRpbmcgY2xhc3MuXHJcbiAgICByZXR1cm4gc2hhcmVkLnJlYWROb3RlKFxyXG4gICAgICB0aGlzLmNyeXB0byxcclxuICAgICAgYW5vbkF1dGgsXHJcbiAgICAgIGVuY3J5cHRpb25LZXlQYWlyLFxyXG4gICAgICBwYXJhbXMsXHJcbiAgICAgIGF1dGhIZWFkZXJzLFxyXG4gICAgICBhcGlVcmxcclxuICAgIClcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFJlYWROb3RlQnlOYW1lIGlzIGEgc3RhdGljIG1ldGhvZCB1c2VkIHRvIHJlYWQgYSBub3RlIGJ5IG5hbWUsXHJcbiAgICogYWxsb3dpbmcgeW91IHRvIHN1cHBseSB5b3VyIG93biBzaWduaW5nS2V5IGFuZCBlbmNyeXB0aW9uS2V5IHBhaXJzLlxyXG4gICAqXHJcbiAgICogUExFQVNFIE5PVEU6IG9ubHkgbm90ZXMgd3JpdHRlbiBieSBhIGNsaWVudCwgbm90IHRoZSBzdGF0aWMgd3JpdGVOb3RlIG1ldGhvZCxcclxuICAgKiBjYW4gaGF2ZSBhIG5vdGVOYW1lIGF0dGFjaGVkLlxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IG5vdGVOYW1lICBuYW1lIGdpdmVuIHRvIHRoaXMgbm90ZSB3aXRoIHByZW1pdW0gZmVhdHVyZXNcclxuICAgKiBAcGFyYW0ge0tleVBhaXJ9IHNpZ25pbmdLZXlQYWlyIE9iamVjdCB0aGF0IGhhcyBzaWduaW5nIHB1YmxpYyBhbmQgcHJpdmF0ZSBrZXlzXHJcbiAgICogQHBhcmFtIHtLZXlQYWlyfSBlbmNyeXB0aW9uS2V5UGFpciBPYmplY3QgdGhhdCBoYXMgZW5jcnlwdGlvbiBwdWJsaWMgYW5kIHByaXZhdGUga2V5c1xyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBhcGlVcmwgVXJsIG9mIHRoZSBUb3pTdG9yZSBhcGkgdGhhdCB5b3Ugd2FudCB0byBoaXQgKERlZmF1bHQgaXMgcmVjb21tZW5kZWQpLlxyXG4gICAqXHJcbiAgICogQHJldHVybnMge05vdGV9IEEgbm90ZSBmcm9tIFRvelN0b3JlIHVuZW5jcnlwdGVkIHdpdGggdGhlIGNsaWVudCdzIGtleXMuXHJcbiAgICovXHJcbiAgYXN5bmMgcmVhZE5vdGVCeU5hbWUoXHJcbiAgICBub3RlTmFtZSxcclxuICAgIGVuY3J5cHRpb25LZXlQYWlyLFxyXG4gICAgc2lnbmluZ0tleVBhaXIsXHJcbiAgICBhdXRoUGFyYW1zID0ge30sXHJcbiAgICBhdXRoSGVhZGVycyA9IHt9LFxyXG4gICAgYXBpVXJsID0gREVGQVVMVF9BUElfVVJMXHJcbiAgKSB7XHJcbiAgICBsZXQgYW5vbkF1dGggPSBhd2FpdCBBdXRoZW50aWNhdGVkUmVxdWVzdC5hbm9ueW1vdXNBdXRoKFxyXG4gICAgICB0aGlzLmNyeXB0byxcclxuICAgICAgc2lnbmluZ0tleVBhaXIucHVibGljS2V5LFxyXG4gICAgICBzaWduaW5nS2V5UGFpci5wcml2YXRlS2V5LFxyXG4gICAgICBhcGlVcmxcclxuICAgIClcclxuICAgIC8vIFVzZSB0aGlzIHRvIGVuc3VyZSB3ZSByZWZlcmVuY2luZyB0aGUgaW1wbGVtZW50aW5nIGNsYXNzLlxyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNhbWVsY2FzZVxyXG5cclxuICAgIGNvbnN0IHBhcmFtcyA9IE9iamVjdC5hc3NpZ24oe30sIGF1dGhQYXJhbXMsIHsgaWRfc3RyaW5nOiBub3RlTmFtZSB9KVxyXG4gICAgcmV0dXJuIHNoYXJlZC5yZWFkTm90ZShcclxuICAgICAgdGhpcy5jcnlwdG8sXHJcbiAgICAgIGFub25BdXRoLFxyXG4gICAgICBlbmNyeXB0aW9uS2V5UGFpcixcclxuICAgICAgcGFyYW1zLFxyXG4gICAgICBhdXRoSGVhZGVycyxcclxuICAgICAgYXBpVXJsXHJcbiAgICApXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBEZWxldGVOb3RlIGlzIGEgc3RhdGljIG1ldGhvZCB0aGF0IGRlbGV0ZXMgYSBub3RlIGZyb20gVG96U3RvcmUgYmFzZWQgb24gdGhlIG5vdGUgaWRlbnRpZmllcixcclxuICAgKiBhbGxvd2luZyB5b3UgdG8gc3VwcGx5IHlvdXIgb3duIHNpZ25pbmdLZXkgcGFpci5cclxuICAgKlxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBub3RlSWQgIFVVSUQgYXNzaWduZWQgYnkgVG96U3RvcmUsIHVzZWQgdG8gaWRlbnRpZnkgYSBub3RlLlxyXG4gICAqL1xyXG4gIGFzeW5jIGRlbGV0ZU5vdGUobm90ZUlkLCBzaWduaW5nS2V5UGFpciwgYXBpVXJsID0gREVGQVVMVF9BUElfVVJMKSB7XHJcbiAgICBsZXQgYW5vbkF1dGggPSBhd2FpdCBBdXRoZW50aWNhdGVkUmVxdWVzdC5hbm9ueW1vdXNBdXRoKFxyXG4gICAgICB0aGlzLmNyeXB0byxcclxuICAgICAgc2lnbmluZ0tleVBhaXIucHVibGljS2V5LFxyXG4gICAgICBzaWduaW5nS2V5UGFpci5wcml2YXRlS2V5LFxyXG4gICAgICBhcGlVcmxcclxuICAgIClcclxuICAgIHJldHVybiBzaGFyZWQuZGVsZXRlTm90ZShhbm9uQXV0aCwgbm90ZUlkLCBhcGlVcmwpXHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IFN0b3JhZ2VcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/storage/index.js\n");

/***/ }),

/***/ "./lib/storage/shared.js":
/*!*******************************!*\
  !*** ./lib/storage/shared.js ***!
  \*******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { checkStatus } = __webpack_require__(/*! ../utils */ \"./lib/utils/index.js\")\r\nconst {\r\n  EAKInfo,\r\n  SignedDocument,\r\n  Note,\r\n  NoteData,\r\n  NoteInfo,\r\n  NoteKeys,\r\n} = __webpack_require__(/*! ../../types */ \"./types/index.js\")\r\n\r\n/**\r\n * Retrieve an access key from the server.\r\n *\r\n * @param {Client} client E3DB client instance\r\n * @param {string} writerId Writer/Authorizer for the access key\r\n * @param {string} userId   Record subject\r\n * @param {string} readerId Authorized reader\r\n * @param {string} type     Record type for which the key will be used\r\n *\r\n * @returns {Promise<EAKInfo|null>} Encrypted access key on success, NULL if no key exists.\r\n */\r\nasync function getEncryptedAccessKey(client, writerId, userId, readerId, type) {\r\n  let response = await client.authenticator.tokenFetch(\r\n    client.config.apiUrl +\r\n      '/v1/storage/access_keys/' +\r\n      writerId +\r\n      '/' +\r\n      userId +\r\n      '/' +\r\n      readerId +\r\n      '/' +\r\n      type,\r\n    {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n  )\r\n  if (response.status && response.status === 404) {\r\n    return Promise.resolve(null)\r\n  }\r\n\r\n  return checkStatus(response)\r\n    .then((response) => response.json())\r\n    .then((eak) => EAKInfo.decode(eak))\r\n}\r\n\r\n/**\r\n * Retrieve an access key from the server.\r\n *\r\n * @param {Client} client E3DB client instance\r\n * @param {string} writerId Writer/Authorizer for the access key\r\n * @param {string} userId   Record subject\r\n * @param {string} readerId Authorized reader\r\n * @param {string} type     Record type for which the key will be used\r\n *\r\n * @returns {Promise<string|null>} Decrypted access key on success, NULL if no key exists.\r\n */\r\nasync function getAccessKey(client, writerId, userId, readerId, type) {\r\n  const cacheKey = `${writerId}.${userId}.${type}`\r\n  if (client._akCache[cacheKey] !== undefined) {\r\n    return client._akCache[cacheKey]\r\n  }\r\n  try {\r\n    const eak = await getEncryptedAccessKey(\r\n      client,\r\n      writerId,\r\n      userId,\r\n      readerId,\r\n      type\r\n    )\r\n    if (eak === null) {\r\n      return null\r\n    }\r\n    const key = await client.crypto.decryptEak(client.config.privateKey, eak)\r\n    if (key !== null) {\r\n      // eslint-disable-next-line require-atomic-updates\r\n      client._akCache[cacheKey] = key\r\n    }\r\n    return key\r\n  } catch (err) {\r\n    // eslint-disable-next-line no-console\r\n    console.error(err)\r\n  }\r\n}\r\n\r\n/**\r\n * Create an access key on the server.\r\n *\r\n * @param {Client} client   E3DB client instance\r\n * @param {string} writerId Writer/Authorizer for the access key\r\n * @param {string} userId   Record subject\r\n * @param {string} readerId Authorized reader\r\n * @param {string} type     Record type for which the key will be used\r\n * @param {string} ak       Unencrypted access key\r\n\r\n @returns {Promise<string>} Decrypted access key\r\n */\r\nasync function putAccessKey(client, writerId, userId, readerId, type, ak) {\r\n  let clientInfo = await client.clientInfo(readerId)\r\n  let readerKey = clientInfo.publicKey.curve25519\r\n  let eak = await client.crypto.encryptAk(\r\n    client.config.privateKey,\r\n    ak,\r\n    readerKey\r\n  )\r\n  return client.authenticator\r\n    .tokenFetch(\r\n      client.config.apiUrl +\r\n        '/v1/storage/access_keys/' +\r\n        writerId +\r\n        '/' +\r\n        userId +\r\n        '/' +\r\n        readerId +\r\n        '/' +\r\n        type,\r\n      {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ eak: eak }),\r\n      }\r\n    )\r\n    .then(checkStatus)\r\n    .then(() => {\r\n      let cacheKey = `${writerId}.${userId}.${type}`\r\n      client._akCache[cacheKey] = ak\r\n\r\n      return Promise.resolve(ak)\r\n    })\r\n}\r\n\r\n/**\r\n * Create an access key for another reader, creating one for this client as needed.\r\n *\r\n * @param {Client} client TozStore client instance\r\n * @param {string} writerId Writer/Authorizer for the access key\r\n * @param {string} readerId Authorized reader\r\n * @param {string} type     Record type for which the key will be used\r\n *\r\n * @returns {Promise<bool>} Whether the access key was written successfully\r\n */\r\nasync function putAccessKeyForReader(client, writerId, type, readerId) {\r\n  // Get current access key, create one if it is missing\r\n  let clientId = client.config.clientId\r\n  let ak = await getAccessKey(client, writerId, writerId, clientId, type)\r\n  if (ak === null) {\r\n    if (clientId === writerId) {\r\n      ak = await client.crypto.randomKey()\r\n      await putAccessKey(client, clientId, clientId, clientId, type, ak)\r\n    } else {\r\n      throw new Error('Missing access key required for share operation')\r\n    }\r\n  }\r\n  // Create an access key for the new reader\r\n  await putAccessKey(client, writerId, writerId, readerId, type, ak)\r\n}\r\n\r\n/**\r\n * Delete an access key on the server.\r\n *\r\n * @param {Client} client   E3DB client instance\r\n * @param {string} writerId Writer/Authorizer for the access key\r\n * @param {string} userId   Record subject\r\n * @param {string} readerId Authorized reader\r\n * @param {string} type     Record type for which the key will be used\r\n *\r\n * @returns {Promise<bool>}\r\n */\r\nasync function deleteAccessKey(client, writerId, userId, readerId, type) {\r\n  let request = await client.authenticator.tokenFetch(\r\n    client.config.apiUrl +\r\n      '/v1/storage/access_keys/' +\r\n      writerId +\r\n      '/' +\r\n      userId +\r\n      '/' +\r\n      readerId +\r\n      '/' +\r\n      type,\r\n    {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n  )\r\n\r\n  await checkStatus(request)\r\n\r\n  let cacheKey = `${writerId}.${userId}.${type}`\r\n  delete client._akCache[cacheKey]\r\n\r\n  return true\r\n}\r\n\r\n/**\r\n * Add or update an policy to the TozStore storage service\r\n *\r\n * @param {Client} client   TozStore Client instance\r\n * @param {object} policy   An object containing the policy definition to write\r\n * @param {string} writerId Writer/Authorizer controlling data access\r\n * @param {string} userId   The client ID of the subject of the protected data\r\n * @param {string} readerId The client ID whose access is being updated\r\n * @param {string} type     Record type for which the policy will be used\r\n *\r\n * @returns {Promise<bool>} Whether the policy was written successfully\r\n */\r\nasync function putPolicy(client, policy, writerId, userId, readerId, type) {\r\n  let request = await client.authenticator.tokenFetch(\r\n    client.config.apiUrl +\r\n      '/v1/storage/policy/' +\r\n      writerId +\r\n      '/' +\r\n      userId +\r\n      '/' +\r\n      readerId +\r\n      '/' +\r\n      type,\r\n    {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(policy),\r\n    }\r\n  )\r\n  await checkStatus(request)\r\n  return true\r\n}\r\n\r\n/**\r\n * Fetch the access key for a record type and use it to decrypt a given record.\r\n *\r\n * @param {Client} client E3DB client instance\r\n * @param {Record} encrypted Record to be decrypted\r\n *\r\n * @return {Promise<Record>}\r\n */\r\nasync function decryptRecord(client, encrypted) {\r\n  let ak = await getAccessKey(\r\n    client,\r\n    encrypted.meta.writerId,\r\n    encrypted.meta.userId,\r\n    client.config.clientId,\r\n    encrypted.meta.type\r\n  )\r\n  if (ak === null) {\r\n    throw new Error('No access key available.')\r\n  }\r\n\r\n  return client.crypto.decryptRecord(encrypted, ak)\r\n}\r\n\r\n/**\r\n * Fetch the access key for a record type and use it to encrypt a given record.\r\n *\r\n * @param {Client} client E3DB client instance\r\n * @param {Record} record Record to be decrypted\r\n *\r\n * @return {Promise<Record>}\r\n */\r\nasync function encryptRecord(client, record) {\r\n  let ak = await getAccessKey(\r\n    client,\r\n    record.meta.writerId,\r\n    record.meta.userId,\r\n    client.config.clientId,\r\n    record.meta.type\r\n  )\r\n  if (ak === null) {\r\n    ak = await client.crypto.randomKey()\r\n    await putAccessKey(\r\n      client,\r\n      record.meta.writerId,\r\n      record.meta.userId,\r\n      client.config.clientId,\r\n      record.meta.type,\r\n      ak\r\n    )\r\n  }\r\n  return client.crypto.encryptRecord(record, ak)\r\n}\r\n\r\n/**\r\n * Verify the signature attached to a specific document.\r\n *\r\n * @param {SignedDocument} signed        Document with an attached signature\r\n * @param {string}         publicSignKey Key to use during signature verification\r\n *\r\n * @returns {Promise<bool>}\r\n */\r\nasync function verify(crypto, signed, publicSignKey) {\r\n  let verified = await crypto.verifyDocumentSignature(\r\n    signed.document,\r\n    signed.signature,\r\n    publicSignKey\r\n  )\r\n\r\n  return Promise.resolve(verified)\r\n}\r\n\r\nasync function createEncryptedNote(\r\n  crypto,\r\n  data,\r\n  recipientEncryptionKey,\r\n  recipientSigningKey,\r\n  encryptionKeyPair,\r\n  signingKeyPair,\r\n  options\r\n) {\r\n  const accessKey = await crypto.randomKey()\r\n  const encryptedAccessKey = await crypto.encryptAk(\r\n    encryptionKeyPair.privateKey,\r\n    accessKey,\r\n    recipientEncryptionKey\r\n  )\r\n  let noteData = new NoteData(data)\r\n  let noteKeys = new NoteKeys(\r\n    crypto.mode(),\r\n    recipientSigningKey,\r\n    signingKeyPair.publicKey,\r\n    encryptionKeyPair.publicKey,\r\n    encryptedAccessKey\r\n  )\r\n  var unencryptedNote = new Note(noteData, noteKeys, null, options)\r\n  let encryptedNote = await crypto.encryptNote(\r\n    unencryptedNote,\r\n    accessKey,\r\n    signingKeyPair.privateKey\r\n  )\r\n  if (!encryptedNote.signature) {\r\n    throw new Error('Signature was not attached during encryption')\r\n  }\r\n  return encryptedNote\r\n}\r\n\r\n/*\r\n * Decrypts and validates a note response from TozStore given the proper keys.\r\n */\r\nasync function decryptNoteJson(\r\n  crypto,\r\n  noteJson,\r\n  privateKey,\r\n  publicKey,\r\n  publicSigningKey\r\n) {\r\n  const encryptedNote = Note.decode(noteJson)\r\n  const eak = noteJson.encrypted_access_key\r\n  const ak = await crypto.decryptNoteEak(privateKey, { eak: eak }, publicKey)\r\n  const decryptedNote = await crypto.decryptNote(\r\n    encryptedNote,\r\n    ak,\r\n    publicSigningKey\r\n  )\r\n\r\n  if (!decryptedNote.signature) {\r\n    throw new Error('Unable to verify note, no signature attached')\r\n  }\r\n  if (/^[A-Za-z0-9_-]+$/.test(decryptedNote.signature)) {\r\n    let signableNote = NoteInfo.signableSubsetFromNote(decryptedNote)\r\n    let signed = new SignedDocument(signableNote, decryptedNote.signature)\r\n    let verified = await verify(crypto, signed, publicSigningKey)\r\n    if (!verified) {\r\n      throw new Error('Note failed verification')\r\n    }\r\n  }\r\n  return decryptedNote\r\n}\r\n\r\n/*\r\n * InternalWriteNote is an internal method used by writeNote\r\n */\r\nasync function writeNote(\r\n  crypto,\r\n  authenticator,\r\n  data,\r\n  recipientEncryptionKey,\r\n  recipientSigningKey,\r\n  encryptionKeyPair,\r\n  signingKeyPair,\r\n  options,\r\n  apiUrl\r\n) {\r\n  let encryptedNote = await createEncryptedNote(\r\n    crypto,\r\n    data,\r\n    recipientEncryptionKey,\r\n    recipientSigningKey,\r\n    encryptionKeyPair,\r\n    signingKeyPair,\r\n    options\r\n  )\r\n  let response = await authenticator.tsv1Fetch(\r\n    `${apiUrl}/v2/storage/notes`,\r\n    {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: encryptedNote.stringify(),\r\n    },\r\n    options.clientId\r\n  )\r\n  let storedNoteResp = await checkStatus(response)\r\n  let noteJson = await storedNoteResp.json()\r\n  // We don't actually have the keys to decrypt this data, but we can show the\r\n  // user the decrypted data as a reference\r\n  let note = Note.decode(noteJson)\r\n  note.data = data\r\n  return note\r\n}\r\n\r\n/*\r\n * InternalReadNote is an internal method used by internalReadNote\r\n */\r\nasync function readNote(\r\n  crypto,\r\n  authenticator,\r\n  encryptionKeyPair,\r\n  requestParams,\r\n  headers,\r\n  apiUrl\r\n) {\r\n  const queryString = Object.entries(requestParams)\r\n    .map((kv) => kv.map(encodeURIComponent).join('='))\r\n    .join('&')\r\n  let request = await authenticator.tsv1Fetch(\r\n    `${apiUrl}/v2/storage/notes?${queryString}`,\r\n    {\r\n      method: 'GET',\r\n      headers,\r\n    }\r\n  )\r\n  let storedNote = await checkStatus(request)\r\n  const noteJson = await storedNote.json()\r\n  // Use this to ensure we referencing the implementing class.\r\n  return decryptNoteJson(\r\n    crypto,\r\n    noteJson,\r\n    encryptionKeyPair.privateKey,\r\n    noteJson.writer_encryption_key,\r\n    noteJson.writer_signing_key\r\n  )\r\n}\r\n\r\n/*\r\n * InternalDeleteNote is an internal method used by deleteNote\r\n */\r\nasync function deleteNote(authenticator, noteId, apiUrl) {\r\n  let deletedNoteResponse = await authenticator.tsv1Fetch(\r\n    `${apiUrl}/v2/storage/notes/${noteId}`,\r\n    {\r\n      method: 'DELETE',\r\n    }\r\n  )\r\n  checkStatus(deletedNoteResponse)\r\n  return true\r\n}\r\n\r\n/**\r\n * Issue an EACP challenge for a protected note.\r\n *\r\n * @param {Client} client A TozStore client instance.\r\n * @param {string} key The query string key to use in the request.\r\n * @param {string} identifier The identifier of the note to issue the challenge for.\r\n */\r\nasync function issueNoteChallenge(client, requestParams, body = {}) {\r\n  if (client.config.version === 1) {\r\n    throw new Error('Cannot read notes without a signing key!')\r\n  }\r\n  const queryString = Object.entries(requestParams)\r\n    .map((kv) => kv.map(encodeURIComponent).join('='))\r\n    .join('&')\r\n  const request = await client.authenticator.tsv1Fetch(\r\n    `${client.config.apiUrl}/v2/storage/notes/challenge?${queryString}`,\r\n    {\r\n      method: 'PATCH',\r\n      'Content-Type': 'application/json',\r\n      body: JSON.stringify(body),\r\n    }\r\n  )\r\n  await checkStatus(request)\r\n  return request.json()\r\n}\r\n\r\nmodule.exports = {\r\n  getEncryptedAccessKey,\r\n  getAccessKey,\r\n  putAccessKey,\r\n  putAccessKeyForReader,\r\n  deleteAccessKey,\r\n  putPolicy,\r\n  decryptRecord,\r\n  encryptRecord,\r\n  verify,\r\n  createEncryptedNote,\r\n  decryptNoteJson,\r\n  writeNote,\r\n  readNote,\r\n  deleteNote,\r\n  issueNoteChallenge,\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./lib/storage/shared.js\n");

/***/ }),

/***/ "./lib/tozny.js":
/*!**********************!*\
  !*** ./lib/tozny.js ***!
  \**********************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Crypto = __webpack_require__(/*! ./crypto/crypto */ \"./lib/crypto/crypto.js\")\r\nconst Identity = __webpack_require__(/*! ./identity */ \"./lib/identity/index.js\")\r\nconst Storage = __webpack_require__(/*! ./storage */ \"./lib/storage/index.js\")\r\nconst types = __webpack_require__(/*! ../types */ \"./types/index.js\")\r\n\r\nclass Tozny {\r\n  constructor(cryptoProvider, platform, fileOperations, helpers = {}) {\r\n    this.crypto = new Crypto(cryptoProvider, platform)\r\n    this.storage = new Storage(this.crypto, fileOperations)\r\n    this.identity = new Identity(this.crypto, this.storage)\r\n    this.types = types\r\n    this.helpers = helpers\r\n  }\r\n\r\n  /**\r\n   * Extend this Tozny instance with additional functionality defined in an extension class\r\n   *\r\n   * The class constructor will receive the tozny instance and the provided options so that it can\r\n   * set itself up. The extension is available at the 'extensionName' defined by the extension, but\r\n   * can be overridden by when adding the extension by passing in an 'alias' in the options object.\r\n   *\r\n   * If not alias is provided, and the extension does not define an 'extensionName' then the extension\r\n   * is available using the name of the extension class.\r\n   *\r\n   * @param {function} extension The class constructor for the extension\r\n   * @param {object} options Optional. The options to configure the extension\r\n   *\r\n   * @returns Tozny The Tozny instance is returned to allow chaining\r\n   */\r\n  extend(extension, options = {}) {\r\n    if (typeof extension !== 'function') {\r\n      throw new Error(\r\n        'Tozny extensions must be class definitions or constructor functions'\r\n      )\r\n    }\r\n    if (!extension.extensionName && !extension.name) {\r\n      throw new Error(\r\n        'Tozny extensions must have a name or extensionName to get added to the Tozny instance'\r\n      )\r\n    }\r\n    const name = options.alias || extension.extensionName || extension.name\r\n    if (this[name] !== undefined) {\r\n      throw new Error(\r\n        `The name \"${name}\" is internal or has been used by a different extension, please use an alias or rename the extension`\r\n      )\r\n    }\r\n    this[name] = new extension(this, options)\r\n    // Allow chaining\r\n    return this\r\n  }\r\n}\r\n\r\nmodule.exports = Tozny\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvdG96bnkuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B0b3pueXNlY3VyZS9zZGsvLi9saWIvdG96bnkuanM/YjU4YyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBDcnlwdG8gPSByZXF1aXJlKCcuL2NyeXB0by9jcnlwdG8nKVxyXG5jb25zdCBJZGVudGl0eSA9IHJlcXVpcmUoJy4vaWRlbnRpdHknKVxyXG5jb25zdCBTdG9yYWdlID0gcmVxdWlyZSgnLi9zdG9yYWdlJylcclxuY29uc3QgdHlwZXMgPSByZXF1aXJlKCcuLi90eXBlcycpXHJcblxyXG5jbGFzcyBUb3pueSB7XHJcbiAgY29uc3RydWN0b3IoY3J5cHRvUHJvdmlkZXIsIHBsYXRmb3JtLCBmaWxlT3BlcmF0aW9ucywgaGVscGVycyA9IHt9KSB7XHJcbiAgICB0aGlzLmNyeXB0byA9IG5ldyBDcnlwdG8oY3J5cHRvUHJvdmlkZXIsIHBsYXRmb3JtKVxyXG4gICAgdGhpcy5zdG9yYWdlID0gbmV3IFN0b3JhZ2UodGhpcy5jcnlwdG8sIGZpbGVPcGVyYXRpb25zKVxyXG4gICAgdGhpcy5pZGVudGl0eSA9IG5ldyBJZGVudGl0eSh0aGlzLmNyeXB0bywgdGhpcy5zdG9yYWdlKVxyXG4gICAgdGhpcy50eXBlcyA9IHR5cGVzXHJcbiAgICB0aGlzLmhlbHBlcnMgPSBoZWxwZXJzXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBFeHRlbmQgdGhpcyBUb3pueSBpbnN0YW5jZSB3aXRoIGFkZGl0aW9uYWwgZnVuY3Rpb25hbGl0eSBkZWZpbmVkIGluIGFuIGV4dGVuc2lvbiBjbGFzc1xyXG4gICAqXHJcbiAgICogVGhlIGNsYXNzIGNvbnN0cnVjdG9yIHdpbGwgcmVjZWl2ZSB0aGUgdG96bnkgaW5zdGFuY2UgYW5kIHRoZSBwcm92aWRlZCBvcHRpb25zIHNvIHRoYXQgaXQgY2FuXHJcbiAgICogc2V0IGl0c2VsZiB1cC4gVGhlIGV4dGVuc2lvbiBpcyBhdmFpbGFibGUgYXQgdGhlICdleHRlbnNpb25OYW1lJyBkZWZpbmVkIGJ5IHRoZSBleHRlbnNpb24sIGJ1dFxyXG4gICAqIGNhbiBiZSBvdmVycmlkZGVuIGJ5IHdoZW4gYWRkaW5nIHRoZSBleHRlbnNpb24gYnkgcGFzc2luZyBpbiBhbiAnYWxpYXMnIGluIHRoZSBvcHRpb25zIG9iamVjdC5cclxuICAgKlxyXG4gICAqIElmIG5vdCBhbGlhcyBpcyBwcm92aWRlZCwgYW5kIHRoZSBleHRlbnNpb24gZG9lcyBub3QgZGVmaW5lIGFuICdleHRlbnNpb25OYW1lJyB0aGVuIHRoZSBleHRlbnNpb25cclxuICAgKiBpcyBhdmFpbGFibGUgdXNpbmcgdGhlIG5hbWUgb2YgdGhlIGV4dGVuc2lvbiBjbGFzcy5cclxuICAgKlxyXG4gICAqIEBwYXJhbSB7ZnVuY3Rpb259IGV4dGVuc2lvbiBUaGUgY2xhc3MgY29uc3RydWN0b3IgZm9yIHRoZSBleHRlbnNpb25cclxuICAgKiBAcGFyYW0ge29iamVjdH0gb3B0aW9ucyBPcHRpb25hbC4gVGhlIG9wdGlvbnMgdG8gY29uZmlndXJlIHRoZSBleHRlbnNpb25cclxuICAgKlxyXG4gICAqIEByZXR1cm5zIFRvem55IFRoZSBUb3pueSBpbnN0YW5jZSBpcyByZXR1cm5lZCB0byBhbGxvdyBjaGFpbmluZ1xyXG4gICAqL1xyXG4gIGV4dGVuZChleHRlbnNpb24sIG9wdGlvbnMgPSB7fSkge1xyXG4gICAgaWYgKHR5cGVvZiBleHRlbnNpb24gIT09ICdmdW5jdGlvbicpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKFxyXG4gICAgICAgICdUb3pueSBleHRlbnNpb25zIG11c3QgYmUgY2xhc3MgZGVmaW5pdGlvbnMgb3IgY29uc3RydWN0b3IgZnVuY3Rpb25zJ1xyXG4gICAgICApXHJcbiAgICB9XHJcbiAgICBpZiAoIWV4dGVuc2lvbi5leHRlbnNpb25OYW1lICYmICFleHRlbnNpb24ubmFtZSkge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXHJcbiAgICAgICAgJ1Rvem55IGV4dGVuc2lvbnMgbXVzdCBoYXZlIGEgbmFtZSBvciBleHRlbnNpb25OYW1lIHRvIGdldCBhZGRlZCB0byB0aGUgVG96bnkgaW5zdGFuY2UnXHJcbiAgICAgIClcclxuICAgIH1cclxuICAgIGNvbnN0IG5hbWUgPSBvcHRpb25zLmFsaWFzIHx8IGV4dGVuc2lvbi5leHRlbnNpb25OYW1lIHx8IGV4dGVuc2lvbi5uYW1lXHJcbiAgICBpZiAodGhpc1tuYW1lXSAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihcclxuICAgICAgICBgVGhlIG5hbWUgXCIke25hbWV9XCIgaXMgaW50ZXJuYWwgb3IgaGFzIGJlZW4gdXNlZCBieSBhIGRpZmZlcmVudCBleHRlbnNpb24sIHBsZWFzZSB1c2UgYW4gYWxpYXMgb3IgcmVuYW1lIHRoZSBleHRlbnNpb25gXHJcbiAgICAgIClcclxuICAgIH1cclxuICAgIHRoaXNbbmFtZV0gPSBuZXcgZXh0ZW5zaW9uKHRoaXMsIG9wdGlvbnMpXHJcbiAgICAvLyBBbGxvdyBjaGFpbmluZ1xyXG4gICAgcmV0dXJuIHRoaXNcclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gVG96bnlcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/tozny.js\n");

/***/ }),

/***/ "./lib/utils/constants.js":
/*!********************************!*\
  !*** ./lib/utils/constants.js ***!
  \********************************/
/***/ ((module) => {

eval("module.exports = {\r\n  DEFAULT_API_URL: 'https://api.e3db.com',\r\n  DEFAULT_QUERY_COUNT: 100,\r\n  IDENTITY_DERIVATION_ROUNDS: 10000,\r\n  EMAIL: /(.+)@(.+){2,}\\.(.+){2,}/,\r\n  DEFAULT_KDF_ITERATIONS: 1000,\r\n  FILE_VERSION: 3,\r\n  FILE_BLOCK_SIZE: 65536,\r\n  TSV1_SUPPORTED_ALGORITHMS: ['TSV1-ED25519-BLAKE2B'],\r\n  // generated using uuidv5 with namespace: 794253a4-310b-449d-9d8d-4575e8923f40 and name: tozny.secrets\r\n  SECRET_UUID: '38bb737a-4ce0-5ead-8585-e13ea23b09a6',\r\n  TYPES: ['Credential', 'File', 'Client'],\r\n  REQUIRED_CLIENT_KEYS: [\r\n    'version',\r\n    'public_signing_key',\r\n    'private_signing_key',\r\n    'client_id',\r\n    'api_key_id',\r\n    'api_secret',\r\n    'public_key',\r\n    'private_key',\r\n    'api_url',\r\n  ],\r\n  PUBLIC_SIGNING_LENGTH: 43,\r\n  PRIVATE_SIGNING_LENGTH: 86,\r\n  PUBLIC_KEY_LENGTH: 43,\r\n  PRIVATE_KEY_LENGTH: 43,\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvdXRpbHMvY29uc3RhbnRzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHRvem55c2VjdXJlL3Nkay8uL2xpYi91dGlscy9jb25zdGFudHMuanM/MWFlNiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcclxuICBERUZBVUxUX0FQSV9VUkw6ICdodHRwczovL2FwaS5lM2RiLmNvbScsXHJcbiAgREVGQVVMVF9RVUVSWV9DT1VOVDogMTAwLFxyXG4gIElERU5USVRZX0RFUklWQVRJT05fUk9VTkRTOiAxMDAwMCxcclxuICBFTUFJTDogLyguKylAKC4rKXsyLH1cXC4oLispezIsfS8sXHJcbiAgREVGQVVMVF9LREZfSVRFUkFUSU9OUzogMTAwMCxcclxuICBGSUxFX1ZFUlNJT046IDMsXHJcbiAgRklMRV9CTE9DS19TSVpFOiA2NTUzNixcclxuICBUU1YxX1NVUFBPUlRFRF9BTEdPUklUSE1TOiBbJ1RTVjEtRUQyNTUxOS1CTEFLRTJCJ10sXHJcbiAgLy8gZ2VuZXJhdGVkIHVzaW5nIHV1aWR2NSB3aXRoIG5hbWVzcGFjZTogNzk0MjUzYTQtMzEwYi00NDlkLTlkOGQtNDU3NWU4OTIzZjQwIGFuZCBuYW1lOiB0b3pueS5zZWNyZXRzXHJcbiAgU0VDUkVUX1VVSUQ6ICczOGJiNzM3YS00Y2UwLTVlYWQtODU4NS1lMTNlYTIzYjA5YTYnLFxyXG4gIFRZUEVTOiBbJ0NyZWRlbnRpYWwnLCAnRmlsZScsICdDbGllbnQnXSxcclxuICBSRVFVSVJFRF9DTElFTlRfS0VZUzogW1xyXG4gICAgJ3ZlcnNpb24nLFxyXG4gICAgJ3B1YmxpY19zaWduaW5nX2tleScsXHJcbiAgICAncHJpdmF0ZV9zaWduaW5nX2tleScsXHJcbiAgICAnY2xpZW50X2lkJyxcclxuICAgICdhcGlfa2V5X2lkJyxcclxuICAgICdhcGlfc2VjcmV0JyxcclxuICAgICdwdWJsaWNfa2V5JyxcclxuICAgICdwcml2YXRlX2tleScsXHJcbiAgICAnYXBpX3VybCcsXHJcbiAgXSxcclxuICBQVUJMSUNfU0lHTklOR19MRU5HVEg6IDQzLFxyXG4gIFBSSVZBVEVfU0lHTklOR19MRU5HVEg6IDg2LFxyXG4gIFBVQkxJQ19LRVlfTEVOR1RIOiA0MyxcclxuICBQUklWQVRFX0tFWV9MRU5HVEg6IDQzLFxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/utils/constants.js\n");

/***/ }),

/***/ "./lib/utils/index.js":
/*!****************************!*\
  !*** ./lib/utils/index.js ***!
  \****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const errors = __webpack_require__(/*! ../../types/errors */ \"./types/errors/index.js\")\r\n\r\nmodule.exports = {\r\n  checkStatus,\r\n  validateResponseAsJSON,\r\n  credentialedDecodeResponse,\r\n  credentialNoteCall,\r\n  urlEncodeData,\r\n  trimSlash,\r\n  isValidToznySecretNamespace,\r\n}\r\n\r\n/**\r\n * Check the return status of a fetch request and throw an error if one occurred\r\n *\r\n * @param {Response} response\r\n *\r\n * @returns {Promise}\r\n */\r\nasync function checkStatus(response) {\r\n  if (response.ok) {\r\n    return Promise.resolve(response)\r\n  }\r\n  throw new errors.general.RequestError(response, response.statusText)\r\n}\r\n\r\n/**\r\n * Check the return status of a fetch and then parse return the body parsed as JSON.\r\n *\r\n * Throws an error if one has occurred in the fetch or the parse.\r\n *\r\n * @param {Response} response the fetch response object to check and parse\r\n *\r\n * @returns {Promise<Object>} A promise resolving to the JSON object contained in the response.\r\n */\r\nasync function validateResponseAsJSON(response) {\r\n  await checkStatus(response)\r\n  const json = await response.json()\r\n  return json\r\n}\r\n\r\n/**\r\n * URL encode an object for use as in an x-www-form-urlencoded body\r\n *\r\n * @param {Object} data The date to encode as form data\r\n *\r\n * @returns {string} The data as a URL encoded string for use in the body\r\n */\r\nfunction urlEncodeData(element, key, processed = []) {\r\n  if (typeof element === 'object') {\r\n    for (let i in element) {\r\n      // eslint-disable-next-line no-prototype-builtins\r\n      if (element.hasOwnProperty(i)) {\r\n        urlEncodeData(element[i], key ? `${key}[${i}]` : i, processed)\r\n      }\r\n    }\r\n  } else {\r\n    processed.push(`${key}=${encodeURIComponent(element)}`)\r\n  }\r\n  return processed.join('&')\r\n}\r\n\r\n/**\r\n * Trim the trailing slash from a string to help enforce url consistency.\r\n *\r\n * @param {string} path The input string to trim the trailing slash from\r\n *\r\n * @return {string} The string with any trailing slash removed\r\n */\r\nfunction trimSlash(str) {\r\n  return str.replace(/\\/$/, '')\r\n}\r\n\r\n/**\r\n * Map a request error to an identity credentials invalid error on 401 status.\r\n *\r\n * @param {Response} response The request response to the auth service.\r\n *\r\n * @return {Promise<Object>} A promise containing the decoded response if no error.\r\n */\r\nasync function credentialedDecodeResponse(response) {\r\n  try {\r\n    const decoded = await validateResponseAsJSON(response)\r\n    return decoded\r\n  } catch (e) {\r\n    switch (e.response.status) {\r\n      case 401:\r\n        // If we received unauthorized, map it to an invalid credentials error.\r\n        throw new errors.identity.InvalidCredentials(e.response, e.message)\r\n      case 417:\r\n        // If we received expectation failed, map it to an identity locked error.\r\n        throw new errors.identity.IdentityLockedError(e.response, e.message)\r\n      default:\r\n        throw e\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * If a credential note fetch fails, map it to a credential note error.\r\n *\r\n * @param {Promise<Note>} note The promise returned from the read not call.\r\n *\r\n * @return {Promise<Note>} The note promise, returned only if it doesn't throw.\r\n */\r\nasync function credentialNoteCall(note) {\r\n  try {\r\n    const fetched = await note\r\n    return fetched\r\n  } catch (e) {\r\n    if (e instanceof errors.general.RequestError) {\r\n      throw new errors.identity.CredentialNoteError(e.response, e.message)\r\n    }\r\n    throw e\r\n  }\r\n}\r\n\r\n/**\r\n * isValidToznySecretNamespace\r\n * @param {Object} groupName\r\n * @return {Boolean} returns true if the secret was successfully removed\r\n */\r\nasync function isValidToznySecretNamespace(groupName) {\r\n  var groupNameSplit = groupName.split('.')\r\n  if (\r\n    groupNameSplit.length < 2 ||\r\n    groupNameSplit[0] != 'tozny' ||\r\n    groupNameSplit[1] != 'secret'\r\n  ) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvdXRpbHMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdG96bnlzZWN1cmUvc2RrLy4vbGliL3V0aWxzL2luZGV4LmpzPzc4YzMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXJyb3JzID0gcmVxdWlyZSgnLi4vLi4vdHlwZXMvZXJyb3JzJylcclxuXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gIGNoZWNrU3RhdHVzLFxyXG4gIHZhbGlkYXRlUmVzcG9uc2VBc0pTT04sXHJcbiAgY3JlZGVudGlhbGVkRGVjb2RlUmVzcG9uc2UsXHJcbiAgY3JlZGVudGlhbE5vdGVDYWxsLFxyXG4gIHVybEVuY29kZURhdGEsXHJcbiAgdHJpbVNsYXNoLFxyXG4gIGlzVmFsaWRUb3pueVNlY3JldE5hbWVzcGFjZSxcclxufVxyXG5cclxuLyoqXHJcbiAqIENoZWNrIHRoZSByZXR1cm4gc3RhdHVzIG9mIGEgZmV0Y2ggcmVxdWVzdCBhbmQgdGhyb3cgYW4gZXJyb3IgaWYgb25lIG9jY3VycmVkXHJcbiAqXHJcbiAqIEBwYXJhbSB7UmVzcG9uc2V9IHJlc3BvbnNlXHJcbiAqXHJcbiAqIEByZXR1cm5zIHtQcm9taXNlfVxyXG4gKi9cclxuYXN5bmMgZnVuY3Rpb24gY2hlY2tTdGF0dXMocmVzcG9uc2UpIHtcclxuICBpZiAocmVzcG9uc2Uub2spIHtcclxuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUocmVzcG9uc2UpXHJcbiAgfVxyXG4gIHRocm93IG5ldyBlcnJvcnMuZ2VuZXJhbC5SZXF1ZXN0RXJyb3IocmVzcG9uc2UsIHJlc3BvbnNlLnN0YXR1c1RleHQpXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDaGVjayB0aGUgcmV0dXJuIHN0YXR1cyBvZiBhIGZldGNoIGFuZCB0aGVuIHBhcnNlIHJldHVybiB0aGUgYm9keSBwYXJzZWQgYXMgSlNPTi5cclxuICpcclxuICogVGhyb3dzIGFuIGVycm9yIGlmIG9uZSBoYXMgb2NjdXJyZWQgaW4gdGhlIGZldGNoIG9yIHRoZSBwYXJzZS5cclxuICpcclxuICogQHBhcmFtIHtSZXNwb25zZX0gcmVzcG9uc2UgdGhlIGZldGNoIHJlc3BvbnNlIG9iamVjdCB0byBjaGVjayBhbmQgcGFyc2VcclxuICpcclxuICogQHJldHVybnMge1Byb21pc2U8T2JqZWN0Pn0gQSBwcm9taXNlIHJlc29sdmluZyB0byB0aGUgSlNPTiBvYmplY3QgY29udGFpbmVkIGluIHRoZSByZXNwb25zZS5cclxuICovXHJcbmFzeW5jIGZ1bmN0aW9uIHZhbGlkYXRlUmVzcG9uc2VBc0pTT04ocmVzcG9uc2UpIHtcclxuICBhd2FpdCBjaGVja1N0YXR1cyhyZXNwb25zZSlcclxuICBjb25zdCBqc29uID0gYXdhaXQgcmVzcG9uc2UuanNvbigpXHJcbiAgcmV0dXJuIGpzb25cclxufVxyXG5cclxuLyoqXHJcbiAqIFVSTCBlbmNvZGUgYW4gb2JqZWN0IGZvciB1c2UgYXMgaW4gYW4geC13d3ctZm9ybS11cmxlbmNvZGVkIGJvZHlcclxuICpcclxuICogQHBhcmFtIHtPYmplY3R9IGRhdGEgVGhlIGRhdGUgdG8gZW5jb2RlIGFzIGZvcm0gZGF0YVxyXG4gKlxyXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgZGF0YSBhcyBhIFVSTCBlbmNvZGVkIHN0cmluZyBmb3IgdXNlIGluIHRoZSBib2R5XHJcbiAqL1xyXG5mdW5jdGlvbiB1cmxFbmNvZGVEYXRhKGVsZW1lbnQsIGtleSwgcHJvY2Vzc2VkID0gW10pIHtcclxuICBpZiAodHlwZW9mIGVsZW1lbnQgPT09ICdvYmplY3QnKSB7XHJcbiAgICBmb3IgKGxldCBpIGluIGVsZW1lbnQpIHtcclxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXByb3RvdHlwZS1idWlsdGluc1xyXG4gICAgICBpZiAoZWxlbWVudC5oYXNPd25Qcm9wZXJ0eShpKSkge1xyXG4gICAgICAgIHVybEVuY29kZURhdGEoZWxlbWVudFtpXSwga2V5ID8gYCR7a2V5fVske2l9XWAgOiBpLCBwcm9jZXNzZWQpXHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9IGVsc2Uge1xyXG4gICAgcHJvY2Vzc2VkLnB1c2goYCR7a2V5fT0ke2VuY29kZVVSSUNvbXBvbmVudChlbGVtZW50KX1gKVxyXG4gIH1cclxuICByZXR1cm4gcHJvY2Vzc2VkLmpvaW4oJyYnKVxyXG59XHJcblxyXG4vKipcclxuICogVHJpbSB0aGUgdHJhaWxpbmcgc2xhc2ggZnJvbSBhIHN0cmluZyB0byBoZWxwIGVuZm9yY2UgdXJsIGNvbnNpc3RlbmN5LlxyXG4gKlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gcGF0aCBUaGUgaW5wdXQgc3RyaW5nIHRvIHRyaW0gdGhlIHRyYWlsaW5nIHNsYXNoIGZyb21cclxuICpcclxuICogQHJldHVybiB7c3RyaW5nfSBUaGUgc3RyaW5nIHdpdGggYW55IHRyYWlsaW5nIHNsYXNoIHJlbW92ZWRcclxuICovXHJcbmZ1bmN0aW9uIHRyaW1TbGFzaChzdHIpIHtcclxuICByZXR1cm4gc3RyLnJlcGxhY2UoL1xcLyQvLCAnJylcclxufVxyXG5cclxuLyoqXHJcbiAqIE1hcCBhIHJlcXVlc3QgZXJyb3IgdG8gYW4gaWRlbnRpdHkgY3JlZGVudGlhbHMgaW52YWxpZCBlcnJvciBvbiA0MDEgc3RhdHVzLlxyXG4gKlxyXG4gKiBAcGFyYW0ge1Jlc3BvbnNlfSByZXNwb25zZSBUaGUgcmVxdWVzdCByZXNwb25zZSB0byB0aGUgYXV0aCBzZXJ2aWNlLlxyXG4gKlxyXG4gKiBAcmV0dXJuIHtQcm9taXNlPE9iamVjdD59IEEgcHJvbWlzZSBjb250YWluaW5nIHRoZSBkZWNvZGVkIHJlc3BvbnNlIGlmIG5vIGVycm9yLlxyXG4gKi9cclxuYXN5bmMgZnVuY3Rpb24gY3JlZGVudGlhbGVkRGVjb2RlUmVzcG9uc2UocmVzcG9uc2UpIHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgZGVjb2RlZCA9IGF3YWl0IHZhbGlkYXRlUmVzcG9uc2VBc0pTT04ocmVzcG9uc2UpXHJcbiAgICByZXR1cm4gZGVjb2RlZFxyXG4gIH0gY2F0Y2ggKGUpIHtcclxuICAgIHN3aXRjaCAoZS5yZXNwb25zZS5zdGF0dXMpIHtcclxuICAgICAgY2FzZSA0MDE6XHJcbiAgICAgICAgLy8gSWYgd2UgcmVjZWl2ZWQgdW5hdXRob3JpemVkLCBtYXAgaXQgdG8gYW4gaW52YWxpZCBjcmVkZW50aWFscyBlcnJvci5cclxuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzLmlkZW50aXR5LkludmFsaWRDcmVkZW50aWFscyhlLnJlc3BvbnNlLCBlLm1lc3NhZ2UpXHJcbiAgICAgIGNhc2UgNDE3OlxyXG4gICAgICAgIC8vIElmIHdlIHJlY2VpdmVkIGV4cGVjdGF0aW9uIGZhaWxlZCwgbWFwIGl0IHRvIGFuIGlkZW50aXR5IGxvY2tlZCBlcnJvci5cclxuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzLmlkZW50aXR5LklkZW50aXR5TG9ja2VkRXJyb3IoZS5yZXNwb25zZSwgZS5tZXNzYWdlKVxyXG4gICAgICBkZWZhdWx0OlxyXG4gICAgICAgIHRocm93IGVcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBJZiBhIGNyZWRlbnRpYWwgbm90ZSBmZXRjaCBmYWlscywgbWFwIGl0IHRvIGEgY3JlZGVudGlhbCBub3RlIGVycm9yLlxyXG4gKlxyXG4gKiBAcGFyYW0ge1Byb21pc2U8Tm90ZT59IG5vdGUgVGhlIHByb21pc2UgcmV0dXJuZWQgZnJvbSB0aGUgcmVhZCBub3QgY2FsbC5cclxuICpcclxuICogQHJldHVybiB7UHJvbWlzZTxOb3RlPn0gVGhlIG5vdGUgcHJvbWlzZSwgcmV0dXJuZWQgb25seSBpZiBpdCBkb2Vzbid0IHRocm93LlxyXG4gKi9cclxuYXN5bmMgZnVuY3Rpb24gY3JlZGVudGlhbE5vdGVDYWxsKG5vdGUpIHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgZmV0Y2hlZCA9IGF3YWl0IG5vdGVcclxuICAgIHJldHVybiBmZXRjaGVkXHJcbiAgfSBjYXRjaCAoZSkge1xyXG4gICAgaWYgKGUgaW5zdGFuY2VvZiBlcnJvcnMuZ2VuZXJhbC5SZXF1ZXN0RXJyb3IpIHtcclxuICAgICAgdGhyb3cgbmV3IGVycm9ycy5pZGVudGl0eS5DcmVkZW50aWFsTm90ZUVycm9yKGUucmVzcG9uc2UsIGUubWVzc2FnZSlcclxuICAgIH1cclxuICAgIHRocm93IGVcclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBpc1ZhbGlkVG96bnlTZWNyZXROYW1lc3BhY2VcclxuICogQHBhcmFtIHtPYmplY3R9IGdyb3VwTmFtZVxyXG4gKiBAcmV0dXJuIHtCb29sZWFufSByZXR1cm5zIHRydWUgaWYgdGhlIHNlY3JldCB3YXMgc3VjY2Vzc2Z1bGx5IHJlbW92ZWRcclxuICovXHJcbmFzeW5jIGZ1bmN0aW9uIGlzVmFsaWRUb3pueVNlY3JldE5hbWVzcGFjZShncm91cE5hbWUpIHtcclxuICB2YXIgZ3JvdXBOYW1lU3BsaXQgPSBncm91cE5hbWUuc3BsaXQoJy4nKVxyXG4gIGlmIChcclxuICAgIGdyb3VwTmFtZVNwbGl0Lmxlbmd0aCA8IDIgfHxcclxuICAgIGdyb3VwTmFtZVNwbGl0WzBdICE9ICd0b3pueScgfHxcclxuICAgIGdyb3VwTmFtZVNwbGl0WzFdICE9ICdzZWNyZXQnXHJcbiAgKSB7XHJcbiAgICByZXR1cm4gZmFsc2VcclxuICB9XHJcbiAgcmV0dXJuIHRydWVcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/utils/index.js\n");

/***/ }),

/***/ "./lib/utils/interface.js":
/*!********************************!*\
  !*** ./lib/utils/interface.js ***!
  \********************************/
/***/ ((module) => {

eval("module.exports = {\r\n  isExtension,\r\n  checkConstructor,\r\n  notImplemented,\r\n}\r\n\r\n/**\r\n * Checks whether an object is an instance of the provided class object.\r\n *\r\n * Used to provide static instance checks in interface classes.\r\n *\r\n * @param {object} instance The created instance of to ensure is an instance of the class.\r\n * @param {object} classObject The class constructor object to ensure the instance is a part of.\r\n */\r\nfunction isExtension(instance, classObject) {\r\n  return instance.constructor.prototype instanceof classObject\r\n}\r\n\r\n/**\r\n * Used in interface constructors to ensure a valid extension has been created.\r\n *\r\n * @param {object} instance The `this` instance passed into the constructor.\r\n * @param {object} classObject The class instance used for comparisons.\r\n */\r\nfunction checkConstructor(instance, classObject) {\r\n  if (instance.constructor === classObject) {\r\n    throw new Error(\r\n      `The ${classObject.name} class must be extended with a concrete implementation before use.`\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Used in stub methods of interfaces.\r\n *\r\n * Throws an error indicating the name of the function needing an implementation.\r\n */\r\nfunction notImplemented() {\r\n  const err = new Error()\r\n  const stackTrace = err.stack\r\n\r\n  // Parse the stack trace accounting for different environments\r\n  let callerName = stackTrace.replace(/^Error\\s+/, '') // Sanitize Chrome\r\n  callerName = callerName.split('\\n')[1] // 1st item is this, 2nd item is caller\r\n  callerName = callerName.replace(/^\\s+at Object./, '') // Sanitize Chrome\r\n  callerName = callerName.replace(/ \\(.+\\)$/, '') // Sanitize Chrome\r\n  callerName = callerName.replace(/@.+/, '') // Sanitize Firefox\r\n  callerName = callerName.replace(/at\\s/, '') // Sanitize Node\r\n  callerName = callerName.trim()\r\n  throw new Error(`The method ${callerName} must be implemented in a subclass.`)\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvdXRpbHMvaW50ZXJmYWNlLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B0b3pueXNlY3VyZS9zZGsvLi9saWIvdXRpbHMvaW50ZXJmYWNlLmpzPzk5ZTIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgaXNFeHRlbnNpb24sXHJcbiAgY2hlY2tDb25zdHJ1Y3RvcixcclxuICBub3RJbXBsZW1lbnRlZCxcclxufVxyXG5cclxuLyoqXHJcbiAqIENoZWNrcyB3aGV0aGVyIGFuIG9iamVjdCBpcyBhbiBpbnN0YW5jZSBvZiB0aGUgcHJvdmlkZWQgY2xhc3Mgb2JqZWN0LlxyXG4gKlxyXG4gKiBVc2VkIHRvIHByb3ZpZGUgc3RhdGljIGluc3RhbmNlIGNoZWNrcyBpbiBpbnRlcmZhY2UgY2xhc3Nlcy5cclxuICpcclxuICogQHBhcmFtIHtvYmplY3R9IGluc3RhbmNlIFRoZSBjcmVhdGVkIGluc3RhbmNlIG9mIHRvIGVuc3VyZSBpcyBhbiBpbnN0YW5jZSBvZiB0aGUgY2xhc3MuXHJcbiAqIEBwYXJhbSB7b2JqZWN0fSBjbGFzc09iamVjdCBUaGUgY2xhc3MgY29uc3RydWN0b3Igb2JqZWN0IHRvIGVuc3VyZSB0aGUgaW5zdGFuY2UgaXMgYSBwYXJ0IG9mLlxyXG4gKi9cclxuZnVuY3Rpb24gaXNFeHRlbnNpb24oaW5zdGFuY2UsIGNsYXNzT2JqZWN0KSB7XHJcbiAgcmV0dXJuIGluc3RhbmNlLmNvbnN0cnVjdG9yLnByb3RvdHlwZSBpbnN0YW5jZW9mIGNsYXNzT2JqZWN0XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBVc2VkIGluIGludGVyZmFjZSBjb25zdHJ1Y3RvcnMgdG8gZW5zdXJlIGEgdmFsaWQgZXh0ZW5zaW9uIGhhcyBiZWVuIGNyZWF0ZWQuXHJcbiAqXHJcbiAqIEBwYXJhbSB7b2JqZWN0fSBpbnN0YW5jZSBUaGUgYHRoaXNgIGluc3RhbmNlIHBhc3NlZCBpbnRvIHRoZSBjb25zdHJ1Y3Rvci5cclxuICogQHBhcmFtIHtvYmplY3R9IGNsYXNzT2JqZWN0IFRoZSBjbGFzcyBpbnN0YW5jZSB1c2VkIGZvciBjb21wYXJpc29ucy5cclxuICovXHJcbmZ1bmN0aW9uIGNoZWNrQ29uc3RydWN0b3IoaW5zdGFuY2UsIGNsYXNzT2JqZWN0KSB7XHJcbiAgaWYgKGluc3RhbmNlLmNvbnN0cnVjdG9yID09PSBjbGFzc09iamVjdCkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKFxyXG4gICAgICBgVGhlICR7Y2xhc3NPYmplY3QubmFtZX0gY2xhc3MgbXVzdCBiZSBleHRlbmRlZCB3aXRoIGEgY29uY3JldGUgaW1wbGVtZW50YXRpb24gYmVmb3JlIHVzZS5gXHJcbiAgICApXHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogVXNlZCBpbiBzdHViIG1ldGhvZHMgb2YgaW50ZXJmYWNlcy5cclxuICpcclxuICogVGhyb3dzIGFuIGVycm9yIGluZGljYXRpbmcgdGhlIG5hbWUgb2YgdGhlIGZ1bmN0aW9uIG5lZWRpbmcgYW4gaW1wbGVtZW50YXRpb24uXHJcbiAqL1xyXG5mdW5jdGlvbiBub3RJbXBsZW1lbnRlZCgpIHtcclxuICBjb25zdCBlcnIgPSBuZXcgRXJyb3IoKVxyXG4gIGNvbnN0IHN0YWNrVHJhY2UgPSBlcnIuc3RhY2tcclxuXHJcbiAgLy8gUGFyc2UgdGhlIHN0YWNrIHRyYWNlIGFjY291bnRpbmcgZm9yIGRpZmZlcmVudCBlbnZpcm9ubWVudHNcclxuICBsZXQgY2FsbGVyTmFtZSA9IHN0YWNrVHJhY2UucmVwbGFjZSgvXkVycm9yXFxzKy8sICcnKSAvLyBTYW5pdGl6ZSBDaHJvbWVcclxuICBjYWxsZXJOYW1lID0gY2FsbGVyTmFtZS5zcGxpdCgnXFxuJylbMV0gLy8gMXN0IGl0ZW0gaXMgdGhpcywgMm5kIGl0ZW0gaXMgY2FsbGVyXHJcbiAgY2FsbGVyTmFtZSA9IGNhbGxlck5hbWUucmVwbGFjZSgvXlxccythdCBPYmplY3QuLywgJycpIC8vIFNhbml0aXplIENocm9tZVxyXG4gIGNhbGxlck5hbWUgPSBjYWxsZXJOYW1lLnJlcGxhY2UoLyBcXCguK1xcKSQvLCAnJykgLy8gU2FuaXRpemUgQ2hyb21lXHJcbiAgY2FsbGVyTmFtZSA9IGNhbGxlck5hbWUucmVwbGFjZSgvQC4rLywgJycpIC8vIFNhbml0aXplIEZpcmVmb3hcclxuICBjYWxsZXJOYW1lID0gY2FsbGVyTmFtZS5yZXBsYWNlKC9hdFxccy8sICcnKSAvLyBTYW5pdGl6ZSBOb2RlXHJcbiAgY2FsbGVyTmFtZSA9IGNhbGxlck5hbWUudHJpbSgpXHJcbiAgdGhyb3cgbmV3IEVycm9yKGBUaGUgbWV0aG9kICR7Y2FsbGVyTmFtZX0gbXVzdCBiZSBpbXBsZW1lbnRlZCBpbiBhIHN1YmNsYXNzLmApXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./lib/utils/interface.js\n");

/***/ }),

/***/ "./lib/utils/streamTransformer.js":
/*!****************************************!*\
  !*** ./lib/utils/streamTransformer.js ***!
  \****************************************/
/***/ ((module) => {

eval("/**\r\n * A utility object which organizes the processing of different stream types.\r\n *\r\n * A stream transformer takes a stream, performs an operation on it defined by\r\n * the `transformer` method, and then passes the operation onto the next\r\n * StreamTransformer until all bytes from the stream have been read.\r\n *\r\n * Practically, this allows extracting the Tozny and encryption headers from the\r\n * stream before taking the leftover, splitting it into the correct sized chunks\r\n * and feeding it to the decryption algorithm. Each of these steps is a different\r\n * StreamTransformer organized into a chain with `.then()`\r\n */\r\nclass StreamTransformer {\r\n  constructor(transformer, end, context) {\r\n    this._then = false\r\n    this.transformer = transformer\r\n    this.end = end\r\n    this.context = context\r\n  }\r\n  /**\r\n   * Adds a new StreamTransformer which processes bytes after this one completes.\r\n   *\r\n   * @param {function|StreamTransformer} next A transform function or StreamTransformer\r\n   *                                          which processes bytes when the current\r\n   *                                          transformation is complete.\r\n   * @param {function} end The callback function invoked when the current\r\n   *                       transformation completes.\r\n   */\r\n  then(next, end) {\r\n    if (this._then) {\r\n      throw new Error('Only one `.then` can be applied to a stream transformer')\r\n    }\r\n    if (typeof next === 'function') {\r\n      next = new StreamTransformer(next, end, this.context)\r\n    }\r\n    if (!(next instanceof StreamTransformer)) {\r\n      throw new Error('Unable to use `next` as a StreamTransformer')\r\n    }\r\n    this._then = next\r\n    return next\r\n  }\r\n  /**\r\n   * Begin fetching chunks from the source stream and transforming them.\r\n   *\r\n   * @param {object} source An object that provides chunks by calling the `read()`\r\n   *                        method. Each call to read returns an object with a\r\n   *                        value (Uint8Array) and done boolean.\r\n   * @param {object} chunk  An object to use as the last chunk. This should only be\r\n   *                        sent internally when a `.then()` chain is used.\r\n   * @return {Promise<undefined>} A promise which resolves when the transformation\r\n   *                              chain is complete.\r\n   */\r\n  async transform(source, chunk) {\r\n    // Internal transformation state and associated user control methods\r\n    let doThen = false\r\n    let previous\r\n    const control = {\r\n      done: (extra) => {\r\n        doThen = true\r\n        previous = { value: extra }\r\n      },\r\n      continue: (value, append) => {\r\n        previous = { value, append }\r\n      },\r\n    }\r\n    // Use the sent chunk if available or get the first chunk from source\r\n    chunk = chunk || (await source.read())\r\n    // Process chunks until the transformer says it is done, or source is empty.\r\n    // Empty occurs when done is reported _and_ there is no data in the value\r\n    while (\r\n      doThen === false &&\r\n      (!chunk.done ||\r\n        (chunk.value instanceof Uint8Array && chunk.value.length > 0))\r\n    ) {\r\n      const _chunk = chunk.value\r\n      await this.transformer(_chunk, this.context, control)\r\n      if (!previous) {\r\n        chunk = await source.read()\r\n      } else {\r\n        if (previous.append) {\r\n          const next = await source.read()\r\n          const full = new Uint8Array(previous.value.length + next.value.length)\r\n          full.set(previous.value, 0)\r\n          full.set(next.value, previous.value.length)\r\n          previous.value = full\r\n        }\r\n        chunk = {\r\n          value: previous.value,\r\n          done: false,\r\n        }\r\n        previous = undefined\r\n      }\r\n    }\r\n    // Call the end function if one has been provided giving it the context and\r\n    // whether the completion was due to the source being empty or because the\r\n    // transformer called the done control method.\r\n    if (this.end) {\r\n      await this.end(this.context, chunk.done)\r\n    }\r\n    // Pass the source and any remaining chunk split data to the next transformer\r\n    // if one is present.\r\n    if (doThen && this._then instanceof StreamTransformer) {\r\n      await this._then.transform(source, chunk)\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = StreamTransformer\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvdXRpbHMvc3RyZWFtVHJhbnNmb3JtZXIuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHRvem55c2VjdXJlL3Nkay8uL2xpYi91dGlscy9zdHJlYW1UcmFuc2Zvcm1lci5qcz8wNzE3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBBIHV0aWxpdHkgb2JqZWN0IHdoaWNoIG9yZ2FuaXplcyB0aGUgcHJvY2Vzc2luZyBvZiBkaWZmZXJlbnQgc3RyZWFtIHR5cGVzLlxyXG4gKlxyXG4gKiBBIHN0cmVhbSB0cmFuc2Zvcm1lciB0YWtlcyBhIHN0cmVhbSwgcGVyZm9ybXMgYW4gb3BlcmF0aW9uIG9uIGl0IGRlZmluZWQgYnlcclxuICogdGhlIGB0cmFuc2Zvcm1lcmAgbWV0aG9kLCBhbmQgdGhlbiBwYXNzZXMgdGhlIG9wZXJhdGlvbiBvbnRvIHRoZSBuZXh0XHJcbiAqIFN0cmVhbVRyYW5zZm9ybWVyIHVudGlsIGFsbCBieXRlcyBmcm9tIHRoZSBzdHJlYW0gaGF2ZSBiZWVuIHJlYWQuXHJcbiAqXHJcbiAqIFByYWN0aWNhbGx5LCB0aGlzIGFsbG93cyBleHRyYWN0aW5nIHRoZSBUb3pueSBhbmQgZW5jcnlwdGlvbiBoZWFkZXJzIGZyb20gdGhlXHJcbiAqIHN0cmVhbSBiZWZvcmUgdGFraW5nIHRoZSBsZWZ0b3Zlciwgc3BsaXR0aW5nIGl0IGludG8gdGhlIGNvcnJlY3Qgc2l6ZWQgY2h1bmtzXHJcbiAqIGFuZCBmZWVkaW5nIGl0IHRvIHRoZSBkZWNyeXB0aW9uIGFsZ29yaXRobS4gRWFjaCBvZiB0aGVzZSBzdGVwcyBpcyBhIGRpZmZlcmVudFxyXG4gKiBTdHJlYW1UcmFuc2Zvcm1lciBvcmdhbml6ZWQgaW50byBhIGNoYWluIHdpdGggYC50aGVuKClgXHJcbiAqL1xyXG5jbGFzcyBTdHJlYW1UcmFuc2Zvcm1lciB7XHJcbiAgY29uc3RydWN0b3IodHJhbnNmb3JtZXIsIGVuZCwgY29udGV4dCkge1xyXG4gICAgdGhpcy5fdGhlbiA9IGZhbHNlXHJcbiAgICB0aGlzLnRyYW5zZm9ybWVyID0gdHJhbnNmb3JtZXJcclxuICAgIHRoaXMuZW5kID0gZW5kXHJcbiAgICB0aGlzLmNvbnRleHQgPSBjb250ZXh0XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIEFkZHMgYSBuZXcgU3RyZWFtVHJhbnNmb3JtZXIgd2hpY2ggcHJvY2Vzc2VzIGJ5dGVzIGFmdGVyIHRoaXMgb25lIGNvbXBsZXRlcy5cclxuICAgKlxyXG4gICAqIEBwYXJhbSB7ZnVuY3Rpb258U3RyZWFtVHJhbnNmb3JtZXJ9IG5leHQgQSB0cmFuc2Zvcm0gZnVuY3Rpb24gb3IgU3RyZWFtVHJhbnNmb3JtZXJcclxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdoaWNoIHByb2Nlc3NlcyBieXRlcyB3aGVuIHRoZSBjdXJyZW50XHJcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm1hdGlvbiBpcyBjb21wbGV0ZS5cclxuICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBlbmQgVGhlIGNhbGxiYWNrIGZ1bmN0aW9uIGludm9rZWQgd2hlbiB0aGUgY3VycmVudFxyXG4gICAqICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm1hdGlvbiBjb21wbGV0ZXMuXHJcbiAgICovXHJcbiAgdGhlbihuZXh0LCBlbmQpIHtcclxuICAgIGlmICh0aGlzLl90aGVuKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignT25seSBvbmUgYC50aGVuYCBjYW4gYmUgYXBwbGllZCB0byBhIHN0cmVhbSB0cmFuc2Zvcm1lcicpXHJcbiAgICB9XHJcbiAgICBpZiAodHlwZW9mIG5leHQgPT09ICdmdW5jdGlvbicpIHtcclxuICAgICAgbmV4dCA9IG5ldyBTdHJlYW1UcmFuc2Zvcm1lcihuZXh0LCBlbmQsIHRoaXMuY29udGV4dClcclxuICAgIH1cclxuICAgIGlmICghKG5leHQgaW5zdGFuY2VvZiBTdHJlYW1UcmFuc2Zvcm1lcikpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdVbmFibGUgdG8gdXNlIGBuZXh0YCBhcyBhIFN0cmVhbVRyYW5zZm9ybWVyJylcclxuICAgIH1cclxuICAgIHRoaXMuX3RoZW4gPSBuZXh0XHJcbiAgICByZXR1cm4gbmV4dFxyXG4gIH1cclxuICAvKipcclxuICAgKiBCZWdpbiBmZXRjaGluZyBjaHVua3MgZnJvbSB0aGUgc291cmNlIHN0cmVhbSBhbmQgdHJhbnNmb3JtaW5nIHRoZW0uXHJcbiAgICpcclxuICAgKiBAcGFyYW0ge29iamVjdH0gc291cmNlIEFuIG9iamVjdCB0aGF0IHByb3ZpZGVzIGNodW5rcyBieSBjYWxsaW5nIHRoZSBgcmVhZCgpYFxyXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kLiBFYWNoIGNhbGwgdG8gcmVhZCByZXR1cm5zIGFuIG9iamVjdCB3aXRoIGFcclxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlIChVaW50OEFycmF5KSBhbmQgZG9uZSBib29sZWFuLlxyXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBjaHVuayAgQW4gb2JqZWN0IHRvIHVzZSBhcyB0aGUgbGFzdCBjaHVuay4gVGhpcyBzaG91bGQgb25seSBiZVxyXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgc2VudCBpbnRlcm5hbGx5IHdoZW4gYSBgLnRoZW4oKWAgY2hhaW4gaXMgdXNlZC5cclxuICAgKiBAcmV0dXJuIHtQcm9taXNlPHVuZGVmaW5lZD59IEEgcHJvbWlzZSB3aGljaCByZXNvbHZlcyB3aGVuIHRoZSB0cmFuc2Zvcm1hdGlvblxyXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hhaW4gaXMgY29tcGxldGUuXHJcbiAgICovXHJcbiAgYXN5bmMgdHJhbnNmb3JtKHNvdXJjZSwgY2h1bmspIHtcclxuICAgIC8vIEludGVybmFsIHRyYW5zZm9ybWF0aW9uIHN0YXRlIGFuZCBhc3NvY2lhdGVkIHVzZXIgY29udHJvbCBtZXRob2RzXHJcbiAgICBsZXQgZG9UaGVuID0gZmFsc2VcclxuICAgIGxldCBwcmV2aW91c1xyXG4gICAgY29uc3QgY29udHJvbCA9IHtcclxuICAgICAgZG9uZTogKGV4dHJhKSA9PiB7XHJcbiAgICAgICAgZG9UaGVuID0gdHJ1ZVxyXG4gICAgICAgIHByZXZpb3VzID0geyB2YWx1ZTogZXh0cmEgfVxyXG4gICAgICB9LFxyXG4gICAgICBjb250aW51ZTogKHZhbHVlLCBhcHBlbmQpID0+IHtcclxuICAgICAgICBwcmV2aW91cyA9IHsgdmFsdWUsIGFwcGVuZCB9XHJcbiAgICAgIH0sXHJcbiAgICB9XHJcbiAgICAvLyBVc2UgdGhlIHNlbnQgY2h1bmsgaWYgYXZhaWxhYmxlIG9yIGdldCB0aGUgZmlyc3QgY2h1bmsgZnJvbSBzb3VyY2VcclxuICAgIGNodW5rID0gY2h1bmsgfHwgKGF3YWl0IHNvdXJjZS5yZWFkKCkpXHJcbiAgICAvLyBQcm9jZXNzIGNodW5rcyB1bnRpbCB0aGUgdHJhbnNmb3JtZXIgc2F5cyBpdCBpcyBkb25lLCBvciBzb3VyY2UgaXMgZW1wdHkuXHJcbiAgICAvLyBFbXB0eSBvY2N1cnMgd2hlbiBkb25lIGlzIHJlcG9ydGVkIF9hbmRfIHRoZXJlIGlzIG5vIGRhdGEgaW4gdGhlIHZhbHVlXHJcbiAgICB3aGlsZSAoXHJcbiAgICAgIGRvVGhlbiA9PT0gZmFsc2UgJiZcclxuICAgICAgKCFjaHVuay5kb25lIHx8XHJcbiAgICAgICAgKGNodW5rLnZhbHVlIGluc3RhbmNlb2YgVWludDhBcnJheSAmJiBjaHVuay52YWx1ZS5sZW5ndGggPiAwKSlcclxuICAgICkge1xyXG4gICAgICBjb25zdCBfY2h1bmsgPSBjaHVuay52YWx1ZVxyXG4gICAgICBhd2FpdCB0aGlzLnRyYW5zZm9ybWVyKF9jaHVuaywgdGhpcy5jb250ZXh0LCBjb250cm9sKVxyXG4gICAgICBpZiAoIXByZXZpb3VzKSB7XHJcbiAgICAgICAgY2h1bmsgPSBhd2FpdCBzb3VyY2UucmVhZCgpXHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgaWYgKHByZXZpb3VzLmFwcGVuZCkge1xyXG4gICAgICAgICAgY29uc3QgbmV4dCA9IGF3YWl0IHNvdXJjZS5yZWFkKClcclxuICAgICAgICAgIGNvbnN0IGZ1bGwgPSBuZXcgVWludDhBcnJheShwcmV2aW91cy52YWx1ZS5sZW5ndGggKyBuZXh0LnZhbHVlLmxlbmd0aClcclxuICAgICAgICAgIGZ1bGwuc2V0KHByZXZpb3VzLnZhbHVlLCAwKVxyXG4gICAgICAgICAgZnVsbC5zZXQobmV4dC52YWx1ZSwgcHJldmlvdXMudmFsdWUubGVuZ3RoKVxyXG4gICAgICAgICAgcHJldmlvdXMudmFsdWUgPSBmdWxsXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNodW5rID0ge1xyXG4gICAgICAgICAgdmFsdWU6IHByZXZpb3VzLnZhbHVlLFxyXG4gICAgICAgICAgZG9uZTogZmFsc2UsXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHByZXZpb3VzID0gdW5kZWZpbmVkXHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIC8vIENhbGwgdGhlIGVuZCBmdW5jdGlvbiBpZiBvbmUgaGFzIGJlZW4gcHJvdmlkZWQgZ2l2aW5nIGl0IHRoZSBjb250ZXh0IGFuZFxyXG4gICAgLy8gd2hldGhlciB0aGUgY29tcGxldGlvbiB3YXMgZHVlIHRvIHRoZSBzb3VyY2UgYmVpbmcgZW1wdHkgb3IgYmVjYXVzZSB0aGVcclxuICAgIC8vIHRyYW5zZm9ybWVyIGNhbGxlZCB0aGUgZG9uZSBjb250cm9sIG1ldGhvZC5cclxuICAgIGlmICh0aGlzLmVuZCkge1xyXG4gICAgICBhd2FpdCB0aGlzLmVuZCh0aGlzLmNvbnRleHQsIGNodW5rLmRvbmUpXHJcbiAgICB9XHJcbiAgICAvLyBQYXNzIHRoZSBzb3VyY2UgYW5kIGFueSByZW1haW5pbmcgY2h1bmsgc3BsaXQgZGF0YSB0byB0aGUgbmV4dCB0cmFuc2Zvcm1lclxyXG4gICAgLy8gaWYgb25lIGlzIHByZXNlbnQuXHJcbiAgICBpZiAoZG9UaGVuICYmIHRoaXMuX3RoZW4gaW5zdGFuY2VvZiBTdHJlYW1UcmFuc2Zvcm1lcikge1xyXG4gICAgICBhd2FpdCB0aGlzLl90aGVuLnRyYW5zZm9ybShzb3VyY2UsIGNodW5rKVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBTdHJlYW1UcmFuc2Zvcm1lclxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/utils/streamTransformer.js\n");

/***/ }),

/***/ "./node_modules/cross-fetch/dist/browser-ponyfill.js":
/*!***********************************************************!*\
  !*** ./node_modules/cross-fetch/dist/browser-ponyfill.js ***!
  \***********************************************************/
/***/ (function(module, exports) {

eval("var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports[\"default\"] = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/cross-fetch/dist/browser-ponyfill.js\n");

/***/ }),

/***/ "./node_modules/libsodium-wrappers/dist/modules/libsodium-wrappers.js":
/*!****************************************************************************!*\
  !*** ./node_modules/libsodium-wrappers/dist/modules/libsodium-wrappers.js ***!
  \****************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!function(e){function r(e,r){\"use strict\";var t,a=r.ready.then((function(){function a(){if(0!==t._sodium_init())throw new Error(\"libsodium was not correctly initialized.\");for(var r=[\"crypto_aead_chacha20poly1305_decrypt\",\"crypto_aead_chacha20poly1305_decrypt_detached\",\"crypto_aead_chacha20poly1305_encrypt\",\"crypto_aead_chacha20poly1305_encrypt_detached\",\"crypto_aead_chacha20poly1305_ietf_decrypt\",\"crypto_aead_chacha20poly1305_ietf_decrypt_detached\",\"crypto_aead_chacha20poly1305_ietf_encrypt\",\"crypto_aead_chacha20poly1305_ietf_encrypt_detached\",\"crypto_aead_chacha20poly1305_ietf_keygen\",\"crypto_aead_chacha20poly1305_keygen\",\"crypto_aead_xchacha20poly1305_ietf_decrypt\",\"crypto_aead_xchacha20poly1305_ietf_decrypt_detached\",\"crypto_aead_xchacha20poly1305_ietf_encrypt\",\"crypto_aead_xchacha20poly1305_ietf_encrypt_detached\",\"crypto_aead_xchacha20poly1305_ietf_keygen\",\"crypto_auth\",\"crypto_auth_hmacsha256\",\"crypto_auth_hmacsha256_keygen\",\"crypto_auth_hmacsha256_verify\",\"crypto_auth_hmacsha512\",\"crypto_auth_hmacsha512_keygen\",\"crypto_auth_hmacsha512_verify\",\"crypto_auth_keygen\",\"crypto_auth_verify\",\"crypto_box_beforenm\",\"crypto_box_curve25519xchacha20poly1305_keypair\",\"crypto_box_curve25519xchacha20poly1305_seal\",\"crypto_box_curve25519xchacha20poly1305_seal_open\",\"crypto_box_detached\",\"crypto_box_easy\",\"crypto_box_easy_afternm\",\"crypto_box_keypair\",\"crypto_box_open_detached\",\"crypto_box_open_easy\",\"crypto_box_open_easy_afternm\",\"crypto_box_seal\",\"crypto_box_seal_open\",\"crypto_box_seed_keypair\",\"crypto_core_ed25519_add\",\"crypto_core_ed25519_from_hash\",\"crypto_core_ed25519_from_uniform\",\"crypto_core_ed25519_is_valid_point\",\"crypto_core_ed25519_random\",\"crypto_core_ed25519_scalar_add\",\"crypto_core_ed25519_scalar_complement\",\"crypto_core_ed25519_scalar_invert\",\"crypto_core_ed25519_scalar_mul\",\"crypto_core_ed25519_scalar_negate\",\"crypto_core_ed25519_scalar_random\",\"crypto_core_ed25519_scalar_reduce\",\"crypto_core_ed25519_scalar_sub\",\"crypto_core_ed25519_sub\",\"crypto_core_ristretto255_add\",\"crypto_core_ristretto255_from_hash\",\"crypto_core_ristretto255_is_valid_point\",\"crypto_core_ristretto255_random\",\"crypto_core_ristretto255_scalar_add\",\"crypto_core_ristretto255_scalar_complement\",\"crypto_core_ristretto255_scalar_invert\",\"crypto_core_ristretto255_scalar_mul\",\"crypto_core_ristretto255_scalar_negate\",\"crypto_core_ristretto255_scalar_random\",\"crypto_core_ristretto255_scalar_reduce\",\"crypto_core_ristretto255_scalar_sub\",\"crypto_core_ristretto255_sub\",\"crypto_generichash\",\"crypto_generichash_blake2b_salt_personal\",\"crypto_generichash_final\",\"crypto_generichash_init\",\"crypto_generichash_keygen\",\"crypto_generichash_update\",\"crypto_hash\",\"crypto_hash_sha256\",\"crypto_hash_sha256_final\",\"crypto_hash_sha256_init\",\"crypto_hash_sha256_update\",\"crypto_hash_sha512\",\"crypto_hash_sha512_final\",\"crypto_hash_sha512_init\",\"crypto_hash_sha512_update\",\"crypto_kdf_derive_from_key\",\"crypto_kdf_keygen\",\"crypto_kx_client_session_keys\",\"crypto_kx_keypair\",\"crypto_kx_seed_keypair\",\"crypto_kx_server_session_keys\",\"crypto_onetimeauth\",\"crypto_onetimeauth_final\",\"crypto_onetimeauth_init\",\"crypto_onetimeauth_keygen\",\"crypto_onetimeauth_update\",\"crypto_onetimeauth_verify\",\"crypto_pwhash\",\"crypto_pwhash_scryptsalsa208sha256\",\"crypto_pwhash_scryptsalsa208sha256_ll\",\"crypto_pwhash_scryptsalsa208sha256_str\",\"crypto_pwhash_scryptsalsa208sha256_str_verify\",\"crypto_pwhash_str\",\"crypto_pwhash_str_needs_rehash\",\"crypto_pwhash_str_verify\",\"crypto_scalarmult\",\"crypto_scalarmult_base\",\"crypto_scalarmult_ed25519\",\"crypto_scalarmult_ed25519_base\",\"crypto_scalarmult_ed25519_base_noclamp\",\"crypto_scalarmult_ed25519_noclamp\",\"crypto_scalarmult_ristretto255\",\"crypto_scalarmult_ristretto255_base\",\"crypto_secretbox_detached\",\"crypto_secretbox_easy\",\"crypto_secretbox_keygen\",\"crypto_secretbox_open_detached\",\"crypto_secretbox_open_easy\",\"crypto_secretstream_xchacha20poly1305_init_pull\",\"crypto_secretstream_xchacha20poly1305_init_push\",\"crypto_secretstream_xchacha20poly1305_keygen\",\"crypto_secretstream_xchacha20poly1305_pull\",\"crypto_secretstream_xchacha20poly1305_push\",\"crypto_secretstream_xchacha20poly1305_rekey\",\"crypto_shorthash\",\"crypto_shorthash_keygen\",\"crypto_shorthash_siphashx24\",\"crypto_sign\",\"crypto_sign_detached\",\"crypto_sign_ed25519_pk_to_curve25519\",\"crypto_sign_ed25519_sk_to_curve25519\",\"crypto_sign_ed25519_sk_to_pk\",\"crypto_sign_ed25519_sk_to_seed\",\"crypto_sign_final_create\",\"crypto_sign_final_verify\",\"crypto_sign_init\",\"crypto_sign_keypair\",\"crypto_sign_open\",\"crypto_sign_seed_keypair\",\"crypto_sign_update\",\"crypto_sign_verify_detached\",\"crypto_stream_chacha20\",\"crypto_stream_chacha20_ietf_xor\",\"crypto_stream_chacha20_ietf_xor_ic\",\"crypto_stream_chacha20_keygen\",\"crypto_stream_chacha20_xor\",\"crypto_stream_chacha20_xor_ic\",\"crypto_stream_keygen\",\"crypto_stream_xchacha20_keygen\",\"crypto_stream_xchacha20_xor\",\"crypto_stream_xchacha20_xor_ic\",\"randombytes_buf\",\"randombytes_buf_deterministic\",\"randombytes_close\",\"randombytes_random\",\"randombytes_set_implementation\",\"randombytes_stir\",\"randombytes_uniform\",\"sodium_version_string\"],a=[E,x,k,S,T,w,Y,B,A,K,M,I,N,L,U,O,C,R,P,G,X,D,F,V,H,q,j,z,W,J,Q,Z,$,ee,re,te,ae,_e,se,ne,ce,oe,he,pe,ye,ie,le,ue,de,ve,ge,be,fe,me,Ee,xe,ke,Se,Te,we,Ye,Be,Ae,Ke,Me,Ie,Ne,Le,Ue,Oe,Ce,Re,Pe,Ge,Xe,De,Fe,Ve,He,qe,je,ze,We,Je,Qe,Ze,$e,er,rr,tr,ar,_r,sr,nr,cr,or,hr,pr,yr,ir,lr,ur,dr,vr,gr,br,fr,mr,Er,xr,kr,Sr,Tr,wr,Yr,Br,Ar,Kr,Mr,Ir,Nr,Lr,Ur,Or,Cr,Rr,Pr,Gr,Xr,Dr,Fr,Vr,Hr,qr,jr,zr,Wr,Jr,Qr,Zr,$r,et,rt,tt,at,_t,st,nt,ct,ot,ht,pt,yt,it],_=0;_<a.length;_++)\"function\"==typeof t[\"_\"+r[_]]&&(e[r[_]]=a[_]);var s=[\"SODIUM_LIBRARY_VERSION_MAJOR\",\"SODIUM_LIBRARY_VERSION_MINOR\",\"crypto_aead_chacha20poly1305_ABYTES\",\"crypto_aead_chacha20poly1305_IETF_ABYTES\",\"crypto_aead_chacha20poly1305_IETF_KEYBYTES\",\"crypto_aead_chacha20poly1305_IETF_MESSAGEBYTES_MAX\",\"crypto_aead_chacha20poly1305_IETF_NPUBBYTES\",\"crypto_aead_chacha20poly1305_IETF_NSECBYTES\",\"crypto_aead_chacha20poly1305_KEYBYTES\",\"crypto_aead_chacha20poly1305_MESSAGEBYTES_MAX\",\"crypto_aead_chacha20poly1305_NPUBBYTES\",\"crypto_aead_chacha20poly1305_NSECBYTES\",\"crypto_aead_chacha20poly1305_ietf_ABYTES\",\"crypto_aead_chacha20poly1305_ietf_KEYBYTES\",\"crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX\",\"crypto_aead_chacha20poly1305_ietf_NPUBBYTES\",\"crypto_aead_chacha20poly1305_ietf_NSECBYTES\",\"crypto_aead_xchacha20poly1305_IETF_ABYTES\",\"crypto_aead_xchacha20poly1305_IETF_KEYBYTES\",\"crypto_aead_xchacha20poly1305_IETF_MESSAGEBYTES_MAX\",\"crypto_aead_xchacha20poly1305_IETF_NPUBBYTES\",\"crypto_aead_xchacha20poly1305_IETF_NSECBYTES\",\"crypto_aead_xchacha20poly1305_ietf_ABYTES\",\"crypto_aead_xchacha20poly1305_ietf_KEYBYTES\",\"crypto_aead_xchacha20poly1305_ietf_MESSAGEBYTES_MAX\",\"crypto_aead_xchacha20poly1305_ietf_NPUBBYTES\",\"crypto_aead_xchacha20poly1305_ietf_NSECBYTES\",\"crypto_auth_BYTES\",\"crypto_auth_KEYBYTES\",\"crypto_auth_hmacsha256_BYTES\",\"crypto_auth_hmacsha256_KEYBYTES\",\"crypto_auth_hmacsha512256_BYTES\",\"crypto_auth_hmacsha512256_KEYBYTES\",\"crypto_auth_hmacsha512_BYTES\",\"crypto_auth_hmacsha512_KEYBYTES\",\"crypto_box_BEFORENMBYTES\",\"crypto_box_MACBYTES\",\"crypto_box_MESSAGEBYTES_MAX\",\"crypto_box_NONCEBYTES\",\"crypto_box_PUBLICKEYBYTES\",\"crypto_box_SEALBYTES\",\"crypto_box_SECRETKEYBYTES\",\"crypto_box_SEEDBYTES\",\"crypto_box_curve25519xchacha20poly1305_BEFORENMBYTES\",\"crypto_box_curve25519xchacha20poly1305_MACBYTES\",\"crypto_box_curve25519xchacha20poly1305_MESSAGEBYTES_MAX\",\"crypto_box_curve25519xchacha20poly1305_NONCEBYTES\",\"crypto_box_curve25519xchacha20poly1305_PUBLICKEYBYTES\",\"crypto_box_curve25519xchacha20poly1305_SEALBYTES\",\"crypto_box_curve25519xchacha20poly1305_SECRETKEYBYTES\",\"crypto_box_curve25519xchacha20poly1305_SEEDBYTES\",\"crypto_box_curve25519xsalsa20poly1305_BEFORENMBYTES\",\"crypto_box_curve25519xsalsa20poly1305_MACBYTES\",\"crypto_box_curve25519xsalsa20poly1305_MESSAGEBYTES_MAX\",\"crypto_box_curve25519xsalsa20poly1305_NONCEBYTES\",\"crypto_box_curve25519xsalsa20poly1305_PUBLICKEYBYTES\",\"crypto_box_curve25519xsalsa20poly1305_SECRETKEYBYTES\",\"crypto_box_curve25519xsalsa20poly1305_SEEDBYTES\",\"crypto_core_ed25519_BYTES\",\"crypto_core_ed25519_HASHBYTES\",\"crypto_core_ed25519_NONREDUCEDSCALARBYTES\",\"crypto_core_ed25519_SCALARBYTES\",\"crypto_core_ed25519_UNIFORMBYTES\",\"crypto_core_hchacha20_CONSTBYTES\",\"crypto_core_hchacha20_INPUTBYTES\",\"crypto_core_hchacha20_KEYBYTES\",\"crypto_core_hchacha20_OUTPUTBYTES\",\"crypto_core_hsalsa20_CONSTBYTES\",\"crypto_core_hsalsa20_INPUTBYTES\",\"crypto_core_hsalsa20_KEYBYTES\",\"crypto_core_hsalsa20_OUTPUTBYTES\",\"crypto_core_ristretto255_BYTES\",\"crypto_core_ristretto255_HASHBYTES\",\"crypto_core_ristretto255_NONREDUCEDSCALARBYTES\",\"crypto_core_ristretto255_SCALARBYTES\",\"crypto_core_salsa2012_CONSTBYTES\",\"crypto_core_salsa2012_INPUTBYTES\",\"crypto_core_salsa2012_KEYBYTES\",\"crypto_core_salsa2012_OUTPUTBYTES\",\"crypto_core_salsa20_CONSTBYTES\",\"crypto_core_salsa20_INPUTBYTES\",\"crypto_core_salsa20_KEYBYTES\",\"crypto_core_salsa20_OUTPUTBYTES\",\"crypto_generichash_BYTES\",\"crypto_generichash_BYTES_MAX\",\"crypto_generichash_BYTES_MIN\",\"crypto_generichash_KEYBYTES\",\"crypto_generichash_KEYBYTES_MAX\",\"crypto_generichash_KEYBYTES_MIN\",\"crypto_generichash_blake2b_BYTES\",\"crypto_generichash_blake2b_BYTES_MAX\",\"crypto_generichash_blake2b_BYTES_MIN\",\"crypto_generichash_blake2b_KEYBYTES\",\"crypto_generichash_blake2b_KEYBYTES_MAX\",\"crypto_generichash_blake2b_KEYBYTES_MIN\",\"crypto_generichash_blake2b_PERSONALBYTES\",\"crypto_generichash_blake2b_SALTBYTES\",\"crypto_hash_BYTES\",\"crypto_hash_sha256_BYTES\",\"crypto_hash_sha512_BYTES\",\"crypto_kdf_BYTES_MAX\",\"crypto_kdf_BYTES_MIN\",\"crypto_kdf_CONTEXTBYTES\",\"crypto_kdf_KEYBYTES\",\"crypto_kdf_blake2b_BYTES_MAX\",\"crypto_kdf_blake2b_BYTES_MIN\",\"crypto_kdf_blake2b_CONTEXTBYTES\",\"crypto_kdf_blake2b_KEYBYTES\",\"crypto_kx_PUBLICKEYBYTES\",\"crypto_kx_SECRETKEYBYTES\",\"crypto_kx_SEEDBYTES\",\"crypto_kx_SESSIONKEYBYTES\",\"crypto_onetimeauth_BYTES\",\"crypto_onetimeauth_KEYBYTES\",\"crypto_onetimeauth_poly1305_BYTES\",\"crypto_onetimeauth_poly1305_KEYBYTES\",\"crypto_pwhash_ALG_ARGON2I13\",\"crypto_pwhash_ALG_ARGON2ID13\",\"crypto_pwhash_ALG_DEFAULT\",\"crypto_pwhash_BYTES_MAX\",\"crypto_pwhash_BYTES_MIN\",\"crypto_pwhash_MEMLIMIT_INTERACTIVE\",\"crypto_pwhash_MEMLIMIT_MAX\",\"crypto_pwhash_MEMLIMIT_MIN\",\"crypto_pwhash_MEMLIMIT_MODERATE\",\"crypto_pwhash_MEMLIMIT_SENSITIVE\",\"crypto_pwhash_OPSLIMIT_INTERACTIVE\",\"crypto_pwhash_OPSLIMIT_MAX\",\"crypto_pwhash_OPSLIMIT_MIN\",\"crypto_pwhash_OPSLIMIT_MODERATE\",\"crypto_pwhash_OPSLIMIT_SENSITIVE\",\"crypto_pwhash_PASSWD_MAX\",\"crypto_pwhash_PASSWD_MIN\",\"crypto_pwhash_SALTBYTES\",\"crypto_pwhash_STRBYTES\",\"crypto_pwhash_argon2i_BYTES_MAX\",\"crypto_pwhash_argon2i_BYTES_MIN\",\"crypto_pwhash_argon2i_SALTBYTES\",\"crypto_pwhash_argon2i_STRBYTES\",\"crypto_pwhash_argon2id_BYTES_MAX\",\"crypto_pwhash_argon2id_BYTES_MIN\",\"crypto_pwhash_argon2id_SALTBYTES\",\"crypto_pwhash_argon2id_STRBYTES\",\"crypto_pwhash_scryptsalsa208sha256_BYTES_MAX\",\"crypto_pwhash_scryptsalsa208sha256_BYTES_MIN\",\"crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_INTERACTIVE\",\"crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MAX\",\"crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MIN\",\"crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_SENSITIVE\",\"crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_INTERACTIVE\",\"crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MAX\",\"crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MIN\",\"crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_SENSITIVE\",\"crypto_pwhash_scryptsalsa208sha256_SALTBYTES\",\"crypto_pwhash_scryptsalsa208sha256_STRBYTES\",\"crypto_scalarmult_BYTES\",\"crypto_scalarmult_SCALARBYTES\",\"crypto_scalarmult_curve25519_BYTES\",\"crypto_scalarmult_curve25519_SCALARBYTES\",\"crypto_scalarmult_ed25519_BYTES\",\"crypto_scalarmult_ed25519_SCALARBYTES\",\"crypto_scalarmult_ristretto255_BYTES\",\"crypto_scalarmult_ristretto255_SCALARBYTES\",\"crypto_secretbox_KEYBYTES\",\"crypto_secretbox_MACBYTES\",\"crypto_secretbox_MESSAGEBYTES_MAX\",\"crypto_secretbox_NONCEBYTES\",\"crypto_secretbox_xchacha20poly1305_KEYBYTES\",\"crypto_secretbox_xchacha20poly1305_MACBYTES\",\"crypto_secretbox_xchacha20poly1305_MESSAGEBYTES_MAX\",\"crypto_secretbox_xchacha20poly1305_NONCEBYTES\",\"crypto_secretbox_xsalsa20poly1305_KEYBYTES\",\"crypto_secretbox_xsalsa20poly1305_MACBYTES\",\"crypto_secretbox_xsalsa20poly1305_MESSAGEBYTES_MAX\",\"crypto_secretbox_xsalsa20poly1305_NONCEBYTES\",\"crypto_secretstream_xchacha20poly1305_ABYTES\",\"crypto_secretstream_xchacha20poly1305_HEADERBYTES\",\"crypto_secretstream_xchacha20poly1305_KEYBYTES\",\"crypto_secretstream_xchacha20poly1305_MESSAGEBYTES_MAX\",\"crypto_secretstream_xchacha20poly1305_TAG_FINAL\",\"crypto_secretstream_xchacha20poly1305_TAG_MESSAGE\",\"crypto_secretstream_xchacha20poly1305_TAG_PUSH\",\"crypto_secretstream_xchacha20poly1305_TAG_REKEY\",\"crypto_shorthash_BYTES\",\"crypto_shorthash_KEYBYTES\",\"crypto_shorthash_siphash24_BYTES\",\"crypto_shorthash_siphash24_KEYBYTES\",\"crypto_shorthash_siphashx24_BYTES\",\"crypto_shorthash_siphashx24_KEYBYTES\",\"crypto_sign_BYTES\",\"crypto_sign_MESSAGEBYTES_MAX\",\"crypto_sign_PUBLICKEYBYTES\",\"crypto_sign_SECRETKEYBYTES\",\"crypto_sign_SEEDBYTES\",\"crypto_sign_ed25519_BYTES\",\"crypto_sign_ed25519_MESSAGEBYTES_MAX\",\"crypto_sign_ed25519_PUBLICKEYBYTES\",\"crypto_sign_ed25519_SECRETKEYBYTES\",\"crypto_sign_ed25519_SEEDBYTES\",\"crypto_stream_KEYBYTES\",\"crypto_stream_MESSAGEBYTES_MAX\",\"crypto_stream_NONCEBYTES\",\"crypto_stream_chacha20_IETF_KEYBYTES\",\"crypto_stream_chacha20_IETF_MESSAGEBYTES_MAX\",\"crypto_stream_chacha20_IETF_NONCEBYTES\",\"crypto_stream_chacha20_KEYBYTES\",\"crypto_stream_chacha20_MESSAGEBYTES_MAX\",\"crypto_stream_chacha20_NONCEBYTES\",\"crypto_stream_chacha20_ietf_KEYBYTES\",\"crypto_stream_chacha20_ietf_MESSAGEBYTES_MAX\",\"crypto_stream_chacha20_ietf_NONCEBYTES\",\"crypto_stream_salsa2012_KEYBYTES\",\"crypto_stream_salsa2012_MESSAGEBYTES_MAX\",\"crypto_stream_salsa2012_NONCEBYTES\",\"crypto_stream_salsa208_KEYBYTES\",\"crypto_stream_salsa208_MESSAGEBYTES_MAX\",\"crypto_stream_salsa208_NONCEBYTES\",\"crypto_stream_salsa20_KEYBYTES\",\"crypto_stream_salsa20_MESSAGEBYTES_MAX\",\"crypto_stream_salsa20_NONCEBYTES\",\"crypto_stream_xchacha20_KEYBYTES\",\"crypto_stream_xchacha20_MESSAGEBYTES_MAX\",\"crypto_stream_xchacha20_NONCEBYTES\",\"crypto_stream_xsalsa20_KEYBYTES\",\"crypto_stream_xsalsa20_MESSAGEBYTES_MAX\",\"crypto_stream_xsalsa20_NONCEBYTES\",\"crypto_verify_16_BYTES\",\"crypto_verify_32_BYTES\",\"crypto_verify_64_BYTES\"];for(_=0;_<s.length;_++)\"function\"==typeof(c=t[\"_\"+s[_].toLowerCase()])&&(e[s[_]]=c());var n=[\"SODIUM_VERSION_STRING\",\"crypto_pwhash_STRPREFIX\",\"crypto_pwhash_scryptsalsa208sha256_STRPREFIX\"];for(_=0;_<n.length;_++){var c;\"function\"==typeof(c=t[\"_\"+n[_].toLowerCase()])&&(e[n[_]]=t.UTF8ToString(c()))}}t=r;try{a();var _=new Uint8Array([98,97,108,108,115]),s=e.randombytes_buf(e.crypto_secretbox_NONCEBYTES),n=e.randombytes_buf(e.crypto_secretbox_KEYBYTES),c=e.crypto_secretbox_easy(_,s,n),o=e.crypto_secretbox_open_easy(c,s,n);if(e.memcmp(_,o))return}catch(e){if(null==t.useBackupModule)throw new Error(\"Both wasm and asm failed to load\"+e)}t.useBackupModule(),a()}));function _(e){if(\"function\"==typeof TextEncoder)return(new TextEncoder).encode(e);e=unescape(encodeURIComponent(e));for(var r=new Uint8Array(e.length),t=0,a=e.length;t<a;t++)r[t]=e.charCodeAt(t);return r}function s(e){if(\"function\"==typeof TextDecoder)return new TextDecoder(\"utf-8\",{fatal:!0}).decode(e);var r=8192,t=Math.ceil(e.length/r);if(t<=1)try{return decodeURIComponent(escape(String.fromCharCode.apply(null,e)))}catch(e){throw new TypeError(\"The encoded data was not valid.\")}for(var a=\"\",_=0,n=0;n<t;n++){var c=Array.prototype.slice.call(e,n*r+_,(n+1)*r+_);if(0!=c.length){var o,h=c.length,p=0;do{var y=c[--h];y>=240?(p=4,o=!0):y>=224?(p=3,o=!0):y>=192?(p=2,o=!0):y<128&&(p=1,o=!0)}while(!o);for(var i=p-(c.length-h),l=0;l<i;l++)_--,c.pop();a+=s(c)}}return a}function n(e){e=m(null,e,\"input\");for(var r,t,a,_=\"\",s=0;s<e.length;s++)a=87+(t=15&e[s])+(t-10>>8&-39)<<8|87+(r=e[s]>>>4)+(r-10>>8&-39),_+=String.fromCharCode(255&a)+String.fromCharCode(a>>>8);return _}var c={ORIGINAL:1,ORIGINAL_NO_PADDING:3,URLSAFE:5,URLSAFE_NO_PADDING:7};function o(e){if(null==e)return c.URLSAFE_NO_PADDING;if(e!==c.ORIGINAL&&e!==c.ORIGINAL_NO_PADDING&&e!==c.URLSAFE&&e!=c.URLSAFE_NO_PADDING)throw new Error(\"unsupported base64 variant\");return e}function h(e,r){r=o(r),e=m(_,e,\"input\");var a,_=[],n=0|Math.floor(e.length/3),c=e.length-3*n,h=4*n+(0!==c?0==(2&r)?4:2+(c>>>1):0),p=new l(h+1),y=u(e);return _.push(y),_.push(p.address),0===t._sodium_bin2base64(p.address,p.length,y,e.length,r)&&g(_,\"conversion failed\"),p.length=h,a=s(p.to_Uint8Array()),v(_),a}function p(e,r){var t=r||\"uint8array\";if(!y(t))throw new Error(t+\" output format is not available\");if(e instanceof l){if(\"uint8array\"===t)return e.to_Uint8Array();if(\"text\"===t)return s(e.to_Uint8Array());if(\"hex\"===t)return n(e.to_Uint8Array());if(\"base64\"===t)return h(e.to_Uint8Array(),c.URLSAFE_NO_PADDING);throw new Error('What is output format \"'+t+'\"?')}if(\"object\"==typeof e){for(var a=Object.keys(e),_={},o=0;o<a.length;o++)_[a[o]]=p(e[a[o]],t);return _}if(\"string\"==typeof e)return e;throw new TypeError(\"Cannot format output\")}function y(e){for(var r=[\"uint8array\",\"text\",\"hex\",\"base64\"],t=0;t<r.length;t++)if(r[t]===e)return!0;return!1}function i(e){if(e){if(\"string\"!=typeof e)throw new TypeError(\"When defined, the output format must be a string\");if(!y(e))throw new Error(e+\" is not a supported output format\")}}function l(e){this.length=e,this.address=d(e)}function u(e){var r=d(e.length);return t.HEAPU8.set(e,r),r}function d(e){var r=t._malloc(e);if(0===r)throw{message:\"_malloc() failed\",length:e};return r}function v(e){if(e)for(var r=0;r<e.length;r++)a=e[r],t._free(a);var a}function g(e,r){throw v(e),new Error(r)}function b(e,r){throw v(e),new TypeError(r)}function f(e,r,t){null==r&&b(e,t+\" cannot be null or undefined\")}function m(e,r,t){return f(e,r,t),r instanceof Uint8Array?r:\"string\"==typeof r?_(r):void b(e,\"unsupported input type for \"+t)}function E(e,r,a,_,s,n){var c=[];i(n);var o=null;null!=e&&(o=u(e=m(c,e,\"secret_nonce\")),e.length,c.push(o)),r=m(c,r,\"ciphertext\");var h,y=t._crypto_aead_chacha20poly1305_abytes(),d=r.length;d<y&&b(c,\"ciphertext is too short\"),h=u(r),c.push(h);var f=null,E=0;null!=a&&(f=u(a=m(c,a,\"additional_data\")),E=a.length,c.push(f)),_=m(c,_,\"public_nonce\");var x,k=0|t._crypto_aead_chacha20poly1305_npubbytes();_.length!==k&&b(c,\"invalid public_nonce length\"),x=u(_),c.push(x),s=m(c,s,\"key\");var S,T=0|t._crypto_aead_chacha20poly1305_keybytes();s.length!==T&&b(c,\"invalid key length\"),S=u(s),c.push(S);var w=new l(d-t._crypto_aead_chacha20poly1305_abytes()|0),Y=w.address;if(c.push(Y),0===t._crypto_aead_chacha20poly1305_decrypt(Y,null,o,h,d,0,f,E,0,x,S)){var B=p(w,n);return v(c),B}g(c,\"ciphertext cannot be decrypted using that key\")}function x(e,r,a,_,s,n,c){var o=[];i(c);var h=null;null!=e&&(h=u(e=m(o,e,\"secret_nonce\")),e.length,o.push(h));var y=u(r=m(o,r,\"ciphertext\")),d=r.length;o.push(y),a=m(o,a,\"mac\");var f,E=0|t._crypto_box_macbytes();a.length!==E&&b(o,\"invalid mac length\"),f=u(a),o.push(f);var x=null,k=0;null!=_&&(x=u(_=m(o,_,\"additional_data\")),k=_.length,o.push(x)),s=m(o,s,\"public_nonce\");var S,T=0|t._crypto_aead_chacha20poly1305_npubbytes();s.length!==T&&b(o,\"invalid public_nonce length\"),S=u(s),o.push(S),n=m(o,n,\"key\");var w,Y=0|t._crypto_aead_chacha20poly1305_keybytes();n.length!==Y&&b(o,\"invalid key length\"),w=u(n),o.push(w);var B=new l(0|d),A=B.address;if(o.push(A),0===t._crypto_aead_chacha20poly1305_decrypt_detached(A,h,y,d,0,f,x,k,0,S,w)){var K=p(B,c);return v(o),K}g(o,\"ciphertext cannot be decrypted using that key\")}function k(e,r,a,_,s,n){var c=[];i(n);var o=u(e=m(c,e,\"message\")),h=e.length;c.push(o);var y=null,d=0;null!=r&&(y=u(r=m(c,r,\"additional_data\")),d=r.length,c.push(y));var f=null;null!=a&&(f=u(a=m(c,a,\"secret_nonce\")),a.length,c.push(f)),_=m(c,_,\"public_nonce\");var E,x=0|t._crypto_aead_chacha20poly1305_npubbytes();_.length!==x&&b(c,\"invalid public_nonce length\"),E=u(_),c.push(E),s=m(c,s,\"key\");var k,S=0|t._crypto_aead_chacha20poly1305_keybytes();s.length!==S&&b(c,\"invalid key length\"),k=u(s),c.push(k);var T=new l(h+t._crypto_aead_chacha20poly1305_abytes()|0),w=T.address;if(c.push(w),0===t._crypto_aead_chacha20poly1305_encrypt(w,null,o,h,0,y,d,0,f,E,k)){var Y=p(T,n);return v(c),Y}g(c,\"invalid usage\")}function S(e,r,a,_,s,n){var c=[];i(n);var o=u(e=m(c,e,\"message\")),h=e.length;c.push(o);var y=null,d=0;null!=r&&(y=u(r=m(c,r,\"additional_data\")),d=r.length,c.push(y));var f=null;null!=a&&(f=u(a=m(c,a,\"secret_nonce\")),a.length,c.push(f)),_=m(c,_,\"public_nonce\");var E,x=0|t._crypto_aead_chacha20poly1305_npubbytes();_.length!==x&&b(c,\"invalid public_nonce length\"),E=u(_),c.push(E),s=m(c,s,\"key\");var k,S=0|t._crypto_aead_chacha20poly1305_keybytes();s.length!==S&&b(c,\"invalid key length\"),k=u(s),c.push(k);var T=new l(0|h),w=T.address;c.push(w);var Y=new l(0|t._crypto_aead_chacha20poly1305_abytes()),B=Y.address;if(c.push(B),0===t._crypto_aead_chacha20poly1305_encrypt_detached(w,B,null,o,h,0,y,d,0,f,E,k)){var A=p({ciphertext:T,mac:Y},n);return v(c),A}g(c,\"invalid usage\")}function T(e,r,a,_,s,n){var c=[];i(n);var o=null;null!=e&&(o=u(e=m(c,e,\"secret_nonce\")),e.length,c.push(o)),r=m(c,r,\"ciphertext\");var h,y=t._crypto_aead_chacha20poly1305_ietf_abytes(),d=r.length;d<y&&b(c,\"ciphertext is too short\"),h=u(r),c.push(h);var f=null,E=0;null!=a&&(f=u(a=m(c,a,\"additional_data\")),E=a.length,c.push(f)),_=m(c,_,\"public_nonce\");var x,k=0|t._crypto_aead_chacha20poly1305_ietf_npubbytes();_.length!==k&&b(c,\"invalid public_nonce length\"),x=u(_),c.push(x),s=m(c,s,\"key\");var S,T=0|t._crypto_aead_chacha20poly1305_ietf_keybytes();s.length!==T&&b(c,\"invalid key length\"),S=u(s),c.push(S);var w=new l(d-t._crypto_aead_chacha20poly1305_ietf_abytes()|0),Y=w.address;if(c.push(Y),0===t._crypto_aead_chacha20poly1305_ietf_decrypt(Y,null,o,h,d,0,f,E,0,x,S)){var B=p(w,n);return v(c),B}g(c,\"ciphertext cannot be decrypted using that key\")}function w(e,r,a,_,s,n,c){var o=[];i(c);var h=null;null!=e&&(h=u(e=m(o,e,\"secret_nonce\")),e.length,o.push(h));var y=u(r=m(o,r,\"ciphertext\")),d=r.length;o.push(y),a=m(o,a,\"mac\");var f,E=0|t._crypto_box_macbytes();a.length!==E&&b(o,\"invalid mac length\"),f=u(a),o.push(f);var x=null,k=0;null!=_&&(x=u(_=m(o,_,\"additional_data\")),k=_.length,o.push(x)),s=m(o,s,\"public_nonce\");var S,T=0|t._crypto_aead_chacha20poly1305_ietf_npubbytes();s.length!==T&&b(o,\"invalid public_nonce length\"),S=u(s),o.push(S),n=m(o,n,\"key\");var w,Y=0|t._crypto_aead_chacha20poly1305_ietf_keybytes();n.length!==Y&&b(o,\"invalid key length\"),w=u(n),o.push(w);var B=new l(0|d),A=B.address;if(o.push(A),0===t._crypto_aead_chacha20poly1305_ietf_decrypt_detached(A,h,y,d,0,f,x,k,0,S,w)){var K=p(B,c);return v(o),K}g(o,\"ciphertext cannot be decrypted using that key\")}function Y(e,r,a,_,s,n){var c=[];i(n);var o=u(e=m(c,e,\"message\")),h=e.length;c.push(o);var y=null,d=0;null!=r&&(y=u(r=m(c,r,\"additional_data\")),d=r.length,c.push(y));var f=null;null!=a&&(f=u(a=m(c,a,\"secret_nonce\")),a.length,c.push(f)),_=m(c,_,\"public_nonce\");var E,x=0|t._crypto_aead_chacha20poly1305_ietf_npubbytes();_.length!==x&&b(c,\"invalid public_nonce length\"),E=u(_),c.push(E),s=m(c,s,\"key\");var k,S=0|t._crypto_aead_chacha20poly1305_ietf_keybytes();s.length!==S&&b(c,\"invalid key length\"),k=u(s),c.push(k);var T=new l(h+t._crypto_aead_chacha20poly1305_ietf_abytes()|0),w=T.address;if(c.push(w),0===t._crypto_aead_chacha20poly1305_ietf_encrypt(w,null,o,h,0,y,d,0,f,E,k)){var Y=p(T,n);return v(c),Y}g(c,\"invalid usage\")}function B(e,r,a,_,s,n){var c=[];i(n);var o=u(e=m(c,e,\"message\")),h=e.length;c.push(o);var y=null,d=0;null!=r&&(y=u(r=m(c,r,\"additional_data\")),d=r.length,c.push(y));var f=null;null!=a&&(f=u(a=m(c,a,\"secret_nonce\")),a.length,c.push(f)),_=m(c,_,\"public_nonce\");var E,x=0|t._crypto_aead_chacha20poly1305_ietf_npubbytes();_.length!==x&&b(c,\"invalid public_nonce length\"),E=u(_),c.push(E),s=m(c,s,\"key\");var k,S=0|t._crypto_aead_chacha20poly1305_ietf_keybytes();s.length!==S&&b(c,\"invalid key length\"),k=u(s),c.push(k);var T=new l(0|h),w=T.address;c.push(w);var Y=new l(0|t._crypto_aead_chacha20poly1305_ietf_abytes()),B=Y.address;if(c.push(B),0===t._crypto_aead_chacha20poly1305_ietf_encrypt_detached(w,B,null,o,h,0,y,d,0,f,E,k)){var A=p({ciphertext:T,mac:Y},n);return v(c),A}g(c,\"invalid usage\")}function A(e){var r=[];i(e);var a=new l(0|t._crypto_aead_chacha20poly1305_ietf_keybytes()),_=a.address;r.push(_),t._crypto_aead_chacha20poly1305_ietf_keygen(_);var s=p(a,e);return v(r),s}function K(e){var r=[];i(e);var a=new l(0|t._crypto_aead_chacha20poly1305_keybytes()),_=a.address;r.push(_),t._crypto_aead_chacha20poly1305_keygen(_);var s=p(a,e);return v(r),s}function M(e,r,a,_,s,n){var c=[];i(n);var o=null;null!=e&&(o=u(e=m(c,e,\"secret_nonce\")),e.length,c.push(o)),r=m(c,r,\"ciphertext\");var h,y=t._crypto_aead_xchacha20poly1305_ietf_abytes(),d=r.length;d<y&&b(c,\"ciphertext is too short\"),h=u(r),c.push(h);var f=null,E=0;null!=a&&(f=u(a=m(c,a,\"additional_data\")),E=a.length,c.push(f)),_=m(c,_,\"public_nonce\");var x,k=0|t._crypto_aead_xchacha20poly1305_ietf_npubbytes();_.length!==k&&b(c,\"invalid public_nonce length\"),x=u(_),c.push(x),s=m(c,s,\"key\");var S,T=0|t._crypto_aead_xchacha20poly1305_ietf_keybytes();s.length!==T&&b(c,\"invalid key length\"),S=u(s),c.push(S);var w=new l(d-t._crypto_aead_xchacha20poly1305_ietf_abytes()|0),Y=w.address;if(c.push(Y),0===t._crypto_aead_xchacha20poly1305_ietf_decrypt(Y,null,o,h,d,0,f,E,0,x,S)){var B=p(w,n);return v(c),B}g(c,\"ciphertext cannot be decrypted using that key\")}function I(e,r,a,_,s,n,c){var o=[];i(c);var h=null;null!=e&&(h=u(e=m(o,e,\"secret_nonce\")),e.length,o.push(h));var y=u(r=m(o,r,\"ciphertext\")),d=r.length;o.push(y),a=m(o,a,\"mac\");var f,E=0|t._crypto_box_macbytes();a.length!==E&&b(o,\"invalid mac length\"),f=u(a),o.push(f);var x=null,k=0;null!=_&&(x=u(_=m(o,_,\"additional_data\")),k=_.length,o.push(x)),s=m(o,s,\"public_nonce\");var S,T=0|t._crypto_aead_xchacha20poly1305_ietf_npubbytes();s.length!==T&&b(o,\"invalid public_nonce length\"),S=u(s),o.push(S),n=m(o,n,\"key\");var w,Y=0|t._crypto_aead_xchacha20poly1305_ietf_keybytes();n.length!==Y&&b(o,\"invalid key length\"),w=u(n),o.push(w);var B=new l(0|d),A=B.address;if(o.push(A),0===t._crypto_aead_xchacha20poly1305_ietf_decrypt_detached(A,h,y,d,0,f,x,k,0,S,w)){var K=p(B,c);return v(o),K}g(o,\"ciphertext cannot be decrypted using that key\")}function N(e,r,a,_,s,n){var c=[];i(n);var o=u(e=m(c,e,\"message\")),h=e.length;c.push(o);var y=null,d=0;null!=r&&(y=u(r=m(c,r,\"additional_data\")),d=r.length,c.push(y));var f=null;null!=a&&(f=u(a=m(c,a,\"secret_nonce\")),a.length,c.push(f)),_=m(c,_,\"public_nonce\");var E,x=0|t._crypto_aead_xchacha20poly1305_ietf_npubbytes();_.length!==x&&b(c,\"invalid public_nonce length\"),E=u(_),c.push(E),s=m(c,s,\"key\");var k,S=0|t._crypto_aead_xchacha20poly1305_ietf_keybytes();s.length!==S&&b(c,\"invalid key length\"),k=u(s),c.push(k);var T=new l(h+t._crypto_aead_xchacha20poly1305_ietf_abytes()|0),w=T.address;if(c.push(w),0===t._crypto_aead_xchacha20poly1305_ietf_encrypt(w,null,o,h,0,y,d,0,f,E,k)){var Y=p(T,n);return v(c),Y}g(c,\"invalid usage\")}function L(e,r,a,_,s,n){var c=[];i(n);var o=u(e=m(c,e,\"message\")),h=e.length;c.push(o);var y=null,d=0;null!=r&&(y=u(r=m(c,r,\"additional_data\")),d=r.length,c.push(y));var f=null;null!=a&&(f=u(a=m(c,a,\"secret_nonce\")),a.length,c.push(f)),_=m(c,_,\"public_nonce\");var E,x=0|t._crypto_aead_xchacha20poly1305_ietf_npubbytes();_.length!==x&&b(c,\"invalid public_nonce length\"),E=u(_),c.push(E),s=m(c,s,\"key\");var k,S=0|t._crypto_aead_xchacha20poly1305_ietf_keybytes();s.length!==S&&b(c,\"invalid key length\"),k=u(s),c.push(k);var T=new l(0|h),w=T.address;c.push(w);var Y=new l(0|t._crypto_aead_xchacha20poly1305_ietf_abytes()),B=Y.address;if(c.push(B),0===t._crypto_aead_xchacha20poly1305_ietf_encrypt_detached(w,B,null,o,h,0,y,d,0,f,E,k)){var A=p({ciphertext:T,mac:Y},n);return v(c),A}g(c,\"invalid usage\")}function U(e){var r=[];i(e);var a=new l(0|t._crypto_aead_xchacha20poly1305_ietf_keybytes()),_=a.address;r.push(_),t._crypto_aead_xchacha20poly1305_ietf_keygen(_);var s=p(a,e);return v(r),s}function O(e,r,a){var _=[];i(a);var s=u(e=m(_,e,\"message\")),n=e.length;_.push(s),r=m(_,r,\"key\");var c,o=0|t._crypto_auth_keybytes();r.length!==o&&b(_,\"invalid key length\"),c=u(r),_.push(c);var h=new l(0|t._crypto_auth_bytes()),y=h.address;if(_.push(y),0==(0|t._crypto_auth(y,s,n,0,c))){var d=p(h,a);return v(_),d}g(_,\"invalid usage\")}function C(e,r,a){var _=[];i(a);var s=u(e=m(_,e,\"message\")),n=e.length;_.push(s),r=m(_,r,\"key\");var c,o=0|t._crypto_auth_hmacsha256_keybytes();r.length!==o&&b(_,\"invalid key length\"),c=u(r),_.push(c);var h=new l(0|t._crypto_auth_hmacsha256_bytes()),y=h.address;if(_.push(y),0==(0|t._crypto_auth_hmacsha256(y,s,n,0,c))){var d=p(h,a);return v(_),d}g(_,\"invalid usage\")}function R(e){var r=[];i(e);var a=new l(0|t._crypto_auth_hmacsha256_keybytes()),_=a.address;r.push(_),t._crypto_auth_hmacsha256_keygen(_);var s=p(a,e);return v(r),s}function P(e,r,a){var _=[];e=m(_,e,\"tag\");var s,n=0|t._crypto_auth_hmacsha256_bytes();e.length!==n&&b(_,\"invalid tag length\"),s=u(e),_.push(s);var c=u(r=m(_,r,\"message\")),o=r.length;_.push(c),a=m(_,a,\"key\");var h,p=0|t._crypto_auth_hmacsha256_keybytes();a.length!==p&&b(_,\"invalid key length\"),h=u(a),_.push(h);var y=0==(0|t._crypto_auth_hmacsha256_verify(s,c,o,0,h));return v(_),y}function G(e,r,a){var _=[];i(a);var s=u(e=m(_,e,\"message\")),n=e.length;_.push(s),r=m(_,r,\"key\");var c,o=0|t._crypto_auth_hmacsha512_keybytes();r.length!==o&&b(_,\"invalid key length\"),c=u(r),_.push(c);var h=new l(0|t._crypto_auth_hmacsha512_bytes()),y=h.address;if(_.push(y),0==(0|t._crypto_auth_hmacsha512(y,s,n,0,c))){var d=p(h,a);return v(_),d}g(_,\"invalid usage\")}function X(e){var r=[];i(e);var a=new l(0|t._crypto_auth_hmacsha512_keybytes()),_=a.address;r.push(_),t._crypto_auth_hmacsha512_keygen(_);var s=p(a,e);return v(r),s}function D(e,r,a){var _=[];e=m(_,e,\"tag\");var s,n=0|t._crypto_auth_hmacsha512_bytes();e.length!==n&&b(_,\"invalid tag length\"),s=u(e),_.push(s);var c=u(r=m(_,r,\"message\")),o=r.length;_.push(c),a=m(_,a,\"key\");var h,p=0|t._crypto_auth_hmacsha512_keybytes();a.length!==p&&b(_,\"invalid key length\"),h=u(a),_.push(h);var y=0==(0|t._crypto_auth_hmacsha512_verify(s,c,o,0,h));return v(_),y}function F(e){var r=[];i(e);var a=new l(0|t._crypto_auth_keybytes()),_=a.address;r.push(_),t._crypto_auth_keygen(_);var s=p(a,e);return v(r),s}function V(e,r,a){var _=[];e=m(_,e,\"tag\");var s,n=0|t._crypto_auth_bytes();e.length!==n&&b(_,\"invalid tag length\"),s=u(e),_.push(s);var c=u(r=m(_,r,\"message\")),o=r.length;_.push(c),a=m(_,a,\"key\");var h,p=0|t._crypto_auth_keybytes();a.length!==p&&b(_,\"invalid key length\"),h=u(a),_.push(h);var y=0==(0|t._crypto_auth_verify(s,c,o,0,h));return v(_),y}function H(e,r,a){var _=[];i(a),e=m(_,e,\"publicKey\");var s,n=0|t._crypto_box_publickeybytes();e.length!==n&&b(_,\"invalid publicKey length\"),s=u(e),_.push(s),r=m(_,r,\"privateKey\");var c,o=0|t._crypto_box_secretkeybytes();r.length!==o&&b(_,\"invalid privateKey length\"),c=u(r),_.push(c);var h=new l(0|t._crypto_box_beforenmbytes()),y=h.address;if(_.push(y),0==(0|t._crypto_box_beforenm(y,s,c))){var d=p(h,a);return v(_),d}g(_,\"invalid usage\")}function q(e){var r=[];i(e);var a=new l(0|t._crypto_box_curve25519xchacha20poly1305_publickeybytes()),_=a.address;r.push(_);var s=new l(0|t._crypto_box_curve25519xchacha20poly1305_secretkeybytes()),n=s.address;r.push(n),t._crypto_box_curve25519xchacha20poly1305_keypair(_,n);var c=p({publicKey:a,privateKey:s,keyType:\"curve25519\"},e);return v(r),c}function j(e,r,a){var _=[];i(a);var s=u(e=m(_,e,\"message\")),n=e.length;_.push(s),r=m(_,r,\"publicKey\");var c,o=0|t._crypto_box_curve25519xchacha20poly1305_publickeybytes();r.length!==o&&b(_,\"invalid publicKey length\"),c=u(r),_.push(c);var h=new l(n+t._crypto_box_curve25519xchacha20poly1305_sealbytes()|0),y=h.address;_.push(y),t._crypto_box_curve25519xchacha20poly1305_seal(y,s,n,0,c);var d=p(h,a);return v(_),d}function z(e,r,a,_){var s=[];i(_),e=m(s,e,\"ciphertext\");var n,c=t._crypto_box_curve25519xchacha20poly1305_sealbytes(),o=e.length;o<c&&b(s,\"ciphertext is too short\"),n=u(e),s.push(n),r=m(s,r,\"publicKey\");var h,y=0|t._crypto_box_curve25519xchacha20poly1305_publickeybytes();r.length!==y&&b(s,\"invalid publicKey length\"),h=u(r),s.push(h),a=m(s,a,\"secretKey\");var d,g=0|t._crypto_box_curve25519xchacha20poly1305_secretkeybytes();a.length!==g&&b(s,\"invalid secretKey length\"),d=u(a),s.push(d);var f=new l(o-t._crypto_box_curve25519xchacha20poly1305_sealbytes()|0),E=f.address;s.push(E),t._crypto_box_curve25519xchacha20poly1305_seal_open(E,n,o,0,h,d);var x=p(f,_);return v(s),x}function W(e,r,a,_,s){var n=[];i(s);var c=u(e=m(n,e,\"message\")),o=e.length;n.push(c),r=m(n,r,\"nonce\");var h,y=0|t._crypto_box_noncebytes();r.length!==y&&b(n,\"invalid nonce length\"),h=u(r),n.push(h),a=m(n,a,\"publicKey\");var d,f=0|t._crypto_box_publickeybytes();a.length!==f&&b(n,\"invalid publicKey length\"),d=u(a),n.push(d),_=m(n,_,\"privateKey\");var E,x=0|t._crypto_box_secretkeybytes();_.length!==x&&b(n,\"invalid privateKey length\"),E=u(_),n.push(E);var k=new l(0|o),S=k.address;n.push(S);var T=new l(0|t._crypto_box_macbytes()),w=T.address;if(n.push(w),0==(0|t._crypto_box_detached(S,w,c,o,0,h,d,E))){var Y=p({ciphertext:k,mac:T},s);return v(n),Y}g(n,\"invalid usage\")}function J(e,r,a,_,s){var n=[];i(s);var c=u(e=m(n,e,\"message\")),o=e.length;n.push(c),r=m(n,r,\"nonce\");var h,y=0|t._crypto_box_noncebytes();r.length!==y&&b(n,\"invalid nonce length\"),h=u(r),n.push(h),a=m(n,a,\"publicKey\");var d,f=0|t._crypto_box_publickeybytes();a.length!==f&&b(n,\"invalid publicKey length\"),d=u(a),n.push(d),_=m(n,_,\"privateKey\");var E,x=0|t._crypto_box_secretkeybytes();_.length!==x&&b(n,\"invalid privateKey length\"),E=u(_),n.push(E);var k=new l(o+t._crypto_box_macbytes()|0),S=k.address;if(n.push(S),0==(0|t._crypto_box_easy(S,c,o,0,h,d,E))){var T=p(k,s);return v(n),T}g(n,\"invalid usage\")}function Q(e,r,a,_){var s=[];i(_);var n=u(e=m(s,e,\"message\")),c=e.length;s.push(n),r=m(s,r,\"nonce\");var o,h=0|t._crypto_box_noncebytes();r.length!==h&&b(s,\"invalid nonce length\"),o=u(r),s.push(o),a=m(s,a,\"sharedKey\");var y,d=0|t._crypto_box_beforenmbytes();a.length!==d&&b(s,\"invalid sharedKey length\"),y=u(a),s.push(y);var f=new l(c+t._crypto_box_macbytes()|0),E=f.address;if(s.push(E),0==(0|t._crypto_box_easy_afternm(E,n,c,0,o,y))){var x=p(f,_);return v(s),x}g(s,\"invalid usage\")}function Z(e){var r=[];i(e);var a=new l(0|t._crypto_box_publickeybytes()),_=a.address;r.push(_);var s=new l(0|t._crypto_box_secretkeybytes()),n=s.address;if(r.push(n),0==(0|t._crypto_box_keypair(_,n))){var c={publicKey:p(a,e),privateKey:p(s,e),keyType:\"x25519\"};return v(r),c}g(r,\"internal error\")}function $(e,r,a,_,s,n){var c=[];i(n);var o=u(e=m(c,e,\"ciphertext\")),h=e.length;c.push(o),r=m(c,r,\"mac\");var y,d=0|t._crypto_box_macbytes();r.length!==d&&b(c,\"invalid mac length\"),y=u(r),c.push(y),a=m(c,a,\"nonce\");var f,E=0|t._crypto_box_noncebytes();a.length!==E&&b(c,\"invalid nonce length\"),f=u(a),c.push(f),_=m(c,_,\"publicKey\");var x,k=0|t._crypto_box_publickeybytes();_.length!==k&&b(c,\"invalid publicKey length\"),x=u(_),c.push(x),s=m(c,s,\"privateKey\");var S,T=0|t._crypto_box_secretkeybytes();s.length!==T&&b(c,\"invalid privateKey length\"),S=u(s),c.push(S);var w=new l(0|h),Y=w.address;if(c.push(Y),0==(0|t._crypto_box_open_detached(Y,o,y,h,0,f,x,S))){var B=p(w,n);return v(c),B}g(c,\"incorrect key pair for the given ciphertext\")}function ee(e,r,a,_,s){var n=[];i(s),e=m(n,e,\"ciphertext\");var c,o=t._crypto_box_macbytes(),h=e.length;h<o&&b(n,\"ciphertext is too short\"),c=u(e),n.push(c),r=m(n,r,\"nonce\");var y,d=0|t._crypto_box_noncebytes();r.length!==d&&b(n,\"invalid nonce length\"),y=u(r),n.push(y),a=m(n,a,\"publicKey\");var f,E=0|t._crypto_box_publickeybytes();a.length!==E&&b(n,\"invalid publicKey length\"),f=u(a),n.push(f),_=m(n,_,\"privateKey\");var x,k=0|t._crypto_box_secretkeybytes();_.length!==k&&b(n,\"invalid privateKey length\"),x=u(_),n.push(x);var S=new l(h-t._crypto_box_macbytes()|0),T=S.address;if(n.push(T),0==(0|t._crypto_box_open_easy(T,c,h,0,y,f,x))){var w=p(S,s);return v(n),w}g(n,\"incorrect key pair for the given ciphertext\")}function re(e,r,a,_){var s=[];i(_);var n=u(e=m(s,e,\"ciphertext\")),c=e.length;s.push(n),r=m(s,r,\"nonce\");var o,h=0|t._crypto_box_noncebytes();r.length!==h&&b(s,\"invalid nonce length\"),o=u(r),s.push(o),a=m(s,a,\"sharedKey\");var y,d=0|t._crypto_box_beforenmbytes();a.length!==d&&b(s,\"invalid sharedKey length\"),y=u(a),s.push(y);var f=new l(c-t._crypto_box_macbytes()|0),E=f.address;if(s.push(E),0==(0|t._crypto_box_open_easy_afternm(E,n,c,0,o,y))){var x=p(f,_);return v(s),x}g(s,\"incorrect secret key for the given ciphertext\")}function te(e,r,a){var _=[];i(a);var s=u(e=m(_,e,\"message\")),n=e.length;_.push(s),r=m(_,r,\"publicKey\");var c,o=0|t._crypto_box_publickeybytes();r.length!==o&&b(_,\"invalid publicKey length\"),c=u(r),_.push(c);var h=new l(n+t._crypto_box_sealbytes()|0),y=h.address;if(_.push(y),0==(0|t._crypto_box_seal(y,s,n,0,c))){var d=p(h,a);return v(_),d}g(_,\"invalid usage\")}function ae(e,r,a,_){var s=[];i(_),e=m(s,e,\"ciphertext\");var n,c=t._crypto_box_sealbytes(),o=e.length;o<c&&b(s,\"ciphertext is too short\"),n=u(e),s.push(n),r=m(s,r,\"publicKey\");var h,y=0|t._crypto_box_publickeybytes();r.length!==y&&b(s,\"invalid publicKey length\"),h=u(r),s.push(h),a=m(s,a,\"privateKey\");var d,f=0|t._crypto_box_secretkeybytes();a.length!==f&&b(s,\"invalid privateKey length\"),d=u(a),s.push(d);var E=new l(o-t._crypto_box_sealbytes()|0),x=E.address;if(s.push(x),0==(0|t._crypto_box_seal_open(x,n,o,0,h,d))){var k=p(E,_);return v(s),k}g(s,\"incorrect key pair for the given ciphertext\")}function _e(e,r){var a=[];i(r),e=m(a,e,\"seed\");var _,s=0|t._crypto_box_seedbytes();e.length!==s&&b(a,\"invalid seed length\"),_=u(e),a.push(_);var n=new l(0|t._crypto_box_publickeybytes()),c=n.address;a.push(c);var o=new l(0|t._crypto_box_secretkeybytes()),h=o.address;if(a.push(h),0==(0|t._crypto_box_seed_keypair(c,h,_))){var y={publicKey:p(n,r),privateKey:p(o,r),keyType:\"x25519\"};return v(a),y}g(a,\"invalid usage\")}function se(e,r,a){var _=[];i(a),e=m(_,e,\"p\");var s,n=0|t._crypto_core_ed25519_bytes();e.length!==n&&b(_,\"invalid p length\"),s=u(e),_.push(s),r=m(_,r,\"q\");var c,o=0|t._crypto_core_ed25519_bytes();r.length!==o&&b(_,\"invalid q length\"),c=u(r),_.push(c);var h=new l(0|t._crypto_core_ed25519_bytes()),y=h.address;if(_.push(y),0==(0|t._crypto_core_ed25519_add(y,s,c))){var d=p(h,a);return v(_),d}g(_,\"input is an invalid element\")}function ne(e,r){var a=[];i(r);var _=u(e=m(a,e,\"r\"));e.length,a.push(_);var s=new l(0|t._crypto_core_ed25519_bytes()),n=s.address;if(a.push(n),0==(0|t._crypto_core_ed25519_from_hash(n,_))){var c=p(s,r);return v(a),c}g(a,\"invalid usage\")}function ce(e,r){var a=[];i(r);var _=u(e=m(a,e,\"r\"));e.length,a.push(_);var s=new l(0|t._crypto_core_ed25519_bytes()),n=s.address;if(a.push(n),0==(0|t._crypto_core_ed25519_from_uniform(n,_))){var c=p(s,r);return v(a),c}g(a,\"invalid usage\")}function oe(e,r){var a=[];i(r),e=m(a,e,\"repr\");var _,s=0|t._crypto_core_ed25519_bytes();e.length!==s&&b(a,\"invalid repr length\"),_=u(e),a.push(_);var n=1==(0|t._crypto_core_ed25519_is_valid_point(_));return v(a),n}function he(e){var r=[];i(e);var a=new l(0|t._crypto_core_ed25519_bytes()),_=a.address;r.push(_),t._crypto_core_ed25519_random(_);var s=p(a,e);return v(r),s}function pe(e,r,a){var _=[];i(a),e=m(_,e,\"x\");var s,n=0|t._crypto_core_ed25519_scalarbytes();e.length!==n&&b(_,\"invalid x length\"),s=u(e),_.push(s),r=m(_,r,\"y\");var c,o=0|t._crypto_core_ed25519_scalarbytes();r.length!==o&&b(_,\"invalid y length\"),c=u(r),_.push(c);var h=new l(0|t._crypto_core_ed25519_scalarbytes()),y=h.address;_.push(y),t._crypto_core_ed25519_scalar_add(y,s,c);var d=p(h,a);return v(_),d}function ye(e,r){var a=[];i(r),e=m(a,e,\"s\");var _,s=0|t._crypto_core_ed25519_scalarbytes();e.length!==s&&b(a,\"invalid s length\"),_=u(e),a.push(_);var n=new l(0|t._crypto_core_ed25519_scalarbytes()),c=n.address;a.push(c),t._crypto_core_ed25519_scalar_complement(c,_);var o=p(n,r);return v(a),o}function ie(e,r){var a=[];i(r),e=m(a,e,\"s\");var _,s=0|t._crypto_core_ed25519_scalarbytes();e.length!==s&&b(a,\"invalid s length\"),_=u(e),a.push(_);var n=new l(0|t._crypto_core_ed25519_scalarbytes()),c=n.address;if(a.push(c),0==(0|t._crypto_core_ed25519_scalar_invert(c,_))){var o=p(n,r);return v(a),o}g(a,\"invalid reciprocate\")}function le(e,r,a){var _=[];i(a),e=m(_,e,\"x\");var s,n=0|t._crypto_core_ed25519_scalarbytes();e.length!==n&&b(_,\"invalid x length\"),s=u(e),_.push(s),r=m(_,r,\"y\");var c,o=0|t._crypto_core_ed25519_scalarbytes();r.length!==o&&b(_,\"invalid y length\"),c=u(r),_.push(c);var h=new l(0|t._crypto_core_ed25519_scalarbytes()),y=h.address;_.push(y),t._crypto_core_ed25519_scalar_mul(y,s,c);var d=p(h,a);return v(_),d}function ue(e,r){var a=[];i(r),e=m(a,e,\"s\");var _,s=0|t._crypto_core_ed25519_scalarbytes();e.length!==s&&b(a,\"invalid s length\"),_=u(e),a.push(_);var n=new l(0|t._crypto_core_ed25519_scalarbytes()),c=n.address;a.push(c),t._crypto_core_ed25519_scalar_negate(c,_);var o=p(n,r);return v(a),o}function de(e){var r=[];i(e);var a=new l(0|t._crypto_core_ed25519_scalarbytes()),_=a.address;r.push(_),t._crypto_core_ed25519_scalar_random(_);var s=p(a,e);return v(r),s}function ve(e,r){var a=[];i(r),e=m(a,e,\"sample\");var _,s=0|t._crypto_core_ed25519_nonreducedscalarbytes();e.length!==s&&b(a,\"invalid sample length\"),_=u(e),a.push(_);var n=new l(0|t._crypto_core_ed25519_scalarbytes()),c=n.address;a.push(c),t._crypto_core_ed25519_scalar_reduce(c,_);var o=p(n,r);return v(a),o}function ge(e,r,a){var _=[];i(a),e=m(_,e,\"x\");var s,n=0|t._crypto_core_ed25519_scalarbytes();e.length!==n&&b(_,\"invalid x length\"),s=u(e),_.push(s),r=m(_,r,\"y\");var c,o=0|t._crypto_core_ed25519_scalarbytes();r.length!==o&&b(_,\"invalid y length\"),c=u(r),_.push(c);var h=new l(0|t._crypto_core_ed25519_scalarbytes()),y=h.address;_.push(y),t._crypto_core_ed25519_scalar_sub(y,s,c);var d=p(h,a);return v(_),d}function be(e,r,a){var _=[];i(a),e=m(_,e,\"p\");var s,n=0|t._crypto_core_ed25519_bytes();e.length!==n&&b(_,\"invalid p length\"),s=u(e),_.push(s),r=m(_,r,\"q\");var c,o=0|t._crypto_core_ed25519_bytes();r.length!==o&&b(_,\"invalid q length\"),c=u(r),_.push(c);var h=new l(0|t._crypto_core_ed25519_bytes()),y=h.address;if(_.push(y),0==(0|t._crypto_core_ed25519_sub(y,s,c))){var d=p(h,a);return v(_),d}g(_,\"input is an invalid element\")}function fe(e,r,a){var _=[];i(a),e=m(_,e,\"p\");var s,n=0|t._crypto_core_ristretto255_bytes();e.length!==n&&b(_,\"invalid p length\"),s=u(e),_.push(s),r=m(_,r,\"q\");var c,o=0|t._crypto_core_ristretto255_bytes();r.length!==o&&b(_,\"invalid q length\"),c=u(r),_.push(c);var h=new l(0|t._crypto_core_ristretto255_bytes()),y=h.address;if(_.push(y),0==(0|t._crypto_core_ristretto255_add(y,s,c))){var d=p(h,a);return v(_),d}g(_,\"input is an invalid element\")}function me(e,r){var a=[];i(r);var _=u(e=m(a,e,\"r\"));e.length,a.push(_);var s=new l(0|t._crypto_core_ristretto255_bytes()),n=s.address;if(a.push(n),0==(0|t._crypto_core_ristretto255_from_hash(n,_))){var c=p(s,r);return v(a),c}g(a,\"invalid usage\")}function Ee(e,r){var a=[];i(r),e=m(a,e,\"repr\");var _,s=0|t._crypto_core_ristretto255_bytes();e.length!==s&&b(a,\"invalid repr length\"),_=u(e),a.push(_);var n=1==(0|t._crypto_core_ristretto255_is_valid_point(_));return v(a),n}function xe(e){var r=[];i(e);var a=new l(0|t._crypto_core_ristretto255_bytes()),_=a.address;r.push(_),t._crypto_core_ristretto255_random(_);var s=p(a,e);return v(r),s}function ke(e,r,a){var _=[];i(a),e=m(_,e,\"x\");var s,n=0|t._crypto_core_ristretto255_scalarbytes();e.length!==n&&b(_,\"invalid x length\"),s=u(e),_.push(s),r=m(_,r,\"y\");var c,o=0|t._crypto_core_ristretto255_scalarbytes();r.length!==o&&b(_,\"invalid y length\"),c=u(r),_.push(c);var h=new l(0|t._crypto_core_ristretto255_scalarbytes()),y=h.address;_.push(y),t._crypto_core_ristretto255_scalar_add(y,s,c);var d=p(h,a);return v(_),d}function Se(e,r){var a=[];i(r),e=m(a,e,\"s\");var _,s=0|t._crypto_core_ristretto255_scalarbytes();e.length!==s&&b(a,\"invalid s length\"),_=u(e),a.push(_);var n=new l(0|t._crypto_core_ristretto255_scalarbytes()),c=n.address;a.push(c),t._crypto_core_ristretto255_scalar_complement(c,_);var o=p(n,r);return v(a),o}function Te(e,r){var a=[];i(r),e=m(a,e,\"s\");var _,s=0|t._crypto_core_ristretto255_scalarbytes();e.length!==s&&b(a,\"invalid s length\"),_=u(e),a.push(_);var n=new l(0|t._crypto_core_ristretto255_scalarbytes()),c=n.address;if(a.push(c),0==(0|t._crypto_core_ristretto255_scalar_invert(c,_))){var o=p(n,r);return v(a),o}g(a,\"invalid reciprocate\")}function we(e,r,a){var _=[];i(a),e=m(_,e,\"x\");var s,n=0|t._crypto_core_ristretto255_scalarbytes();e.length!==n&&b(_,\"invalid x length\"),s=u(e),_.push(s),r=m(_,r,\"y\");var c,o=0|t._crypto_core_ristretto255_scalarbytes();r.length!==o&&b(_,\"invalid y length\"),c=u(r),_.push(c);var h=new l(0|t._crypto_core_ristretto255_scalarbytes()),y=h.address;_.push(y),t._crypto_core_ristretto255_scalar_mul(y,s,c);var d=p(h,a);return v(_),d}function Ye(e,r){var a=[];i(r),e=m(a,e,\"s\");var _,s=0|t._crypto_core_ristretto255_scalarbytes();e.length!==s&&b(a,\"invalid s length\"),_=u(e),a.push(_);var n=new l(0|t._crypto_core_ristretto255_scalarbytes()),c=n.address;a.push(c),t._crypto_core_ristretto255_scalar_negate(c,_);var o=p(n,r);return v(a),o}function Be(e){var r=[];i(e);var a=new l(0|t._crypto_core_ristretto255_scalarbytes()),_=a.address;r.push(_),t._crypto_core_ristretto255_scalar_random(_);var s=p(a,e);return v(r),s}function Ae(e,r){var a=[];i(r),e=m(a,e,\"sample\");var _,s=0|t._crypto_core_ristretto255_nonreducedscalarbytes();e.length!==s&&b(a,\"invalid sample length\"),_=u(e),a.push(_);var n=new l(0|t._crypto_core_ristretto255_scalarbytes()),c=n.address;a.push(c),t._crypto_core_ristretto255_scalar_reduce(c,_);var o=p(n,r);return v(a),o}function Ke(e,r,a){var _=[];i(a),e=m(_,e,\"x\");var s,n=0|t._crypto_core_ristretto255_scalarbytes();e.length!==n&&b(_,\"invalid x length\"),s=u(e),_.push(s),r=m(_,r,\"y\");var c,o=0|t._crypto_core_ristretto255_scalarbytes();r.length!==o&&b(_,\"invalid y length\"),c=u(r),_.push(c);var h=new l(0|t._crypto_core_ristretto255_scalarbytes()),y=h.address;_.push(y),t._crypto_core_ristretto255_scalar_sub(y,s,c);var d=p(h,a);return v(_),d}function Me(e,r,a){var _=[];i(a),e=m(_,e,\"p\");var s,n=0|t._crypto_core_ristretto255_bytes();e.length!==n&&b(_,\"invalid p length\"),s=u(e),_.push(s),r=m(_,r,\"q\");var c,o=0|t._crypto_core_ristretto255_bytes();r.length!==o&&b(_,\"invalid q length\"),c=u(r),_.push(c);var h=new l(0|t._crypto_core_ristretto255_bytes()),y=h.address;if(_.push(y),0==(0|t._crypto_core_ristretto255_sub(y,s,c))){var d=p(h,a);return v(_),d}g(_,\"input is an invalid element\")}function Ie(e,r,a,_){var s=[];i(_),f(s,e,\"hash_length\"),(\"number\"!=typeof e||(0|e)!==e||e<0)&&b(s,\"hash_length must be an unsigned integer\");var n=u(r=m(s,r,\"message\")),c=r.length;s.push(n);var o=null,h=0;null!=a&&(o=u(a=m(s,a,\"key\")),h=a.length,s.push(o));var y=new l(e|=0),d=y.address;if(s.push(d),0==(0|t._crypto_generichash(d,e,n,c,0,o,h))){var E=p(y,_);return v(s),E}g(s,\"invalid usage\")}function Ne(e,r,a,_,s){var n=[];i(s),f(n,e,\"subkey_len\"),(\"number\"!=typeof e||(0|e)!==e||e<0)&&b(n,\"subkey_len must be an unsigned integer\");var c=null,o=0;null!=r&&(c=u(r=m(n,r,\"key\")),o=r.length,n.push(c)),a=m(n,a,\"id\");var h,y=0|t._crypto_generichash_blake2b_saltbytes();a.length!==y&&b(n,\"invalid id length\"),h=u(a),n.push(h),_=m(n,_,\"ctx\");var d,E=0|t._crypto_generichash_blake2b_personalbytes();_.length!==E&&b(n,\"invalid ctx length\"),d=u(_),n.push(d);var x=new l(0|e),k=x.address;if(n.push(k),0==(0|t._crypto_generichash_blake2b_salt_personal(k,e,null,0,0,c,o,h,d))){var S=p(x,s);return v(n),S}g(n,\"invalid usage\")}function Le(e,r,a){var _=[];i(a),f(_,e,\"state_address\"),f(_,r,\"hash_length\"),(\"number\"!=typeof r||(0|r)!==r||r<0)&&b(_,\"hash_length must be an unsigned integer\");var s=new l(r|=0),n=s.address;if(_.push(n),0==(0|t._crypto_generichash_final(e,n,r))){var c=(t._free(e),p(s,a));return v(_),c}g(_,\"invalid usage\")}function Ue(e,r,a){var _=[];i(a);var s=null,n=0;null!=e&&(s=u(e=m(_,e,\"key\")),n=e.length,_.push(s)),f(_,r,\"hash_length\"),(\"number\"!=typeof r||(0|r)!==r||r<0)&&b(_,\"hash_length must be an unsigned integer\");var c=new l(357).address;if(0==(0|t._crypto_generichash_init(c,s,n,r))){var o=c;return v(_),o}g(_,\"invalid usage\")}function Oe(e){var r=[];i(e);var a=new l(0|t._crypto_generichash_keybytes()),_=a.address;r.push(_),t._crypto_generichash_keygen(_);var s=p(a,e);return v(r),s}function Ce(e,r,a){var _=[];i(a),f(_,e,\"state_address\");var s=u(r=m(_,r,\"message_chunk\")),n=r.length;_.push(s),0!=(0|t._crypto_generichash_update(e,s,n))&&g(_,\"invalid usage\"),v(_)}function Re(e,r){var a=[];i(r);var _=u(e=m(a,e,\"message\")),s=e.length;a.push(_);var n=new l(0|t._crypto_hash_bytes()),c=n.address;if(a.push(c),0==(0|t._crypto_hash(c,_,s,0))){var o=p(n,r);return v(a),o}g(a,\"invalid usage\")}function Pe(e,r){var a=[];i(r);var _=u(e=m(a,e,\"message\")),s=e.length;a.push(_);var n=new l(0|t._crypto_hash_sha256_bytes()),c=n.address;if(a.push(c),0==(0|t._crypto_hash_sha256(c,_,s,0))){var o=p(n,r);return v(a),o}g(a,\"invalid usage\")}function Ge(e,r){var a=[];i(r),f(a,e,\"state_address\");var _=new l(0|t._crypto_hash_sha256_bytes()),s=_.address;if(a.push(s),0==(0|t._crypto_hash_sha256_final(e,s))){var n=(t._free(e),p(_,r));return v(a),n}g(a,\"invalid usage\")}function Xe(e){var r=[];i(e);var a=new l(104).address;if(0==(0|t._crypto_hash_sha256_init(a))){var _=a;return v(r),_}g(r,\"invalid usage\")}function De(e,r,a){var _=[];i(a),f(_,e,\"state_address\");var s=u(r=m(_,r,\"message_chunk\")),n=r.length;_.push(s),0!=(0|t._crypto_hash_sha256_update(e,s,n))&&g(_,\"invalid usage\"),v(_)}function Fe(e,r){var a=[];i(r);var _=u(e=m(a,e,\"message\")),s=e.length;a.push(_);var n=new l(0|t._crypto_hash_sha512_bytes()),c=n.address;if(a.push(c),0==(0|t._crypto_hash_sha512(c,_,s,0))){var o=p(n,r);return v(a),o}g(a,\"invalid usage\")}function Ve(e,r){var a=[];i(r),f(a,e,\"state_address\");var _=new l(0|t._crypto_hash_sha512_bytes()),s=_.address;if(a.push(s),0==(0|t._crypto_hash_sha512_final(e,s))){var n=(t._free(e),p(_,r));return v(a),n}g(a,\"invalid usage\")}function He(e){var r=[];i(e);var a=new l(208).address;if(0==(0|t._crypto_hash_sha512_init(a))){var _=a;return v(r),_}g(r,\"invalid usage\")}function qe(e,r,a){var _=[];i(a),f(_,e,\"state_address\");var s=u(r=m(_,r,\"message_chunk\")),n=r.length;_.push(s),0!=(0|t._crypto_hash_sha512_update(e,s,n))&&g(_,\"invalid usage\"),v(_)}function je(e,r,a,s,n){var c=[];i(n),f(c,e,\"subkey_len\"),(\"number\"!=typeof e||(0|e)!==e||e<0)&&b(c,\"subkey_len must be an unsigned integer\"),f(c,r,\"subkey_id\"),(\"number\"!=typeof r||(0|r)!==r||r<0)&&b(c,\"subkey_id must be an unsigned integer\"),\"string\"!=typeof a&&b(c,\"ctx must be a string\"),a=_(a+\"\\0\"),null!=h&&a.length-1!==h&&b(c,\"invalid ctx length\");var o=u(a),h=a.length-1;c.push(o),s=m(c,s,\"key\");var y,d=0|t._crypto_kdf_keybytes();s.length!==d&&b(c,\"invalid key length\"),y=u(s),c.push(y);var g=new l(0|e),E=g.address;c.push(E),t._crypto_kdf_derive_from_key(E,e,r,r>>>24>>>8,o,y);var x=p(g,n);return v(c),x}function ze(e){var r=[];i(e);var a=new l(0|t._crypto_kdf_keybytes()),_=a.address;r.push(_),t._crypto_kdf_keygen(_);var s=p(a,e);return v(r),s}function We(e,r,a,_){var s=[];i(_),e=m(s,e,\"clientPublicKey\");var n,c=0|t._crypto_kx_publickeybytes();e.length!==c&&b(s,\"invalid clientPublicKey length\"),n=u(e),s.push(n),r=m(s,r,\"clientSecretKey\");var o,h=0|t._crypto_kx_secretkeybytes();r.length!==h&&b(s,\"invalid clientSecretKey length\"),o=u(r),s.push(o),a=m(s,a,\"serverPublicKey\");var y,d=0|t._crypto_kx_publickeybytes();a.length!==d&&b(s,\"invalid serverPublicKey length\"),y=u(a),s.push(y);var f=new l(0|t._crypto_kx_sessionkeybytes()),E=f.address;s.push(E);var x=new l(0|t._crypto_kx_sessionkeybytes()),k=x.address;if(s.push(k),0==(0|t._crypto_kx_client_session_keys(E,k,n,o,y))){var S=p({sharedRx:f,sharedTx:x},_);return v(s),S}g(s,\"invalid usage\")}function Je(e){var r=[];i(e);var a=new l(0|t._crypto_kx_publickeybytes()),_=a.address;r.push(_);var s=new l(0|t._crypto_kx_secretkeybytes()),n=s.address;if(r.push(n),0==(0|t._crypto_kx_keypair(_,n))){var c={publicKey:p(a,e),privateKey:p(s,e),keyType:\"x25519\"};return v(r),c}g(r,\"internal error\")}function Qe(e,r){var a=[];i(r),e=m(a,e,\"seed\");var _,s=0|t._crypto_kx_seedbytes();e.length!==s&&b(a,\"invalid seed length\"),_=u(e),a.push(_);var n=new l(0|t._crypto_kx_publickeybytes()),c=n.address;a.push(c);var o=new l(0|t._crypto_kx_secretkeybytes()),h=o.address;if(a.push(h),0==(0|t._crypto_kx_seed_keypair(c,h,_))){var y={publicKey:p(n,r),privateKey:p(o,r),keyType:\"x25519\"};return v(a),y}g(a,\"internal error\")}function Ze(e,r,a,_){var s=[];i(_),e=m(s,e,\"serverPublicKey\");var n,c=0|t._crypto_kx_publickeybytes();e.length!==c&&b(s,\"invalid serverPublicKey length\"),n=u(e),s.push(n),r=m(s,r,\"serverSecretKey\");var o,h=0|t._crypto_kx_secretkeybytes();r.length!==h&&b(s,\"invalid serverSecretKey length\"),o=u(r),s.push(o),a=m(s,a,\"clientPublicKey\");var y,d=0|t._crypto_kx_publickeybytes();a.length!==d&&b(s,\"invalid clientPublicKey length\"),y=u(a),s.push(y);var f=new l(0|t._crypto_kx_sessionkeybytes()),E=f.address;s.push(E);var x=new l(0|t._crypto_kx_sessionkeybytes()),k=x.address;if(s.push(k),0==(0|t._crypto_kx_server_session_keys(E,k,n,o,y))){var S=p({sharedRx:f,sharedTx:x},_);return v(s),S}g(s,\"invalid usage\")}function $e(e,r,a){var _=[];i(a);var s=u(e=m(_,e,\"message\")),n=e.length;_.push(s),r=m(_,r,\"key\");var c,o=0|t._crypto_onetimeauth_keybytes();r.length!==o&&b(_,\"invalid key length\"),c=u(r),_.push(c);var h=new l(0|t._crypto_onetimeauth_bytes()),y=h.address;if(_.push(y),0==(0|t._crypto_onetimeauth(y,s,n,0,c))){var d=p(h,a);return v(_),d}g(_,\"invalid usage\")}function er(e,r){var a=[];i(r),f(a,e,\"state_address\");var _=new l(0|t._crypto_onetimeauth_bytes()),s=_.address;if(a.push(s),0==(0|t._crypto_onetimeauth_final(e,s))){var n=(t._free(e),p(_,r));return v(a),n}g(a,\"invalid usage\")}function rr(e,r){var a=[];i(r);var _=null;null!=e&&(_=u(e=m(a,e,\"key\")),e.length,a.push(_));var s=new l(144).address;if(0==(0|t._crypto_onetimeauth_init(s,_))){var n=s;return v(a),n}g(a,\"invalid usage\")}function tr(e){var r=[];i(e);var a=new l(0|t._crypto_onetimeauth_keybytes()),_=a.address;r.push(_),t._crypto_onetimeauth_keygen(_);var s=p(a,e);return v(r),s}function ar(e,r,a){var _=[];i(a),f(_,e,\"state_address\");var s=u(r=m(_,r,\"message_chunk\")),n=r.length;_.push(s),0!=(0|t._crypto_onetimeauth_update(e,s,n))&&g(_,\"invalid usage\"),v(_)}function _r(e,r,a){var _=[];e=m(_,e,\"hash\");var s,n=0|t._crypto_onetimeauth_bytes();e.length!==n&&b(_,\"invalid hash length\"),s=u(e),_.push(s);var c=u(r=m(_,r,\"message\")),o=r.length;_.push(c),a=m(_,a,\"key\");var h,p=0|t._crypto_onetimeauth_keybytes();a.length!==p&&b(_,\"invalid key length\"),h=u(a),_.push(h);var y=0==(0|t._crypto_onetimeauth_verify(s,c,o,0,h));return v(_),y}function sr(e,r,a,_,s,n,c){var o=[];i(c),f(o,e,\"keyLength\"),(\"number\"!=typeof e||(0|e)!==e||e<0)&&b(o,\"keyLength must be an unsigned integer\");var h=u(r=m(o,r,\"password\")),y=r.length;o.push(h),a=m(o,a,\"salt\");var d,E=0|t._crypto_pwhash_saltbytes();a.length!==E&&b(o,\"invalid salt length\"),d=u(a),o.push(d),f(o,_,\"opsLimit\"),(\"number\"!=typeof _||(0|_)!==_||_<0)&&b(o,\"opsLimit must be an unsigned integer\"),f(o,s,\"memLimit\"),(\"number\"!=typeof s||(0|s)!==s||s<0)&&b(o,\"memLimit must be an unsigned integer\"),f(o,n,\"algorithm\"),(\"number\"!=typeof n||(0|n)!==n||n<0)&&b(o,\"algorithm must be an unsigned integer\");var x=new l(0|e),k=x.address;if(o.push(k),0==(0|t._crypto_pwhash(k,e,0,h,y,0,d,_,0,s,n))){var S=p(x,c);return v(o),S}g(o,\"invalid usage\")}function nr(e,r,a,_,s,n){var c=[];i(n),f(c,e,\"keyLength\"),(\"number\"!=typeof e||(0|e)!==e||e<0)&&b(c,\"keyLength must be an unsigned integer\");var o=u(r=m(c,r,\"password\")),h=r.length;c.push(o),a=m(c,a,\"salt\");var y,d=0|t._crypto_pwhash_scryptsalsa208sha256_saltbytes();a.length!==d&&b(c,\"invalid salt length\"),y=u(a),c.push(y),f(c,_,\"opsLimit\"),(\"number\"!=typeof _||(0|_)!==_||_<0)&&b(c,\"opsLimit must be an unsigned integer\"),f(c,s,\"memLimit\"),(\"number\"!=typeof s||(0|s)!==s||s<0)&&b(c,\"memLimit must be an unsigned integer\");var E=new l(0|e),x=E.address;if(c.push(x),0==(0|t._crypto_pwhash_scryptsalsa208sha256(x,e,0,o,h,0,y,_,0,s))){var k=p(E,n);return v(c),k}g(c,\"invalid usage\")}function cr(e,r,a,_,s,n,c){var o=[];i(c);var h=u(e=m(o,e,\"password\")),y=e.length;o.push(h);var d=u(r=m(o,r,\"salt\")),E=r.length;o.push(d),f(o,a,\"opsLimit\"),(\"number\"!=typeof a||(0|a)!==a||a<0)&&b(o,\"opsLimit must be an unsigned integer\"),f(o,_,\"r\"),(\"number\"!=typeof _||(0|_)!==_||_<0)&&b(o,\"r must be an unsigned integer\"),f(o,s,\"p\"),(\"number\"!=typeof s||(0|s)!==s||s<0)&&b(o,\"p must be an unsigned integer\"),f(o,n,\"keyLength\"),(\"number\"!=typeof n||(0|n)!==n||n<0)&&b(o,\"keyLength must be an unsigned integer\");var x=new l(0|n),k=x.address;if(o.push(k),0==(0|t._crypto_pwhash_scryptsalsa208sha256_ll(h,y,d,E,a,0,_,s,k,n))){var S=p(x,c);return v(o),S}g(o,\"invalid usage\")}function or(e,r,a,_){var s=[];i(_);var n=u(e=m(s,e,\"password\")),c=e.length;s.push(n),f(s,r,\"opsLimit\"),(\"number\"!=typeof r||(0|r)!==r||r<0)&&b(s,\"opsLimit must be an unsigned integer\"),f(s,a,\"memLimit\"),(\"number\"!=typeof a||(0|a)!==a||a<0)&&b(s,\"memLimit must be an unsigned integer\");var o=new l(0|t._crypto_pwhash_scryptsalsa208sha256_strbytes()).address;if(s.push(o),0==(0|t._crypto_pwhash_scryptsalsa208sha256_str(o,n,c,0,r,0,a))){var h=t.UTF8ToString(o);return v(s),h}g(s,\"invalid usage\")}function hr(e,r,a){var s=[];i(a),\"string\"!=typeof e&&b(s,\"hashed_password must be a string\"),e=_(e+\"\\0\"),null!=c&&e.length-1!==c&&b(s,\"invalid hashed_password length\");var n=u(e),c=e.length-1;s.push(n);var o=u(r=m(s,r,\"password\")),h=r.length;s.push(o);var p=0==(0|t._crypto_pwhash_scryptsalsa208sha256_str_verify(n,o,h,0));return v(s),p}function pr(e,r,a,_){var s=[];i(_);var n=u(e=m(s,e,\"password\")),c=e.length;s.push(n),f(s,r,\"opsLimit\"),(\"number\"!=typeof r||(0|r)!==r||r<0)&&b(s,\"opsLimit must be an unsigned integer\"),f(s,a,\"memLimit\"),(\"number\"!=typeof a||(0|a)!==a||a<0)&&b(s,\"memLimit must be an unsigned integer\");var o=new l(0|t._crypto_pwhash_strbytes()).address;if(s.push(o),0==(0|t._crypto_pwhash_str(o,n,c,0,r,0,a))){var h=t.UTF8ToString(o);return v(s),h}g(s,\"invalid usage\")}function yr(e,r,a,s){var n=[];i(s),\"string\"!=typeof e&&b(n,\"hashed_password must be a string\"),e=_(e+\"\\0\"),null!=o&&e.length-1!==o&&b(n,\"invalid hashed_password length\");var c=u(e),o=e.length-1;n.push(c),f(n,r,\"opsLimit\"),(\"number\"!=typeof r||(0|r)!==r||r<0)&&b(n,\"opsLimit must be an unsigned integer\"),f(n,a,\"memLimit\"),(\"number\"!=typeof a||(0|a)!==a||a<0)&&b(n,\"memLimit must be an unsigned integer\");var h=0!=(0|t._crypto_pwhash_str_needs_rehash(c,r,0,a));return v(n),h}function ir(e,r,a){var s=[];i(a),\"string\"!=typeof e&&b(s,\"hashed_password must be a string\"),e=_(e+\"\\0\"),null!=c&&e.length-1!==c&&b(s,\"invalid hashed_password length\");var n=u(e),c=e.length-1;s.push(n);var o=u(r=m(s,r,\"password\")),h=r.length;s.push(o);var p=0==(0|t._crypto_pwhash_str_verify(n,o,h,0));return v(s),p}function lr(e,r,a){var _=[];i(a),e=m(_,e,\"privateKey\");var s,n=0|t._crypto_scalarmult_scalarbytes();e.length!==n&&b(_,\"invalid privateKey length\"),s=u(e),_.push(s),r=m(_,r,\"publicKey\");var c,o=0|t._crypto_scalarmult_bytes();r.length!==o&&b(_,\"invalid publicKey length\"),c=u(r),_.push(c);var h=new l(0|t._crypto_scalarmult_bytes()),y=h.address;if(_.push(y),0==(0|t._crypto_scalarmult(y,s,c))){var d=p(h,a);return v(_),d}g(_,\"weak public key\")}function ur(e,r){var a=[];i(r),e=m(a,e,\"privateKey\");var _,s=0|t._crypto_scalarmult_scalarbytes();e.length!==s&&b(a,\"invalid privateKey length\"),_=u(e),a.push(_);var n=new l(0|t._crypto_scalarmult_bytes()),c=n.address;if(a.push(c),0==(0|t._crypto_scalarmult_base(c,_))){var o=p(n,r);return v(a),o}g(a,\"unknown error\")}function dr(e,r,a){var _=[];i(a),e=m(_,e,\"n\");var s,n=0|t._crypto_scalarmult_ed25519_scalarbytes();e.length!==n&&b(_,\"invalid n length\"),s=u(e),_.push(s),r=m(_,r,\"p\");var c,o=0|t._crypto_scalarmult_ed25519_bytes();r.length!==o&&b(_,\"invalid p length\"),c=u(r),_.push(c);var h=new l(0|t._crypto_scalarmult_ed25519_bytes()),y=h.address;if(_.push(y),0==(0|t._crypto_scalarmult_ed25519(y,s,c))){var d=p(h,a);return v(_),d}g(_,\"invalid point or scalar is 0\")}function vr(e,r){var a=[];i(r),e=m(a,e,\"scalar\");var _,s=0|t._crypto_scalarmult_ed25519_scalarbytes();e.length!==s&&b(a,\"invalid scalar length\"),_=u(e),a.push(_);var n=new l(0|t._crypto_scalarmult_ed25519_bytes()),c=n.address;if(a.push(c),0==(0|t._crypto_scalarmult_ed25519_base(c,_))){var o=p(n,r);return v(a),o}g(a,\"scalar is 0\")}function gr(e,r){var a=[];i(r),e=m(a,e,\"scalar\");var _,s=0|t._crypto_scalarmult_ed25519_scalarbytes();e.length!==s&&b(a,\"invalid scalar length\"),_=u(e),a.push(_);var n=new l(0|t._crypto_scalarmult_ed25519_bytes()),c=n.address;if(a.push(c),0==(0|t._crypto_scalarmult_ed25519_base_noclamp(c,_))){var o=p(n,r);return v(a),o}g(a,\"scalar is 0\")}function br(e,r,a){var _=[];i(a),e=m(_,e,\"n\");var s,n=0|t._crypto_scalarmult_ed25519_scalarbytes();e.length!==n&&b(_,\"invalid n length\"),s=u(e),_.push(s),r=m(_,r,\"p\");var c,o=0|t._crypto_scalarmult_ed25519_bytes();r.length!==o&&b(_,\"invalid p length\"),c=u(r),_.push(c);var h=new l(0|t._crypto_scalarmult_ed25519_bytes()),y=h.address;if(_.push(y),0==(0|t._crypto_scalarmult_ed25519_noclamp(y,s,c))){var d=p(h,a);return v(_),d}g(_,\"invalid point or scalar is 0\")}function fr(e,r,a){var _=[];i(a),e=m(_,e,\"scalar\");var s,n=0|t._crypto_scalarmult_ristretto255_scalarbytes();e.length!==n&&b(_,\"invalid scalar length\"),s=u(e),_.push(s),r=m(_,r,\"element\");var c,o=0|t._crypto_scalarmult_ristretto255_bytes();r.length!==o&&b(_,\"invalid element length\"),c=u(r),_.push(c);var h=new l(0|t._crypto_scalarmult_ristretto255_bytes()),y=h.address;if(_.push(y),0==(0|t._crypto_scalarmult_ristretto255(y,s,c))){var d=p(h,a);return v(_),d}g(_,\"result is identity element\")}function mr(e,r){var a=[];i(r),e=m(a,e,\"scalar\");var _,s=0|t._crypto_core_ristretto255_scalarbytes();e.length!==s&&b(a,\"invalid scalar length\"),_=u(e),a.push(_);var n=new l(0|t._crypto_core_ristretto255_bytes()),c=n.address;if(a.push(c),0==(0|t._crypto_scalarmult_ristretto255_base(c,_))){var o=p(n,r);return v(a),o}g(a,\"scalar is 0\")}function Er(e,r,a,_){var s=[];i(_);var n=u(e=m(s,e,\"message\")),c=e.length;s.push(n),r=m(s,r,\"nonce\");var o,h=0|t._crypto_secretbox_noncebytes();r.length!==h&&b(s,\"invalid nonce length\"),o=u(r),s.push(o),a=m(s,a,\"key\");var y,d=0|t._crypto_secretbox_keybytes();a.length!==d&&b(s,\"invalid key length\"),y=u(a),s.push(y);var f=new l(0|c),E=f.address;s.push(E);var x=new l(0|t._crypto_secretbox_macbytes()),k=x.address;if(s.push(k),0==(0|t._crypto_secretbox_detached(E,k,n,c,0,o,y))){var S=p({mac:x,cipher:f},_);return v(s),S}g(s,\"invalid usage\")}function xr(e,r,a,_){var s=[];i(_);var n=u(e=m(s,e,\"message\")),c=e.length;s.push(n),r=m(s,r,\"nonce\");var o,h=0|t._crypto_secretbox_noncebytes();r.length!==h&&b(s,\"invalid nonce length\"),o=u(r),s.push(o),a=m(s,a,\"key\");var y,d=0|t._crypto_secretbox_keybytes();a.length!==d&&b(s,\"invalid key length\"),y=u(a),s.push(y);var f=new l(c+t._crypto_secretbox_macbytes()|0),E=f.address;if(s.push(E),0==(0|t._crypto_secretbox_easy(E,n,c,0,o,y))){var x=p(f,_);return v(s),x}g(s,\"invalid usage\")}function kr(e){var r=[];i(e);var a=new l(0|t._crypto_secretbox_keybytes()),_=a.address;r.push(_),t._crypto_secretbox_keygen(_);var s=p(a,e);return v(r),s}function Sr(e,r,a,_,s){var n=[];i(s);var c=u(e=m(n,e,\"ciphertext\")),o=e.length;n.push(c),r=m(n,r,\"mac\");var h,y=0|t._crypto_secretbox_macbytes();r.length!==y&&b(n,\"invalid mac length\"),h=u(r),n.push(h),a=m(n,a,\"nonce\");var d,f=0|t._crypto_secretbox_noncebytes();a.length!==f&&b(n,\"invalid nonce length\"),d=u(a),n.push(d),_=m(n,_,\"key\");var E,x=0|t._crypto_secretbox_keybytes();_.length!==x&&b(n,\"invalid key length\"),E=u(_),n.push(E);var k=new l(0|o),S=k.address;if(n.push(S),0==(0|t._crypto_secretbox_open_detached(S,c,h,o,0,d,E))){var T=p(k,s);return v(n),T}g(n,\"wrong secret key for the given ciphertext\")}function Tr(e,r,a,_){var s=[];i(_),e=m(s,e,\"ciphertext\");var n,c=t._crypto_secretbox_macbytes(),o=e.length;o<c&&b(s,\"ciphertext is too short\"),n=u(e),s.push(n),r=m(s,r,\"nonce\");var h,y=0|t._crypto_secretbox_noncebytes();r.length!==y&&b(s,\"invalid nonce length\"),h=u(r),s.push(h),a=m(s,a,\"key\");var d,f=0|t._crypto_secretbox_keybytes();a.length!==f&&b(s,\"invalid key length\"),d=u(a),s.push(d);var E=new l(o-t._crypto_secretbox_macbytes()|0),x=E.address;if(s.push(x),0==(0|t._crypto_secretbox_open_easy(x,n,o,0,h,d))){var k=p(E,_);return v(s),k}g(s,\"wrong secret key for the given ciphertext\")}function wr(e,r,a){var _=[];i(a),e=m(_,e,\"header\");var s,n=0|t._crypto_secretstream_xchacha20poly1305_headerbytes();e.length!==n&&b(_,\"invalid header length\"),s=u(e),_.push(s),r=m(_,r,\"key\");var c,o=0|t._crypto_secretstream_xchacha20poly1305_keybytes();r.length!==o&&b(_,\"invalid key length\"),c=u(r),_.push(c);var h=new l(52).address;if(0==(0|t._crypto_secretstream_xchacha20poly1305_init_pull(h,s,c))){var p=h;return v(_),p}g(_,\"invalid usage\")}function Yr(e,r){var a=[];i(r),e=m(a,e,\"key\");var _,s=0|t._crypto_secretstream_xchacha20poly1305_keybytes();e.length!==s&&b(a,\"invalid key length\"),_=u(e),a.push(_);var n=new l(52).address,c=new l(0|t._crypto_secretstream_xchacha20poly1305_headerbytes()),o=c.address;if(a.push(o),0==(0|t._crypto_secretstream_xchacha20poly1305_init_push(n,o,_))){var h={state:n,header:p(c,r)};return v(a),h}g(a,\"invalid usage\")}function Br(e){var r=[];i(e);var a=new l(0|t._crypto_secretstream_xchacha20poly1305_keybytes()),_=a.address;r.push(_),t._crypto_secretstream_xchacha20poly1305_keygen(_);var s=p(a,e);return v(r),s}function Ar(e,r,a,_){var s=[];i(_),f(s,e,\"state_address\"),r=m(s,r,\"cipher\");var n,c=t._crypto_secretstream_xchacha20poly1305_abytes(),o=r.length;o<c&&b(s,\"cipher is too short\"),n=u(r),s.push(n);var h=null,y=0;null!=a&&(h=u(a=m(s,a,\"ad\")),y=a.length,s.push(h));var g=new l(o-t._crypto_secretstream_xchacha20poly1305_abytes()|0),E=g.address;s.push(E);var x,k=(x=d(1),s.push(x),(k=0===t._crypto_secretstream_xchacha20poly1305_pull(e,E,0,x,n,o,0,h,y)&&{tag:t.HEAPU8[x],message:g})&&{message:p(k.message,_),tag:k.tag});return v(s),k}function Kr(e,r,a,_,s){var n=[];i(s),f(n,e,\"state_address\");var c=u(r=m(n,r,\"message_chunk\")),o=r.length;n.push(c);var h=null,y=0;null!=a&&(h=u(a=m(n,a,\"ad\")),y=a.length,n.push(h)),f(n,_,\"tag\"),(\"number\"!=typeof _||(0|_)!==_||_<0)&&b(n,\"tag must be an unsigned integer\");var d=new l(o+t._crypto_secretstream_xchacha20poly1305_abytes()|0),E=d.address;if(n.push(E),0==(0|t._crypto_secretstream_xchacha20poly1305_push(e,E,0,c,o,0,h,y,0,_))){var x=p(d,s);return v(n),x}g(n,\"invalid usage\")}function Mr(e,r){var a=[];return i(r),f(a,e,\"state_address\"),t._crypto_secretstream_xchacha20poly1305_rekey(e),v(a),!0}function Ir(e,r,a){var _=[];i(a);var s=u(e=m(_,e,\"message\")),n=e.length;_.push(s),r=m(_,r,\"key\");var c,o=0|t._crypto_shorthash_keybytes();r.length!==o&&b(_,\"invalid key length\"),c=u(r),_.push(c);var h=new l(0|t._crypto_shorthash_bytes()),y=h.address;if(_.push(y),0==(0|t._crypto_shorthash(y,s,n,0,c))){var d=p(h,a);return v(_),d}g(_,\"invalid usage\")}function Nr(e){var r=[];i(e);var a=new l(0|t._crypto_shorthash_keybytes()),_=a.address;r.push(_),t._crypto_shorthash_keygen(_);var s=p(a,e);return v(r),s}function Lr(e,r,a){var _=[];i(a);var s=u(e=m(_,e,\"message\")),n=e.length;_.push(s),r=m(_,r,\"key\");var c,o=0|t._crypto_shorthash_siphashx24_keybytes();r.length!==o&&b(_,\"invalid key length\"),c=u(r),_.push(c);var h=new l(0|t._crypto_shorthash_siphashx24_bytes()),y=h.address;if(_.push(y),0==(0|t._crypto_shorthash_siphashx24(y,s,n,0,c))){var d=p(h,a);return v(_),d}g(_,\"invalid usage\")}function Ur(e,r,a){var _=[];i(a);var s=u(e=m(_,e,\"message\")),n=e.length;_.push(s),r=m(_,r,\"privateKey\");var c,o=0|t._crypto_sign_secretkeybytes();r.length!==o&&b(_,\"invalid privateKey length\"),c=u(r),_.push(c);var h=new l(e.length+t._crypto_sign_bytes()|0),y=h.address;if(_.push(y),0==(0|t._crypto_sign(y,null,s,n,0,c))){var d=p(h,a);return v(_),d}g(_,\"invalid usage\")}function Or(e,r,a){var _=[];i(a);var s=u(e=m(_,e,\"message\")),n=e.length;_.push(s),r=m(_,r,\"privateKey\");var c,o=0|t._crypto_sign_secretkeybytes();r.length!==o&&b(_,\"invalid privateKey length\"),c=u(r),_.push(c);var h=new l(0|t._crypto_sign_bytes()),y=h.address;if(_.push(y),0==(0|t._crypto_sign_detached(y,null,s,n,0,c))){var d=p(h,a);return v(_),d}g(_,\"invalid usage\")}function Cr(e,r){var a=[];i(r),e=m(a,e,\"edPk\");var _,s=0|t._crypto_sign_publickeybytes();e.length!==s&&b(a,\"invalid edPk length\"),_=u(e),a.push(_);var n=new l(0|t._crypto_scalarmult_scalarbytes()),c=n.address;if(a.push(c),0==(0|t._crypto_sign_ed25519_pk_to_curve25519(c,_))){var o=p(n,r);return v(a),o}g(a,\"invalid key\")}function Rr(e,r){var a=[];i(r),e=m(a,e,\"edSk\");var _,s=0|t._crypto_sign_secretkeybytes();e.length!==s&&b(a,\"invalid edSk length\"),_=u(e),a.push(_);var n=new l(0|t._crypto_scalarmult_scalarbytes()),c=n.address;if(a.push(c),0==(0|t._crypto_sign_ed25519_sk_to_curve25519(c,_))){var o=p(n,r);return v(a),o}g(a,\"invalid key\")}function Pr(e,r){var a=[];i(r),e=m(a,e,\"privateKey\");var _,s=0|t._crypto_sign_secretkeybytes();e.length!==s&&b(a,\"invalid privateKey length\"),_=u(e),a.push(_);var n=new l(0|t._crypto_sign_publickeybytes()),c=n.address;if(a.push(c),0==(0|t._crypto_sign_ed25519_sk_to_pk(c,_))){var o=p(n,r);return v(a),o}g(a,\"invalid key\")}function Gr(e,r){var a=[];i(r),e=m(a,e,\"privateKey\");var _,s=0|t._crypto_sign_secretkeybytes();e.length!==s&&b(a,\"invalid privateKey length\"),_=u(e),a.push(_);var n=new l(0|t._crypto_sign_seedbytes()),c=n.address;if(a.push(c),0==(0|t._crypto_sign_ed25519_sk_to_seed(c,_))){var o=p(n,r);return v(a),o}g(a,\"invalid key\")}function Xr(e,r,a){var _=[];i(a),f(_,e,\"state_address\"),r=m(_,r,\"privateKey\");var s,n=0|t._crypto_sign_secretkeybytes();r.length!==n&&b(_,\"invalid privateKey length\"),s=u(r),_.push(s);var c=new l(0|t._crypto_sign_bytes()),o=c.address;if(_.push(o),0==(0|t._crypto_sign_final_create(e,o,null,s))){var h=(t._free(e),p(c,a));return v(_),h}g(_,\"invalid usage\")}function Dr(e,r,a,_){var s=[];i(_),f(s,e,\"state_address\"),r=m(s,r,\"signature\");var n,c=0|t._crypto_sign_bytes();r.length!==c&&b(s,\"invalid signature length\"),n=u(r),s.push(n),a=m(s,a,\"publicKey\");var o,h=0|t._crypto_sign_publickeybytes();a.length!==h&&b(s,\"invalid publicKey length\"),o=u(a),s.push(o);var p=0==(0|t._crypto_sign_final_verify(e,n,o));return v(s),p}function Fr(e){var r=[];i(e);var a=new l(208).address;if(0==(0|t._crypto_sign_init(a))){var _=a;return v(r),_}g(r,\"internal error\")}function Vr(e){var r=[];i(e);var a=new l(0|t._crypto_sign_publickeybytes()),_=a.address;r.push(_);var s=new l(0|t._crypto_sign_secretkeybytes()),n=s.address;if(r.push(n),0==(0|t._crypto_sign_keypair(_,n))){var c={publicKey:p(a,e),privateKey:p(s,e),keyType:\"ed25519\"};return v(r),c}g(r,\"internal error\")}function Hr(e,r,a){var _=[];i(a),e=m(_,e,\"signedMessage\");var s,n=t._crypto_sign_bytes(),c=e.length;c<n&&b(_,\"signedMessage is too short\"),s=u(e),_.push(s),r=m(_,r,\"publicKey\");var o,h=0|t._crypto_sign_publickeybytes();r.length!==h&&b(_,\"invalid publicKey length\"),o=u(r),_.push(o);var y=new l(c-t._crypto_sign_bytes()|0),d=y.address;if(_.push(d),0==(0|t._crypto_sign_open(d,null,s,c,0,o))){var f=p(y,a);return v(_),f}g(_,\"incorrect signature for the given public key\")}function qr(e,r){var a=[];i(r),e=m(a,e,\"seed\");var _,s=0|t._crypto_sign_seedbytes();e.length!==s&&b(a,\"invalid seed length\"),_=u(e),a.push(_);var n=new l(0|t._crypto_sign_publickeybytes()),c=n.address;a.push(c);var o=new l(0|t._crypto_sign_secretkeybytes()),h=o.address;if(a.push(h),0==(0|t._crypto_sign_seed_keypair(c,h,_))){var y={publicKey:p(n,r),privateKey:p(o,r),keyType:\"ed25519\"};return v(a),y}g(a,\"invalid usage\")}function jr(e,r,a){var _=[];i(a),f(_,e,\"state_address\");var s=u(r=m(_,r,\"message_chunk\")),n=r.length;_.push(s),0!=(0|t._crypto_sign_update(e,s,n))&&g(_,\"invalid usage\"),v(_)}function zr(e,r,a){var _=[];e=m(_,e,\"signature\");var s,n=0|t._crypto_sign_bytes();e.length!==n&&b(_,\"invalid signature length\"),s=u(e),_.push(s);var c=u(r=m(_,r,\"message\")),o=r.length;_.push(c),a=m(_,a,\"publicKey\");var h,p=0|t._crypto_sign_publickeybytes();a.length!==p&&b(_,\"invalid publicKey length\"),h=u(a),_.push(h);var y=0==(0|t._crypto_sign_verify_detached(s,c,o,0,h));return v(_),y}function Wr(e,r,a,_){var s=[];i(_),f(s,e,\"outLength\"),(\"number\"!=typeof e||(0|e)!==e||e<0)&&b(s,\"outLength must be an unsigned integer\"),r=m(s,r,\"key\");var n,c=0|t._crypto_stream_chacha20_keybytes();r.length!==c&&b(s,\"invalid key length\"),n=u(r),s.push(n),a=m(s,a,\"nonce\");var o,h=0|t._crypto_stream_chacha20_noncebytes();a.length!==h&&b(s,\"invalid nonce length\"),o=u(a),s.push(o);var y=new l(0|e),d=y.address;s.push(d),t._crypto_stream_chacha20(d,e,0,o,n);var g=p(y,_);return v(s),g}function Jr(e,r,a,_){var s=[];i(_);var n=u(e=m(s,e,\"input_message\")),c=e.length;s.push(n),r=m(s,r,\"nonce\");var o,h=0|t._crypto_stream_chacha20_ietf_noncebytes();r.length!==h&&b(s,\"invalid nonce length\"),o=u(r),s.push(o),a=m(s,a,\"key\");var y,d=0|t._crypto_stream_chacha20_ietf_keybytes();a.length!==d&&b(s,\"invalid key length\"),y=u(a),s.push(y);var f=new l(0|c),E=f.address;if(s.push(E),0===t._crypto_stream_chacha20_ietf_xor(E,n,c,0,o,y)){var x=p(f,_);return v(s),x}g(s,\"invalid usage\")}function Qr(e,r,a,_,s){var n=[];i(s);var c=u(e=m(n,e,\"input_message\")),o=e.length;n.push(c),r=m(n,r,\"nonce\");var h,y=0|t._crypto_stream_chacha20_ietf_noncebytes();r.length!==y&&b(n,\"invalid nonce length\"),h=u(r),n.push(h),f(n,a,\"nonce_increment\"),(\"number\"!=typeof a||(0|a)!==a||a<0)&&b(n,\"nonce_increment must be an unsigned integer\"),_=m(n,_,\"key\");var d,E=0|t._crypto_stream_chacha20_ietf_keybytes();_.length!==E&&b(n,\"invalid key length\"),d=u(_),n.push(d);var x=new l(0|o),k=x.address;if(n.push(k),0===t._crypto_stream_chacha20_ietf_xor_ic(k,c,o,0,h,a,d)){var S=p(x,s);return v(n),S}g(n,\"invalid usage\")}function Zr(e){var r=[];i(e);var a=new l(0|t._crypto_stream_chacha20_keybytes()),_=a.address;r.push(_),t._crypto_stream_chacha20_keygen(_);var s=p(a,e);return v(r),s}function $r(e,r,a,_){var s=[];i(_);var n=u(e=m(s,e,\"input_message\")),c=e.length;s.push(n),r=m(s,r,\"nonce\");var o,h=0|t._crypto_stream_chacha20_noncebytes();r.length!==h&&b(s,\"invalid nonce length\"),o=u(r),s.push(o),a=m(s,a,\"key\");var y,d=0|t._crypto_stream_chacha20_keybytes();a.length!==d&&b(s,\"invalid key length\"),y=u(a),s.push(y);var f=new l(0|c),E=f.address;if(s.push(E),0===t._crypto_stream_chacha20_xor(E,n,c,0,o,y)){var x=p(f,_);return v(s),x}g(s,\"invalid usage\")}function et(e,r,a,_,s){var n=[];i(s);var c=u(e=m(n,e,\"input_message\")),o=e.length;n.push(c),r=m(n,r,\"nonce\");var h,y=0|t._crypto_stream_chacha20_noncebytes();r.length!==y&&b(n,\"invalid nonce length\"),h=u(r),n.push(h),f(n,a,\"nonce_increment\"),(\"number\"!=typeof a||(0|a)!==a||a<0)&&b(n,\"nonce_increment must be an unsigned integer\"),_=m(n,_,\"key\");var d,E=0|t._crypto_stream_chacha20_keybytes();_.length!==E&&b(n,\"invalid key length\"),d=u(_),n.push(d);var x=new l(0|o),k=x.address;if(n.push(k),0===t._crypto_stream_chacha20_xor_ic(k,c,o,0,h,a,0,d)){var S=p(x,s);return v(n),S}g(n,\"invalid usage\")}function rt(e){var r=[];i(e);var a=new l(0|t._crypto_stream_keybytes()),_=a.address;r.push(_),t._crypto_stream_keygen(_);var s=p(a,e);return v(r),s}function tt(e){var r=[];i(e);var a=new l(0|t._crypto_stream_xchacha20_keybytes()),_=a.address;r.push(_),t._crypto_stream_xchacha20_keygen(_);var s=p(a,e);return v(r),s}function at(e,r,a,_){var s=[];i(_);var n=u(e=m(s,e,\"input_message\")),c=e.length;s.push(n),r=m(s,r,\"nonce\");var o,h=0|t._crypto_stream_xchacha20_noncebytes();r.length!==h&&b(s,\"invalid nonce length\"),o=u(r),s.push(o),a=m(s,a,\"key\");var y,d=0|t._crypto_stream_xchacha20_keybytes();a.length!==d&&b(s,\"invalid key length\"),y=u(a),s.push(y);var f=new l(0|c),E=f.address;if(s.push(E),0===t._crypto_stream_xchacha20_xor(E,n,c,0,o,y)){var x=p(f,_);return v(s),x}g(s,\"invalid usage\")}function _t(e,r,a,_,s){var n=[];i(s);var c=u(e=m(n,e,\"input_message\")),o=e.length;n.push(c),r=m(n,r,\"nonce\");var h,y=0|t._crypto_stream_xchacha20_noncebytes();r.length!==y&&b(n,\"invalid nonce length\"),h=u(r),n.push(h),f(n,a,\"nonce_increment\"),(\"number\"!=typeof a||(0|a)!==a||a<0)&&b(n,\"nonce_increment must be an unsigned integer\"),_=m(n,_,\"key\");var d,E=0|t._crypto_stream_xchacha20_keybytes();_.length!==E&&b(n,\"invalid key length\"),d=u(_),n.push(d);var x=new l(0|o),k=x.address;if(n.push(k),0===t._crypto_stream_xchacha20_xor_ic(k,c,o,0,h,a,0,d)){var S=p(x,s);return v(n),S}g(n,\"invalid usage\")}function st(e,r){var a=[];i(r),f(a,e,\"length\"),(\"number\"!=typeof e||(0|e)!==e||e<0)&&b(a,\"length must be an unsigned integer\");var _=new l(0|e),s=_.address;a.push(s),t._randombytes_buf(s,e);var n=p(_,r);return v(a),n}function nt(e,r,a){var _=[];i(a),f(_,e,\"length\"),(\"number\"!=typeof e||(0|e)!==e||e<0)&&b(_,\"length must be an unsigned integer\"),r=m(_,r,\"seed\");var s,n=0|t._randombytes_seedbytes();r.length!==n&&b(_,\"invalid seed length\"),s=u(r),_.push(s);var c=new l(0|e),o=c.address;_.push(o),t._randombytes_buf_deterministic(o,e,s);var h=p(c,a);return v(_),h}function ct(e){i(e),t._randombytes_close()}function ot(e){i(e);var r=t._randombytes_random()>>>0;return v([]),r}function ht(e,r){var a=[];i(r);for(var _=t._malloc(24),s=0;s<6;s++)t.setValue(_+4*s,t.Runtime.addFunction(e[[\"implementation_name\",\"random\",\"stir\",\"uniform\",\"buf\",\"close\"][s]]),\"i32\");0!=(0|t._randombytes_set_implementation(_))&&g(a,\"unsupported implementation\"),v(a)}function pt(e){i(e),t._randombytes_stir()}function yt(e,r){var a=[];i(r),f(a,e,\"upper_bound\"),(\"number\"!=typeof e||(0|e)!==e||e<0)&&b(a,\"upper_bound must be an unsigned integer\");var _=t._randombytes_uniform(e)>>>0;return v(a),_}function it(){var e=t._sodium_version_string(),r=t.UTF8ToString(e);return v([]),r}return l.prototype.to_Uint8Array=function(){var e=new Uint8Array(this.length);return e.set(t.HEAPU8.subarray(this.address,this.address+this.length)),e},e.add=function(e,r){if(!(e instanceof Uint8Array&&r instanceof Uint8Array))throw new TypeError(\"Only Uint8Array instances can added\");var t=e.length,a=0,_=0;if(r.length!=e.length)throw new TypeError(\"Arguments must have the same length\");for(_=0;_<t;_++)a>>=8,a+=e[_]+r[_],e[_]=255&a},e.base64_variants=c,e.compare=function(e,r){if(!(e instanceof Uint8Array&&r instanceof Uint8Array))throw new TypeError(\"Only Uint8Array instances can be compared\");if(e.length!==r.length)throw new TypeError(\"Only instances of identical length can be compared\");for(var t=0,a=1,_=e.length;_-- >0;)t|=r[_]-e[_]>>8&a,a&=(r[_]^e[_])-1>>8;return t+t+a-1},e.from_base64=function(e,r){r=o(r);var a,_=[],s=new l(3*(e=m(_,e,\"input\")).length/4),n=u(e),c=d(4),h=d(4);return _.push(n),_.push(s.address),_.push(s.result_bin_len_p),_.push(s.b64_end_p),0!==t._sodium_base642bin(s.address,s.length,n,e.length,0,c,h,r)&&g(_,\"invalid input\"),t.getValue(h,\"i32\")-n!==e.length&&g(_,\"incomplete input\"),s.length=t.getValue(c,\"i32\"),a=s.to_Uint8Array(),v(_),a},e.from_hex=function(e){var r,a=[],_=new l((e=m(a,e,\"input\")).length/2),s=u(e),n=d(4);return a.push(s),a.push(_.address),a.push(_.hex_end_p),0!==t._sodium_hex2bin(_.address,_.length,s,e.length,0,0,n)&&g(a,\"invalid input\"),t.getValue(n,\"i32\")-s!==e.length&&g(a,\"incomplete input\"),r=_.to_Uint8Array(),v(a),r},e.from_string=_,e.increment=function(e){if(!(e instanceof Uint8Array))throw new TypeError(\"Only Uint8Array instances can be incremented\");for(var r=256,t=0,a=e.length;t<a;t++)r>>=8,r+=e[t],e[t]=255&r},e.is_zero=function(e){if(!(e instanceof Uint8Array))throw new TypeError(\"Only Uint8Array instances can be checked\");for(var r=0,t=0,a=e.length;t<a;t++)r|=e[t];return 0===r},e.libsodium=r,e.memcmp=function(e,r){if(!(e instanceof Uint8Array&&r instanceof Uint8Array))throw new TypeError(\"Only Uint8Array instances can be compared\");if(e.length!==r.length)throw new TypeError(\"Only instances of identical length can be compared\");for(var t=0,a=0,_=e.length;a<_;a++)t|=e[a]^r[a];return 0===t},e.memzero=function(e){if(!(e instanceof Uint8Array))throw new TypeError(\"Only Uint8Array instances can be wiped\");for(var r=0,t=e.length;r<t;r++)e[r]=0},e.output_formats=function(){return[\"uint8array\",\"text\",\"hex\",\"base64\"]},e.pad=function(e,r){if(!(e instanceof Uint8Array))throw new TypeError(\"buffer must be a Uint8Array\");if((r|=0)<=0)throw new Error(\"block size must be > 0\");var a,_=[],s=d(4),n=1,c=0,o=0|e.length,h=new l(o+r);_.push(s),_.push(h.address);for(var p=h.address,y=h.address+o+r;p<y;p++)t.HEAPU8[p]=e[c],c+=n=1&~((65535&((o-=n)>>>48|o>>>32|o>>>16|o))-1>>16);return 0!==t._sodium_pad(s,h.address,e.length,r,h.length)&&g(_,\"internal error\"),h.length=t.getValue(s,\"i32\"),a=h.to_Uint8Array(),v(_),a},e.unpad=function(e,r){if(!(e instanceof Uint8Array))throw new TypeError(\"buffer must be a Uint8Array\");if((r|=0)<=0)throw new Error(\"block size must be > 0\");var a=[],_=u(e),s=d(4);return a.push(_),a.push(s),0!==t._sodium_unpad(s,_,e.length,r)&&g(a,\"unsupported/invalid padding\"),e=(e=new Uint8Array(e)).subarray(0,t.getValue(s,\"i32\")),v(a),e},e.ready=a,e.symbols=function(){return Object.keys(e).sort()},e.to_base64=h,e.to_hex=n,e.to_string=s,e}var t=\"object\"==typeof e.sodium&&\"function\"==typeof e.sodium.onload?e.sodium.onload:null; true?!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports,__webpack_require__(/*! libsodium */ \"./node_modules/libsodium/dist/modules/libsodium.js\")], __WEBPACK_AMD_DEFINE_FACTORY__ = (r),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):0,t&&e.sodium.ready.then((function(){t(e.sodium)}))}(this);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/libsodium-wrappers/dist/modules/libsodium-wrappers.js\n");

/***/ }),

/***/ "./node_modules/libsodium/dist/modules/libsodium.js":
/*!**********************************************************!*\
  !*** ./node_modules/libsodium/dist/modules/libsodium.js ***!
  \**********************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __dirname = \"/\";\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!function(A){function I(A){\"use strict\";var I;void 0===(I=A)&&(I={});var g=I;\"object\"!=typeof g.sodium&&(\"object\"==typeof __webpack_require__.g?g=__webpack_require__.g:\"object\"==typeof window&&(g=window)),\"object\"==typeof g.sodium&&\"number\"==typeof g.sodium.totalMemory&&(I.TOTAL_MEMORY=g.sodium.totalMemory);var B=I;return I.ready=new Promise((function(A,I){(Q=B).onAbort=I,Q.print=function(A){},Q.printErr=function(A){},Q.onRuntimeInitialized=function(){try{Q._crypto_secretbox_keybytes(),A()}catch(A){I(A)}},Q.useBackupModule=function(){return new Promise((function(A,I){(Q={}).onAbort=I,Q.onRuntimeInitialized=function(){Object.keys(B).forEach((function(A){\"getRandomValue\"!==A&&delete B[A]})),Object.keys(Q).forEach((function(A){B[A]=Q[A]})),A()};var g,Q=void 0!==Q?Q:{},C={};for(g in Q)Q.hasOwnProperty(g)&&(C[g]=Q[g]);var E=[],i=!1,n=!1,a=!1,r=!1;i=\"object\"==typeof window,n=\"function\"==typeof importScripts,a=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,r=!i&&!a&&!n;var o,e,t,f,c,y=\"\";function s(A){return Q.locateFile?Q.locateFile(A,y):y+A}a?(y=n?__webpack_require__(/*! path */ \"?ebe9\").dirname(y)+\"/\":__dirname+\"/\",o=function(A,I){var g=bA(A);return g?I?g:g.toString():(f||(f=__webpack_require__(/*! fs */ \"?f0f8\")),c||(c=__webpack_require__(/*! path */ \"?ebe9\")),A=c.normalize(A),f.readFileSync(A,I?null:\"utf8\"))},t=function(A){var I=o(A,!0);return I.buffer||(I=new Uint8Array(I)),G(I.buffer),I},process.argv.length>1&&process.argv[1].replace(/\\\\/g,\"/\"),E=process.argv.slice(2), true&&(module.exports=Q),Q.inspect=function(){return\"[Emscripten Module object]\"}):r?(\"undefined\"!=typeof read&&(o=function(A){var I=bA(A);return I?_A(I):read(A)}),t=function(A){var I;return(I=bA(A))?I:\"function\"==typeof readbuffer?new Uint8Array(readbuffer(A)):(G(\"object\"==typeof(I=read(A,\"binary\"))),I)},\"undefined\"!=typeof scriptArgs?E=scriptArgs:void 0!==arguments&&(E=arguments),\"undefined\"!=typeof print&&(\"undefined\"==typeof console&&(console={}),console.log=print,console.warn=console.error=\"undefined\"!=typeof printErr?printErr:print)):(i||n)&&(n?y=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(y=document.currentScript.src),y=0!==y.indexOf(\"blob:\")?y.substr(0,y.lastIndexOf(\"/\")+1):\"\",o=function(A){try{var I=new XMLHttpRequest;return I.open(\"GET\",A,!1),I.send(null),I.responseText}catch(I){var g=bA(A);if(g)return _A(g);throw I}},n&&(t=function(A){try{var I=new XMLHttpRequest;return I.open(\"GET\",A,!1),I.responseType=\"arraybuffer\",I.send(null),new Uint8Array(I.response)}catch(I){var g=bA(A);if(g)return g;throw I}}),e=function(A,I,g){var B=new XMLHttpRequest;B.open(\"GET\",A,!0),B.responseType=\"arraybuffer\",B.onload=function(){if(200==B.status||0==B.status&&B.response)I(B.response);else{var Q=bA(A);Q?I(Q.buffer):g()}},B.onerror=g,B.send(null)}),Q.print;var w,h=Q.printErr||void 0;for(g in C)C.hasOwnProperty(g)&&(Q[g]=C[g]);C=null,Q.arguments&&(E=Q.arguments),Q.thisProgram&&Q.thisProgram,Q.quit&&Q.quit,Q.wasmBinary&&(w=Q.wasmBinary),Q.noExitRuntime&&Q.noExitRuntime;var D,u={Memory:function(A){this.buffer=new ArrayBuffer(65536*A.initial)},Module:function(A){},Instance:function(A,I){this.exports=function(A){for(var I,g=new Uint8Array(123),B=25;B>=0;--B)g[48+B]=52+B,g[65+B]=B,g[97+B]=26+B;function Q(A,I,B){for(var Q,C,E=0,i=I,n=B.length,a=I+(3*n>>2)-(\"=\"==B[n-2])-(\"=\"==B[n-1]);E<n;E+=4)Q=g[B.charCodeAt(E+1)],C=g[B.charCodeAt(E+2)],A[i++]=g[B.charCodeAt(E)]<<2|Q>>4,i<a&&(A[i++]=Q<<4|C>>2),i<a&&(A[i++]=C<<6|g[B.charCodeAt(E+3)])}return g[43]=62,g[47]=63,function(A){var g=A.a,B=g.buffer;g.grow=function(A){A|=0;var Q=0|Wg(),o=Q+A|0;if(Q<o&&o<65536){var e=new ArrayBuffer(r(o,65536));new Int8Array(e).set(C),C=new Int8Array(e),E=new Int16Array(e),i=new Int32Array(e),n=new Uint8Array(e),new Uint16Array(e),a=new Uint32Array(e),new Float32Array(e),new Float64Array(e),B=e,g.buffer=B,I=n}return Q};var C=new Int8Array(B),E=new Int16Array(B),i=new Int32Array(B),n=new Uint8Array(B),a=(new Uint16Array(B),new Uint32Array(B)),r=(new Float32Array(B),new Float64Array(B),Math.imul),o=(Math.fround,Math.abs,Math.clz32),e=(Math.min,Math.max,Math.floor,Math.ceil,Math.trunc,Math.sqrt,A.abort),t=A.b,f=A.c,c=A.d,y=A.e,s=A.f,w=A.g,h=5279312,D=0,u=0,p=0;function l(A,I){var g,B,Q,E,a=0,r=0,o=0,e=0,t=0,f=0,c=0,y=0,s=0,w=0,D=0,u=0,l=0,F=0,G=0,k=0,_=0,H=0,Y=0,b=0,m=0,v=0,U=0,S=0,N=0,M=0,d=0,P=0,R=0,J=0,x=0,L=0,K=0,q=0,V=0,W=0,T=0,j=0,Z=0,O=0,z=0,$=0,AA=0,IA=0,gA=0,BA=0,QA=0,CA=0,EA=0,iA=0,nA=0,aA=0,rA=0,oA=0,eA=0,tA=0,fA=0,cA=0,yA=0,sA=0,wA=0,hA=0,DA=0;for(h=W=h-256|0;V=(K=Z<<3)+(W+128|0)|0,QA=n[4+(K=I+K|0)|0]|n[K+5|0]<<8|n[K+6|0]<<16|n[K+7|0]<<24,i[V>>2]=n[0|K]|n[K+1|0]<<8|n[K+2|0]<<16|n[K+3|0]<<24,i[V+4>>2]=QA,16!=(0|(Z=Z+1|0)););for(g=X(W,A,64),K=i[(I=g)>>2],Z=i[I+4>>2],a=K,K=(QA=i[I+32>>2])+(W=i[I+128>>2])|0,I=($=i[I+36>>2])+i[I+132>>2]|0,I=K>>>0<W>>>0?I+1|0:I,W=K,I=I+Z|0,W=I=(K=a+K|0)>>>0<W>>>0?I+1|0:I,x=ug((Z=K)^(n[0|(K=A- -64|0)]|n[K+1|0]<<8|n[K+2|0]<<16|n[K+3|0]<<24)^-1377402159,I^(n[K+4|0]|n[K+5|0]<<8|n[K+6|0]<<16|n[K+7|0]<<24)^1359893119,32),K=I=p,I=I+1779033703|0,a=QA^(V=x-205731576|0),QA=I=V>>>0<4089235720?I+1|0:I,b=ug(a,$^I,24),m=I=p,j=K,a=x,I=I+W|0,I=(I=(x=b+Z|0)>>>0<Z>>>0?I+1|0:I)+(t=B=i[g+140>>2])|0,a=ug(a^(o=Z=(K=i[g+136>>2])+x|0),(G=x>>>0>o>>>0?I+1|0:I)^j,16),I=QA+(d=p)|0,t=ug((l=Z=V+a|0)^b,(W=V>>>0>l>>>0?I+1|0:I)^m,63),f=p,V=i[g+12>>2],Z=(b=i[g+144>>2])+($=QA=i[g+40>>2])|0,I=(T=i[g+148>>2])+(j=i[g+44>>2])|0,I=Z>>>0<$>>>0?I+1|0:I,$=Z,I=I+V|0,I=(Z=Z+i[g+8>>2]|0)>>>0<$>>>0?I+1|0:I,x=ug(Z^(n[A+72|0]|n[A+73|0]<<8|n[A+74|0]<<16|n[A+75|0]<<24)^725511199,(n[A+76|0]|n[A+77|0]<<8|n[A+78|0]<<16|n[A+79|0]<<24)^I^-1694144372,32),j=ug(r=(V=x-2067093701|0)^QA,j^(m=(QA=p)-((x>>>0<2067093701)+1150833018|0)|0),24),c=i[g+156>>2],r=j,I=I+($=p)|0,I=(I=(j=j+Z|0)>>>0<Z>>>0?I+1|0:I)+c|0,eA=ug((u=Z=j+i[g+152>>2]|0)^x,(k=j>>>0>u>>>0?I+1|0:I)^QA,16),I=m+(H=p)|0,cA=Z=V+eA|0,x=ug(r^Z,(V=V>>>0>Z>>>0?I+1|0:I)^$,63),m=p,QA=i[g+20>>2],Z=(U=i[g+160>>2])+(j=i[g+48>>2])|0,I=(iA=i[g+164>>2])+(y=i[g+52>>2])|0,$=Z,I=(I=Z>>>0<j>>>0?I+1|0:I)+QA|0,rA=Z=Z+i[g+16>>2]|0,Z=Z>>>0<$>>>0?I+1|0:I,s=ug(rA^(n[A+80|0]|n[A+81|0]<<8|n[A+82|0]<<16|n[A+83|0]<<24)^-79577749,Z^(n[A+84|0]|n[A+85|0]<<8|n[A+86|0]<<16|n[A+87|0]<<24)^528734635,32),QA=I=p,I=I+1013904242|0,r=j^($=s-23791573|0),j=I=$>>>0<4271175723?I+1|0:I,I=ug(r,y^I,24),c=QA,Q=i[g+172>>2],r=I,e=s,s=I,rA=I+rA|0,I=(y=p)+Z|0,I=(I=s>>>0>rA>>>0?I+1|0:I)+(J=Q)|0,AA=ug(e^(F=Z=(QA=i[g+168>>2])+(s=rA)|0),(J=s>>>0>F>>>0?I+1|0:I)^c,16),I=j+(M=p)|0,y=ug(r^(_=Z=$+AA|0),(j=_>>>0<$>>>0?I+1|0:I)^y,63),c=p,s=i[g+28>>2],$=(Z=i[g+176>>2])+(D=rA=i[g+56>>2])|0,I=(yA=i[g+180>>2])+(w=i[g+60>>2])|0,I=(I=D>>>0>$>>>0?I+1|0:I)+s|0,I=(D=$)>>>0>(v=$=D+i[g+24>>2]|0)>>>0?I+1|0:I,S=ug(v^(n[A+88|0]|n[A+89|0]<<8|n[A+90|0]<<16|n[A+91|0]<<24)^327033209,I^(n[A+92|0]|n[A+93|0]<<8|n[A+94|0]<<16|n[A+95|0]<<24)^1541459225,32),s=ug(e=(r=(s=S)+1595750129|0)^rA,w^(rA=($=p)-((s>>>0<2699217167)+1521486533|0)|0),24),w=rA,Y=$,rA=i[g+188>>2],e=s,P=r,I=(D=p)+I|0,I=(I=(v=s+v|0)>>>0<s>>>0?I+1|0:I)+(N=rA)|0,O=s=($=i[g+184>>2])+v|0,r=ug(s^S,(r=Y)^(Y=s>>>0<v>>>0?I+1|0:I),16),I=(I=w)+(w=p)|0,v=s=P+r|0,S=D,D=I=s>>>0<r>>>0?I+1|0:I,e=ug(e^s,S^I,63),s=p,S=m,P=x,L=_,I=m+G|0,m=o=o+x|0,I=(I=o>>>0<x>>>0?I+1|0:I)+(N=q=i[g+196>>2])|0,_=ug((o=x=(IA=i[g+192>>2])+o|0)^r,(x=m>>>0>o>>>0?I+1|0:I)^w,32),I=(I=j)+(j=p)|0,G=I=(m=L+(G=_)|0)>>>0<G>>>0?I+1|0:I,I=ug(P^m,I^S,24),fA=i[g+204>>2],P=I,r=_,w=o,o=I,_=w+I|0,I=(w=p)+x|0,I=(I=o>>>0>_>>>0?I+1|0:I)+(N=fA)|0,CA=x=(S=i[g+200>>2])+(o=_)|0,tA=ug(r^x,(o=o>>>0>x>>>0?I+1|0:I)^j,16),I=G+(_=p)|0,N=ug(P^(r=j=m+tA|0),(G=w)^(w=m>>>0>r>>>0?I+1|0:I),63),G=p,j=c,L=y,I=c+k|0,I=(I=(m=y+u|0)>>>0<y>>>0?I+1|0:I)+(P=oA=i[g+212>>2])|0,u=ug((R=a)^(a=m=(x=i[g+208>>2])+(y=m)|0),(y=y>>>0>a>>>0?I+1|0:I)^d,32),I=D+(m=p)|0,j=ug(L^(c=v+u|0),(I=c>>>0<v>>>0?I+1|0:I)^j,24),d=I,k=m,z=i[g+220>>2],L=j,R=c,I=(c=p)+y|0,I=(I=(D=a+j|0)>>>0<j>>>0?I+1|0:I)+(P=z)|0,k=ug((D=j=(m=i[g+216>>2])+(y=D)|0)^u,(v=y>>>0>D>>>0?I+1|0:I)^k,16),I=(a=p)+d|0,aA=j=R+(y=k)|0,P=ug(L^j,(y=y>>>0>j>>>0?I+1|0:I)^c,63),c=p,d=s,L=e,I=s+J|0,I=(I=(e=e+F|0)>>>0<F>>>0?I+1|0:I)+(u=E=i[g+228>>2])|0,e=ug((J=s=(j=i[g+224>>2])+e|0)^eA,(s=s>>>0<e>>>0?I+1|0:I)^H,32),I=(H=p)+W|0,l=F=l+e|0,W=ug(L^F,(I=F>>>0<e>>>0?I+1|0:I)^d,24),F=I,L=i[g+236>>2],u=W,I=(d=p)+s|0,I=(I=(J=J+W|0)>>>0<W>>>0?I+1|0:I)+L|0,nA=ug((J=W=(BA=i[g+232>>2])+(s=J)|0)^e,(W=H)^(H=s>>>0>J>>>0?I+1|0:I),16),I=(I=F)+(F=p)|0,s=ug(u^(e=W=(s=nA)+l|0),(l=s>>>0>e>>>0?I+1|0:I)^d,63),d=p,u=f,gA=t,EA=cA,I=f+Y|0,I=(I=(cA=t+O|0)>>>0<t>>>0?I+1|0:I)+(R=eA=i[g+244>>2])|0,f=I=(t=(W=i[g+240>>2])+(f=cA)|0)>>>0<f>>>0?I+1|0:I,AA=ug(t^AA,I^M,32),I=(I=V)+(V=p)|0,O=M=EA+(Y=AA)|0,u=ug(gA^M,(I=Y>>>0>M>>>0?I+1|0:I)^u,24),gA=EA=p,M=I,Y=V,sA=u,I=f+EA|0,I=(I=(u=t+u|0)>>>0<t>>>0?I+1|0:I)+(cA=i[g+252>>2])|0,u=t=(V=i[g+248>>2])+(f=u)|0,R=ug(t^AA,(R=Y)^(Y=t>>>0<f>>>0?I+1|0:I),16),I=(I=M)+(M=p)|0,AA=ug(sA^(EA=t=(f=R)+O|0),(t=t>>>0<f>>>0?I+1|0:I)^gA,63),gA=I=p,f=I,sA=k,I=o+eA|0,I=(I=(k=W)>>>0>(O=k+CA|0)>>>0?I+1|0:I)+f|0,O=ug(sA^(f=k=(o=O)+AA|0),(k=o>>>0>f>>>0?I+1|0:I)^a,32),I=l+(o=p)|0,e=I=(a=e+O|0)>>>0<e>>>0?I+1|0:I,CA=AA=ug(AA^a,gA^I,24),gA=I=p,l=I,wA=AA,I=k+oA|0,I=(I=(AA=f+x|0)>>>0<f>>>0?I+1|0:I)+l|0,CA=f=CA+(k=AA)|0,sA=ug(f^O,(l=o)^(o=f>>>0<k>>>0?I+1|0:I),16),I=e+(l=p)|0,e=I=(f=a+sA|0)>>>0<a>>>0?I+1|0:I,AA=ug(wA^(a=f),I^gA,63),k=p,O=N,I=iA+(f=G)|0,I=(I=(N=U+N|0)>>>0<U>>>0?I+1|0:I)+v|0,U=I=(G=D+N|0)>>>0<D>>>0?I+1|0:I,v=ug(G^nA,I^F,32),I=(I=t)+(t=p)|0,I=(F=(D=v)+EA|0)>>>0<D>>>0?I+1|0:I,D=f,f=I,N=ug(O^F,D^I,24),iA=I=p,D=I,O=v,I=U+q|0,I=(I=(v=G+IA|0)>>>0<G>>>0?I+1|0:I)+D|0,I=(G=(U=v)+N|0)>>>0<U>>>0?I+1|0:I,U=G,D=I,nA=ug(O^G,I^t,16),I=f+(v=p)|0,EA=t=F+nA|0,N=ug(t^N,(f=t>>>0<F>>>0?I+1|0:I)^iA,63),t=p,G=c,I=c+fA|0,I=(I=(F=S+P|0)>>>0<S>>>0?I+1|0:I)+H|0,M=ug((S=c=F+J|0)^R,(c=c>>>0<J>>>0?I+1|0:I)^M,32),I=w+(H=p)|0,I=r>>>0>(F=r+M|0)>>>0?I+1|0:I,r=G,G=I,r=w=ug(F^P,r^I,24),P=I=p,J=I,O=M,I=c+cA|0,I=(I=(w=(M=V)+S|0)>>>0<M>>>0?I+1|0:I)+J|0,R=c=r+w|0,gA=ug(O^c,(M=H)^(H=c>>>0<w>>>0?I+1|0:I),16),I=G+(J=p)|0,P=ug((S=c=F+gA|0)^r,(c=c>>>0<F>>>0?I+1|0:I)^P,63),G=p,r=s,I=(F=d)+L|0,I=(I=(M=s+BA|0)>>>0<s>>>0?I+1|0:I)+Y|0,w=ug((M=s=u+M|0)^tA,(s=s>>>0<u>>>0?I+1|0:I)^_,32),I=(I=y)+(y=p)|0,_=ug(r^(Y=d=w+aA|0),(I=d>>>0<w>>>0?I+1|0:I)^F,24),u=d=p,F=I,O=Y,Y=w,w=(I=M)+(M=Z)|0,I=s+yA|0,I=(I=w>>>0<M>>>0?I+1|0:I)+d|0,M=s=w+(r=_)|0,w=I=s>>>0<w>>>0?I+1|0:I,Y=ug(Y^s,I^y,16),I=(d=p)+F|0,O=ug(_^(r=y=O+(s=Y)|0),(s=r>>>0<s>>>0?I+1|0:I)^u,63),y=p,F=t,_=S,u=Y,I=o+B|0,I=(I=(Y=K)>>>0>(S=Y+CA|0)>>>0?I+1|0:I)+t|0,S=ug(u^(t=Y=S+N|0),(o=d)^(d=t>>>0<S>>>0?I+1|0:I),32),I=(I=c)+(c=p)|0,I=(o=S)>>>0>(Y=_+o|0)>>>0?I+1|0:I,u=_=ug((o=Y)^N,I^F,24),N=F=p,Y=I,CA=S,I=d+E|0,I=(I=(S=t+j|0)>>>0<t>>>0?I+1|0:I)+F|0,F=t=(d=S)+_|0,tA=ug(CA^t,(S=t>>>0<d>>>0?I+1|0:I)^c,16),I=(I=Y)+(Y=p)|0,o=t=(c=tA)+o|0,iA=ug(t^u,(_=t>>>0<c>>>0?I+1|0:I)^N,63),c=p,N=r,I=D+(t=G)|0,I=(I=(d=U+P|0)>>>0<U>>>0?I+1|0:I)+(u=aA=i[g+132>>2])|0,d=I=(G=(r=i[g+128>>2])+d|0)>>>0<d>>>0?I+1|0:I,D=ug(G^sA,I^l,32),I=(I=s)+(s=p)|0,l=U=N+D|0,N=u=ug(U^P,(I=U>>>0<D>>>0?I+1|0:I)^t,24),P=t=p,U=I,CA=D,I=d+T|0,d=D=b+G|0,I=(I=D>>>0<G>>>0?I+1|0:I)+t|0,t=ug(CA^(D=G=D+u|0),(t=s)^(s=D>>>0<d>>>0?I+1|0:I),16),I=(I=U)+(U=p)|0,l=G=t+l|0,fA=ug(G^N,(u=G>>>0<t>>>0?I+1|0:I)^P,63),G=p,d=y,I=H+z|0,I=(I=(P=m+R|0)>>>0<m>>>0?I+1|0:I)+y|0,I=(H=(N=P)+O|0)>>>0<N>>>0?I+1|0:I,N=H,y=I,P=ug(H^nA,I^v,32),I=e+(H=p)|0,I=a>>>0>(v=a+P|0)>>>0?I+1|0:I,O=e=ug((a=v)^O,I^d,24),CA=d=p,v=I,R=a,I=y+rA|0,I=(a=$)>>>0>(e=a+N|0)>>>0?I+1|0:I,a=e,I=I+d|0,e=H,H=I=a>>>0>(y=O+a|0)>>>0?I+1|0:I,nA=ug((a=y)^P,e^I,16),I=(y=p)+v|0,O=ug((v=d=R+(e=nA)|0)^O,(I=e>>>0>v>>>0?I+1|0:I)^CA,63),d=p,N=I,P=t,R=AA,I=Q+(e=k)|0,I=(I=(t=QA)>>>0>(AA=t+AA|0)>>>0?I+1|0:I)+w|0,k=t=M+AA|0,w=ug(t^gA,(w=J)^(J=t>>>0<M>>>0?I+1|0:I),32),I=(t=p)+f|0,CA=M=w+EA|0,e=ug(R^M,(I=M>>>0<w>>>0?I+1|0:I)^e,24),gA=EA=p,f=I,M=t,EA=e,R=w,I=J+gA|0,I=(I=(w=e+k|0)>>>0<k>>>0?I+1|0:I)+(AA=i[g+156>>2])|0,J=k=(t=i[g+152>>2])+w|0,e=M,M=I=k>>>0<w>>>0?I+1|0:I,R=ug(R^k,e^I,16),I=(I=f)+(f=p)|0,e=I=(w=R)>>>0>(k=w+CA|0)>>>0?I+1|0:I,CA=ug(EA^(w=k),I^gA,63),EA=I=p,k=I,gA=v,I=S+z|0,I=(I=(v=F+m|0)>>>0<F>>>0?I+1|0:I)+k|0,k=F=v+CA|0,P=ug(F^P,(S=U)^(U=F>>>0<v>>>0?I+1|0:I),32),I=(F=p)+N|0,S=I=(v=gA+(S=P)|0)>>>0<S>>>0?I+1|0:I,EA=CA=ug(CA^v,EA^I,24),gA=I=p,N=I,sA=P,I=U+q|0,I=(I=(P=k+IA|0)>>>0<k>>>0?I+1|0:I)+N|0,I=(k=(U=P)+CA|0)>>>0<U>>>0?I+1|0:I,U=k,N=F,F=I,CA=ug(sA^k,N^I,16),I=S+(N=p)|0,I=(k=v+CA|0)>>>0<v>>>0?I+1|0:I,v=k,S=I,IA=ug(k^EA,I^gA,63),k=p,P=c,gA=iA,I=c+E|0,I=s+(j>>>0>(iA=j+iA|0)>>>0?I+1|0:I)|0,q=c=D+iA|0,iA=ug(c^nA,(s=y)^(y=c>>>0<D>>>0?I+1|0:I),32),I=e+(c=p)|0,D=I=(s=w+iA|0)>>>0<w>>>0?I+1|0:I,P=e=ug(gA^s,I^P,24),nA=I=p,w=I,I=y+aA|0,I=(I=(e=r+q|0)>>>0<r>>>0?I+1|0:I)+w|0,q=y=P+(r=e)|0,iA=ug(y^iA,(w=y>>>0<r>>>0?I+1|0:I)^c,16),I=D+(r=p)|0,aA=y=s+iA|0,e=ug(y^P,(s=y>>>0<s>>>0?I+1|0:I)^nA,63),y=p,I=Q+(c=G)|0,I=H+((D=QA)>>>0>(P=D+fA|0)>>>0?I+1|0:I)|0,D=f,f=I=a>>>0>(G=a+P|0)>>>0?I+1|0:I,P=ug((a=G)^R,D^I,32),I=_+(G=p)|0,I=o>>>0>(H=o+P|0)>>>0?I+1|0:I,o=c,c=I,o=ug(H^fA,o^I,24),fA=I=p,D=I,gA=o,I=f+T|0,I=(I=(o=b)>>>0>(_=o+a|0)>>>0?I+1|0:I)+D|0,nA=f=gA+(o=_)|0,R=ug(f^P,(D=f>>>0<o>>>0?I+1|0:I)^G,16),I=c+(o=p)|0,P=f=H+R|0,_=ug(gA^f,(G=f>>>0<H>>>0?I+1|0:I)^fA,63),f=p,I=cA+(c=d)|0,I=M+((a=(H=V)+O|0)>>>0<H>>>0?I+1|0:I)|0,H=I=(d=J+a|0)>>>0<J>>>0?I+1|0:I,a=ug(d^tA,I^Y,32),I=u+(J=p)|0,Y=c,c=I=l>>>0>(M=l+a|0)>>>0?I+1|0:I,l=ug(M^O,Y^I,24),O=I=p,Y=I,gA=a,I=H+L|0,I=(I=(a=d+BA|0)>>>0<d>>>0?I+1|0:I)+Y|0,a=ug(gA^(Y=d=a+(u=l)|0),(u=J)^(J=a>>>0>Y>>>0?I+1|0:I),16),I=c+(H=p)|0,l=ug(l^(u=d=M+a|0),(d=u>>>0<M>>>0?I+1|0:I)^O,63),c=p,M=y,O=e,gA=a,I=F+oA|0,F=a=U+x|0,I=(I=a>>>0<U>>>0?I+1|0:I)+y|0,e=ug(gA^(a=U=a+e|0),(y=F>>>0>a>>>0?I+1|0:I)^H,32),I=(I=G)+(G=p)|0,U=I=(H=e+P|0)>>>0<e>>>0?I+1|0:I,P=M=ug(O^H,I^M,24),O=I=p,F=I,I=y+eA|0,I=(I=(a=(M=W)+a|0)>>>0<M>>>0?I+1|0:I)+F|0,fA=y=P+a|0,tA=ug(y^e,(F=y>>>0<a>>>0?I+1|0:I)^G,16),I=U+(M=p)|0,P=ug((EA=y=H+tA|0)^P,(y=y>>>0<H>>>0?I+1|0:I)^O,63),G=p,H=f,e=_,I=w+AA|0,I=(I=(_=t+q|0)>>>0<t>>>0?I+1|0:I)+f|0,f=I=(w=_)>>>0>(U=e+w|0)>>>0?I+1|0:I,_=ug((w=U)^CA,I^N,32),I=(I=d)+(d=p)|0,I=(a=_)>>>0>(U=a+u|0)>>>0?I+1|0:I,u=e=ug(e^(a=U),I^H,24),U=I,N=a,a=_,_=(I=w)+(w=Z)|0,I=f+yA|0,I=(I=w>>>0>_>>>0?I+1|0:I)+(H=p)|0,I=(f=(w=_)+e|0)>>>0<w>>>0?I+1|0:I,w=f,_=I,a=ug(a^f,I^d,16),I=(e=p)+U|0,d=ug((CA=f=N+a|0)^u,(f=f>>>0<a>>>0?I+1|0:I)^H,63),H=p,U=c,N=l,I=D+rA|0,I=(I=(u=(l=$)+nA|0)>>>0<l>>>0?I+1|0:I)+c|0,l=D=N+u|0,c=I=D>>>0<u>>>0?I+1|0:I,u=ug(D^iA,I^r,32),I=S+(D=p)|0,S=r=v+u|0,N=r=ug(N^r,(I=r>>>0<v>>>0?I+1|0:I)^U,24),q=U=p,v=I,O=S,I=c+B|0,I=(I=(r=(S=K)+l|0)>>>0<S>>>0?I+1|0:I)+U|0,I=(c=N+r|0)>>>0<r>>>0?I+1|0:I,S=c,r=D,D=I,nA=ug(c^u,r^I,16),I=(I=v)+(v=p)|0,N=ug((c=O+(U=nA)|0)^N,(I=c>>>0<U>>>0?I+1|0:I)^q,63),U=p,l=c,u=I,I=J+(r=k)|0,k=c=Y+IA|0,I=(I=c>>>0<Y>>>0?I+1|0:I)+(q=i[g+204>>2])|0,k=I=(c=(O=i[g+200>>2])+c|0)>>>0<k>>>0?I+1|0:I,Y=ug(c^R,I^o,32),I=(I=s)+(s=p)|0,I=(o=Y)>>>0>(J=o+aA|0)>>>0?I+1|0:I,r=ug((o=J)^IA,I^r,24),R=aA=p,J=I,gA=o,aA=Y,I=k+R|0,I=(I=(Y=c+r|0)>>>0<c>>>0?I+1|0:I)+(IA=i[g+164>>2])|0,Y=c=(iA=i[g+160>>2])+(k=Y)|0,aA=ug(aA^c,(o=c>>>0<k>>>0?I+1|0:I)^s,16),I=(I=J)+(J=p)|0,r=ug(r^(gA=c=gA+(s=aA)|0),(c=c>>>0<s>>>0?I+1|0:I)^R,63),R=I=p,s=I,sA=a,I=F+rA|0,I=(I=(a=(k=$)+fA|0)>>>0<k>>>0?I+1|0:I)+s|0,e=ug(sA^(s=k=a+r|0),(k=a>>>0>s>>>0?I+1|0:I)^e,32),I=(F=p)+u|0,l=a=l+e|0,u=ug(r^a,(I=a>>>0<e>>>0?I+1|0:I)^R,24),R=r=p,a=I,fA=l,sA=e,I=k+q|0,I=(I=(e=s+O|0)>>>0<s>>>0?I+1|0:I)+r|0,l=s=e+u|0,sA=ug(sA^s,(r=F)^(F=s>>>0<e>>>0?I+1|0:I),16),I=(r=p)+a|0,fA=ug((wA=s=fA+(k=sA)|0)^u,(s=s>>>0<k>>>0?I+1|0:I)^R,63),k=p,I=AA+(a=G)|0,I=(I=(e=t+P|0)>>>0<t>>>0?I+1|0:I)+_|0,e=ug((_=t=e+w|0)^nA,(t=t>>>0<w>>>0?I+1|0:I)^v,32),I=(I=c)+(c=p)|0,w=I=e>>>0>(G=e+gA|0)>>>0?I+1|0:I,u=a=ug(G^P,I^a,24),P=I=p,v=I,a=(I=_)+(_=K)|0,I=t+B|0,I=(I=a>>>0<_>>>0?I+1|0:I)+v|0,AA=t=u+a|0,nA=ug(t^e,(v=t>>>0<a>>>0?I+1|0:I)^c,16),I=w+(_=p)|0,R=t=G+nA|0,a=ug(t^u,(c=t>>>0<G>>>0?I+1|0:I)^P,63),t=p,e=d,I=(G=H)+L|0,I=(I=(w=d+BA|0)>>>0<d>>>0?I+1|0:I)+D|0,H=I=(d=w+S|0)>>>0<S>>>0?I+1|0:I,D=ug(d^aA,I^J,32),I=(I=y)+(y=p)|0,I=(w=D)>>>0>(J=w+EA|0)>>>0?I+1|0:I,S=ug(e^(w=J),I^G,24),u=G=p,J=I,P=w,L=D,I=H+E|0,H=D=d+j|0,I=(I=D>>>0<d>>>0?I+1|0:I)+G|0,aA=ug(L^(D=d=D+(e=S)|0),(w=H>>>0>D>>>0?I+1|0:I)^y,16),I=(I=J)+(J=p)|0,u=ug(S^(e=y=P+(G=aA)|0),(G=e>>>0<G>>>0?I+1|0:I)^u,63),y=p,d=U,I=U+z|0,I=(I=(S=m+N|0)>>>0<m>>>0?I+1|0:I)+o|0,I=(H=Y+S|0)>>>0<Y>>>0?I+1|0:I,Y=H,H=I,S=ug(Y^tA,I^M,32),I=(I=f)+(f=p)|0,o=d,d=I=(U=(M=S)+CA|0)>>>0<M>>>0?I+1|0:I,N=o=ug(U^N,o^I,24),P=I=p,M=I,L=S,S=(I=Y)+(Y=W)|0,I=H+eA|0,I=(I=Y>>>0>S>>>0?I+1|0:I)+M|0,M=H=(Y=S)+o|0,o=ug(L^H,(Y=H>>>0<Y>>>0?I+1|0:I)^f,16),I=d+(H=p)|0,I=(f=U+o|0)>>>0<U>>>0?I+1|0:I,U=f,S=I,N=ug(f^N,I^P,63),f=p,d=t,P=a,L=o,I=F+T|0,I=(I=(a=(o=b)+l|0)>>>0<o>>>0?I+1|0:I)+t|0,t=I=a>>>0>(F=P+a|0)>>>0?I+1|0:I,o=ug(L^F,I^H,32),I=(I=G)+(G=p)|0,I=(a=o)>>>0>(H=a+e|0)>>>0?I+1|0:I,l=e=ug(P^(a=H),I^d,24),H=I,P=o,o=(I=F)+(F=Z)|0,I=t+yA|0,I=(I=o>>>0<F>>>0?I+1|0:I)+(d=p)|0,F=t=o+e|0,o=I=t>>>0<o>>>0?I+1|0:I,t=(G=tA=ug(P^t,I^G,16))+a|0,I=(a=p)+H|0,e=t,L=ug(H=t^l,(l=t>>>0<G>>>0?I+1|0:I)^d,63),d=p,I=v+Q|0,I=(I=(G=QA)>>>0>(H=G+AA|0)>>>0?I+1|0:I)+(t=y)|0,v=G=H+u|0,r=ug(G^sA,(y=G>>>0<H>>>0?I+1|0:I)^r,32),I=S+(G=p)|0,I=(H=U+r|0)>>>0<U>>>0?I+1|0:I,U=H,S=ug(H^u,I^t,24),P=t=p,H=I,AA=U,I=y+oA|0,I=(U=x)>>>0>(v=U+v|0)>>>0?I+1|0:I,U=v,I=I+t|0,v=y=v+(u=S)|0,y=ug(y^r,(S=y>>>0<U>>>0?I+1|0:I)^G,16),I=(U=p)+H|0,EA=t=AA+y|0,BA=ug(t^u,(G=t>>>0<y>>>0?I+1|0:I)^P,63),H=p,P=N,I=w+IA|0,I=(I=(r=D+iA|0)>>>0<D>>>0?I+1|0:I)+(t=f)|0,u=ug((f=D=r+N|0)^nA,(D=r>>>0>f>>>0?I+1|0:I)^_,32),I=(I=s)+(s=p)|0,N=w=(_=u)+wA|0,r=ug(P^w,(I=w>>>0<_>>>0?I+1|0:I)^t,24),w=t=p,_=I,P=r,I=D+t|0,I=(I=(r=f+r|0)>>>0<f>>>0?I+1|0:I)+(AA=i[g+132>>2])|0,D=f=(t=i[g+128>>2])+r|0,r=I=f>>>0<r>>>0?I+1|0:I,nA=ug(f^u,I^s,16),I=(I=_)+(_=p)|0,CA=ug(P^(f=(s=nA)+N|0),(I=f>>>0<s>>>0?I+1|0:I)^w,63),s=p,u=f,N=I,P=y,I=cA+(w=k)|0,I=(I=(f=(y=V)+fA|0)>>>0<y>>>0?I+1|0:I)+Y|0,M=ug((f=y=f+M|0)^aA,(k=f>>>0<M>>>0?I+1|0:I)^J,32),I=(y=p)+c|0,I=(Y=M)>>>0>(J=Y+R|0)>>>0?I+1|0:I,w=ug((Y=J)^fA,I^w,24),gA=R=p,c=I,J=y,aA=M,I=k+R|0,I=(I=(M=f+w|0)>>>0<f>>>0?I+1|0:I)+(fA=i[g+196>>2])|0,M=f=(y=i[g+192>>2])+(k=M)|0,aA=ug(aA^f,(R=J)^(J=f>>>0<k>>>0?I+1|0:I),16),I=(I=c)+(c=p)|0,w=ug(w^(R=f=(k=aA)+Y|0),(f=f>>>0<k>>>0?I+1|0:I)^gA,63),gA=I=p,k=I,I=o+q|0,I=(I=(Y=F+O|0)>>>0<F>>>0?I+1|0:I)+k|0,I=(F=Y+w|0)>>>0<Y>>>0?I+1|0:I,Y=F,k=I,o=ug(F^P,I^U,32),I=(U=p)+N|0,u=F=u+o|0,N=ug(w^F,(I=F>>>0<o>>>0?I+1|0:I)^gA,24),q=F=p,w=I,P=o,I=k+AA|0,I=(I=(o=t+Y|0)>>>0<t>>>0?I+1|0:I)+F|0,O=k=o+N|0,gA=ug(P^k,(F=k>>>0<o>>>0?I+1|0:I)^U,16),I=(I=w)+(w=p)|0,Y=k=(U=gA)+u|0,q=ug(k^N,(o=k>>>0<U>>>0?I+1|0:I)^q,63),U=p,I=Q+(k=d)|0,I=S+((u=QA)>>>0>(N=u+L|0)>>>0?I+1|0:I)|0,v=I=(d=v+N|0)>>>0<v>>>0?I+1|0:I,u=ug(d^nA,I^_,32),I=(I=f)+(f=p)|0,I=(_=u)>>>0>(S=_+R|0)>>>0?I+1|0:I,_=k,k=I,N=ug(S^L,_^I,24),L=I=p,_=I,P=u,I=v+rA|0,I=(I=(u=d+$|0)>>>0<d>>>0?I+1|0:I)+_|0,_=I=(d=(v=u)+N|0)>>>0<v>>>0?I+1|0:I,nA=ug(P^(v=d),I^f,16),I=k+(u=p)|0,R=f=S+nA|0,N=ug(f^N,(d=f>>>0<S>>>0?I+1|0:I)^L,63),f=p,k=H,I=H+T|0,I=r+(b>>>0>(P=b+BA|0)>>>0?I+1|0:I)|0,r=c,c=I=D>>>0>(H=D+P|0)>>>0?I+1|0:I,P=ug(H^aA,r^I,32),I=l+(D=p)|0,r=k,k=I=e>>>0>(S=e+P|0)>>>0?I+1|0:I,l=e=ug(S^BA,r^I,24),r=I=p,I=c+IA|0,I=(I=(e=H+iA|0)>>>0<H>>>0?I+1|0:I)+r|0,IA=c=l+e|0,iA=ug(c^P,(H=c>>>0<e>>>0?I+1|0:I)^D,16),I=k+(D=p)|0,BA=c=S+iA|0,e=ug(c^l,(k=c>>>0<S>>>0?I+1|0:I)^r,63),c=p,S=s,I=s+oA|0,I=J+((r=x)>>>0>(l=r+CA|0)>>>0?I+1|0:I)|0,a=ug((r=s=M+l|0)^tA,(s=r>>>0<M>>>0?I+1|0:I)^a,32),I=(I=G)+(G=p)|0,P=S=ug((l=J=a+EA|0)^CA,(I=a>>>0>l>>>0?I+1|0:I)^S,24),L=J=p,M=I,I=s+cA|0,I=(I=(r=(S=V)+r|0)>>>0<S>>>0?I+1|0:I)+J|0,J=s=P+r|0,a=ug(s^a,(S=s>>>0<r>>>0?I+1|0:I)^G,16),I=(I=M)+(M=p)|0,CA=s=a+l|0,P=ug(s^P,(G=s>>>0<a>>>0?I+1|0:I)^L,63),s=p,L=N,aA=a,I=F+eA|0,I=(I=(a=W)>>>0>(l=a+O|0)>>>0?I+1|0:I)+(r=f)|0,f=I=(a=l)>>>0>(F=a+N|0)>>>0?I+1|0:I,l=ug(aA^(a=F),I^M,32),I=(I=k)+(k=p)|0,N=F=(M=l)+BA|0,L=r=ug(L^F,(I=F>>>0<M>>>0?I+1|0:I)^r,24),BA=F=p,M=I,I=f+B|0,I=(I=(a=(r=K)+a|0)>>>0<r>>>0?I+1|0:I)+F|0,tA=f=L+a|0,aA=ug(f^l,(r=k)^(k=f>>>0<a>>>0?I+1|0:I),16),I=(F=p)+M|0,M=f=(r=aA)+N|0,L=ug(f^L,(r=f>>>0<r>>>0?I+1|0:I)^BA,63),f=p,N=e,I=_+z|0,_=e=m+v|0,I=(I=e>>>0<v>>>0?I+1|0:I)+(a=c)|0,l=ug((e=v=N+e|0)^gA,(c=e>>>0<_>>>0?I+1|0:I)^w,32),I=(I=G)+(G=p)|0,v=I=(w=(v=l)+CA|0)>>>0<v>>>0?I+1|0:I,N=a=ug(N^w,I^a,24),BA=I=p,_=I,I=c+E|0,I=(I=(a=j)>>>0>(e=a+e|0)>>>0?I+1|0:I)+_|0,_=c=N+(a=e)|0,G=ug(c^l,(a=c>>>0<a>>>0?I+1|0:I)^G,16),I=v+(e=p)|0,I=(c=w+G|0)>>>0<w>>>0?I+1|0:I,w=c,v=I,BA=ug(c^N,I^BA,63),c=p,l=s,O=P,I=H+yA|0,I=(I=(N=Z)>>>0>(P=N+IA|0)>>>0?I+1|0:I)+s|0,I=(H=O+(N=P)|0)>>>0<N>>>0?I+1|0:I,N=H,s=I,P=ug(H^nA,I^u,32),I=o+(H=p)|0,o=I=(u=Y+P|0)>>>0<Y>>>0?I+1|0:I,u=ug(O^(Y=u),I^l,24),O=I=p,l=I,I=s+fA|0,I=(I=(N=y+N|0)>>>0<y>>>0?I+1|0:I)+l|0,l=s=(IA=u)+(u=N)|0,CA=ug(s^P,(N=H)^(H=s>>>0<u>>>0?I+1|0:I),16),I=o+(u=p)|0,I=(s=Y+CA|0)>>>0<Y>>>0?I+1|0:I,Y=s,IA=ug(s^IA,I^O,63),s=p,N=I,gA=q,I=S+(o=U)|0,I=(I=(q=J+q|0)>>>0<J>>>0?I+1|0:I)+(O=nA=i[g+156>>2])|0,J=I=(U=(P=i[g+152>>2])+(J=q)|0)>>>0<J>>>0?I+1|0:I,S=ug(U^iA,I^D,32),I=(I=d)+(d=p)|0,q=D=S+R|0,O=o=ug(gA^D,(I=D>>>0<S>>>0?I+1|0:I)^o,24),R=iA=p,D=I,gA=EA=i[g+236>>2],EA=q,q=S,I=J+R|0,I=(I=(o=o+U|0)>>>0<U>>>0?I+1|0:I)+gA|0,I=(U=(S=i[g+232>>2])+o|0)>>>0<o>>>0?I+1|0:I,o=d,d=I,iA=ug(q^U,o^I,16),I=(J=p)+D|0,O=ug((D=o=EA+(q=iA)|0)^O,(o=o>>>0<q>>>0?I+1|0:I)^R,63),R=I=p,q=I,EA=G,I=k+T|0,I=(I=(G=b+tA|0)>>>0<b>>>0?I+1|0:I)+q|0,e=ug(EA^(q=b=G+O|0),(b=b>>>0<G>>>0?I+1|0:I)^e,32),I=(G=p)+N|0,N=k=Y+e|0,T=ug(O^k,R^(I=k>>>0<e>>>0?I+1|0:I),24),tA=k=p,Y=I,O=N,R=e,I=b+E|0,I=(I=(e=j)>>>0>(N=e+q|0)>>>0?I+1|0:I)+k|0,R=ug(R^(k=b=(e=N)+T|0),(e=e>>>0>k>>>0?I+1|0:I)^G,16),I=(I=Y)+(Y=p)|0,N=b=O+(G=R)|0,O=ug(b^T,(q=b>>>0<G>>>0?I+1|0:I)^tA,63),G=p,b=f,EA=L,I=f+yA|0,I=a+(Z>>>0>(L=Z+L|0)>>>0?I+1|0:I)|0,u=ug((T=f=_+L|0)^CA,(f=f>>>0<_>>>0?I+1|0:I)^u,32),I=o+(_=p)|0,I=(a=D+u|0)>>>0<D>>>0?I+1|0:I,D=a,o=b,b=I,L=a=ug(EA^a,o^I,24),CA=I=p,o=I,EA=a,tA=u,I=f+oA|0,I=(I=(a=x)>>>0>(u=a+T|0)>>>0?I+1|0:I)+o|0,L=f=L+(a=u)|0,tA=ug(tA^f,(o=f>>>0<a>>>0?I+1|0:I)^_,16),I=b+(_=p)|0,I=(f=D+tA|0)>>>0<D>>>0?I+1|0:I,D=f,a=I,u=ug(EA^f,I^CA,63),f=p,b=c,I=c+AA|0,I=(I=(T=t+BA|0)>>>0<t>>>0?I+1|0:I)+H|0,I=(t=l+T|0)>>>0<l>>>0?I+1|0:I,l=t,t=I,T=ug(l^iA,I^J,32),I=r+(c=p)|0,r=b,b=I=(H=M+T|0)>>>0<M>>>0?I+1|0:I,r=M=ug(H^BA,r^I,24),BA=I=p,J=I,I=t+z|0,I=(I=(M=m+l|0)>>>0<m>>>0?I+1|0:I)+J|0,l=m=r+(t=M)|0,T=ug(m^T,(M=c)^(c=t>>>0>m>>>0?I+1|0:I),16),I=b+(J=p)|0,z=m=H+T|0,M=ug(m^r,(t=m>>>0<H>>>0?I+1|0:I)^BA,63),b=p,m=s,I=s+fA|0,I=(I=(H=y+IA|0)>>>0<y>>>0?I+1|0:I)+d|0,I=(y=H+U|0)>>>0<U>>>0?I+1|0:I,U=y,y=I,F=ug(U^aA,I^F,32),I=v+(s=p)|0,r=m,m=I=w>>>0>(d=w+F|0)>>>0?I+1|0:I,v=w=ug(d^IA,r^I,24),r=I=p,I=y+nA|0,I=(I=(U=U+P|0)>>>0<P>>>0?I+1|0:I)+r|0,H=y=U+w|0,F=ug(y^F,(w=s)^(s=y>>>0<U>>>0?I+1|0:I),16),I=m+(U=p)|0,r=ug((w=y=d+F|0)^v,(y=y>>>0<d>>>0?I+1|0:I)^r,63),m=p,d=f,P=F,I=f+e|0,I=(F=k+u|0)>>>0<k>>>0?I+1|0:I,k=F,I=I+(v=i[g+164>>2])|0,v=ug(P^(F=f=F+i[g+160>>2]|0),(f=f>>>0<k>>>0?I+1|0:I)^U,32),I=(I=t)+(t=p)|0,e=d,d=I=(k=(U=v)+z|0)>>>0<U>>>0?I+1|0:I,e=ug(k^u,e^I,24),P=I=p,U=I,I=f+gA|0,I=(I=(F=F+S|0)>>>0<S>>>0?I+1|0:I)+U|0,BA=ug((z=f=F+e|0)^v,(f=f>>>0<F>>>0?I+1|0:I)^t,16),I=d+(U=p)|0,d=t=k+BA|0,u=ug(t^e,(k=t>>>0<k>>>0?I+1|0:I)^P,63),t=p,e=M,S=w,I=o+rA|0,I=(I=(w=(M=$)+L|0)>>>0<M>>>0?I+1|0:I)+(F=b)|0,Y=ug((v=M=e+w|0)^R,(b=w>>>0>v>>>0?I+1|0:I)^Y,32),I=(I=y)+(y=p)|0,o=F,F=I=(w=Y)>>>0>(M=S+w|0)>>>0?I+1|0:I,o=S=ug(e^M,o^I,24),e=I=p,S=Y,I=b+Q|0,I=(I=(Y=QA)>>>0>(v=Y+v|0)>>>0?I+1|0:I)+e|0,v=ug(S^(w=b=v+o|0),(Y=w>>>0<v>>>0?I+1|0:I)^y,16),I=F+(S=p)|0,P=ug((F=b=M+v|0)^o,(M=F>>>0<M>>>0?I+1|0:I)^e,63),b=p,L=r,I=c+cA|0,I=(o=V)>>>0>(r=o+l|0)>>>0?I+1|0:I,o=r,I=I+(y=m)|0,e=ug((r=c=L+r|0)^tA,(m=r>>>0<o>>>0?I+1|0:I)^_,32),I=q+(c=p)|0,_=y,y=I=(o=N+e|0)>>>0<N>>>0?I+1|0:I,l=ug(L^o,_^I,24),q=I=p,_=I,N=e,e=(I=r)+(r=W)|0,I=m+eA|0,I=(I=r>>>0>e>>>0?I+1|0:I)+_|0,_=I=(r=e)>>>0>(m=r+l|0)>>>0?I+1|0:I,L=ug(N^m,I^c,16),I=y+(r=p)|0,N=ug((c=o+L|0)^l,(I=c>>>0<o>>>0?I+1|0:I)^q,63),y=p,e=I,I=B+(o=G)|0,I=s+((l=K)>>>0>(q=l+O|0)>>>0?I+1|0:I)|0,l=G=H+q|0,q=ug(G^T,(s=G>>>0<H>>>0?I+1|0:I)^J,32),I=a+(G=p)|0,J=I=D>>>0>(H=D+q|0)>>>0?I+1|0:I,T=I=ug(H^O,I^o,24),D=I,o=I+l|0,I=(a=p)+s|0,I=(I=o>>>0<D>>>0?I+1|0:I)+(IA=i[g+204>>2])|0,I=(s=o+i[g+200>>2]|0)>>>0<o>>>0?I+1|0:I,o=G,G=I,IA=ug(s^q,o^I,16),I=J+(D=p)|0,I=(o=H+IA|0)>>>0<H>>>0?I+1|0:I,H=o,J=I,a=ug(T^o,I^a,63),o=I=p,l=c,T=v,I=f+E|0,I=(I=(c=j)>>>0>(v=c+z|0)>>>0?I+1|0:I)+o|0,T=ug(T^(q=f=(c=v)+a|0),(f=f>>>0<c>>>0?I+1|0:I)^S,32),I=(c=p)+e|0,S=I=(v=l+(S=T)|0)>>>0<S>>>0?I+1|0:I,a=ug(a^v,o^I,24),l=I=p,o=I,R=a,I=f+Q|0,I=(I=(a=QA)>>>0>(e=a+q|0)>>>0?I+1|0:I)+o|0,T=ug((o=f=R+(a=e)|0)^T,(a=o>>>0<a>>>0?I+1|0:I)^c,16),I=S+(e=p)|0,I=(f=v+T|0)>>>0<v>>>0?I+1|0:I,v=f,S=I,f=ug(R^f,I^l,63),c=p,l=t,R=u,I=t+B|0,I=Y+((u=K)>>>0>(q=R+u|0)>>>0?I+1|0:I)|0,r=ug((u=t=w+q|0)^L,(t=t>>>0<w>>>0?I+1|0:I)^r,32),I=J+(w=p)|0,J=I=H>>>0>(Y=H+r|0)>>>0?I+1|0:I,q=l=ug(R^(H=Y),I^l,24),z=I=p,Y=I,R=l,L=r,I=t+cA|0,I=(I=(r=V)>>>0>(l=r+u|0)>>>0?I+1|0:I)+Y|0,q=t=q+(r=l)|0,L=ug(L^t,(Y=w)^(w=t>>>0<r>>>0?I+1|0:I),16),I=J+(Y=p)|0,I=(t=H+L|0)>>>0<H>>>0?I+1|0:I,H=t,J=I,u=ug(R^t,I^z,63),t=p,R=P,I=eA+(r=b)|0,I=_+((l=W)>>>0>(P=l+P|0)>>>0?I+1|0:I)|0,l=ug((_=b=m+P|0)^IA,(b=m>>>0>_>>>0?I+1|0:I)^D,32),I=k+(m=p)|0,I=(D=d+l|0)>>>0<d>>>0?I+1|0:I,d=D,k=I,I=ug(R^D,I^r,24),z=i[g+236>>2],R=I,r=_,_=I,r=r+I|0,I=(D=p)+b|0,I=(I=r>>>0<_>>>0?I+1|0:I)+z|0,r=I=(b=r+i[g+232>>2]|0)>>>0<r>>>0?I+1|0:I,z=ug((_=b)^l,I^m,16),I=k+(l=p)|0,P=b=d+z|0,D=ug(R^b,(m=b>>>0<d>>>0?I+1|0:I)^D,63),b=p,d=y,R=N,I=y+G|0,I=(I=(k=s+N|0)>>>0<s>>>0?I+1|0:I)+(IA=i[g+164>>2])|0,U=ug((N=y=(s=k)+i[g+160>>2]|0)^BA,(y=y>>>0<s>>>0?I+1|0:I)^U,32),I=M+(s=p)|0,M=d,d=I=F>>>0>(G=F+U|0)>>>0?I+1|0:I,M=F=ug(R^G,M^I,24),BA=I=p,k=I,R=U,I=y+oA|0,I=(I=(F=(U=x)+N|0)>>>0<U>>>0?I+1|0:I)+k|0,IA=y=M+F|0,F=ug(R^y,(k=s)^(s=y>>>0<F>>>0?I+1|0:I),16),I=d+(k=p)|0,I=(y=G+F|0)>>>0<G>>>0?I+1|0:I,G=y,d=I,N=ug(y^M,I^BA,63),y=p,U=t,R=F,I=t+a|0,I=(I=(F=o+u|0)>>>0<o>>>0?I+1|0:I)+(M=i[g+132>>2])|0,o=ug(R^(M=t=F+i[g+128>>2]|0),(t=t>>>0<F>>>0?I+1|0:I)^k,32),I=(I=m)+(m=p)|0,a=U,U=I=o>>>0>(k=o+P|0)>>>0?I+1|0:I,a=ug(k^u,a^I,24),P=I=p,F=I,u=o,o=(I=M)+(M=$)|0,I=t+rA|0,I=(I=o>>>0<M>>>0?I+1|0:I)+F|0,BA=t=o+a|0,AA=ug(u^t,(F=t>>>0<o>>>0?I+1|0:I)^m,16),I=U+(M=p)|0,U=I=(m=k+AA|0)>>>0<k>>>0?I+1|0:I,u=ug((k=m)^a,I^P,63),m=p,P=D,I=w+yA|0,w=o=(D=Z)+q|0,I=(I=o>>>0<D>>>0?I+1|0:I)+(t=b)|0,a=ug((o=D=P+o|0)^T,(b=w>>>0>o>>>0?I+1|0:I)^e,32),I=d+(D=p)|0,I=(w=G+a|0)>>>0<G>>>0?I+1|0:I,G=w,e=t,t=I,I=ug(P^w,e^I,24),P=i[g+156>>2],e=I,w=I,o=I+o|0,I=(d=p)+b|0,I=(I=o>>>0<w>>>0?I+1|0:I)+P|0,I=o>>>0>(b=o+i[g+152>>2]|0)>>>0?I+1|0:I,o=D,D=I,q=ug((w=b)^a,o^I,16),I=t+(o=p)|0,a=d,d=I=(b=G+q|0)>>>0<G>>>0?I+1|0:I,P=ug(e^(G=b),a^I,63),t=p,b=y,I=y+r|0,I=(I=(a=_+N|0)>>>0<_>>>0?I+1|0:I)+(e=i[g+204>>2])|0,I=(y=a+i[g+200>>2]|0)>>>0<a>>>0?I+1|0:I,a=Y,Y=I,a=ug(y^L,a^I,32),I=S+(_=p)|0,I=(r=v+a|0)>>>0<v>>>0?I+1|0:I,v=r,e=b,b=I,r=ug(r^N,e^I,24),e=I=p,L=r,I=I+Y|0,I=(I=(r=y+r|0)>>>0<y>>>0?I+1|0:I)+(N=i[g+148>>2])|0,I=(y=r+i[g+144>>2]|0)>>>0<r>>>0?I+1|0:I,Y=y,r=_,_=I,T=ug(y^a,r^I,16),I=b+(r=p)|0,I=(y=v+T|0)>>>0<v>>>0?I+1|0:I,v=y,S=I,N=ug(L^y,e^I,63),y=p,b=c,L=f,I=c+s|0,c=a=f+IA|0,I=(I=a>>>0<f>>>0?I+1|0:I)+(e=i[g+196>>2])|0,e=ug((a=f=a+i[g+192>>2]|0)^z,(f=a>>>0<c>>>0?I+1|0:I)^l,32),I=J+(c=p)|0,b=ug(L^(s=H+e|0),(I=s>>>0<H>>>0?I+1|0:I)^b,24),H=I,z=i[g+220>>2],l=b,R=s,I=(s=p)+f|0,f=a=a+b|0,I=(I=a>>>0<b>>>0?I+1|0:I)+(L=z)|0,L=ug(b=(a=b=(J=i[g+216>>2])+a|0)^e,(e=f>>>0>a>>>0?I+1|0:I)^c,16),I=(I=H)+(H=p)|0,I=(f=L)>>>0>(b=R+f|0)>>>0?I+1|0:I,f=s,s=I,I=ug(l^b,f^I,63),O=i[g+236>>2],R=I,c=I,l=I+BA|0,I=(f=p)+F|0,I=(I=c>>>0>l>>>0?I+1|0:I)+O|0,q=ug((l=c=(F=l)+i[g+232>>2]|0)^q,(c=c>>>0<F>>>0?I+1|0:I)^o,32),I=S+(F=p)|0,I=(o=v+q|0)>>>0<v>>>0?I+1|0:I,v=o,S=f,f=I,I=ug(R^o,S^I,24),R=q,o=I,l=I+l|0,I=(S=p)+c|0,I=z+(o>>>0>l>>>0?I+1|0:I)|0,q=c=l+J|0,z=ug(R^c,(l=F)^(F=c>>>0<J>>>0?I+1|0:I),16),I=f+(J=p)|0,I=(c=v+z|0)>>>0<v>>>0?I+1|0:I,v=c,f=S,S=I,f=ug(o^c,f^I,63),c=p,R=u,I=rA+(o=m)|0,I=D+((u=(l=$)+u|0)>>>0<l>>>0?I+1|0:I)|0,r=ug((l=m=w+u|0)^T,(m=w>>>0>m>>>0?I+1|0:I)^r,32),I=s+(D=p)|0,I=(w=b+r|0)>>>0<b>>>0?I+1|0:I,b=w,s=I,u=o=ug(R^w,I^o,24),T=I=p,w=I,R=r,I=m+eA|0,I=(I=(o=W)>>>0>(r=o+l|0)>>>0?I+1|0:I)+w|0,BA=m=u+(o=r)|0,IA=ug(R^m,(r=D)^(D=o>>>0>m>>>0?I+1|0:I),16),I=s+(w=p)|0,l=ug((s=m=b+IA|0)^u,(o=s>>>0<b>>>0?I+1|0:I)^T,63),b=p,m=t,I=t+E|0,I=_+((r=j)>>>0>(u=r+P|0)>>>0?I+1|0:I)|0,r=ug((_=t=Y+u|0)^L,(t=t>>>0<Y>>>0?I+1|0:I)^H,32),I=U+(H=p)|0,I=k>>>0>(Y=k+r|0)>>>0?I+1|0:I,k=Y,Y=m,m=I,u=Y=ug(k^P,Y^I,24),P=I=p,U=I,I=t+B|0,I=(I=(Y=K)>>>0>(_=Y+_|0)>>>0?I+1|0:I)+U|0,U=t=u+_|0,T=ug(t^r,(Y=H)^(H=t>>>0<_>>>0?I+1|0:I),16),I=m+(Y=p)|0,I=(t=k+T|0)>>>0<k>>>0?I+1|0:I,k=t,_=I,u=ug(t^u,I^P,63),m=p,I=e+(t=y)|0,I=(I=(r=a+N|0)>>>0<a>>>0?I+1|0:I)+(P=i[g+156>>2])|0,a=M,M=I=(y=r+i[g+152>>2]|0)>>>0<r>>>0?I+1|0:I,e=ug(y^AA,a^I,32),I=d+(r=p)|0,I=(a=G+e|0)>>>0<G>>>0?I+1|0:I,G=a,d=t,t=I,a=ug(a^N,d^I,24),N=I=p,R=a,I=M+I|0,I=(I=(a=a+y|0)>>>0<y>>>0?I+1|0:I)+(P=i[g+204>>2])|0,L=y=a+i[g+200>>2]|0,a=ug(y^e,(M=y>>>0<a>>>0?I+1|0:I)^r,16),I=t+(y=p)|0,I=(r=G+a|0)>>>0<G>>>0?I+1|0:I,G=r,d=I,N=ug(R^r,N^I,63),t=p,P=a,I=F+Q|0,I=(I=(a=QA)>>>0>(e=a+q|0)>>>0?I+1|0:I)+(r=b)|0,b=F=(a=e)+l|0,e=ug(P^F,(e=y)^(y=a>>>0>F>>>0?I+1|0:I),32),I=_+(F=p)|0,I=(a=k+e|0)>>>0<k>>>0?I+1|0:I,k=a,_=I,a=ug(a^l,I^r,24),r=I=p,l=a,I=y+I|0,I=(I=(a=a+b|0)>>>0<b>>>0?I+1|0:I)+(P=i[g+132>>2])|0,q=b=a+i[g+128>>2]|0,AA=ug(b^e,(y=F)^(F=a>>>0>b>>>0?I+1|0:I),16),I=_+(a=p)|0,_=I=(b=k+AA|0)>>>0<k>>>0?I+1|0:I,P=ug(l^(k=b),I^r,63),b=p,I=D+cA|0,I=(I=(r=V)>>>0>(e=r+BA|0)>>>0?I+1|0:I)+(y=m)|0,m=I=(r=e)>>>0>(D=r+u|0)>>>0?I+1|0:I,e=ug((r=D)^z,I^J,32),I=d+(J=p)|0,I=G>>>0>(D=G+e|0)>>>0?I+1|0:I,G=D,l=y,y=I,I=ug(D^u,l^I,24),u=i[g+164>>2],l=I,D=I,r=I+r|0,I=(d=p)+m|0,I=(I=r>>>0<D>>>0?I+1|0:I)+u|0,I=(m=r+i[g+160>>2]|0)>>>0<r>>>0?I+1|0:I,r=J,J=I,r=ug((D=m)^e,r^I,16),I=y+(e=p)|0,y=d,d=I=(m=G+r|0)>>>0<G>>>0?I+1|0:I,m=ug(l^(G=m),y^I,63),y=p,l=t,R=N,I=t+H|0,I=(I=(u=U+N|0)>>>0<U>>>0?I+1|0:I)+(z=i[g+196>>2])|0,N=ug((u=t=(H=u)+i[g+192>>2]|0)^IA,(t=t>>>0<H>>>0?I+1|0:I)^w,32),I=S+(H=p)|0,w=I=(U=v+N|0)>>>0<v>>>0?I+1|0:I,S=ug(R^U,I^l,24),z=I=p,v=I,R=S,I=t+yA|0,I=(I=(l=(S=Z)+u|0)>>>0<S>>>0?I+1|0:I)+v|0,BA=t=R+(S=l)|0,IA=ug(t^N,(l=H)^(H=t>>>0<S>>>0?I+1|0:I),16),I=w+(v=p)|0,I=(t=U+IA|0)>>>0<U>>>0?I+1|0:I,U=t,l=ug(R^t,I^z,63),t=p,w=c,S=I,R=f,I=c+M|0,I=(I=(u=f+L|0)>>>0<f>>>0?I+1|0:I)+(N=i[g+148>>2])|0,Y=ug((u=f=(c=u)+i[g+144>>2]|0)^T,(f=f>>>0<c>>>0?I+1|0:I)^Y,32),I=o+(c=p)|0,I=s>>>0>(M=s+Y|0)>>>0?I+1|0:I,s=M,M=I,N=o=ug(R^s,I^w,24),T=I=p,w=I,L=Y,I=f+oA|0,I=(I=(o=(Y=x)+u|0)>>>0<Y>>>0?I+1|0:I)+w|0,w=f=N+o|0,z=ug(L^f,(Y=f>>>0<o>>>0?I+1|0:I)^c,16),I=M+(c=p)|0,I=(f=s+z|0)>>>0<s>>>0?I+1|0:I,s=f,M=I,o=ug(f^N,I^T,63),u=I=p,f=I,N=U,T=r,I=F+yA|0,F=r=(U=Z)+q|0,I=(I=r>>>0<U>>>0?I+1|0:I)+f|0,e=ug(T^(r=U=r+o|0),(f=F>>>0>r>>>0?I+1|0:I)^e,32),I=(U=p)+S|0,S=I=(F=N+e|0)>>>0<e>>>0?I+1|0:I,u=ug(o^F,u^I,24),q=I=p,o=I,N=e,e=(I=r)+(r=V)|0,I=f+cA|0,I=(I=r>>>0>e>>>0?I+1|0:I)+o|0,T=f=(r=e)+u|0,L=ug(N^f,(o=U)^(U=f>>>0<r>>>0?I+1|0:I),16),I=S+(o=p)|0,I=(f=F+L|0)>>>0<F>>>0?I+1|0:I,F=f,S=I,N=ug(f^u,I^q,63),f=p,I=eA+(r=b)|0,I=J+((e=W)>>>0>(u=e+P|0)>>>0?I+1|0:I)|0,v=ug((e=b=D+u|0)^IA,(b=e>>>0<D>>>0?I+1|0:I)^v,32),I=M+(J=p)|0,M=I=s>>>0>(D=s+v|0)>>>0?I+1|0:I,I=ug((s=D)^P,I^r,24),P=i[g+204>>2],u=I,q=v,v=I,r=I+e|0,I=(D=p)+b|0,I=(I=r>>>0<v>>>0?I+1|0:I)+P|0,P=b=r+i[g+200>>2]|0,q=ug(q^b,(e=J)^(J=b>>>0<r>>>0?I+1|0:I),16),I=M+(v=p)|0,M=b=s+q|0,e=ug(u^b,(r=D)^(D=s>>>0>b>>>0?I+1|0:I),63),b=p,s=y,R=m,I=y+H|0,I=(I=(r=m+BA|0)>>>0<m>>>0?I+1|0:I)+(u=i[g+220>>2])|0,r=ug((H=m=r+i[g+216>>2]|0)^z,(m=r>>>0>H>>>0?I+1|0:I)^c,32),I=_+(y=p)|0,_=s,s=I=(c=k+r|0)>>>0<k>>>0?I+1|0:I,I=ug(R^c,_^I,24),z=i[g+156>>2],u=I,_=H,H=I,_=_+I|0,I=(k=p)+m|0,I=(I=H>>>0>_>>>0?I+1|0:I)+z|0,z=m=(H=_)+i[g+152>>2]|0,BA=ug(m^r,(H=m>>>0<H>>>0?I+1|0:I)^y,16),I=s+(_=p)|0,y=ug(u^(s=m=c+BA|0),(r=k)^(k=c>>>0>s>>>0?I+1|0:I),63),c=p,m=t,I=t+Y|0,I=(I=(r=w+l|0)>>>0<w>>>0?I+1|0:I)+(u=i[g+132>>2])|0,w=I=(t=r+i[g+128>>2]|0)>>>0<r>>>0?I+1|0:I,a=ug(t^AA,I^a,32),I=d+(Y=p)|0,I=(r=G+a|0)>>>0<G>>>0?I+1|0:I,G=r,u=m,m=I,r=ug(r^l,u^I,24),l=I=p,R=r,I=w+I|0,I=(I=(r=t+r|0)>>>0<t>>>0?I+1|0:I)+(u=i[g+196>>2])|0,I=(t=r+i[g+192>>2]|0)>>>0<r>>>0?I+1|0:I,w=t,r=Y,Y=I,a=ug(t^a,r^I,16),I=m+(t=p)|0,I=(r=G+a|0)>>>0<G>>>0?I+1|0:I,G=r,d=I,u=ug(R^r,l^I,63),m=p,R=e,l=a,I=U+E|0,I=(I=(a=j)>>>0>(e=a+T|0)>>>0?I+1|0:I)+(r=b)|0,b=U=R+(a=e)|0,e=ug(l^U,(e=t)^(t=a>>>0>U>>>0?I+1|0:I),32),I=k+(U=p)|0,l=a=s+e|0,a=ug(R^a,(I=a>>>0<s>>>0?I+1|0:I)^r,24),k=I,IA=i[g+148>>2],T=a,I=t+(s=p)|0,I=(I=(a=a+b|0)>>>0<b>>>0?I+1|0:I)+(AA=IA)|0,O=ug((AA=b=(r=i[g+144>>2])+a|0)^e,(b=a>>>0>b>>>0?I+1|0:I)^U,16),I=(I=k)+(k=p)|0,I=(t=(U=O)+l|0)>>>0<U>>>0?I+1|0:I,U=t,a=I,t=ug(T^t,I^s,63),s=p,R=y,I=(e=c)+J|0,I=(I=(l=y+P|0)>>>0<y>>>0?I+1|0:I)+(T=i[g+236>>2])|0,o=ug((l=y=(c=l)+i[g+232>>2]|0)^L,(y=c>>>0>y>>>0?I+1|0:I)^o,32),I=d+(c=p)|0,d=I=G>>>0>(J=G+o|0)>>>0?I+1|0:I,P=e=ug(R^(G=J),I^e,24),T=I=p,J=I,R=o,I=y+rA|0,I=(I=(o=$)>>>0>(e=o+l|0)>>>0?I+1|0:I)+J|0,L=y=P+(o=e)|0,o=ug(R^y,(J=y>>>0<o>>>0?I+1|0:I)^c,16),I=d+(e=p)|0,d=y=G+o|0,P=ug(y^P,(l=y>>>0<G>>>0?I+1|0:I)^T,63),y=p,T=u,I=H+B|0,I=(I=(G=K)>>>0>(u=G+z|0)>>>0?I+1|0:I)+(c=m)|0,u=ug((m=G=T+(H=u)|0)^q,(G=G>>>0<H>>>0?I+1|0:I)^v,32),I=S+(H=p)|0,S=ug(T^(v=F+u|0),(I=F>>>0>v>>>0?I+1|0:I)^c,24),F=I,z=i[g+164>>2],q=S,R=v,I=G+(c=p)|0,G=S=m+S|0,I=(I=S>>>0<m>>>0?I+1|0:I)+(T=z)|0,S=H,H=I=(m=(v=i[g+160>>2])+G|0)>>>0<G>>>0?I+1|0:I,iA=ug(m^u,S^I,16),I=(I=F)+(F=p)|0,S=I=(G=R+(S=iA)|0)>>>0<S>>>0?I+1|0:I,q=ug(q^G,I^c,63),c=p,u=f,R=N,I=f+oA|0,I=Y+((N=x)>>>0>(T=R+N|0)>>>0?I+1|0:I)|0,_=ug((N=f=w+T|0)^BA,(f=f>>>0<w>>>0?I+1|0:I)^_,32),I=D+(w=p)|0,D=I=(Y=M+_|0)>>>0<M>>>0?I+1|0:I,T=u=ug(R^(M=Y),I^u,24),BA=I=p,Y=I,R=_,I=f+Q|0,I=(I=(u=(_=QA)+N|0)>>>0<_>>>0?I+1|0:I)+Y|0,Y=f=T+u|0,N=ug(R^f,(_=w)^(w=f>>>0<u>>>0?I+1|0:I),16),I=D+(_=p)|0,I=(f=M+N|0)>>>0<M>>>0?I+1|0:I,M=f,D=I,u=ug(f^T,I^BA,63),T=I=p,f=I,R=o,I=b+oA|0,b=o=x+AA|0,I=(I=o>>>0<x>>>0?I+1|0:I)+f|0,e=ug(R^(o=x=o+u|0),(b=b>>>0>o>>>0?I+1|0:I)^e,32),I=S+(f=p)|0,oA=x=G+e|0,S=I=G>>>0>x>>>0?I+1|0:I,R=x=ug(u^x,T^I,24),I=(G=p)+b|0,I=(I=(o=o+x|0)>>>0<x>>>0?I+1|0:I)+IA|0,T=ug((u=x=o+r|0)^e,(o=r>>>0>u>>>0?I+1|0:I)^f,16),I=(I=S)+(S=p)|0,oA=x=(b=T)+oA|0,f=ug(R^x,(b=b>>>0>x>>>0?I+1|0:I)^G,63),G=p,x=s,R=t,I=s+J|0,s=r=t+L|0,I=(I=r>>>0<t>>>0?I+1|0:I)+(e=i[g+196>>2])|0,e=ug((r=t=r+i[g+192>>2]|0)^iA,(t=r>>>0<s>>>0?I+1|0:I)^F,32),I=D+(s=p)|0,D=x,x=I=(F=M+e|0)>>>0<M>>>0?I+1|0:I,R=I=ug(R^F,D^I,24),M=I,D=I+r|0,I=(J=p)+t|0,I=z+(D>>>0<M>>>0?I+1|0:I)|0,z=t=D+v|0,L=ug(t^e,(r=s)^(s=t>>>0<v>>>0?I+1|0:I),16),I=x+(M=p)|0,I=(t=F+L|0)>>>0<F>>>0?I+1|0:I,F=t,r=J,J=I,r=ug(R^t,r^I,63),x=p,I=rA+(t=y)|0,I=H+((D=$)>>>0>(v=D+P|0)>>>0?I+1|0:I)|0,D=y=m+v|0,v=ug(y^N,(m=y>>>0<m>>>0?I+1|0:I)^_,32),I=a+(y=p)|0,a=t,t=I=(H=U+v|0)>>>0<U>>>0?I+1|0:I,a=_=ug(H^P,a^I,24),e=I=p,_=v,v=(I=D)+(D=Z)|0,I=m+yA|0,I=(I=D>>>0>v>>>0?I+1|0:I)+e|0,U=m=(D=v)+a|0,N=ug(_^m,(D=m>>>0<D>>>0?I+1|0:I)^y,16),I=t+(v=p)|0,t=ug((P=m=H+N|0)^a,(m=m>>>0<H>>>0?I+1|0:I)^e,63),y=p,H=c,I=c+B|0,I=w+((a=(_=K)+q|0)>>>0<_>>>0?I+1|0:I)|0,I=(c=Y+a|0)>>>0<Y>>>0?I+1|0:I,Y=c,c=I,_=ug(Y^O,I^k,32),I=l+(k=p)|0,I=(w=d+_|0)>>>0<d>>>0?I+1|0:I,d=w,a=H,H=I,a=ug(w^q,a^I,24),l=I=p,w=I,e=_,_=(I=Y)+(Y=QA)|0,I=c+Q|0,I=(I=Y>>>0>_>>>0?I+1|0:I)+w|0,q=c=_+a|0,_=ug(e^c,(Y=k)^(k=c>>>0<_>>>0?I+1|0:I),16),I=H+(w=p)|0,I=(c=d+_|0)>>>0<d>>>0?I+1|0:I,d=c,H=I,e=ug(c^a,I^l,63),c=p,a=r,l=_,I=o+cA|0,I=(I=(r=(_=V)+u|0)>>>0<_>>>0?I+1|0:I)+(Y=x)|0,_=o=a+r|0,x=I=o>>>0<r>>>0?I+1|0:I,r=ug(l^o,I^w,32),I=(I=m)+(m=p)|0,o=Y,Y=I=r>>>0>(w=r+P|0)>>>0?I+1|0:I,I=ug(a^w,o^I,24),l=i[g+220>>2],a=I,P=r,o=_,_=I,r=o+I|0,I=(o=p)+x|0,I=(I=r>>>0<_>>>0?I+1|0:I)+l|0,P=ug(P^(u=x=r+i[g+216>>2]|0),(_=r>>>0>u>>>0?I+1|0:I)^m,16),I=Y+(r=p)|0,Y=I=w>>>0>(x=w+P|0)>>>0?I+1|0:I,x=ug(a^(w=x),I^o,63),m=p,R=t,I=(o=y)+s|0,y=a=t+z|0,I=(I=a>>>0<t>>>0?I+1|0:I)+(l=i[g+204>>2])|0,S=ug((a=t=a+i[g+200>>2]|0)^T,(t=a>>>0<y>>>0?I+1|0:I)^S,32),I=H+(y=p)|0,d=I=(s=d+S|0)>>>0<d>>>0?I+1|0:I,l=o=ug(R^s,I^o,24),T=I=p,H=I,R=S,I=t+eA|0,I=(I=(o=(S=W)+a|0)>>>0<S>>>0?I+1|0:I)+H|0,z=t=l+o|0,BA=ug(R^t,(H=t>>>0<o>>>0?I+1|0:I)^y,16),I=d+(S=p)|0,I=(t=s+BA|0)>>>0<s>>>0?I+1|0:I,s=t,d=I,t=ug(t^l,I^T,63),y=p,R=e,I=(o=c)+D|0,I=(e=e+U|0)>>>0<U>>>0?I+1|0:I,U=e,I=I+(l=T=i[g+156>>2])|0,l=ug((e=c=(a=i[g+152>>2])+e|0)^L,(c=e>>>0<U>>>0?I+1|0:I)^M,32),I=(I=b)+(b=p)|0,M=I=(U=l+oA|0)>>>0<l>>>0?I+1|0:I,oA=o=ug(R^U,I^o,24),L=I=p,D=I,R=o,I=c+E|0,I=(I=(o=j)>>>0>(e=o+e|0)>>>0?I+1|0:I)+D|0,oA=c=oA+(o=e)|0,IA=ug(c^l,(D=c>>>0<o>>>0?I+1|0:I)^b,16),I=M+(c=p)|0,I=(b=U+IA|0)>>>0<U>>>0?I+1|0:I,U=b,M=I,l=ug(R^b,I^L,63),b=p,R=f,I=(o=G)+k|0,G=e=f+q|0,I=(I=e>>>0<f>>>0?I+1|0:I)+(L=i[g+236>>2])|0,v=ug((e=f=e+i[g+232>>2]|0)^N,(G=e>>>0<G>>>0?I+1|0:I)^v,32),I=J+(k=p)|0,N=f=F+v|0,f=ug(R^f,(I=f>>>0<F>>>0?I+1|0:I)^o,24),J=I,L=i[g+132>>2],q=f,R=N,N=v,I=(F=p)+G|0,I=(I=(o=f+e|0)>>>0<f>>>0?I+1|0:I)+L|0,I=(f=(v=i[g+128>>2])+o|0)>>>0<o>>>0?I+1|0:I,G=f,o=k,k=I,N=ug(N^f,o^I,16),I=(I=J)+(J=p)|0,I=(f=R+(o=N)|0)>>>0<o>>>0?I+1|0:I,o=f,f=F,F=I,q=I=ug(q^o,f^I,63),e=I,u=I+u|0,I=(f=p)+_|0,I=L+(e>>>0>u>>>0?I+1|0:I)|0,u=ug((e=_=u+v|0)^BA,(v=v>>>0>e>>>0?I+1|0:I)^S,32),I=M+(S=p)|0,I=U>>>0>(_=U+u|0)>>>0?I+1|0:I,U=_,_=f,f=I,q=_=ug(q^U,_^I,24),L=I=p,M=I,R=_,I=v+B|0,I=(I=(e=(_=K)+e|0)>>>0<_>>>0?I+1|0:I)+M|0,q=v=q+e|0,BA=ug(v^u,(M=v>>>0<e>>>0?I+1|0:I)^S,16),I=f+(v=p)|0,I=U>>>0>(S=U+BA|0)>>>0?I+1|0:I,U=S,S=I,u=ug(R^U,I^L,63),f=p,_=m,R=x,I=m+H|0,m=e=x+z|0,I=(I=e>>>0<x>>>0?I+1|0:I)+(L=i[g+148>>2])|0,z=ug((e=x=e+i[g+144>>2]|0)^IA,(x=m>>>0>e>>>0?I+1|0:I)^c,32),I=F+(m=p)|0,H=I=(c=o+z|0)>>>0<o>>>0?I+1|0:I,L=I=ug(R^c,I^_,24),o=I,_=I+e|0,I=(F=p)+x|0,I=T+(o>>>0>_>>>0?I+1|0:I)|0,T=x=a+_|0,z=ug(x^z,(o=a>>>0>x>>>0?I+1|0:I)^m,16),I=H+(_=p)|0,m=ug(L^(H=x=c+z|0),(a=F)^(F=c>>>0>H>>>0?I+1|0:I),63),c=p,x=y,L=t,I=y+D|0,y=a=t+oA|0,I=(I=a>>>0<t>>>0?I+1|0:I)+(e=i[g+164>>2])|0,e=ug((a=t=a+i[g+160>>2]|0)^N,(t=a>>>0<y>>>0?I+1|0:I)^J,32),I=Y+(y=p)|0,Y=x,x=I=w>>>0>(J=w+e|0)>>>0?I+1|0:I,w=ug(L^J,Y^I,24),N=I=p,D=I,R=w,I=t+Q|0,I=(I=(w=QA)>>>0>(Y=w+a|0)>>>0?I+1|0:I)+D|0,oA=t=R+(w=Y)|0,L=ug(t^e,(D=t>>>0<w>>>0?I+1|0:I)^y,16),I=x+(w=p)|0,I=(t=J+L|0)>>>0<J>>>0?I+1|0:I,J=t,Y=I,t=ug(R^t,I^N,63),y=p,x=b,I=b+yA|0,I=k+((a=Z)>>>0>(e=a+l|0)>>>0?I+1|0:I)|0,r=ug((a=b=G+e|0)^P,(b=a>>>0<G>>>0?I+1|0:I)^r,32),I=d+(G=p)|0,e=x,x=I=s>>>0>(k=s+r|0)>>>0?I+1|0:I,e=k=ug((s=k)^l,e^I,24),l=I=p,N=r,I=b+rA|0,I=(I=(r=(k=$)+a|0)>>>0<k>>>0?I+1|0:I)+l|0,d=b=e+r|0,r=ug(N^b,(a=G)^(G=b>>>0<r>>>0?I+1|0:I),16),I=x+(k=p)|0,l=ug((a=b=s+r|0)^e,(b=s>>>0>a>>>0?I+1|0:I)^l,63),x=p,s=c,N=m,P=r,I=c+M|0,I=(I=(r=m+q|0)>>>0<m>>>0?I+1|0:I)+(e=i[g+196>>2])|0,r=ug(P^(M=m=r+i[g+192>>2]|0),(m=r>>>0>m>>>0?I+1|0:I)^k,32),I=Y+(c=p)|0,e=s,s=I=(k=J+r|0)>>>0<J>>>0?I+1|0:I,I=ug(N^k,e^I,24),N=i[g+204>>2],e=I,Y=M,M=I,Y=Y+I|0,I=(J=p)+m|0,I=(I=Y>>>0<M>>>0?I+1|0:I)+N|0,P=m=Y+i[g+200>>2]|0,q=ug(m^r,(M=m>>>0<Y>>>0?I+1|0:I)^c,16),I=s+(Y=p)|0,m=ug(e^(s=m=k+q|0),(k=s>>>0<k>>>0?I+1|0:I)^J,63),c=p,J=y,N=t,R=a,I=y+o|0,I=(I=(a=t+T|0)>>>0<t>>>0?I+1|0:I)+(e=IA=i[g+212>>2])|0,a=ug((o=t=(r=i[g+208>>2])+a|0)^BA,(t=t>>>0<a>>>0?I+1|0:I)^v,32),I=(I=b)+(b=p)|0,e=J,J=I=(y=R+a|0)>>>0<a>>>0?I+1|0:I,I=ug(N^y,e^I,24),N=i[g+220>>2],R=I,e=a,a=o,o=I,a=a+I|0,I=(v=p)+t|0,I=(I=a>>>0<o>>>0?I+1|0:I)+N|0,T=t=a+i[g+216>>2]|0,a=ug(e^t,(o=t>>>0<a>>>0?I+1|0:I)^b,16),I=J+(e=p)|0,J=b=y+a|0,b=ug(R^b,(t=v)^(v=y>>>0>b>>>0?I+1|0:I),63),t=p,R=l,I=D+E|0,I=(I=(l=j)>>>0>(N=l+oA|0)>>>0?I+1|0:I)+(y=x)|0,N=ug((x=D=R+(l=N)|0)^z,(D=D>>>0<l>>>0?I+1|0:I)^_,32),I=S+(_=p)|0,I=U>>>0>(l=U+N|0)>>>0?I+1|0:I,U=l,l=y,y=I,l=ug(R^U,l^I,24),S=I=p,R=l,I=D+I|0,I=(I=(l=l+x|0)>>>0<x>>>0?I+1|0:I)+(z=i[g+236>>2])|0,oA=x=(D=l)+i[g+232>>2]|0,z=ug(x^N,(D=D>>>0>x>>>0?I+1|0:I)^_,16),I=y+(_=p)|0,N=ug(R^(y=x=U+z|0),(U=U>>>0>y>>>0?I+1|0:I)^S,63),x=p,S=f,R=u,I=f+eA|0,I=G+((u=(l=W)+u|0)>>>0<l>>>0?I+1|0:I)|0,w=ug((l=f=d+u|0)^L,(f=f>>>0<d>>>0?I+1|0:I)^w,32),I=F+(G=p)|0,H=I=H>>>0>(d=H+w|0)>>>0?I+1|0:I,u=S=ug(R^d,I^S,24),L=I=p,F=I,R=w,I=f+cA|0,I=(I=(w=V)>>>0>(S=w+l|0)>>>0?I+1|0:I)+F|0,F=f=u+(w=S)|0,l=ug(R^f,(l=G)^(G=f>>>0<w>>>0?I+1|0:I),16),I=H+(w=p)|0,I=(f=d+l|0)>>>0<d>>>0?I+1|0:I,d=f,H=I,S=ug(f^u,I^L,63),u=I=p,f=I,L=a,I=M+eA|0,M=a=P+W|0,I=(I=a>>>0<W>>>0?I+1|0:I)+f|0,e=ug(L^(a=W=a+S|0),(W=M>>>0>a>>>0?I+1|0:I)^e,32),I=U+(f=p)|0,U=I=y>>>0>(M=y+e|0)>>>0?I+1|0:I,P=I=ug(S^(y=M),u^I,24),S=I,a=I+a|0,I=(M=p)+W|0,I=IA+(a>>>0<S>>>0?I+1|0:I)|0,u=ug((u=e)^(e=W=a+r|0),(S=r>>>0>e>>>0?I+1|0:I)^f,16),I=U+(r=p)|0,y=ug(P^(U=W=y+u|0),(a=M)^(M=y>>>0>U>>>0?I+1|0:I),63),f=p,W=c,L=m,I=c+o|0,c=a=m+T|0,I=(I=a>>>0<m>>>0?I+1|0:I)+(P=i[g+164>>2])|0,_=ug((a=m=a+i[g+160>>2]|0)^z,(m=c>>>0>a>>>0?I+1|0:I)^_,32),I=H+(c=p)|0,I=(o=d+_|0)>>>0<d>>>0?I+1|0:I,d=o,H=W,W=I,I=ug(L^o,H^I,24),T=i[g+196>>2],L=I,P=_,o=I,_=I+a|0,I=(H=p)+m|0,I=(I=o>>>0>_>>>0?I+1|0:I)+T|0,P=ug(P^(a=m=(o=_)+i[g+192>>2]|0),(_=c)^(c=o>>>0>a>>>0?I+1|0:I),16),I=W+(T=p)|0,I=(m=d+P|0)>>>0<d>>>0?I+1|0:I,d=m,o=H,H=I,o=ug(L^m,o^I,63),W=p,m=t,L=b,I=t+D|0,I=(I=(_=b+oA|0)>>>0<b>>>0?I+1|0:I)+(eA=i[g+204>>2])|0,w=ug((_=b=(t=_)+i[g+200>>2]|0)^l,(b=t>>>0>b>>>0?I+1|0:I)^w,32),I=k+(t=p)|0,I=s>>>0>(D=s+w|0)>>>0?I+1|0:I,s=D,D=m,m=I,l=D=ug(L^s,D^I,24),eA=I=p,k=I,L=D,I=b+cA|0,I=(I=(D=_+V|0)>>>0<V>>>0?I+1|0:I)+k|0,l=ug((_=V=l+D|0)^w,(l=t)^(t=D>>>0>_>>>0?I+1|0:I),16),I=m+(k=p)|0,D=I=s>>>0>(V=s+l|0)>>>0?I+1|0:I,V=ug(L^(s=V),I^eA,63),b=p,I=G+(m=x)|0,G=w=F+N|0,I=(I=w>>>0<F>>>0?I+1|0:I)+(eA=i[g+236>>2])|0,Y=ug((w=x=w+i[g+232>>2]|0)^q,(x=G>>>0>w>>>0?I+1|0:I)^Y,32),I=v+(G=p)|0,v=m,m=I=(F=J+Y|0)>>>0<J>>>0?I+1|0:I,v=ug(F^N,v^I,24),q=I=p,J=I,I=x+yA|0,I=(I=(w=w+Z|0)>>>0<Z>>>0?I+1|0:I)+J|0,N=ug((J=Z=w+v|0)^Y,(N=G)^(G=w>>>0>J>>>0?I+1|0:I),16),I=m+(yA=p)|0,w=I=F>>>0>(Z=F+N|0)>>>0?I+1|0:I,x=ug(v^(F=Z),I^q,63),m=p,I=S+B|0,I=(I=(v=e+K|0)>>>0<K>>>0?I+1|0:I)+(Y=W)|0,I=v>>>0>(K=v+o|0)>>>0?I+1|0:I,v=K,K=I,I=E+I|0,j=I=(Y=j+v|0)>>>0<j>>>0?I+1|0:I,e=Y,Y=ug(v^N,K^yA,32),I=D+(v=p)|0,S=ug((D=K=s+Y|0)^o,(K=s>>>0>D>>>0?I+1|0:I)^W,24),I=(o=p)+j|0,I=(s=S)>>>0>(W=e+s|0)>>>0?I+1|0:I,s=W,i[g>>2]=s,i[g+4>>2]=I,Z=I,I=ug(s^Y,I^v,16),Y=W=p,i[g+120>>2]=I,i[g+124>>2]=Y,j=I,D=I+D|0,I=Y+K|0,i[g+80>>2]=D,I=D>>>0<j>>>0?I+1|0:I,i[g+84>>2]=I,hA=g,DA=ug(S^D,I^o,63),i[hA+40>>2]=DA,i[g+44>>2]=p,K=b,o=V,I=c+b|0,I=(I=(j=a+V|0)>>>0<V>>>0?I+1|0:I)+(D=i[g+132>>2])|0,j=I=(V=j+i[g+128>>2]|0)>>>0<j>>>0?I+1|0:I,c=ug(V^u,I^r,32),I=w+(D=p)|0,a=K,K=I=F>>>0>(b=F+c|0)>>>0?I+1|0:I,w=ug(o^(F=b),a^I,24),I=j+(Y=p)|0,I=(b=w+V|0)>>>0<V>>>0?I+1|0:I,V=(j=i[g+144>>2])+b|0,I=i[g+148>>2]+I|0,I=V>>>0<j>>>0?I+1|0:I,i[g+8>>2]=V,i[g+12>>2]=I,I=ug(c^V,I^D,16),b=W=p,i[g+96>>2]=I,i[g+100>>2]=b,V=I,j=I+F|0,I=b+K|0,K=j,i[g+88>>2]=K,I=V>>>0>K>>>0?I+1|0:I,i[g+92>>2]=I,hA=g,DA=ug(w^K,I^Y,63),i[hA+48>>2]=DA,i[g+52>>2]=p,a=$,I=t+m|0,I=(I=(V=_+x|0)>>>0<x>>>0?I+1|0:I)+(j=i[g+220>>2])|0,I=(W=V+i[g+216>>2]|0)>>>0<V>>>0?I+1|0:I,$=W,j=W,V=a+W|0,W=I,I=I+rA|0,I=V>>>0<j>>>0?I+1|0:I,j=V,V=I,a=j,o=x,j=ug(P^$,W^T,32),I=M+(x=p)|0,m=ug(o^(b=W=U+j|0),(W=U>>>0>b>>>0?I+1|0:I)^m,24),I=(c=p)+V|0,V=$=a+(t=m)|0,i[g+16>>2]=V,I=t>>>0>V>>>0?I+1|0:I,i[g+20>>2]=I,I=ug(V^j,I^x,16),K=p,i[g+104>>2]=I,i[g+108>>2]=K,V=I,$=I+b|0,I=W+K|0,W=$,i[g+64>>2]=W,I=V>>>0>W>>>0?I+1|0:I,i[g+68>>2]=I,hA=g,DA=ug(t^W,I^c,63),i[hA+56>>2]=DA,i[g+60>>2]=p,I=f+Q|0,I=(I=(V=y+QA|0)>>>0<y>>>0?I+1|0:I)+G|0,QA=I=J>>>0>(V=J+V|0)>>>0?I+1|0:I,x=ug(V^l,I^k,32),I=H+(b=p)|0,K=I=d>>>0>($=d+x|0)>>>0?I+1|0:I,m=ug($^y,f^I,24),I=QA+(t=p)|0,I=V>>>0>(j=m+V|0)>>>0?I+1|0:I,V=(QA=i[g+152>>2])+j|0,I=i[g+156>>2]+I|0,I=V>>>0<QA>>>0?I+1|0:I,i[g+24>>2]=V,i[g+28>>2]=I,I=ug(x^V,I^b,16),i[g+112>>2]=I,QA=p,i[g+116>>2]=QA,V=I+$|0,I=K+QA|0,K=V,i[g+72>>2]=K,I=K>>>0<$>>>0?I+1|0:I,i[g+76>>2]=I,hA=g,DA=ug(m^K,I^t,63),i[hA+32>>2]=DA,i[g+36>>2]=p,I=i[g+68>>2]^(n[A+4|0]|n[A+5|0]<<8|n[A+6|0]<<16|n[A+7|0]<<24)^Z,K=i[g+64>>2]^(n[0|A]|n[A+1|0]<<8|n[A+2|0]<<16|n[A+3|0]<<24)^s,C[0|A]=K,C[A+1|0]=K>>>8,C[A+2|0]=K>>>16,C[A+3|0]=K>>>24,C[A+4|0]=I,C[A+5|0]=I>>>8,C[A+6|0]=I>>>16,C[A+7|0]=I>>>24,Z=1;I=(K=Z<<3)+A|0,W=K=g+K|0,V=i[K>>2]^(n[0|I]|n[I+1|0]<<8|n[I+2|0]<<16|n[I+3|0]<<24),QA=i[(K=K- -64|0)>>2],K=i[K+4>>2]^i[W+4>>2]^(n[I+4|0]|n[I+5|0]<<8|n[I+6|0]<<16|n[I+7|0]<<24),W=V^QA,C[0|I]=W,C[I+1|0]=W>>>8,C[I+2|0]=W>>>16,C[I+3|0]=W>>>24,C[I+4|0]=K,C[I+5|0]=K>>>8,C[I+6|0]=K>>>16,C[I+7|0]=K>>>24,8!=(0|(Z=Z+1|0)););h=g+256|0}function F(A,I,g,B){var Q=0,C=0,E=0,n=0,a=0,r=0,o=0,e=0,t=0,f=0,c=0,y=0,s=0,w=0,h=0,D=0,u=0,l=0,F=0,G=0,k=0,_=0,H=0,Y=0,b=0,m=0,v=0,U=0,S=0,N=0,M=0,d=0,P=0,R=0,J=0,x=0,L=0;for(function(A,I){for(var g=0,B=0,Q=0,C=0,E=0;C=Q=(B=g<<3)+A|0,E=dA(I+B|0),i[C>>2]=E,i[Q+4>>2]=p,16!=(0|(g=g+1|0)););}(g,I),I=X(B,A,64),o=i[g>>2],f=i[g+4>>2],B=0;;){if(Q=ug(l=i[(E=I)+32>>2],t=i[E+36>>2],14),s=p,Q=ug(l,t,18)^Q,D=p^s,C=o,o=ug(l,t,41)^Q,Q=(p^D)+f|0,Q=o>>>0>(s=C+o|0)>>>0?Q+1|0:Q,o=s,y=i[E+48>>2],o=(D=i[(f=34784+(L=B<<3)|0)>>2])+o|0,Q=i[f+4>>2]+Q|0,Q=o>>>0<D>>>0?Q+1|0:Q,o=(f=y^((k=i[E+40>>2])^y)&l)+o|0,Q=(((C=i[E+52>>2])^(u=i[E+44>>2]))&t^C)+Q|0,Q=o>>>0<f>>>0?Q+1|0:Q,s=(a=o)+(o=i[E+56>>2])|0,Q=i[E+60>>2]+Q|0,Q=o>>>0>s>>>0?Q+1|0:Q,f=s+(D=i[E+24>>2])|0,o=Q,Q=Q+i[E+28>>2]|0,Q=f>>>0<D>>>0?Q+1|0:Q,D=f,c=Q,i[E+24>>2]=f,i[E+28>>2]=Q,Q=ug(F=i[E>>2],f=i[E+4>>2],28),h=p,Q=ug(F,f,34)^Q,n=p^h,h=s+(ug(F,f,39)^Q)|0,Q=o+(p^n)|0,Q=s>>>0>h>>>0?Q+1|0:Q,s=(a=F&((n=i[E+16>>2])|(r=i[E+8>>2]))|n&r)+h|0,Q=(f&((h=i[E+20>>2])|(o=i[E+12>>2]))|o&h)+Q|0,s=Q=a>>>0>(e=s)>>>0?Q+1|0:Q,i[E+56>>2]=e,i[E+60>>2]=Q,Q=ug(D,c,14),a=p,d=ug(D,c,18)^Q,a^=p,w=n,Q=((t^u)&c^u)+C|0,Q=(n=(l^k)&D^k)>>>0>(y=n+y|0)>>>0?Q+1|0:Q,C=ug(D,c,41)^d,Q=(p^a)+Q|0,Q=C>>>0>(y=C+y|0)>>>0?Q+1|0:Q,y=(a=i[(n=d=(C=(1|B)<<3)+g|0)>>2])+y|0,Q=i[n+4>>2]+Q|0,Q=a>>>0>y>>>0?Q+1|0:Q,y=(n=i[(C=C+34784|0)>>2])+y|0,Q=i[C+4>>2]+Q|0,n=Q=n>>>0>y>>>0?Q+1|0:Q,Q=Q+h|0,h=y=w+(C=a=y)|0,C=Q=C>>>0>y>>>0?Q+1|0:Q,i[E+16>>2]=y,i[E+20>>2]=Q,y=E,Q=ug(e,s,28),E=p,G=ug(e,s,34)^Q,H=p^E,E=(Q=a)+(a=(r|F)&e|r&F)|0,Q=((o|f)&s|o&f)+n|0,Q=E>>>0<a>>>0?Q+1|0:Q,n=ug(e,s,39)^G,Q=(p^H)+Q|0,G=E=n+E|0,E=Q=E>>>0<n>>>0?Q+1|0:Q,i[y+48>>2]=G,i[y+52>>2]=Q,a=y,Q=ug(h,C,14),y=p,n=ug(h,C,18)^Q,H=p^y,w=r,Q=((t^c)&C^t)+u|0,Q=(r=(D^l)&h^l)>>>0>(y=r+k|0)>>>0?Q+1|0:Q,n=ug(h,C,41)^n,Q=(p^H)+Q|0,Q=n>>>0>(y=n+y|0)>>>0?Q+1|0:Q,y=(k=i[(r=U=(n=(2|B)<<3)+g|0)>>2])+y|0,Q=i[r+4>>2]+Q|0,Q=y>>>0<k>>>0?Q+1|0:Q,y=(r=i[(n=n+34784|0)>>2])+y|0,Q=i[n+4>>2]+Q|0,Q=r>>>0>y>>>0?Q+1|0:Q,y=w+(n=r=y)|0,w=o,o=Q,Q=w+Q|0,n=Q=n>>>0>y>>>0?Q+1|0:Q,i[a+8>>2]=y,i[a+12>>2]=Q,Q=ug(G,E,28),k=p,u=ug(G,E,34)^Q,k^=p,Q=((f|s)&E|f&s)+o|0,Q=(r=(H=(e|F)&G|e&F)+r|0)>>>0<H>>>0?Q+1|0:Q,o=r,r=ug(G,E,39)^u,Q=(p^k)+Q|0,k=o=o+r|0,o=Q=o>>>0<r>>>0?Q+1|0:Q,i[a+40>>2]=k,i[a+44>>2]=Q,r=a,Q=ug(y,n,14),a=p,u=ug(y,n,18)^Q,H=p^a,w=F,Q=(c^(C^c)&n)+t|0,Q=(a=(F=D^(h^D)&y)+l|0)>>>0<F>>>0?Q+1|0:Q,t=a,a=ug(y,n,41)^u,Q=(p^H)+Q|0,Q=a>>>0>(t=t+a|0)>>>0?Q+1|0:Q,t=(u=i[(l=F=(a=(3|B)<<3)+g|0)>>2])+t|0,Q=i[l+4>>2]+Q|0,Q=t>>>0<u>>>0?Q+1|0:Q,t=(l=i[(a=a+34784|0)>>2])+t|0,Q=i[a+4>>2]+Q|0,Q=t>>>0<l>>>0?Q+1|0:Q,l=t,t=w+(a=t)|0,w=f,f=Q,Q=w+Q|0,a=Q=a>>>0>t>>>0?Q+1|0:Q,i[r>>2]=t,i[r+4>>2]=Q,Q=ug(k,o,28),u=p,H=ug(k,o,34)^Q,u^=p,Q=((E|s)&o|E&s)+f|0,Q=(l=(v=(e|G)&k|e&G)+l|0)>>>0<v>>>0?Q+1|0:Q,f=l,l=ug(k,o,39)^H,Q=(p^u)+Q|0,Q=(f=f+l|0)>>>0<l>>>0?Q+1|0:Q,l=f,f=Q,i[r+32>>2]=l,i[r+36>>2]=Q,Q=ug(t,a,14),u=p,H=ug(t,a,18)^Q,u^=p,w=e,Q=c+(C^(C^n)&a)|0,Q=(e=D+(h^(y^h)&t)|0)>>>0<D>>>0?Q+1|0:Q,c=ug(t,a,41)^H,Q=(p^u)+Q|0,Q=c>>>0>(D=c+e|0)>>>0?Q+1|0:Q,D=(u=i[(e=S=(c=(4|B)<<3)+g|0)>>2])+D|0,Q=i[e+4>>2]+Q|0,Q=D>>>0<u>>>0?Q+1|0:Q,D=(e=i[(c=c+34784|0)>>2])+D|0,Q=i[c+4>>2]+Q|0,c=s,s=Q=e>>>0>D>>>0?Q+1|0:Q,Q=c+Q|0,c=Q=(e=D)>>>0>(D=w+e|0)>>>0?Q+1|0:Q,i[r+56>>2]=D,i[r+60>>2]=Q,Q=ug(l,f,28),u=p,H=ug(l,f,34)^Q,u^=p,Q=((E|o)&f|E&o)+s|0,Q=(e=(v=(k|G)&l|k&G)+e|0)>>>0<v>>>0?Q+1|0:Q,s=e,e=ug(l,f,39)^H,Q=(p^u)+Q|0,u=s=s+e|0,s=Q=e>>>0>s>>>0?Q+1|0:Q,i[r+24>>2]=u,i[r+28>>2]=Q,Q=ug(D,c,14),e=p,H=ug(D,c,18)^Q,v=p^e,w=G,Q=C+(n^(n^a)&c)|0,Q=(e=h+(y^(t^y)&D)|0)>>>0<h>>>0?Q+1|0:Q,C=ug(D,c,41)^H,Q=(p^v)+Q|0,Q=C>>>0>(h=C+e|0)>>>0?Q+1|0:Q,h=(H=i[(e=G=(C=(5|B)<<3)+g|0)>>2])+h|0,Q=i[e+4>>2]+Q|0,Q=h>>>0<H>>>0?Q+1|0:Q,h=(e=i[(C=C+34784|0)>>2])+h|0,Q=i[C+4>>2]+Q|0,Q=e>>>0>h>>>0?Q+1|0:Q,h=w+(C=e=h)|0,w=E,E=Q,Q=w+Q|0,C=Q=C>>>0>h>>>0?Q+1|0:Q,i[r+48>>2]=h,i[r+52>>2]=Q,Q=ug(u,s,28),H=p,v=ug(u,s,34)^Q,H^=p,Q=((o|f)&s|o&f)+E|0,Q=(e=(_=(l|k)&u|l&k)+e|0)>>>0<_>>>0?Q+1|0:Q,E=e,e=ug(u,s,39)^v,Q=(p^H)+Q|0,v=E=E+e|0,E=Q=E>>>0<e>>>0?Q+1|0:Q,i[r+16>>2]=v,i[r+20>>2]=Q,Q=ug(h,C,14),e=p,H=ug(h,C,18)^Q,_=p^e,w=k,Q=n+(a^(a^c)&C)|0,Q=(e=y+(t^(t^D)&h)|0)>>>0<y>>>0?Q+1|0:Q,n=ug(h,C,41)^H,Q=(p^_)+Q|0,Q=n>>>0>(y=n+e|0)>>>0?Q+1|0:Q,y=(k=i[(e=R=(n=(6|B)<<3)+g|0)>>2])+y|0,Q=i[e+4>>2]+Q|0,Q=y>>>0<k>>>0?Q+1|0:Q,y=(e=i[(n=n+34784|0)>>2])+y|0,Q=i[n+4>>2]+Q|0,Q=e>>>0>y>>>0?Q+1|0:Q,y=w+(n=e=y)|0,w=o,o=Q,Q=w+Q|0,n=Q=n>>>0>y>>>0?Q+1|0:Q,i[r+40>>2]=y,i[r+44>>2]=Q,Q=ug(v,E,28),k=p,H=ug(v,E,34)^Q,k^=p,Q=((f|s)&E|f&s)+o|0,Q=(e=(_=(u|l)&v|u&l)+e|0)>>>0<_>>>0?Q+1|0:Q,o=e,e=ug(v,E,39)^H,Q=(p^k)+Q|0,_=o=o+e|0,o=Q=o>>>0<e>>>0?Q+1|0:Q,i[r+8>>2]=_,i[r+12>>2]=Q,Q=ug(y,n,14),e=p,k=ug(y,n,18)^Q,H=p^e,w=l,Q=a+(c^(C^c)&n)|0,Q=(e=t+(D^(h^D)&y)|0)>>>0<t>>>0?Q+1|0:Q,a=ug(y,n,41)^k,Q=(p^H)+Q|0,Q=a>>>0>(t=a+e|0)>>>0?Q+1|0:Q,t=(l=i[(e=k=(a=(7|B)<<3)+g|0)>>2])+t|0,Q=i[e+4>>2]+Q|0,Q=t>>>0<l>>>0?Q+1|0:Q,t=(e=i[(a=a+34784|0)>>2])+t|0,Q=i[a+4>>2]+Q|0,Q=t>>>0<e>>>0?Q+1|0:Q,t=w+(a=e=t)|0,w=f,f=Q,Q=w+Q|0,a=Q=a>>>0>t>>>0?Q+1|0:Q,i[r+32>>2]=t,i[r+36>>2]=Q,Q=ug(_,o,28),l=p,H=ug(_,o,34)^Q,l^=p,Q=((E|s)&o|E&s)+f|0,Q=(e=(w=(u|v)&_|u&v)+e|0)>>>0<w>>>0?Q+1|0:Q,f=e,e=ug(_,o,39)^H,Q=(p^l)+Q|0,w=f=f+e|0,f=Q=e>>>0>f>>>0?Q+1|0:Q,i[r>>2]=w,i[r+4>>2]=Q,e=r,Q=ug(t,a,14),r=p,l=ug(t,a,18)^Q,H=p^r,Q=c+(C^(C^n)&a)|0,Q=(r=D+(h^(y^h)&t)|0)>>>0<D>>>0?Q+1|0:Q,c=ug(t,a,41)^l,Q=(p^H)+Q|0,Q=c>>>0>(D=c+r|0)>>>0?Q+1|0:Q,D=(l=i[(r=H=(c=(8|B)<<3)+g|0)>>2])+D|0,Q=i[r+4>>2]+Q|0,Q=D>>>0<l>>>0?Q+1|0:Q,D=(r=i[(c=c+34784|0)>>2])+D|0,Q=i[c+4>>2]+Q|0,Q=r>>>0>D>>>0?Q+1|0:Q,l=D,r=s,s=Q,Q=r+Q|0,r=Q=(c=D)>>>0>(D=c+u|0)>>>0?Q+1|0:Q,i[e+24>>2]=D,i[e+28>>2]=Q,c=e,Q=ug(w,f,28),e=p,u=ug(w,f,34)^Q,Y=p^e,e=(Q=l)+(l=(_|v)&w|_&v)|0,Q=((E|o)&f|E&o)+s|0,Q=e>>>0<l>>>0?Q+1|0:Q,s=e,e=ug(w,f,39)^u,Q=(p^Y)+Q|0,Y=s=s+e|0,s=Q=e>>>0>s>>>0?Q+1|0:Q,i[c+56>>2]=Y,i[c+60>>2]=Q,Q=ug(D,r,14),e=p,l=ug(D,r,18)^Q,u=p^e,Q=C+(n^(n^a)&r)|0,Q=(e=h+(y^(t^y)&D)|0)>>>0<h>>>0?Q+1|0:Q,C=ug(D,r,41)^l,Q=(p^u)+Q|0,Q=C>>>0>(h=C+e|0)>>>0?Q+1|0:Q,h=(u=i[(e=l=(C=(9|B)<<3)+g|0)>>2])+h|0,Q=i[e+4>>2]+Q|0,Q=h>>>0<u>>>0?Q+1|0:Q,h=(e=i[(C=C+34784|0)>>2])+h|0,Q=i[C+4>>2]+Q|0,Q=e>>>0>h>>>0?Q+1|0:Q,e=E,E=Q,Q=e+Q|0,e=Q=(C=h)>>>0>(h=C+v|0)>>>0?Q+1|0:Q,i[c+16>>2]=h,i[c+20>>2]=Q,Q=ug(Y,s,28),u=p,v=ug(Y,s,34)^Q,u^=p,Q=((o|f)&s|o&f)+E|0,Q=(C=(b=(w|_)&Y|w&_)+C|0)>>>0<b>>>0?Q+1|0:Q,E=C,C=ug(Y,s,39)^v,Q=(p^u)+Q|0,b=E=E+C|0,E=Q=E>>>0<C>>>0?Q+1|0:Q,i[c+48>>2]=b,i[c+52>>2]=Q,Q=ug(h,e,14),C=p,u=ug(h,e,18)^Q,v=p^C,Q=n+(a^(r^a)&e)|0,Q=(C=y+(t^(t^D)&h)|0)>>>0<y>>>0?Q+1|0:Q,n=C,C=ug(h,e,41)^u,Q=(p^v)+Q|0,Q=C>>>0>(y=n+C|0)>>>0?Q+1|0:Q,y=(u=i[(n=v=(C=(10|B)<<3)+g|0)>>2])+y|0,Q=i[n+4>>2]+Q|0,Q=y>>>0<u>>>0?Q+1|0:Q,y=(n=i[(C=C+34784|0)>>2])+y|0,Q=i[C+4>>2]+Q|0,Q=n>>>0>y>>>0?Q+1|0:Q,u=y,n=o,o=Q,Q=n+Q|0,n=Q=(C=y)>>>0>(y=C+_|0)>>>0?Q+1|0:Q,i[c+8>>2]=y,i[c+12>>2]=Q,C=c,Q=ug(b,E,28),c=p,_=ug(b,E,34)^Q,N=p^c,c=(Q=u)+(u=(w|Y)&b|w&Y)|0,Q=((f|s)&E|f&s)+o|0,Q=c>>>0<u>>>0?Q+1|0:Q,o=c,c=ug(b,E,39)^_,Q=(p^N)+Q|0,c=Q=(o=o+c|0)>>>0<c>>>0?Q+1|0:Q,i[C+40>>2]=o,i[C+44>>2]=Q,Q=ug(y,n,14),u=p,_=ug(y,n,18)^Q,N=p^u,m=w,Q=a+(r^(r^e)&n)|0,Q=(u=t+(D^(h^D)&y)|0)>>>0<t>>>0?Q+1|0:Q,a=ug(y,n,41)^_,Q=(p^N)+Q|0,Q=a>>>0>(t=a+u|0)>>>0?Q+1|0:Q,t=(w=i[(u=(a=(11|B)<<3)+g|0)>>2])+t|0,Q=i[u+4>>2]+Q|0,Q=t>>>0<w>>>0?Q+1|0:Q,t=(_=i[(a=a+34784|0)>>2])+t|0,Q=i[a+4>>2]+Q|0,Q=t>>>0<_>>>0?Q+1|0:Q,w=t,_=f,f=Q,Q=_+Q|0,a=Q=(a=t)>>>0>(t=m+a|0)>>>0?Q+1|0:Q,i[C>>2]=t,i[C+4>>2]=Q,_=C,Q=ug(o,c,28),C=p,N=ug(o,c,34)^Q,M=p^C,C=(Q=w)+(w=(Y|b)&o|Y&b)|0,Q=((E|s)&c|E&s)+f|0,Q=C>>>0<w>>>0?Q+1|0:Q,f=C,C=ug(o,c,39)^N,Q=(p^M)+Q|0,C=Q=C>>>0>(f=f+C|0)>>>0?Q+1|0:Q,i[_+32>>2]=f,i[_+36>>2]=Q,w=_,Q=ug(t,a,14),_=p,N=ug(t,a,18)^Q,M=p^_,m=Y,Q=r+(e^(n^e)&a)|0,Q=(_=D+(h^(y^h)&t)|0)>>>0<D>>>0?Q+1|0:Q,r=ug(t,a,41)^N,Q=(p^M)+Q|0,Q=r>>>0>(D=r+_|0)>>>0?Q+1|0:Q,D=(N=i[(Y=_=(r=(12|B)<<3)+g|0)>>2])+D|0,Q=i[Y+4>>2]+Q|0,Q=D>>>0<N>>>0?Q+1|0:Q,D=(Y=i[(r=r+34784|0)>>2])+D|0,Q=i[r+4>>2]+Q|0,Q=D>>>0<Y>>>0?Q+1|0:Q,Y=D,D=m+(r=D)|0,m=s,s=Q,Q=m+Q|0,N=D,D=Q=r>>>0>D>>>0?Q+1|0:Q,i[w+56>>2]=N,i[w+60>>2]=Q,r=w,Q=ug(f,C,28),w=p,M=ug(f,C,34)^Q,m=p^w,w=(Q=Y)+(Y=(o|b)&f|o&b)|0,Q=((E|c)&C|E&c)+s|0,Q=w>>>0<Y>>>0?Q+1|0:Q,s=w,w=ug(f,C,39)^M,Q=(p^m)+Q|0,Y=s=s+w|0,s=Q=s>>>0<w>>>0?Q+1|0:Q,i[r+24>>2]=Y,i[r+28>>2]=Q,w=r,Q=ug(N,D,14),r=p,M=ug(N,D,18)^Q,m=p^r,P=b,Q=e+(n^(n^a)&D)|0,Q=(r=h+(y^(t^y)&N)|0)>>>0<h>>>0?Q+1|0:Q,e=r,r=ug(N,D,41)^M,Q=(p^m)+Q|0,Q=r>>>0>(h=e+r|0)>>>0?Q+1|0:Q,r=(r=h)+(M=i[(h=(e=(13|B)<<3)+g|0)>>2])|0,Q=i[h+4>>2]+Q|0,Q=r>>>0<M>>>0?Q+1|0:Q,r=(b=i[(e=e+34784|0)>>2])+r|0,Q=i[e+4>>2]+Q|0,Q=r>>>0<b>>>0?Q+1|0:Q,b=r,e=r,m=E,E=Q,Q=m+Q|0,M=r=P+r|0,r=Q=r>>>0<e>>>0?Q+1|0:Q,i[w+48>>2]=M,i[w+52>>2]=Q,e=w,Q=ug(Y,s,28),w=p,m=ug(Y,s,34)^Q,P=p^w,w=(Q=b)+(b=(o|f)&Y|o&f)|0,Q=((C|c)&s|C&c)+E|0,Q=w>>>0<b>>>0?Q+1|0:Q,E=w,w=ug(Y,s,39)^m,Q=(p^P)+Q|0,b=E=E+w|0,E=Q=E>>>0<w>>>0?Q+1|0:Q,i[e+16>>2]=b,i[e+20>>2]=Q,Q=ug(M,r,14),w=p,m=ug(M,r,18)^Q,P=p^w,Q=n+(a^(a^D)&r)|0,Q=(w=y+(t^(t^N)&M)|0)>>>0<y>>>0?Q+1|0:Q,n=ug(M,r,41)^m,Q=(p^P)+Q|0,Q=n>>>0>(y=n+w|0)>>>0?Q+1|0:Q,n=(n=y)+(P=i[(y=(w=(14|B)<<3)+g|0)>>2])|0,Q=i[y+4>>2]+Q|0,Q=n>>>0<P>>>0?Q+1|0:Q,n=(m=i[(w=w+34784|0)>>2])+n|0,Q=i[w+4>>2]+Q|0,P=n,w=Q=n>>>0<m>>>0?Q+1|0:Q,Q=c+Q|0,m=n=o+n|0,o=Q=n>>>0<o>>>0?Q+1|0:Q,i[e+40>>2]=n,i[e+44>>2]=Q,n=e,Q=ug(b,E,28),c=p,e=ug(b,E,34)^Q,J=p^c,c=(Q=P)+(P=(f|Y)&b|f&Y)|0,Q=((C|s)&E|C&s)+w|0,Q=c>>>0<P>>>0?Q+1|0:Q,e=ug(b,E,39)^e,Q=(p^J)+Q|0,Q=e>>>0>(c=e+c|0)>>>0?Q+1|0:Q,e=c,c=Q,i[n+8>>2]=e,i[n+12>>2]=Q,Q=ug(m,o,14),n=p,P=ug(m,o,18)^Q,J=p^n,Q=a+(D^(r^D)&o)|0,Q=(w=t+(N^(N^M)&m)|0)>>>0<t>>>0?Q+1|0:Q,D=ug(m,o,41)^P,Q=(p^J)+Q|0,Q=(o=D+w|0)>>>0<D>>>0?Q+1|0:Q,o=(r=i[(a=D=(t=(15|B)<<3)+g|0)>>2])+o|0,Q=i[a+4>>2]+Q|0,Q=o>>>0<r>>>0?Q+1|0:Q,o=(a=i[(t=t+34784|0)>>2])+o|0,Q=i[t+4>>2]+Q|0,Q=o>>>0<a>>>0?Q+1|0:Q,t=f+(a=o)|0,o=Q,Q=C+Q|0,i[(n=I)+32>>2]=t,i[n+36>>2]=t>>>0<f>>>0?Q+1|0:Q,Q=ug(e,c,28),f=p,C=ug(e,c,34)^Q,n=p^f,Q=((E|s)&c|E&s)+o|0,s=(t=(E=a)+(a=(Y|b)&e|Y&b)|0)+(E=ug(e,c,39)^C)|0,Q=(p^n)+(a>>>0>t>>>0?Q+1|0:Q)|0,i[(f=I)>>2]=s,i[f+4>>2]=E>>>0>s>>>0?Q+1|0:Q,64==(0|B)){for(;s=g=(B=x<<3)+A|0,B=(E=i[(Q=I+B|0)>>2])+i[s>>2]|0,Q=i[s+4>>2]+i[Q+4>>2]|0,i[s>>2]=B,i[s+4>>2]=B>>>0<E>>>0?Q+1|0:Q,8!=(0|(x=x+1|0)););break}c=((B=B+16|0)<<3)+g|0,Y=s=i[y+4>>2],Q=s>>>6|0,s=((63&s)<<26|(b=i[y>>2])>>>6)^ug(b,s,19),Q^=p,s=(C=ug(b,Y,61)^s)+(E=w=i[l>>2])|0,Q=(f=i[l+4>>2])+(p^Q)|0,Q=E>>>0>s>>>0?Q+1|0:Q,s=(o=i[(E=g+L|0)>>2])+s|0,Q=i[E+4>>2]+Q|0,s=o>>>0>(C=s)>>>0?Q+1|0:Q,o=E=i[d+4>>2],Q=E>>>7|0,E=((127&E)<<25|(t=i[d>>2])>>>7)^ug(t,E,1),Q^=p,a=C,C=ug(t,o,8)^E,Q=(p^Q)+s|0,n=E=a+C|0,E=Q=E>>>0<C>>>0?Q+1|0:Q,i[c>>2]=n,i[c+4>>2]=Q,Q=i[(c=d)+76>>2]+o|0,C=t,o=(t=i[c+72>>2])>>>0>(C=s=C+t|0)>>>0?Q+1|0:Q,s=t=i[D+4>>2],Q=t>>>6|0,t=((63&t)<<26|(e=i[D>>2])>>>6)^ug(e,t,19),Q^=p,a=C,C=ug(e,s,61)^t,Q=(p^Q)+o|0,o=C>>>0>(a=t=a+C|0)>>>0?Q+1|0:Q,t=C=i[c+12>>2],Q=C>>>7|0,C=((127&C)<<25|(r=i[c+8>>2])>>>7)^ug(r,C,1),Q^=p,d=a,a=ug(r,t,8)^C,Q=(p^Q)+o|0,Q=(C=d+a|0)>>>0<a>>>0?Q+1|0:Q,a=C,o=Q,i[c+128>>2]=C,i[c+132>>2]=Q,c=U,C=t,Q=ug(n,E,19),U=p,t=Q,Q=E>>>6|0,E=(E=ug(n,E,61)^t^((63&E)<<26|n>>>6))+(n=d=i[u>>2])|0,Q=(t=i[u+4>>2])+(p^Q^U)|0,Q=E>>>0<n>>>0?Q+1|0:Q,n=E,Q=Q+C|0,r=E=E+r|0,E=E>>>0<n>>>0?Q+1|0:Q,n=C=i[F+4>>2],Q=C>>>7|0,C=((127&C)<<25|(U=i[F>>2])>>>7)^ug(U,C,1),Q^=p,m=r,r=ug(U,n,8)^C,Q=(p^Q)+E|0,Q=(C=m+r|0)>>>0<r>>>0?Q+1|0:Q,r=C,E=Q,i[c+128>>2]=C,i[c+132>>2]=Q,c=(Q=U)+(U=i[(C=F)+72>>2])|0,Q=i[C+76>>2]+n|0,n=Q=c>>>0<U>>>0?Q+1|0:Q,Q=ug(a,o,19),U=p,F=c,c=Q,Q=o>>>6|0,c=ug(a,o,61)^c^((63&o)<<26|a>>>6),Q=(p^Q^U)+n|0,U=o=F+c|0,o=o>>>0<c>>>0?Q+1|0:Q,c=n=i[C+12>>2],Q=n>>>7|0,n=((127&n)<<25|(a=i[C+8>>2])>>>7)^ug(a,n,1),Q^=p,F=ug(a,c,8)^n,Q=(p^Q)+o|0,Q=(n=F+U|0)>>>0<F>>>0?Q+1|0:Q,F=n,o=Q,i[C+128>>2]=n,i[C+132>>2]=Q,C=S,n=c,Q=ug(r,E,19),S=p,m=a,a=Q,Q=E>>>6|0,E=(E=ug(r,E,61)^a^((63&E)<<26|r>>>6))+(a=U=i[h>>2])|0,Q=(c=i[h+4>>2])+(p^Q^S)|0,Q=E>>>0<a>>>0?Q+1|0:Q,a=E,Q=Q+n|0,S=E=m+E|0,E=E>>>0<a>>>0?Q+1|0:Q,a=n=i[G+4>>2],Q=n>>>7|0,n=((127&n)<<25|(r=i[G>>2])>>>7)^ug(r,n,1),Q^=p,m=S,S=ug(r,a,8)^n,Q=(p^Q)+E|0,Q=(n=m+S|0)>>>0<S>>>0?Q+1|0:Q,S=n,E=Q,i[C+128>>2]=n,i[C+132>>2]=Q,C=(Q=r)+(r=i[(n=G)+72>>2])|0,Q=i[n+76>>2]+a|0,a=Q=C>>>0<r>>>0?Q+1|0:Q,Q=ug(F,o,19),r=p,G=C,m=Q,Q=(C=o)>>>6|0,C=m^((63&C)<<26|F>>>6)^ug(F,C,61),Q=(p^Q^r)+a|0,o=C>>>0>(r=o=G+C|0)>>>0?Q+1|0:Q,Q=(C=a=i[n+12>>2])>>>7|0,a=((127&C)<<25|(G=i[n+8>>2])>>>7)^ug(G,C,1),Q^=p,F=r,r=ug(G,C,8)^a,Q=(p^Q)+o|0,F=a=F+r|0,o=Q=r>>>0>a>>>0?Q+1|0:Q,i[n+128>>2]=a,i[n+132>>2]=Q,n=R,a=C,Q=ug(S,E,19),R=p,C=Q,Q=E>>>6|0,C=ug(S,E,61)^C^((63&E)<<26|S>>>6),Q=(p^Q^R)+s|0,Q=(E=C+e|0)>>>0<C>>>0?Q+1|0:Q,C=E,Q=Q+a|0,G=E=E+G|0,E=E>>>0<C>>>0?Q+1|0:Q,Q=(C=r=i[k+4>>2])>>>7|0,r=((127&C)<<25|(a=i[k>>2])>>>7)^ug(a,C,1),Q^=p,S=G,G=ug(a,C,8)^r,Q=(p^Q)+E|0,E=Q=(r=S+G|0)>>>0<G>>>0?Q+1|0:Q,i[n+128>>2]=r,i[n+132>>2]=Q,Q=i[(n=k)+76>>2]+C|0,a=(C=a=(G=i[n+72>>2])+a|0)>>>0<G>>>0?Q+1|0:Q,Q=ug(F,o,19),G=p,S=C,k=Q,Q=(C=o)>>>6|0,C=k^((63&C)<<26|F>>>6)^ug(F,C,61),Q=(p^Q^G)+a|0,F=o=S+C|0,o=C>>>0>o>>>0?Q+1|0:Q,Q=(C=a=i[n+12>>2])>>>7|0,a=((127&C)<<25|(G=i[n+8>>2])>>>7)^ug(G,C,1),Q^=p,S=F,F=ug(G,C,8)^a,Q=(p^Q)+o|0,Q=(a=S+F|0)>>>0<F>>>0?Q+1|0:Q,F=a,o=Q,i[n+128>>2]=a,i[n+132>>2]=Q,a=C,Q=ug(r,E,19),k=p,C=Q,Q=E>>>6|0,E=(E=ug(r,E,61)^C^((63&E)<<26|r>>>6))+(C=i[(n=H)+72>>2])|0,Q=i[n+76>>2]+(p^Q^k)|0,Q=E>>>0<C>>>0?Q+1|0:Q,C=E,Q=Q+a|0,C=Q=(E=E+G|0)>>>0<C>>>0?Q+1|0:Q,Q=ug(w,f,1),a=p,G=E,r=Q,Q=(E=f)>>>7|0,r=r^((127&E)<<25|w>>>7)^ug(w,E,8),Q=(p^Q^a)+C|0,a=E=G+r|0,E=Q=E>>>0<r>>>0?Q+1|0:Q,i[n+128>>2]=a,i[n+132>>2]=Q,Q=i[(C=l)+76>>2]+f|0,f=n=(r=i[C+72>>2])+w|0,n=n>>>0<r>>>0?Q+1|0:Q,Q=ug(F,o,19),r=p,w=f,f=Q,Q=o>>>6|0,f=ug(F,o,61)^f^((63&o)<<26|F>>>6),Q=(p^Q^r)+n|0,o=(r=o=w+f|0)>>>0<f>>>0?Q+1|0:Q,f=n=i[C+12>>2],Q=n>>>7|0,n=((127&n)<<25|(F=i[C+8>>2])>>>7)^ug(F,n,1),Q^=p,w=r,r=ug(F,f,8)^n,Q=(p^Q)+o|0,Q=(n=w+r|0)>>>0<r>>>0?Q+1|0:Q,r=n,o=Q,i[C+128>>2]=n,i[C+132>>2]=Q,n=f,Q=ug(a,E,19),G=p,C=Q,Q=E>>>6|0,E=(E=ug(a,E,61)^C^((63&E)<<26|a>>>6))+(f=i[(C=v)+72>>2])|0,Q=i[C+76>>2]+(p^Q^G)|0,Q=E>>>0<f>>>0?Q+1|0:Q,f=E,Q=Q+n|0,f=Q=(E=E+F|0)>>>0<f>>>0?Q+1|0:Q,Q=ug(d,t,1),n=p,w=E,a=Q,Q=(E=t)>>>7|0,a=a^((127&E)<<25|d>>>7)^ug(d,E,8),Q=(p^Q^n)+f|0,n=E=w+a|0,E=Q=E>>>0<a>>>0?Q+1|0:Q,i[C+128>>2]=n,i[C+132>>2]=Q,f=(a=i[(C=u)+72>>2])+d|0,Q=i[C+76>>2]+t|0,t=Q=a>>>0>f>>>0?Q+1|0:Q,Q=ug(r,o,19),a=p,w=f,f=Q,Q=o>>>6|0,f=ug(r,o,61)^f^((63&o)<<26|r>>>6),Q=(p^Q^a)+t|0,o=(a=o=w+f|0)>>>0<f>>>0?Q+1|0:Q,f=t=i[C+12>>2],Q=t>>>7|0,t=((127&t)<<25|(r=i[C+8>>2])>>>7)^ug(r,t,1),Q^=p,w=a,a=ug(r,f,8)^t,Q=(p^Q)+o|0,Q=a>>>0>(t=w+a|0)>>>0?Q+1|0:Q,a=t,o=Q,i[C+128>>2]=a,i[C+132>>2]=Q,C=f,Q=ug(n,E,19),d=p,f=Q,Q=E>>>6|0,E=(E=ug(n,E,61)^f^((63&E)<<26|n>>>6))+(f=i[(t=_)+72>>2])|0,Q=i[t+76>>2]+(p^Q^d)|0,Q=E>>>0<f>>>0?Q+1|0:Q,f=E,Q=Q+C|0,f=Q=(E=E+r|0)>>>0<f>>>0?Q+1|0:Q,Q=ug(U,c,1),C=p,r=E,n=Q,Q=(E=c)>>>7|0,n=n^((127&E)<<25|U>>>7)^ug(U,E,8),Q=(p^Q^C)+f|0,C=E=r+n|0,E=Q=E>>>0<n>>>0?Q+1|0:Q,i[t+128>>2]=C,i[t+132>>2]=Q,t=(n=i[(f=h)+72>>2])+U|0,Q=i[f+76>>2]+c|0,c=Q=n>>>0>t>>>0?Q+1|0:Q,Q=ug(a,o,19),n=p,r=t,t=Q,Q=o>>>6|0,t=ug(a,o,61)^t^((63&o)<<26|a>>>6),Q=(p^Q^n)+c|0,o=(n=o=r+t|0)>>>0<t>>>0?Q+1|0:Q,c=t=i[f+12>>2],Q=t>>>7|0,t=((127&t)<<25|(h=i[f+8>>2])>>>7)^ug(h,t,1),Q^=p,t=ug(h,c,8)^t,Q=(p^Q)+o|0,Q=t>>>0>(h=t+n|0)>>>0?Q+1|0:Q,t=h,o=Q,i[f+128>>2]=t,i[f+132>>2]=Q,h=(c=i[(f=y)+72>>2])+b|0,Q=i[f+76>>2]+Y|0,y=Q=c>>>0>h>>>0?Q+1|0:Q,Q=ug(C,E,19),c=p,a=h,n=Q,Q=E>>>6|0,h=ug(C,E,61)^n^((63&E)<<26|C>>>6),Q=(p^Q^c)+y|0,h=Q=(E=a+h|0)>>>0<h>>>0?Q+1|0:Q,Q=ug(e,s,1),y=p,C=E,a=Q,Q=(E=s)>>>7|0,E=C+(c=a^((127&E)<<25|e>>>7)^ug(e,E,8))|0,Q=(p^Q^y)+h|0,i[f+128>>2]=E,i[f+132>>2]=E>>>0<c>>>0?Q+1|0:Q,Q=i[(E=D)+76>>2]+s|0,s=f=(h=i[E+72>>2])+e|0,f=f>>>0<h>>>0?Q+1|0:Q,Q=ug(t,o,19),h=p,C=Q,Q=o>>>6|0,o=ug(t,o,61)^C^((63&o)<<26|t>>>6),Q=(p^Q^h)+f|0,s=o>>>0>(y=s=o+s|0)>>>0?Q+1|0:Q,D=((127&(f=h=i[E+12>>2]))<<25|(o=i[E+8>>2])>>>7)^ug(o,f,1),Q=p^f>>>7,D=(h=ug(o,f,8)^D)+y|0,Q=(p^Q)+s|0,i[E+128>>2]=D,i[E+132>>2]=h>>>0>D>>>0?Q+1|0:Q}}function G(A){var I,g,B,Q,E,i,a,r,o,e,t,f,c,y,s,w,h,D,u=0,l=0,F=0,G=0,k=0,_=0,H=0,Y=0,b=0,m=0,v=0,U=0,S=0,N=0,M=0,d=0,P=0,R=0,J=0,x=0,L=0,K=0,q=0,X=0,V=0,W=0,T=0,j=0,Z=0,O=0,z=0,$=0,AA=0,IA=0,gA=0,BA=0,QA=0,CA=0,EA=0;y=HI(A),s=n[A+2|0]|n[A+3|0]<<8|n[A+4|0]<<16|n[A+5|0]<<24,w=HI(A+5|0),h=p,IA=n[A+7|0]|n[A+8|0]<<8|n[A+9|0]<<16|n[A+10|0]<<24,gA=n[A+10|0]|n[A+11|0]<<8|n[A+12|0]<<16|n[A+13|0]<<24,D=HI(A+13|0),BA=p,M=n[A+15|0]|n[A+16|0]<<8|n[A+17|0]<<16|n[A+18|0]<<24,Z=HI(A+18|0),d=p,m=HI(A+21|0),_=n[A+23|0]|n[A+24|0]<<8|n[A+25|0]<<16|n[A+26|0]<<24,k=HI(A+26|0),l=p,AA=n[A+28|0]|n[A+29|0]<<8|n[A+30|0]<<16|n[A+31|0]<<24,q=n[A+31|0]|n[A+32|0]<<8|n[A+33|0]<<16|n[A+34|0]<<24,T=HI(A+34|0),W=p,P=n[A+36|0]|n[A+37|0]<<8|n[A+38|0]<<16|n[A+39|0]<<24,O=HI(A+39|0),J=p,Y=HI(A+42|0),G=n[A+44|0]|n[A+45|0]<<8|n[A+46|0]<<16|n[A+47|0]<<24,F=HI(A+47|0),u=2097151&((3&l)<<30|k>>>2),k=eg(I=2097151&((3&(H=p))<<30|F>>>2),0,136657,0)+u|0,l=p,l=u>>>0>k>>>0?l+1|0:l,F=eg(g=(n[A+49|0]|n[A+50|0]<<8|n[A+51|0]<<16|n[A+52|0]<<24)>>>7&2097151,0,-997805,-1),u=p+l|0,u=F>>>0>(k=F+k|0)>>>0?u+1|0:u,l=eg(B=(n[A+52|0]|n[A+53|0]<<8|n[A+54|0]<<16|n[A+55|0]<<24)>>>4&2097151,0,654183,0),F=p+u|0,F=l>>>0>(k=l+k|0)>>>0?F+1|0:F,u=k,l=HI(A+55|0),k=u+(l=eg(Q=2097151&((1&(k=p))<<31|l>>>1),0,470296,0))|0,u=p+F|0,u=l>>>0>k>>>0?u+1|0:u,F=eg(E=(n[A+57|0]|n[A+58|0]<<8|n[A+59|0]<<16|n[A+60|0]<<24)>>>6&2097151,0,666643,0),l=p+u|0,U=l=F>>>0>(k=F+k|0)>>>0?l+1|0:l,F=l,b=G>>>5&2097151,l=2097151&Y,G=eg(i=(n[A+60|0]|n[A+61|0]<<8|n[A+62|0]<<16|n[A+63|0]<<24)>>>3|0,0,-683901,-1)+l|0,u=p,Y=G,S=u=l>>>0>G>>>0?u+1|0:u,N=(u=G)- -1048576|0,L=G=S-((u>>>0<4293918720)-1|0)|0,u=G>>21,r=b=(G=(2097151&G)<<11|N>>>21)+b|0,V=l=G>>>0>b>>>0?u+1|0:u,u=eg(b,l,-683901,-1),l=p+F|0,j=H=u+k|0,v=u>>>0>H>>>0?l+1|0:l,F=_>>>5&2097151,H=eg(I,0,-997805,-1)+F|0,u=p,u=F>>>0>H>>>0?u+1|0:u,l=eg(g,0,654183,0),F=p+u|0,F=l>>>0>(H=l+H|0)>>>0?F+1|0:F,u=eg(B,0,470296,0),l=p+F|0,l=u>>>0>(H=u+H|0)>>>0?l+1|0:l,F=eg(Q,0,666643,0),u=p+l|0,F=F>>>0>(_=H=F+H|0)>>>0?u+1|0:u,u=2097151&m,H=eg(I,0,654183,0)+u|0,l=p,l=u>>>0>H>>>0?l+1|0:l,G=(u=H)+(H=eg(g,0,470296,0))|0,u=p+l|0,u=G>>>0<H>>>0?u+1|0:u,H=eg(B,0,666643,0),l=p+u|0,b=G=H+G|0,G=l=G>>>0<H>>>0?l+1|0:l,z=(u=b)- -1048576|0,R=H=l-((u>>>0<4293918720)-1|0)|0,F=(u=H>>>21|0)+F|0,m=F=(l=(2097151&H)<<11|z>>>21)>>>0>(_=H=l+_|0)>>>0?F+1|0:F,K=(u=_)- -1048576|0,f=k- -1048576|0,U=U-((k>>>0<4293918720)-1|0)|0,l=(u=(F=x=F-((u>>>0<4293918720)-1|0)|0)>>21)+v|0,U=(l=(k=(2097151&F)<<11|K>>>21)>>>0>(x=k+j|0)>>>0?l+1|0:l)-(((u=-2097152&f)>>>0>(k=x)>>>0)+(H=U)|0)|0,QA=(u=k-u|0)-(l=-2097152&(c=u- -1048576|0))|0,CA=U-((u>>>0<l>>>0)+(k=U-((u>>>0<4293918720)-1|0)|0)|0)|0,l=eg(r,V,136657,0)+_|0,u=m+p|0,u=l>>>0<_>>>0?u+1|0:u,$=(_=l)-(l=-2097152&K)|0,j=u-((l>>>0>_>>>0)+F|0)|0,U=Y-(u=-2097152&N)|0,v=S-((u>>>0>Y>>>0)+L|0)|0,u=2097151&((7&J)<<29|O>>>3),F=eg(i,0,136657,0)+u|0,l=p,l=u>>>0>F>>>0?l+1|0:l,_=(u=F)+(F=eg(E,0,-683901,-1))|0,u=p+l|0,Y=_,_=F>>>0>_>>>0?u+1|0:u,u=eg(Q,0,-683901,-1),l=p,F=u,l=(u=P>>>6&2097151)>>>0>(F=F+u|0)>>>0?l+1|0:l,m=(u=eg(i,0,-997805,-1))+F|0,F=p+l|0,F=u>>>0>m>>>0?F+1|0:F,l=eg(E,0,136657,0),u=p+F|0,K=l=(N=u=l>>>0>(m=l+m|0)>>>0?u+1|0:u)-(((u=m)>>>0<4293918720)-1|0)|0,u=(2097151&l)<<11|(O=u- -1048576|0)>>>21,l=(l>>21)+_|0,S=l=u>>>0>(Y=u+Y|0)>>>0?l+1|0:l,x=(u=Y)- -1048576|0,L=l=l-((u>>>0<4293918720)-1|0)|0,u=(F=l>>21)+v|0,o=_=(l=(2097151&l)<<11|x>>>21)+U|0,X=u=l>>>0>_>>>0?u+1|0:u,l=eg(_,u,-683901,-1),u=p+j|0,EA=F=l+$|0,P=l>>>0>F>>>0?u+1|0:u,v=b,u=2097151&((7&d)<<29|Z>>>3),F=eg(I,0,470296,0)+u|0,l=p,l=u>>>0>F>>>0?l+1|0:l,u=eg(g,0,666643,0),l=p+l|0,U=F=u+F|0,F=u>>>0>F>>>0?l+1|0:l,_=M>>>6&2097151,b=eg(I,0,666643,0)+_|0,u=p,d=_=(M=u=_>>>0>b>>>0?u+1|0:u)-(((u=b)>>>0<4293918720)-1|0)|0,l=(l=_>>>21|0)+F|0,J=l=(u=(2097151&_)<<11|($=u- -1048576|0)>>>21)>>>0>(_=u+U|0)>>>0?l+1|0:l,Z=l-(((u=_)>>>0<4293918720)-1|0)|0,j=u- -1048576|0,a=Y-(u=-2097152&x)|0,e=F=S-((u>>>0>Y>>>0)+L|0)|0,u=((U=Z)>>>21|0)+G|0,u=(Y=(2097151&U)<<11|j>>>21)>>>0>(v=Y+v|0)>>>0?u+1|0:u,v=(G=eg(r,V,-997805,-1))+((Y=v)-(l=-2097152&z)|0)|0,l=p+(u-((8191&R)+(l>>>0>Y>>>0)|0)|0)|0,l=G>>>0>v>>>0?l+1|0:l,u=eg(o,X,136657,0),l=p+l|0,l=u>>>0>(G=u+v|0)>>>0?l+1|0:l,F=eg(a,F,-683901,-1),u=p+l|0,S=u=F>>>0>(G=F+G|0)>>>0?u+1|0:u,x=(u=G)- -1048576|0,L=F=S-((u>>>0<4293918720)-1|0)|0,l=(u=F>>21)+P|0,v=l=(F=(2097151&F)<<11|x>>>21)>>>0>(Y=F+EA|0)>>>0?l+1|0:l,R=(u=F=Y)- -1048576|0,u=(u=(Y=P=l-((u>>>0<4293918720)-1|0)|0)>>21)+CA|0,QA=P=(l=(2097151&Y)<<11|R>>>21)+QA|0,P=l>>>0>P>>>0?u+1|0:u,CA=F-(u=-2097152&R)|0,EA=v-((u>>>0>F>>>0)+Y|0)|0,Z=G-(u=-2097152&x)|0,z=S-((u>>>0>G>>>0)+L|0)|0,u=eg(r,V,654183,0),F=p+(J-((8191&U)+((l=-2097152&j)>>>0>_>>>0)|0)|0)|0,F=u>>>0>(G=u+(_-l|0)|0)>>>0?F+1|0:F,l=eg(o,X,-997805,-1),u=p+F|0,u=l>>>0>(G=l+G|0)>>>0?u+1|0:u,F=eg(a,e,136657,0),l=p+u|0,x=G=F+G|0,Y=F>>>0>G>>>0?l+1|0:l,R=m-(u=-2097152&O)|0,J=N-((u>>>0>m>>>0)+K|0)|0,l=2097151&((1&W)<<31|T>>>1),G=eg(B,0,-683901,-1)+l|0,u=p,u=l>>>0>G>>>0?u+1|0:u,l=eg(Q,0,136657,0),u=p+u|0,u=l>>>0>(F=l+G|0)>>>0?u+1|0:u,G=(l=F)+(F=eg(i,0,654183,0))|0,l=p+u|0,l=F>>>0>G>>>0?l+1|0:l,u=eg(E,0,-997805,-1),l=p+l|0,m=F=u+G|0,G=u>>>0>F>>>0?l+1|0:l,u=eg(g,0,-683901,-1),F=p,l=u,F=(u=q>>>4&2097151)>>>0>(l=l+u|0)>>>0?F+1|0:F,_=(u=l)+(l=eg(B,0,136657,0))|0,u=p+F|0,u=l>>>0>_>>>0?u+1|0:u,F=eg(Q,0,-997805,-1),l=p+u|0,l=F>>>0>(_=F+_|0)>>>0?l+1|0:l,F=eg(i,0,470296,0),u=p+l|0,u=F>>>0>(_=F+_|0)>>>0?u+1|0:u,F=eg(E,0,654183,0),l=p+u|0,S=l=F>>>0>(_=F+_|0)>>>0?l+1|0:l,K=(u=_)- -1048576|0,L=F=l-((u>>>0<4293918720)-1|0)|0,u=(u=F>>21)+G|0,G=F=(l=(2097151&F)<<11|K>>>21)+m|0,v=u=l>>>0>F>>>0?u+1|0:u,U=(u=F)- -1048576|0,m=F=v-((u>>>0<4293918720)-1|0)|0,l=(u=F>>21)+J|0,t=N=(F=(2097151&F)<<11|U>>>21)+R|0,q=l=F>>>0>N>>>0?l+1|0:l,u=eg(N,l,-683901,-1),F=p+Y|0,J=l=u+x|0,Y=u>>>0>l>>>0?F+1|0:F,T=G-(u=-2097152&U)|0,W=m=v-((u>>>0>G>>>0)+m|0)|0,F=(u=eg(r,V,470296,0))+(b-(l=-2097152&$)|0)|0,l=p+(M-((2047&d)+(l>>>0>b>>>0)|0)|0)|0,l=u>>>0>F>>>0?l+1|0:l,u=eg(o,X,654183,0),l=p+l|0,l=u>>>0>(F=u+F|0)>>>0?l+1|0:l,G=(u=eg(a,e,-997805,-1))+F|0,F=p+l|0,F=u>>>0>G>>>0?F+1|0:F,l=eg(N,q,136657,0),u=p+F|0,u=l>>>0>(G=l+G|0)>>>0?u+1|0:u,F=eg(T,m,-683901,-1),l=p+u|0,v=l=F>>>0>(G=F+G|0)>>>0?l+1|0:l,d=(u=G)- -1048576|0,m=F=l-((u>>>0<4293918720)-1|0)|0,u=(u=F>>21)+Y|0,Y=u=(l=(2097151&F)<<11|d>>>21)>>>0>(F=l+J|0)>>>0?u+1|0:u,U=(u=F)- -1048576|0,l=(u=(b=J=Y-((u>>>0<4293918720)-1|0)|0)>>21)+z|0,Z=M=(J=(2097151&b)<<11|U>>>21)+Z|0,J=M>>>0<J>>>0?l+1|0:l,z=F-(u=-2097152&U)|0,O=Y-((u>>>0>F>>>0)+b|0)|0,x=G-(u=-2097152&d)|0,N=v-((u>>>0>G>>>0)+m|0)|0,l=2097151&((1&BA)<<31|D>>>1),G=eg(r,V,666643,0)+l|0,u=p,u=l>>>0>G>>>0?u+1|0:u,F=eg(o,X,470296,0),l=p+u|0,l=F>>>0>(G=F+G|0)>>>0?l+1|0:l,F=eg(a,e,654183,0),u=p+l|0,u=F>>>0>(G=F+G|0)>>>0?u+1|0:u,l=eg(t,q,-997805,-1),F=p+u|0,F=l>>>0>(G=l+G|0)>>>0?F+1|0:F,u=eg(T,W,136657,0),l=p+F|0,m=G=u+G|0,b=u>>>0>G>>>0?l+1|0:l,Y=_-(u=-2097152&K)|0,_=S-((u>>>0>_>>>0)+L|0)|0,u=eg(I,0,-683901,-1),l=p,F=u,l=(u=AA>>>7&2097151)>>>0>(F=F+u|0)>>>0?l+1|0:l,G=(u=eg(g,0,136657,0))+F|0,F=p+l|0,F=u>>>0>G>>>0?F+1|0:F,l=eg(B,0,-997805,-1),u=p+F|0,u=l>>>0>(G=l+G|0)>>>0?u+1|0:u,F=eg(Q,0,654183,0),l=p+u|0,l=F>>>0>(G=F+G|0)>>>0?l+1|0:l,F=eg(i,0,666643,0),u=p+l|0,u=F>>>0>(G=F+G|0)>>>0?u+1|0:u,F=eg(E,0,470296,0),l=p+u|0,u=l=F>>>0>(G=F+G|0)>>>0?l+1|0:l,l=H>>21,G=(H=(2097151&H)<<11|f>>>21)+(F=G)|0,F=u+l|0,L=F=G>>>0<H>>>0?F+1|0:F,S=(u=G)- -1048576|0,v=F=F-((u>>>0<4293918720)-1|0)|0,u=(l=F>>21)+_|0,V=H=(F=(2097151&F)<<11|S>>>21)+Y|0,R=u=F>>>0>H>>>0?u+1|0:u,u=eg(H,u,-683901,-1),l=p+b|0,b=F=u+m|0,H=u>>>0>F>>>0?l+1|0:l,u=eg(o,X,666643,0),F=p,l=u,F=(u=gA>>>4&2097151)>>>0>(l=l+u|0)>>>0?F+1|0:F,_=(u=l)+(l=eg(a,e,470296,0))|0,u=p+F|0,u=l>>>0>_>>>0?u+1|0:u,F=eg(t,q,654183,0),l=p+u|0,l=F>>>0>(_=F+_|0)>>>0?l+1|0:l,u=eg(T,W,-997805,-1),l=p+l|0,l=u>>>0>(F=u+_|0)>>>0?l+1|0:l,_=(u=F)+(F=eg(V,R,136657,0))|0,u=p+l|0,m=u=F>>>0>_>>>0?u+1|0:u,M=(u=_)- -1048576|0,Y=F=m-((u>>>0<4293918720)-1|0)|0,u=(l=F>>21)+H|0,F=u=(F=(2097151&F)<<11|M>>>21)>>>0>(H=b=F+b|0)>>>0?u+1|0:u,d=(u=H)- -1048576|0,u=(l=(b=U=F-((u>>>0<4293918720)-1|0)|0)>>21)+N|0,$=K=(U=(2097151&b)<<11|d>>>21)+x|0,U=U>>>0>K>>>0?u+1|0:u,u=G-(l=-2097152&S)|0,G=L-((l>>>0>G>>>0)+v|0)|0,v=u,u=(u=k>>21)+G|0,S=u=(l=(2097151&k)<<11|c>>>21)>>>0>(G=k=v+l|0)>>>0?u+1|0:u,K=(u=G)- -1048576|0,L=k=S-((u>>>0<4293918720)-1|0)|0,N=u=k>>21,u=eg(X=(2097151&k)<<11|K>>>21,u,-683901,-1),l=p+F|0,l=u>>>0>(k=u+H|0)>>>0?l+1|0:l,j=(F=k)-(u=-2097152&d)|0,x=l-((u>>>0>F>>>0)+b|0)|0,l=eg(X,N,136657,0)+_|0,u=m+p|0,u=l>>>0<_>>>0?u+1|0:u,AA=(F=l)-(l=-2097152&M)|0,M=u-((l>>>0>F>>>0)+Y|0)|0,u=eg(a,e,666643,0),l=p,F=u,l=(u=IA>>>7&2097151)>>>0>(F=F+u|0)>>>0?l+1|0:l,k=(u=eg(t,q,470296,0))+F|0,F=p+l|0,F=u>>>0>k>>>0?F+1|0:F,l=eg(T,W,654183,0),u=p+F|0,u=l>>>0>(k=l+k|0)>>>0?u+1|0:u,l=eg(V,R,-997805,-1),u=p+u|0,Y=F=l+k|0,F=l>>>0>F>>>0?u+1|0:u,u=2097151&((3&h)<<30|w>>>2),k=eg(t,q,666643,0)+u|0,l=p,l=u>>>0>k>>>0?l+1|0:l,u=eg(T,W,470296,0),l=p+l|0,l=u>>>0>(k=u+k|0)>>>0?l+1|0:l,H=(u=k)+(k=eg(V,R,654183,0))|0,u=p+l|0,b=u=k>>>0>H>>>0?u+1|0:u,d=(u=k=H)- -1048576|0,u=(l=(_=H=b-((u>>>0<4293918720)-1|0)|0)>>21)+F|0,m=Y=(H=(2097151&_)<<11|d>>>21)+Y|0,F=u=H>>>0>Y>>>0?u+1|0:u,Y=(u=Y)- -1048576|0,u=(l=(H=v=F-((u>>>0<4293918720)-1|0)|0)>>21)+M|0,IA=q=(v=(2097151&H)<<11|Y>>>21)+AA|0,v=v>>>0>q>>>0?u+1|0:u,u=eg(X,N,-997805,-1),F=p+F|0,F=u>>>0>(l=u+m|0)>>>0?F+1|0:F,gA=l-(u=-2097152&Y)|0,BA=F-((u>>>0>l>>>0)+H|0)|0,u=eg(X,N,654183,0)+k|0,l=b+p|0,l=u>>>0<k>>>0?l+1|0:l,AA=(F=u)-(u=-2097152&d)|0,q=l-((u>>>0>F>>>0)+_|0)|0,u=eg(T,W,666643,0),F=p,l=u,F=(u=s>>>5&2097151)>>>0>(l=l+u|0)>>>0?F+1|0:F,k=(u=l)+(l=eg(V,R,470296,0))|0,u=p+F|0,_=k,F=l>>>0>k>>>0?u+1|0:u,l=2097151&y,k=eg(V,R,666643,0)+l|0,u=p,H=k,Y=k=(m=u=l>>>0>k>>>0?u+1|0:u)-(((u=k)>>>0<4293918720)-1|0)|0,F=(l=k>>21)+F|0,b=F=(u=(2097151&k)<<11|(M=u- -1048576|0)>>>21)>>>0>(k=u+_|0)>>>0?F+1|0:F,d=(u=k)- -1048576|0,_=F=F-((u>>>0<4293918720)-1|0)|0,u=(l=F>>21)+q|0,F=u=(F=(2097151&F)<<11|d>>>21)>>>0>(R=F+AA|0)>>>0?u+1|0:u,u=eg(X,N,470296,0)+k|0,l=b+p|0,_=(l=u>>>0<k>>>0?l+1|0:l)-(((k=-2097152&d)>>>0>(b=u)>>>0)+_|0)|0,b=u=u-k|0,k=(l=eg(X,N,666643,0))+(H-(u=-2097152&M)|0)|0,u=p+(m-((u>>>0>H>>>0)+Y|0)|0)|0,H=k,l=(l=(u=l>>>0>k>>>0?u+1|0:u)>>21)+_|0,W=k=b+(u=(2097151&u)<<11|k>>>21)|0,F=(u=(l=u>>>0>k>>>0?l+1|0:l)>>21)+F|0,_=k=(l=(2097151&l)<<11|k>>>21)+R|0,l=(F=l>>>0>(u=k)>>>0?F+1|0:F)>>21,F=(2097151&F)<<11|u>>>21,u=l+BA|0,Y=k=F+gA|0,F=(u=F>>>0>(l=k)>>>0?u+1|0:u)>>21,u=(2097151&u)<<11|l>>>21,l=F+v|0,v=k=u+IA|0,u=(u=(l=u>>>0>(F=k)>>>0?l+1|0:l)>>21)+x|0,R=F=(l=(2097151&l)<<11|F>>>21)+j|0,l=(l=(u=l>>>0>F>>>0?u+1|0:u)>>21)+U|0,N=F=(u=(2097151&u)<<11|F>>>21)+$|0,u=(l=u>>>0>F>>>0?l+1|0:l)>>21,l=(2097151&l)<<11|F>>>21,F=u+O|0,M=k=l+z|0,l=(F=l>>>0>(u=k)>>>0?F+1|0:F)>>21,F=(2097151&F)<<11|u>>>21,u=l+J|0,d=k=F+Z|0,F=(u=F>>>0>(l=k)>>>0?u+1|0:u)>>21,u=(2097151&u)<<11|l>>>21,l=F+EA|0,J=k=u+CA|0,u=(u=(l=u>>>0>(F=k)>>>0?l+1|0:l)>>21)+P|0,U=F=(l=(2097151&l)<<11|F>>>21)+QA|0,l=(u=l>>>0>F>>>0?u+1|0:u)>>21,k=(2097151&u)<<11|F>>>21,u=G-(F=-2097152&K)|0,F=(S-((F>>>0>G>>>0)+L|0)|0)+l|0,L=k=k+u|0,P=(2097151&(F=u>>>0>(l=k)>>>0?F+1|0:F))<<11|l>>>21,m=u=F>>21,l=2097151&H,F=eg(P,u,666643,0)+l|0,u=p,b=F,k=u=l>>>0>F>>>0?u+1|0:u,C[0|A]=F,C[A+1|0]=(255&u)<<24|F>>>8,u=2097151&W,F=eg(P,m,470296,0)+u|0,l=p,l=u>>>0>F>>>0?l+1|0:l,H=F,G=(2097151&(F=k))<<11|b>>>21,F=(u=F>>21)+l|0,F=G>>>0>(S=H+G|0)>>>0?F+1|0:F,G=S,C[A+4|0]=(2047&F)<<21|G>>>11,u=l=F,F=G,C[A+3|0]=(7&u)<<29|F>>>3,F=2097151&_,_=eg(P,m,654183,0)+F|0,u=p,u=F>>>0>_>>>0?u+1|0:u,F=_,_=(2097151&l)<<11|G>>>21,l=(l>>21)+u|0,l=_>>>0>(S=F+_|0)>>>0?l+1|0:l,_=S,u=l,C[A+6|0]=(63&u)<<26|_>>>6,H=0,F=31&((65535&k)<<16|b>>>16),l=b=2097151&G,C[A+2|0]=F|l<<5,F=2097151&Y,G=eg(P,m,-997805,-1)+F|0,l=p,F=l=F>>>0>G>>>0?l+1|0:l,F=(l=u>>21)+F|0,Y=G=(u=(2097151&u)<<11|_>>>21)+G|0,F=u>>>0>G>>>0?F+1|0:F,C[A+9|0]=(511&F)<<23|G>>>9,u=l=F,F=G,C[A+8|0]=(1&u)<<31|F>>>1,G=0,F=_&=2097151,C[A+5|0]=(524287&H)<<13|b>>>19|F<<2,F=2097151&v,H=eg(P,m,136657,0)+F|0,u=p,u=(u=F>>>0>H>>>0?u+1|0:u)+(F=l>>21)|0,b=H=(l=(2097151&l)<<11|Y>>>21)+H|0,u=l>>>0>H>>>0?u+1|0:u,l=H,C[A+12|0]=(4095&u)<<20|l>>>12,F=u,C[A+11|0]=(15&u)<<28|l>>>4,H=0,l=v=2097151&Y,C[A+7|0]=(16383&G)<<18|_>>>14|l<<7,u=2097151&R,G=eg(P,m,-683901,-1)+u|0,l=p,l=u>>>0>G>>>0?l+1|0:l,l=(u=F>>21)+l|0,_=G=(F=(2097151&F)<<11|b>>>21)+G|0,u=l=F>>>0>G>>>0?l+1|0:l,C[A+14|0]=(127&u)<<25|G>>>7,G=0,F=Y=2097151&b,C[A+10|0]=(131071&H)<<15|v>>>17|F<<4,l=u>>21,F=(u=(2097151&u)<<11|_>>>21)>>>0>(b=u+(2097151&N)|0)>>>0?l+1|0:l,C[A+17|0]=(1023&F)<<22|b>>>10,u=F,F=b,C[A+16|0]=(3&u)<<30|F>>>2,F=m=2097151&_,C[A+13|0]=(1048575&G)<<12|Y>>>20|F<<1,F=(2097151&u)<<11|b>>>21,u>>=21,u=F>>>0>(_=F+(2097151&M)|0)>>>0?u+1|0:u,l=_,C[A+20|0]=(8191&u)<<19|l>>>13,C[A+19|0]=(31&u)<<27|l>>>5,l=Y=2097151&b,C[A+15|0]=(32767&H)<<17|m>>>15|l<<6,k=(2097151&u)<<11|_>>>21,u=l=u>>21,k=u=k>>>0>(m=k+(2097151&d)|0)>>>0?u+1|0:u,C[A+21|0]=m,u=_,C[A+18|0]=(262143&G)<<14|Y>>>18|u<<3,u=k,C[A+22|0]=(255&u)<<24|m>>>8,F=u,u>>=21,F=(_=(H=(2097151&F)<<11|m>>>21)+(2097151&J)|0)>>>0<H>>>0?u+1|0:u,C[(l=A)+25|0]=(2047&F)<<21|_>>>11,u=F,F=_,C[l+24|0]=(7&u)<<29|F>>>3,F=l,H=(2097151&u)<<11|_>>>21,u>>=21,l=u=H>>>0>(G=b=H+(2097151&U)|0)>>>0?u+1|0:u,C[F+27|0]=(63&u)<<26|G>>>6,H=0,u=b=2097151&_,C[F+23|0]=31&((65535&k)<<16|m>>>16)|u<<5,l=(u=l)>>21,l=(u=(2097151&u)<<11|G>>>21)>>>0>(k=u+(2097151&L)|0)>>>0?l+1|0:l,F=k,C[A+31|0]=(131071&l)<<15|F>>>17,u=l,C[A+30|0]=(511&u)<<23|F>>>9,C[A+29|0]=(1&u)<<31|F>>>1,l=0,G&=2097151,C[A+26|0]=(524287&H)<<13|b>>>19|G<<2,C[A+28|0]=(16383&l)<<18|G>>>14|F<<7}function k(A){var I,g=0,B=0,Q=0,C=0,E=0,r=0,o=0,t=0,f=0,c=0,y=0,s=0,w=0;h=I=h-16|0;A:{I:{g:{B:{Q:{C:{E:{i:{n:{a:{r:{o:{if((A|=0)>>>0<=244){if(3&(g=(E=i[8961])>>>(B=(t=A>>>0<11?16:A+11&-8)>>>3|0)|0)){A=(C=i[35892+(g=(Q=B+(1&(-1^g))|0)<<3)>>2])+8|0,(0|(B=i[C+8>>2]))!=(0|(g=g+35884|0))?(i[B+12>>2]=g,i[g+8>>2]=B):(s=35844,w=vI(-2,Q)&E,i[s>>2]=w),g=Q<<3,i[C+4>>2]=3|g,i[4+(g=g+C|0)>>2]=1|i[g+4>>2];break A}if((c=i[8963])>>>0>=t>>>0)break o;if(g){B=A=(g=(0-(A=(0-(A=2<<B)|A)&g<<B)&A)-1|0)>>>12&16,B|=A=(g=g>>>A|0)>>>5&8,B|=A=(g=g>>>A|0)>>>2&4,r=i[35892+(A=(B=((B|=A=(g=g>>>A|0)>>>1&2)|(A=(g=g>>>A|0)>>>1&1))+(g>>>A|0)|0)<<3)>>2],(0|(g=i[r+8>>2]))!=(0|(A=A+35884|0))?(i[g+12>>2]=A,i[A+8>>2]=g):(E=vI(-2,B)&E,i[8961]=E),A=r+8|0,i[r+4>>2]=3|t,C=(g=B<<3)-t|0,i[4+(Q=r+t|0)>>2]=1|C,i[g+r>>2]=C,c&&(B=35884+((g=c>>>3|0)<<3)|0,r=i[8966],(g=1<<g)&E?g=i[B+8>>2]:(i[8961]=g|E,g=B),i[B+8>>2]=r,i[g+12>>2]=r,i[r+12>>2]=B,i[r+8>>2]=g),i[8966]=Q,i[8963]=C;break A}if(!(o=i[8962]))break o;for(B=A=(g=(o&0-o)-1|0)>>>12&16,B|=A=(g=g>>>A|0)>>>5&8,B|=A=(g=g>>>A|0)>>>2&4,g=i[36148+(((B|=A=(g=g>>>A|0)>>>1&2)|(A=(g=g>>>A|0)>>>1&1))+(g>>>A|0)<<2)>>2],C=(-8&i[g+4>>2])-t|0,B=g;(A=i[B+16>>2])||(A=i[B+20>>2]);)C=(Q=(B=(-8&i[A+4>>2])-t|0)>>>0<C>>>0)?B:C,g=Q?A:g,B=A;if((f=g+t|0)>>>0<=g>>>0)break r;if(y=i[g+24>>2],(0|(Q=i[g+12>>2]))!=(0|g)){A=i[g+8>>2],i[A+12>>2]=Q,i[Q+8>>2]=A;break I}if(!(A=i[(B=g+20|0)>>2])){if(!(A=i[g+16>>2]))break a;B=g+16|0}for(;r=B,Q=A,(A=i[(B=A+20|0)>>2])||(B=Q+16|0,A=i[Q+16>>2]););i[r>>2]=0;break I}if(t=-1,!(A>>>0>4294967231)&&(t=-8&(A=A+11|0),f=i[8962])){E=31,C=0-t|0,t>>>0<=16777215&&(A=A>>>8|0,A<<=r=A+1048320>>>16&8,E=28+((A=((A<<=B=A+520192>>>16&4)<<(g=A+245760>>>16&2)>>>15|0)-(g|B|r)|0)<<1|t>>>A+21&1)|0);e:{t:{if(B=i[36148+(E<<2)>>2])for(A=0,g=t<<(31==(0|E)?0:25-(E>>>1|0)|0);;){if(!((r=(-8&i[B+4>>2])-t|0)>>>0>=C>>>0||(Q=B,C=r))){C=0,A=B;break t}if(r=i[B+20>>2],B=i[16+((g>>>29&4)+B|0)>>2],A=r?(0|r)==(0|B)?A:r:A,g<<=1,!B)break}else A=0;if(!(A|Q)){if(!(A=(0-(A=2<<E)|A)&f))break o;B=A=(g=(A&0-A)-1|0)>>>12&16,B|=A=(g=g>>>A|0)>>>5&8,B|=A=(g=g>>>A|0)>>>2&4,A=i[36148+(((B|=A=(g=g>>>A|0)>>>1&2)|(A=(g=g>>>A|0)>>>1&1))+(g>>>A|0)<<2)>>2]}if(!A)break e}for(;C=(B=(g=(-8&i[A+4>>2])-t|0)>>>0<C>>>0)?g:C,Q=B?A:Q,A=(g=i[A+16>>2])||i[A+20>>2];);}if(!(!Q|i[8963]-t>>>0<=C>>>0)){if((o=Q+t|0)>>>0<=Q>>>0)break r;if(E=i[Q+24>>2],(0|Q)!=(0|(g=i[Q+12>>2]))){A=i[Q+8>>2],i[A+12>>2]=g,i[g+8>>2]=A;break g}if(!(A=i[(B=Q+20|0)>>2])){if(!(A=i[Q+16>>2]))break n;B=Q+16|0}for(;r=B,g=A,(A=i[(B=A+20|0)>>2])||(B=g+16|0,A=i[g+16>>2]););i[r>>2]=0;break g}}}if((B=i[8963])>>>0>=t>>>0){Q=i[8966],(g=B-t|0)>>>0>=16?(i[8963]=g,A=Q+t|0,i[8966]=A,i[A+4>>2]=1|g,i[B+Q>>2]=g,i[Q+4>>2]=3|t):(i[8966]=0,i[8963]=0,i[Q+4>>2]=3|B,i[4+(A=B+Q|0)>>2]=1|i[A+4>>2]),A=Q+8|0;break A}if((o=i[8964])>>>0>t>>>0){g=o-t|0,i[8964]=g,A=(B=i[8967])+t|0,i[8967]=A,i[A+4>>2]=1|g,i[B+4>>2]=3|t,A=B+8|0;break A}if(A=0,g=f=t+47|0,i[9079]?B=i[9081]:(i[9082]=-1,i[9083]=-1,i[9080]=4096,i[9081]=4096,i[9079]=I+12&-16^1431655768,i[9084]=0,i[9072]=0,B=4096),(B=(r=g+B|0)&(C=0-B|0))>>>0<=t>>>0)break A;if((Q=i[9071])&&Q>>>0<(E=(g=i[9069])+B|0)>>>0|g>>>0>=E>>>0)break A;if(4&n[36288])break C;o:{e:{if(Q=i[8967])for(A=36292;;){if(Q>>>0<(g=i[A>>2])+i[A+4>>2]>>>0&&g>>>0<=Q>>>0)break e;if(!(A=i[A+8>>2]))break}if(-1==(0|(g=II(0))))break E;if(E=B,(A=(Q=i[9080])-1|0)&g&&(E=(B-g|0)+(A+g&0-Q)|0),E>>>0<=t>>>0|E>>>0>2147483646)break E;if((Q=i[9071])&&Q>>>0<(C=(A=i[9069])+E|0)>>>0|A>>>0>=C>>>0)break E;if((0|g)!=(0|(A=II(E))))break o;break Q}if((E=C&r-o)>>>0>2147483646)break E;if((0|(g=II(E)))==(i[A>>2]+i[A+4>>2]|0))break i;A=g}if(!(-1==(0|A)|t+48>>>0<=E>>>0)){if((g=(g=i[9081])+(f-E|0)&0-g)>>>0>2147483646){g=A;break Q}if(-1!=(0|II(g))){E=g+E|0,g=A;break Q}II(0-E|0);break E}if(g=A,-1!=(0|A))break Q;break E}e()}Q=0;break I}g=0;break g}if(-1!=(0|g))break Q}i[9072]=4|i[9072]}if(B>>>0>2147483646)break B;if((g=II(B))>>>0>=(A=II(0))>>>0|-1==(0|g)|-1==(0|A))break B;if((E=A-g|0)>>>0<=t+40>>>0)break B}A=i[9069]+E|0,i[9069]=A,A>>>0>a[9070]&&(i[9070]=A);Q:{C:{E:{if(r=i[8967]){for(A=36292;;){if(((Q=i[A>>2])+(B=i[A+4>>2])|0)==(0|g))break E;if(!(A=i[A+8>>2]))break}break C}for((A=i[8965])>>>0<=g>>>0&&A||(i[8965]=g),A=0,i[9074]=E,i[9073]=g,i[8969]=-1,i[8970]=i[9079],i[9076]=0;B=35884+(Q=A<<3)|0,i[Q+35892>>2]=B,i[Q+35896>>2]=B,32!=(0|(A=A+1|0)););B=(Q=E-40|0)-(A=g+8&7?-8-g&7:0)|0,i[8964]=B,A=A+g|0,i[8967]=A,i[A+4>>2]=1|B,i[4+(g+Q|0)>>2]=40,i[8968]=i[9083];break Q}if(!(8&n[A+12|0]|g>>>0<=r>>>0|Q>>>0>r>>>0)){i[A+4>>2]=B+E,B=(A=r+8&7?-8-r&7:0)+r|0,i[8967]=B,A=(g=i[8964]+E|0)-A|0,i[8964]=A,i[B+4>>2]=1|A,i[4+(g+r|0)>>2]=40,i[8968]=i[9083];break Q}}(Q=i[8965])>>>0>g>>>0&&(i[8965]=g,Q=0),B=g+E|0,A=36292;C:{E:{i:{n:{a:{r:{for(;;){if((0|B)!=i[A>>2]){if(A=i[A+8>>2])continue;break r}break}if(!(8&n[A+12|0]))break a}for(A=36292;;){if((B=i[A>>2])>>>0<=r>>>0&&(C=B+i[A+4>>2]|0)>>>0>r>>>0)break n;A=i[A+8>>2]}}if(i[A>>2]=g,i[A+4>>2]=i[A+4>>2]+E,i[4+(f=(g+8&7?-8-g&7:0)+g|0)>>2]=3|t,B=((E=B+(B+8&7?-8-B&7:0)|0)-f|0)-t|0,o=t+f|0,(0|E)==(0|r)){i[8967]=o,A=i[8964]+B|0,i[8964]=A,i[o+4>>2]=1|A;break E}if(i[8966]==(0|E)){i[8966]=o,A=i[8963]+B|0,i[8963]=A,i[o+4>>2]=1|A,i[A+o>>2]=A;break E}if(1==(3&(A=i[E+4>>2]))){r=-8&A;a:if(A>>>0<=255){if(Q=i[E+8>>2],A=A>>>3|0,(0|(g=i[E+12>>2]))==(0|Q)){s=35844,w=i[8961]&vI(-2,A),i[s>>2]=w;break a}i[Q+12>>2]=g,i[g+8>>2]=Q}else{if(t=i[E+24>>2],(0|E)==(0|(g=i[E+12>>2])))if((C=i[(A=E+20|0)>>2])||(C=i[(A=E+16|0)>>2])){for(;Q=A,(C=i[(A=(g=C)+20|0)>>2])||(A=g+16|0,C=i[g+16>>2]););i[Q>>2]=0}else g=0;else A=i[E+8>>2],i[A+12>>2]=g,i[g+8>>2]=A;if(t){Q=i[E+28>>2];r:{if(i[(A=36148+(Q<<2)|0)>>2]==(0|E)){if(i[A>>2]=g,g)break r;s=35848,w=i[8962]&vI(-2,Q),i[s>>2]=w;break a}if(i[t+(i[t+16>>2]==(0|E)?16:20)>>2]=g,!g)break a}i[g+24>>2]=t,(A=i[E+16>>2])&&(i[g+16>>2]=A,i[A+24>>2]=g),(A=i[E+20>>2])&&(i[g+20>>2]=A,i[A+24>>2]=g)}}E=E+r|0,B=B+r|0}if(i[E+4>>2]=-2&i[E+4>>2],i[o+4>>2]=1|B,i[B+o>>2]=B,B>>>0<=255){g=35884+((A=B>>>3|0)<<3)|0,(B=i[8961])&(A=1<<A)?A=i[g+8>>2]:(i[8961]=A|B,A=g),i[g+8>>2]=o,i[A+12>>2]=o,i[o+12>>2]=g,i[o+8>>2]=A;break E}if(A=31,B>>>0<=16777215&&(A=B>>>8|0,A<<=C=A+1048320>>>16&8,A=28+((A=((A<<=Q=A+520192>>>16&4)<<(g=A+245760>>>16&2)>>>15|0)-(g|Q|C)|0)<<1|B>>>A+21&1)|0),i[o+28>>2]=A,i[o+16>>2]=0,i[o+20>>2]=0,C=36148+(A<<2)|0,(Q=i[8962])&(g=1<<A)){for(A=B<<(31==(0|A)?0:25-(A>>>1|0)|0),g=i[C>>2];;){if(Q=g,(-8&i[g+4>>2])==(0|B))break i;if(g=A>>>29|0,A<<=1,!(g=i[16+(C=Q+(4&g)|0)>>2]))break}i[C+16>>2]=o,i[o+24>>2]=Q}else i[8962]=g|Q,i[C>>2]=o,i[o+24>>2]=C;i[o+12>>2]=o,i[o+8>>2]=o;break E}for(B=(Q=E-40|0)-(A=g+8&7?-8-g&7:0)|0,i[8964]=B,A=A+g|0,i[8967]=A,i[A+4>>2]=1|B,i[4+(g+Q|0)>>2]=40,i[8968]=i[9083],i[(B=(A=(C+(C-39&7?39-C&7:0)|0)-47|0)>>>0<r+16>>>0?r:A)+4>>2]=27,A=i[9076],i[B+16>>2]=i[9075],i[B+20>>2]=A,A=i[9074],i[B+8>>2]=i[9073],i[B+12>>2]=A,i[9075]=B+8,i[9074]=E,i[9073]=g,i[9076]=0,A=B+24|0;i[A+4>>2]=7,g=A+8|0,A=A+4|0,g>>>0<C>>>0;);if((0|B)==(0|r))break Q;if(i[B+4>>2]=-2&i[B+4>>2],C=B-r|0,i[r+4>>2]=1|C,i[B>>2]=C,C>>>0<=255){g=35884+((A=C>>>3|0)<<3)|0,(B=i[8961])&(A=1<<A)?A=i[g+8>>2]:(i[8961]=A|B,A=g),i[g+8>>2]=r,i[A+12>>2]=r,i[r+12>>2]=g,i[r+8>>2]=A;break Q}if(A=31,i[r+16>>2]=0,i[r+20>>2]=0,C>>>0<=16777215&&(A=C>>>8|0,A<<=Q=A+1048320>>>16&8,A=28+((A=((A<<=B=A+520192>>>16&4)<<(g=A+245760>>>16&2)>>>15|0)-(g|B|Q)|0)<<1|C>>>A+21&1)|0),i[r+28>>2]=A,Q=36148+(A<<2)|0,(B=i[8962])&(g=1<<A)){for(A=C<<(31==(0|A)?0:25-(A>>>1|0)|0),g=i[Q>>2];;){if(B=g,(0|C)==(-8&i[g+4>>2]))break C;if(g=A>>>29|0,A<<=1,!(g=i[16+(Q=B+(4&g)|0)>>2]))break}i[Q+16>>2]=r,i[r+24>>2]=B}else i[8962]=g|B,i[Q>>2]=r,i[r+24>>2]=Q;i[r+12>>2]=r,i[r+8>>2]=r;break Q}A=i[Q+8>>2],i[A+12>>2]=o,i[Q+8>>2]=o,i[o+24>>2]=0,i[o+12>>2]=Q,i[o+8>>2]=A}A=f+8|0;break A}A=i[B+8>>2],i[A+12>>2]=r,i[B+8>>2]=r,i[r+24>>2]=0,i[r+12>>2]=B,i[r+8>>2]=A}if(!((A=i[8964])>>>0<=t>>>0)){g=A-t|0,i[8964]=g,A=(B=i[8967])+t|0,i[8967]=A,i[A+4>>2]=1|g,i[B+4>>2]=3|t,A=B+8|0;break A}}i[8960]=48,A=0;break A}g:if(E){B=i[Q+28>>2];B:{if(i[(A=36148+(B<<2)|0)>>2]==(0|Q)){if(i[A>>2]=g,g)break B;f=vI(-2,B)&f,i[8962]=f;break g}if(i[E+(i[E+16>>2]==(0|Q)?16:20)>>2]=g,!g)break g}i[g+24>>2]=E,(A=i[Q+16>>2])&&(i[g+16>>2]=A,i[A+24>>2]=g),(A=i[Q+20>>2])&&(i[g+20>>2]=A,i[A+24>>2]=g)}g:if(C>>>0<=15)A=C+t|0,i[Q+4>>2]=3|A,i[4+(A=A+Q|0)>>2]=1|i[A+4>>2];else if(i[Q+4>>2]=3|t,i[o+4>>2]=1|C,i[C+o>>2]=C,C>>>0<=255)g=35884+((A=C>>>3|0)<<3)|0,(B=i[8961])&(A=1<<A)?A=i[g+8>>2]:(i[8961]=A|B,A=g),i[g+8>>2]=o,i[A+12>>2]=o,i[o+12>>2]=g,i[o+8>>2]=A;else{A=31,C>>>0<=16777215&&(A=C>>>8|0,A<<=r=A+1048320>>>16&8,A=28+((A=((A<<=B=A+520192>>>16&4)<<(g=A+245760>>>16&2)>>>15|0)-(g|B|r)|0)<<1|C>>>A+21&1)|0),i[o+28>>2]=A,i[o+16>>2]=0,i[o+20>>2]=0,B=36148+(A<<2)|0;B:{if((g=1<<A)&f){for(A=C<<(31==(0|A)?0:25-(A>>>1|0)|0),t=i[B>>2];;){if((-8&i[(g=t)+4>>2])==(0|C))break B;if(B=A>>>29|0,A<<=1,!(t=i[16+(B=g+(4&B)|0)>>2]))break}i[B+16>>2]=o,i[o+24>>2]=g}else i[8962]=g|f,i[B>>2]=o,i[o+24>>2]=B;i[o+12>>2]=o,i[o+8>>2]=o;break g}A=i[g+8>>2],i[A+12>>2]=o,i[g+8>>2]=o,i[o+24>>2]=0,i[o+12>>2]=g,i[o+8>>2]=A}A=Q+8|0;break A}I:if(y){B=i[g+28>>2];g:{if(i[(A=36148+(B<<2)|0)>>2]==(0|g)){if(i[A>>2]=Q,Q)break g;s=35848,w=vI(-2,B)&o,i[s>>2]=w;break I}if(i[(i[y+16>>2]==(0|g)?16:20)+y>>2]=Q,!Q)break I}i[Q+24>>2]=y,(A=i[g+16>>2])&&(i[Q+16>>2]=A,i[A+24>>2]=Q),(A=i[g+20>>2])&&(i[Q+20>>2]=A,i[A+24>>2]=Q)}C>>>0<=15?(A=C+t|0,i[g+4>>2]=3|A,i[4+(A=A+g|0)>>2]=1|i[A+4>>2]):(i[g+4>>2]=3|t,i[f+4>>2]=1|C,i[C+f>>2]=C,c&&(B=35884+((A=c>>>3|0)<<3)|0,Q=i[8966],(A=1<<A)&E?A=i[B+8>>2]:(i[8961]=A|E,A=B),i[B+8>>2]=Q,i[A+12>>2]=Q,i[Q+12>>2]=B,i[Q+8>>2]=A),i[8966]=f,i[8963]=C),A=g+8|0}return h=I+16|0,0|A}function _(A,I,g){var B,Q,C,E,n,a,o,e,t,f,c,y,s,w,h,D,u,l,F,G,k,_,H,Y,b,m,v,U,S,N,M,d,P,R,J,x,L,K,q,X,V,W,T,j,Z,O,z,$,AA,IA,gA,BA,QA,CA,EA=0,iA=0,nA=0,aA=0,rA=0,oA=0,eA=0,tA=0,fA=0,cA=0,yA=0,sA=0,wA=0,hA=0,DA=0,uA=0,pA=0,lA=0,FA=0,GA=0,kA=0,_A=0,HA=0,YA=0,bA=0;eA=A,B=EA=HA=i[g+4>>2],t=EA>>31,x=EA=(DA=i[I+20>>2])<<1,EA=eg(B,t,EA,H=EA>>31),nA=p,iA=EA,Q=EA=i[g>>2],C=EA>>31,f=EA=i[I+24>>2],rA=eg(Q,C,EA,E=EA>>31),EA=p+nA|0,EA=(iA=iA+rA|0)>>>0<rA>>>0?EA+1|0:EA,nA=iA,L=iA=oA=i[g+8>>2],u=iA>>31,c=iA=i[I+16>>2],iA=nA+(rA=eg(oA,u,iA,n=iA>>31))|0,nA=p+EA|0,nA=iA>>>0<rA>>>0?nA+1|0:nA,K=EA=pA=i[g+12>>2],l=EA>>31,q=EA=(sA=i[I+12>>2])<<1,EA=(rA=eg(pA,l,EA,Y=EA>>31))+iA|0,iA=p+nA|0,iA=EA>>>0<rA>>>0?iA+1|0:iA,nA=EA,O=EA=uA=i[g+16>>2],k=EA>>31,y=EA=i[I+8>>2],rA=eg(uA,k,EA,a=EA>>31),EA=p+iA|0,EA=(nA=nA+rA|0)>>>0<rA>>>0?EA+1|0:EA,aA=nA,z=iA=cA=i[g+20>>2],b=iA>>31,X=iA=(fA=i[I+4>>2])<<1,nA=eg(cA,b,iA,m=iA>>31),EA=p+EA|0,EA=(iA=aA+nA|0)>>>0<nA>>>0?EA+1|0:EA,nA=iA,$=iA=yA=i[g+24>>2],V=iA>>31,s=iA=i[I>>2],rA=eg(yA,V,iA,o=iA>>31),iA=p+EA|0,iA=(nA=nA+rA|0)>>>0<rA>>>0?iA+1|0:iA,lA=i[g+28>>2],F=EA=r(lA,19),G=EA>>31,W=EA=(wA=i[I+36>>2])<<1,EA=(rA=eg(F,G,EA,v=EA>>31))+nA|0,nA=p+iA|0,nA=EA>>>0<rA>>>0?nA+1|0:nA,iA=EA,hA=i[g+32>>2],FA=EA=r(hA,19),GA=EA>>31,w=EA=i[I+32>>2],rA=eg(FA,GA,EA,e=EA>>31),EA=p+nA|0,EA=(iA=iA+rA|0)>>>0<rA>>>0?EA+1|0:EA,nA=iA,AA=i[g+36>>2],h=g=r(AA,19),D=g>>31,T=g=(I=i[I+28>>2])<<1,iA=eg(h,D,g,U=g>>31),EA=p+EA|0,tA=g=nA+iA|0,g=g>>>0<iA>>>0?EA+1|0:EA,EA=eg(c,n,B,t),iA=p,DA=eg(Q,C,rA=DA,S=rA>>31),nA=p+iA|0,nA=(EA=DA+EA|0)>>>0<DA>>>0?nA+1|0:nA,DA=sA,sA=eg(oA,u,sA,N=sA>>31),iA=p+nA|0,iA=(EA=sA+EA|0)>>>0<sA>>>0?iA+1|0:iA,nA=(sA=eg(y,a,pA,l))+EA|0,EA=p+iA|0,EA=nA>>>0<sA>>>0?EA+1|0:EA,iA=nA,sA=fA,nA=eg(uA,k,fA,M=fA>>31),EA=p+EA|0,EA=(iA=iA+nA|0)>>>0<nA>>>0?EA+1|0:EA,nA=eg(s,o,cA,b),EA=p+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,nA=iA,d=iA=r(yA,19),iA=nA+(wA=eg(iA,_=iA>>31,fA=wA,P=fA>>31))|0,nA=p+EA|0,nA=iA>>>0<wA>>>0?nA+1|0:nA,EA=(wA=eg(w,e,F,G))+iA|0,iA=p+nA|0,iA=EA>>>0<wA>>>0?iA+1|0:iA,wA=I,I=(nA=eg(FA,GA,I,R=I>>31))+EA|0,EA=p+iA|0,EA=I>>>0<nA>>>0?EA+1|0:EA,iA=eg(h,D,f,E),EA=p+EA|0,_A=I=iA+I|0,I=I>>>0<iA>>>0?EA+1|0:EA,EA=eg(B,t,q,Y),nA=p,iA=(yA=eg(Q,C,c,n))+EA|0,EA=p+nA|0,EA=iA>>>0<yA>>>0?EA+1|0:EA,yA=eg(y,a,oA,u),nA=p+EA|0,nA=(iA=yA+iA|0)>>>0<yA>>>0?nA+1|0:nA,EA=(yA=eg(pA,l,X,m))+iA|0,iA=p+nA|0,iA=EA>>>0<yA>>>0?iA+1|0:iA,nA=(yA=eg(s,o,uA,k))+EA|0,EA=p+iA|0,EA=nA>>>0<yA>>>0?EA+1|0:EA,aA=nA,j=iA=r(cA,19),nA=eg(iA,J=iA>>31,W,v),EA=p+EA|0,EA=(iA=aA+nA|0)>>>0<nA>>>0?EA+1|0:EA,nA=eg(w,e,d,_),EA=p+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,cA=eg(F,G,T,U),nA=p+EA|0,nA=(iA=cA+iA|0)>>>0<cA>>>0?nA+1|0:nA,EA=(cA=eg(FA,GA,f,E))+iA|0,iA=p+nA|0,iA=EA>>>0<cA>>>0?iA+1|0:iA,nA=(cA=eg(h,D,x,H))+EA|0,EA=p+iA|0,EA=nA>>>0<cA>>>0?EA+1|0:EA,cA=nA,gA=EA,yA=iA=nA+33554432|0,BA=EA=iA>>>0<33554432?EA+1|0:EA,nA=_A,_A=(67108863&EA)<<6|iA>>>26,EA=(EA>>26)+I|0,EA=(nA=nA+_A|0)>>>0<_A>>>0?EA+1|0:EA,QA=I=(_A=nA)+16777216|0,EA=g+(iA=(nA=I>>>0<16777216?EA+1|0:EA)>>25)|0,EA=(I=(nA=(33554431&nA)<<7|I>>>25)+tA|0)>>>0<nA>>>0?EA+1|0:EA,YA=I=(g=I)+33554432|0,I=EA=I>>>0<33554432?EA+1|0:EA,EA=-67108864&YA,i[eA+24>>2]=g-EA,tA=eA,g=eg(B,t,X,m),EA=p,iA=eg(Q,C,y,a),nA=p+EA|0,nA=(g=iA+g|0)>>>0<iA>>>0?nA+1|0:nA,iA=eg(s,o,oA,u),EA=p+nA|0,EA=(g=iA+g|0)>>>0<iA>>>0?EA+1|0:EA,nA=g,eA=g=r(pA,19),iA=eg(g,pA=g>>31,W,v),EA=p+EA|0,EA=(g=nA+iA|0)>>>0<iA>>>0?EA+1|0:EA,iA=g,IA=g=r(uA,19),g=iA+(nA=eg(w,e,g,Z=g>>31))|0,iA=p+EA|0,iA=g>>>0<nA>>>0?iA+1|0:iA,nA=eg(T,U,j,J),EA=p+iA|0,EA=(g=nA+g|0)>>>0<nA>>>0?EA+1|0:EA,iA=eg(f,E,d,_),nA=p+EA|0,nA=(g=iA+g|0)>>>0<iA>>>0?nA+1|0:nA,iA=eg(F,G,x,H),EA=p+nA|0,EA=(g=iA+g|0)>>>0<iA>>>0?EA+1|0:EA,iA=eg(FA,GA,c,n),EA=p+EA|0,EA=(g=iA+g|0)>>>0<iA>>>0?EA+1|0:EA,nA=eg(h,D,q,Y),iA=p+EA|0,aA=g=nA+g|0,g=g>>>0<nA>>>0?iA+1|0:iA,EA=eg(s,o,B,t),nA=p,iA=(uA=eg(Q,C,sA,M))+EA|0,EA=p+nA|0,EA=iA>>>0<uA>>>0?EA+1|0:EA,nA=iA,uA=iA=r(oA,19),iA=nA+(oA=eg(iA,kA=iA>>31,fA,P))|0,nA=p+EA|0,nA=iA>>>0<oA>>>0?nA+1|0:nA,oA=eg(w,e,eA,pA),EA=p+nA|0,EA=(iA=oA+iA|0)>>>0<oA>>>0?EA+1|0:EA,nA=eg(IA,Z,wA,R),EA=p+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,nA=(oA=eg(f,E,j,J))+iA|0,iA=p+EA|0,iA=nA>>>0<oA>>>0?iA+1|0:iA,oA=eg(d,_,rA,S),EA=p+iA|0,EA=(nA=oA+nA|0)>>>0<oA>>>0?EA+1|0:EA,iA=(oA=eg(c,n,F,G))+nA|0,nA=p+EA|0,nA=iA>>>0<oA>>>0?nA+1|0:nA,oA=eg(FA,GA,DA,N),EA=p+nA|0,EA=(iA=oA+iA|0)>>>0<oA>>>0?EA+1|0:EA,nA=eg(h,D,y,a),EA=p+EA|0,bA=iA=nA+iA|0,oA=iA>>>0<nA>>>0?EA+1|0:EA,EA=eg(EA=r(B,19),EA>>31,W,v),iA=p,nA=eg(Q,C,s,o),iA=p+iA|0,iA=(EA=nA+EA|0)>>>0<nA>>>0?iA+1|0:iA,nA=(HA=eg(w,e,uA,kA))+EA|0,EA=p+iA|0,iA=(eA=eg(eA,pA,T,U))+nA|0,nA=p+(nA>>>0<HA>>>0?EA+1|0:EA)|0,nA=iA>>>0<eA>>>0?nA+1|0:nA,eA=eg(f,E,IA,Z),EA=p+nA|0,EA=(iA=eA+iA|0)>>>0<eA>>>0?EA+1|0:EA,nA=eg(x,H,j,J),EA=p+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,nA=(eA=eg(c,n,d,_))+iA|0,iA=p+EA|0,iA=nA>>>0<eA>>>0?iA+1|0:iA,eA=eg(F,G,q,Y),EA=p+iA|0,EA=(nA=eA+nA|0)>>>0<eA>>>0?EA+1|0:EA,iA=(eA=eg(FA,GA,y,a))+nA|0,nA=p+EA|0,nA=iA>>>0<eA>>>0?nA+1|0:nA,eA=eg(h,D,X,m),EA=p+nA|0,EA=(iA=eA+iA|0)>>>0<eA>>>0?EA+1|0:EA,eA=iA,HA=EA,pA=iA=iA+33554432|0,uA=EA=iA>>>0<33554432?EA+1|0:EA,kA=(67108863&EA)<<6|iA>>>26,iA=(nA=EA>>26)+oA|0,oA=EA=kA+bA|0,nA=aA,EA=EA>>>0<kA>>>0?iA+1|0:iA,CA=iA=oA+16777216|0,aA=(33554431&(EA=iA>>>0<16777216?EA+1|0:EA))<<7|iA>>>25,EA=(EA>>25)+g|0,EA=(iA=nA+aA|0)>>>0<aA>>>0?EA+1|0:EA,kA=g=iA+33554432|0,g=EA=g>>>0<33554432?EA+1|0:EA,EA=-67108864&kA,i[tA+8>>2]=iA-EA,aA=tA,EA=eg(f,E,B,t),nA=p,iA=(tA=eg(Q,C,wA,R))+EA|0,EA=p+nA|0,EA=iA>>>0<tA>>>0?EA+1|0:EA,nA=eg(L,u,rA,S),EA=p+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,nA=eg(c,n,K,l),EA=p+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,tA=eg(O,k,DA,N),nA=p+EA|0,nA=(iA=tA+iA|0)>>>0<tA>>>0?nA+1|0:nA,EA=(tA=eg(y,a,z,b))+iA|0,iA=p+nA|0,iA=EA>>>0<tA>>>0?iA+1|0:iA,nA=(tA=eg(sA,M,$,V))+EA|0,EA=p+iA|0,EA=nA>>>0<tA>>>0?EA+1|0:EA,iA=nA,nA=eg(s,o,tA=lA,bA=tA>>31),EA=p+EA|0,EA=(iA=iA+nA|0)>>>0<nA>>>0?EA+1|0:EA,nA=eg(FA,GA,fA,P),EA=p+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,lA=eg(h,D,w,e),nA=p+EA|0,nA=(iA=lA+iA|0)>>>0<lA>>>0?nA+1|0:nA,EA=I>>26,I=(lA=(67108863&I)<<6|YA>>>26)+iA|0,iA=EA+nA|0,EA=iA=I>>>0<lA>>>0?iA+1|0:iA,YA=I=(nA=I)+16777216|0,I=EA=I>>>0<16777216?EA+1|0:EA,EA=-33554432&YA,i[aA+28>>2]=nA-EA,lA=aA,EA=eg(y,a,B,t),iA=p,aA=eg(Q,C,DA,N),nA=p+iA|0,nA=(EA=aA+EA|0)>>>0<aA>>>0?nA+1|0:nA,aA=eg(L,u,sA,M),iA=p+nA|0,iA=(EA=aA+EA|0)>>>0<aA>>>0?iA+1|0:iA,nA=(aA=eg(s,o,K,l))+EA|0,EA=p+iA|0,EA=nA>>>0<aA>>>0?EA+1|0:EA,iA=nA,nA=eg(IA,Z,fA,P),EA=p+EA|0,EA=(iA=iA+nA|0)>>>0<nA>>>0?EA+1|0:EA,nA=eg(w,e,j,J),EA=p+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,aA=eg(d,_,wA,R),nA=p+EA|0,nA=(iA=aA+iA|0)>>>0<aA>>>0?nA+1|0:nA,EA=(aA=eg(f,E,F,G))+iA|0,iA=p+nA|0,iA=EA>>>0<aA>>>0?iA+1|0:iA,nA=(aA=eg(FA,GA,rA,S))+EA|0,EA=p+iA|0,EA=nA>>>0<aA>>>0?EA+1|0:EA,iA=nA,nA=eg(h,D,c,n),EA=p+EA|0,aA=iA=iA+nA|0,EA=(EA=iA>>>0<nA>>>0?EA+1|0:EA)+(iA=g>>26)|0,EA=(g=aA+(nA=(67108863&g)<<6|kA>>>26)|0)>>>0<nA>>>0?EA+1|0:EA,FA=g=(iA=g)+16777216|0,g=nA=g>>>0<16777216?EA+1|0:EA,EA=-33554432&FA,i[lA+12>>2]=iA-EA,EA=eg(B,t,T,U),nA=p,iA=(aA=eg(Q,C,w,e))+EA|0,EA=p+nA|0,EA=iA>>>0<aA>>>0?EA+1|0:EA,nA=eg(f,E,L,u),EA=p+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,aA=eg(K,l,x,H),nA=p+EA|0,nA=(iA=aA+iA|0)>>>0<aA>>>0?nA+1|0:nA,EA=(aA=eg(c,n,O,k))+iA|0,iA=p+nA|0,iA=EA>>>0<aA>>>0?iA+1|0:iA,nA=(aA=eg(q,Y,z,b))+EA|0,EA=p+iA|0,EA=nA>>>0<aA>>>0?EA+1|0:EA,iA=nA,nA=eg(y,a,$,V),EA=p+EA|0,EA=(iA=iA+nA|0)>>>0<nA>>>0?EA+1|0:EA,nA=eg(tA,bA,X,m),EA=p+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,hA=eg(s,o,aA=hA,GA=aA>>31),nA=p+EA|0,nA=(iA=hA+iA|0)>>>0<hA>>>0?nA+1|0:nA,EA=(hA=eg(h,D,W,v))+iA|0,iA=p+nA|0,iA=EA>>>0<hA>>>0?iA+1|0:iA,hA=EA,EA=(EA=I>>25)+iA|0,EA=(I=hA+(nA=(33554431&I)<<7|YA>>>25)|0)>>>0<nA>>>0?EA+1|0:EA,hA=I=(iA=I)+33554432|0,I=EA=I>>>0<33554432?EA+1|0:EA,EA=-67108864&hA,i[lA+32>>2]=iA-EA,nA=iA=cA-(EA=-67108864&yA)|0,EA=(EA=gA-((EA>>>0>cA>>>0)+BA|0)|0)+(iA=g>>25)|0,EA=(g=nA+(cA=(33554431&g)<<7|FA>>>25)|0)>>>0<cA>>>0?EA+1|0:EA,(iA=g+33554432|0)>>>0<33554432&&(EA=EA+1|0),EA=(_A-(-33554432&QA)|0)+((67108863&EA)<<6|iA>>>26)|0,i[A+20>>2]=EA,EA=-67108864&iA,i[A+16>>2]=g-EA,EA=eg(w,e,B,t),nA=p,iA=(fA=eg(Q,C,fA,P))+EA|0,EA=p+nA|0,EA=iA>>>0<fA>>>0?EA+1|0:EA,nA=(fA=eg(L,u,wA,R))+iA|0,iA=p+EA|0,iA=nA>>>0<fA>>>0?iA+1|0:iA,EA=(fA=eg(f,E,K,l))+nA|0,nA=p+iA|0,iA=(rA=eg(O,k,rA,S))+EA|0,EA=p+(EA>>>0<fA>>>0?nA+1|0:nA)|0,EA=iA>>>0<rA>>>0?EA+1|0:EA,nA=eg(c,n,z,b),EA=p+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,nA=eg(DA,N,$,V),EA=p+EA|0,EA=(iA=nA+iA|0)>>>0<nA>>>0?EA+1|0:EA,nA=(rA=eg(y,a,tA,bA))+iA|0,iA=p+EA|0,iA=nA>>>0<rA>>>0?iA+1|0:iA,EA=(rA=eg(aA,GA,sA,M))+nA|0,nA=p+iA|0,nA=EA>>>0<rA>>>0?nA+1|0:nA,iA=(rA=eg(s,o,AA,AA>>31))+EA|0,EA=p+nA|0,g=iA,EA=(EA=iA>>>0<rA>>>0?EA+1|0:EA)+(iA=I>>26)|0,EA=(I=g+(nA=(67108863&I)<<6|hA>>>26)|0)>>>0<nA>>>0?EA+1|0:EA,EA=(I=(g=I)+16777216|0)>>>0<16777216?EA+1|0:EA,I=-33554432&(iA=I),i[A+36>>2]=g-I,nA=oA-(-33554432&CA)|0,rA=eA-(I=-67108864&pA)|0,DA=HA-((I>>>0>eA>>>0)+uA|0)|0,EA=eg((33554431&(I=EA))<<7|iA>>>25,EA>>=25,19,0),iA=p+DA|0,EA=iA=(I=EA+rA|0)>>>0<EA>>>0?iA+1|0:iA,g=((67108863&(EA=(g=I+33554432|0)>>>0<33554432?EA+1|0:EA))<<6|(iA=g)>>>26)+nA|0,i[A+4>>2]=g,g=A,A=-67108864&iA,i[g>>2]=I-A}function H(A,I){var g,B,Q,C,E,n,a,o,e,t,f,c,y,s,w,h,D,u,l,F,G,k,_,H,Y,b,m,v,U,S,N,M,d,P,R,J,x,L=0,K=0,q=0,X=0,V=0,W=0,T=0,j=0,Z=0,O=0,z=0,$=0,AA=0,IA=0,gA=0,BA=0,QA=0;W=A,t=K=(L=i[I+12>>2])<<1,j=L,L=eg(K,E=K>>31,L,H=L>>31),X=p,K=L,g=L=i[I+16>>2],n=L>>31,D=L=(O=i[I+8>>2])<<1,V=eg(g,n,L,y=L>>31),L=p+X|0,L=(K=K+V|0)>>>0<V>>>0?L+1|0:L,X=K,s=K=(V=i[I+20>>2])<<1,w=K>>31,a=K=(z=i[I+4>>2])<<1,q=eg(s,w,K,B=K>>31),K=p+L|0,K=(X=X+q|0)>>>0<q>>>0?K+1|0:K,F=L=T=i[I+24>>2],f=L>>31,o=L=(BA=i[I>>2])<<1,q=eg(T,f,L,Q=L>>31),L=p+K|0,L=(X=q+X|0)>>>0<q>>>0?L+1|0:L,Z=X,K=i[I+32>>2],h=X=r(K,19),Y=K,X=eg(X,c=X>>31,K,G=K>>31),L=p+L|0,L=(K=Z+X|0)>>>0<X>>>0?L+1|0:L,Z=K,AA=i[I+36>>2],e=K=r(AA,38),C=K>>31,S=I=(X=i[I+28>>2])<<1,q=eg(K,C,I,b=I>>31),I=p+L|0,IA=K=Z+q|0,$=K>>>0<q>>>0?I+1|0:I,I=eg(a,B,g,n),L=p,K=eg(D,y,j,H),L=p+L|0,L=(I=K+I|0)>>>0<K>>>0?L+1|0:L,N=V,q=eg(V,k=V>>31,o,Q),K=p+L|0,K=(I=q+I|0)>>>0<q>>>0?K+1|0:K,q=eg(h,c,S,b),L=p+K|0,L=(I=q+I|0)>>>0<q>>>0?L+1|0:L,K=eg(e,C,T,f),L=p+L|0,Z=I=K+I|0,QA=I>>>0<K>>>0?L+1|0:L,I=eg(a,B,t,E),K=p,L=(O=eg(q=O,u=q>>31,q,u))+I|0,I=p+K|0,I=L>>>0<O>>>0?I+1|0:I,K=(O=eg(o,Q,g,n))+L|0,L=p+I|0,L=K>>>0<O>>>0?L+1|0:L,_=I=r(X,38),O=X,I=(X=eg(I,l=I>>31,X,m=X>>31))+K|0,K=p+L|0,K=I>>>0<X>>>0?K+1|0:K,I=(L=I)+(X=eg(h,c,I=T<<1,I>>31))|0,L=p+K|0,L=I>>>0<X>>>0?L+1|0:L,K=eg(e,C,s,w),L=p+L|0,v=I=K+I|0,P=L=I>>>0<K>>>0?L+1|0:L,I=L,M=L=v+33554432|0,R=I=L>>>0<33554432?I+1|0:I,L=(L=I>>26)+QA|0,QA=I=(K=(67108863&I)<<6|M>>>26)+Z|0,K=I>>>0<K>>>0?L+1|0:L,J=I=I+16777216|0,L=(L=(K=I>>>0<16777216?K+1|0:K)>>25)+$|0,L=(I=(K=(33554431&K)<<7|I>>>25)+IA|0)>>>0<K>>>0?L+1|0:L,K=I,I=L,Z=L=K+33554432|0,X=I=L>>>0<33554432?I+1|0:I,I=-67108864&L,i[W+24>>2]=K-I,I=eg(o,Q,q,u),L=p,z=eg(a,B,W=z,gA=W>>31),K=p+L|0,K=(I=z+I|0)>>>0<z>>>0?K+1|0:K,L=I,z=I=r(T,19),I=L+(T=eg(I,IA=I>>31,T,f))|0,L=p+K|0,L=I>>>0<T>>>0?L+1|0:L,K=(T=eg(s,w,_,l))+I|0,I=p+L|0,I=K>>>0<T>>>0?I+1|0:I,d=L=g<<1,T=eg(h,c,L,U=L>>31),L=p+I|0,L=(K=T+K|0)>>>0<T>>>0?L+1|0:L,I=K,K=eg(e,C,t,E),L=p+L|0,$=I=I+K|0,T=I>>>0<K>>>0?L+1|0:L,I=eg(s,w,z,IA),L=p,W=eg(o,Q,W,gA),K=p+L|0,K=(I=W+I|0)>>>0<W>>>0?K+1|0:K,W=eg(g,n,_,l),L=p+K|0,L=(I=W+I|0)>>>0<W>>>0?L+1|0:L,K=(W=eg(h,c,t,E))+I|0,I=p+L|0,I=K>>>0<W>>>0?I+1|0:I,W=eg(e,C,q,u),L=p+I|0,gA=K=W+K|0,W=K>>>0<W>>>0?L+1|0:L,I=eg(I=r(V,38),I>>31,V,k),L=p,V=I,K=eg(I=BA,K=I>>31,I,K),L=p+L|0,L=(I=V+K|0)>>>0<K>>>0?L+1|0:L,V=eg(z,IA,d,U),K=p+L|0,K=(I=V+I|0)>>>0<V>>>0?K+1|0:K,V=eg(t,E,_,l),L=p+K|0,L=(I=V+I|0)>>>0<V>>>0?L+1|0:L,K=(V=eg(h,c,D,y))+I|0,I=p+L|0,I=K>>>0<V>>>0?I+1|0:I,V=eg(a,B,e,C),L=p+I|0,z=K=V+K|0,IA=L=K>>>0<V>>>0?L+1|0:L,BA=I=K+33554432|0,x=L=I>>>0<33554432?L+1|0:L,K=(I=L>>26)+W|0,W=L=(V=(67108863&L)<<6|BA>>>26)+gA|0,L=L>>>0<V>>>0?K+1|0:K,gA=I=W+16777216|0,V=(33554431&(L=I>>>0<16777216?L+1|0:L))<<7|I>>>25,L=(L>>25)+T|0,L=(K=V+$|0)>>>0<V>>>0?L+1|0:L,T=K=(I=K)+33554432|0,V=L=K>>>0<33554432?L+1|0:L,L=-67108864&K,i[A+8>>2]=I-L,I=eg(D,y,N,k),L=p,K=eg(g,n,t,E),L=p+L|0,L=(I=K+I|0)>>>0<K>>>0?L+1|0:L,K=eg(a,B,F,f),L=p+L|0,L=(I=K+I|0)>>>0<K>>>0?L+1|0:L,K=eg(o,Q,O,m),L=p+L|0,L=(I=K+I|0)>>>0<K>>>0?L+1|0:L,K=($=eg(e,C,Y,G))+I|0,I=p+L|0,L=X>>26,X=(Z=(67108863&X)<<6|Z>>>26)+K|0,K=(I=K>>>0<$>>>0?I+1|0:I)+L|0,L=K=X>>>0<Z>>>0?K+1|0:K,Z=K=(I=X)+16777216|0,X=L=K>>>0<16777216?L+1|0:L,L=-33554432&K,i[A+28>>2]=I-L,I=eg(o,Q,j,H),K=p,L=(q=eg(a,B,q,u))+I|0,I=p+K|0,I=L>>>0<q>>>0?I+1|0:I,q=eg(F,f,_,l),K=p+I|0,K=(L=q+L|0)>>>0<q>>>0?K+1|0:K,I=(q=eg(h,c,s,w))+L|0,L=p+K|0,L=I>>>0<q>>>0?L+1|0:L,K=eg(e,C,g,n),L=p+L|0,L=(L=(I=K+I|0)>>>0<K>>>0?L+1|0:L)+(K=V>>26)|0,K=I=(V=(67108863&V)<<6|T>>>26)+I|0,I=L=I>>>0<V>>>0?L+1|0:L,T=L=K+16777216|0,V=I=L>>>0<16777216?I+1|0:I,I=-33554432&L,i[A+12>>2]=K-I,q=A,I=eg(F,f,D,y),L=p,K=eg(g,n,g,n),L=p+L|0,L=(I=K+I|0)>>>0<K>>>0?L+1|0:L,K=eg(t,E,s,w),L=p+L|0,L=(I=K+I|0)>>>0<K>>>0?L+1|0:L,K=(j=eg(a,B,S,b))+I|0,I=p+L|0,I=K>>>0<j>>>0?I+1|0:I,L=(j=eg(o,Q,Y,G))+K|0,K=p+I|0,K=L>>>0<j>>>0?K+1|0:K,I=(AA=eg(e,C,j=AA,$=j>>31))+L|0,L=p+K|0,L=I>>>0<AA>>>0?L+1|0:L,A=I,L=(I=X>>25)+L|0,L=(K=A+(X=(33554431&X)<<7|Z>>>25)|0)>>>0<X>>>0?L+1|0:L,AA=K=(I=K)+33554432|0,X=L=K>>>0<33554432?L+1|0:L,L=-67108864&K,i[q+32>>2]=I-L,L=V>>25,K=(V=(33554431&V)<<7|T>>>25)+(v-(I=-67108864&M)|0)|0,I=L+(P-((I>>>0>v>>>0)+R|0)|0)|0,L=I=K>>>0<V>>>0?I+1|0:I,V=I=K+33554432|0,I=((67108863&(L=I>>>0<33554432?L+1|0:L))<<6|I>>>26)+(QA=QA-(-33554432&J)|0)|0,i[q+20>>2]=I,I=-67108864&V,i[q+16>>2]=K-I,V=q,I=eg(t,E,F,f),K=p,L=(q=eg(N,k,d,U))+I|0,I=p+K|0,I=L>>>0<q>>>0?I+1|0:I,K=(q=eg(D,y,O,m))+L|0,L=p+I|0,L=K>>>0<q>>>0?L+1|0:L,I=(q=eg(a,B,Y,G))+K|0,K=p+L|0,K=I>>>0<q>>>0?K+1|0:K,q=eg(o,Q,j,$),L=p+K|0,K=I=q+I|0,L=(I=I>>>0<q>>>0?L+1|0:L)+(L=X>>26)|0,L=(K=(X=(67108863&X)<<6|AA>>>26)+K|0)>>>0<X>>>0?L+1|0:L,X=K,I=L,I=(L=K+16777216|0)>>>0<16777216?I+1|0:I,K=-33554432&L,i[V+36>>2]=X-K,q=eg((33554431&I)<<7|L>>>25,I>>25,19,0),L=p+(IA-(((K=-67108864&BA)>>>0>z>>>0)+x|0)|0)|0,K=I=q+(z-K|0)|0,I=I>>>0<q>>>0?L+1|0:L,I=(W-(-33554432&gA)|0)+((67108863&(I=(L=K+33554432|0)>>>0<33554432?I+1|0:I))<<6|L>>>26)|0,i[V+4>>2]=I,A=-67108864&L,i[V>>2]=K-A}function Y(A,I,g){var B,Q=0,C=0,E=0,n=0,a=0,r=0,o=0,e=0,t=0,f=0,c=0,y=0,s=0,w=0,D=0,u=0,l=0,F=0,G=0,k=0,_=0,H=0,Y=0,b=0,m=0,v=0,U=0,S=0,N=0,M=0,d=0,P=0,R=0,J=0,x=0,L=0,K=0,q=0,X=0,V=0,W=0,T=0,j=0,Z=0,O=0,z=0,$=0,AA=0,IA=0,gA=0,BA=0,QA=0,CA=0;for(h=B=h-2048|0,Yg(B+1024|0,I),QI(B+1024|0,A),Yg(B,B+1024|0),QI(B,g),I=0;n=i[(Q=f=(B+1024|0)+(64|(A=F<<7))|0)>>2],e=i[(E=t=(B+1024|0)+(96|A)|0)>>2],E=i[E+4>>2],a=n,w=i[Q+4>>2],o=e,Q=A+(B+1024|0)|0,r=i[(n=(B+1024|0)+(32|A)|0)>>2],e=i[n+4>>2],o=ug(o^(l=rI(i[Q>>2],i[Q+4>>2],r,e)),(C=E)^(E=p),32),e=ug(a=(s=rI(a,w,o,C=p))^r,e^(r=p),24),P=ug((m=rI(l,a=E,e,E=p))^o,(y=p)^C,16),E=ug(e^(R=rI(s,r,P,S=p)),(N=p)^E,63),e=p,o=i[(r=(B+1024|0)+(104|A)|0)>>2],s=i[r+4>>2],H=i[(C=l=(B+1024|0)+(72|A)|0)>>2],c=i[C+4>>2],G=ug((G=o)^(k=rI(u=i[(C=o=(B+1024|0)+(8|A)|0)>>2],w=i[C+4>>2],U=i[(C=(B+1024|0)+(40|A)|0)>>2],a=i[C+4>>2])),(w=s)^(s=p),32),a=ug(c=(u=rI(H,c,G,w=p))^U,a^(U=p),24),V=ug((M=rI(k,c=s,a,s=p))^G,(J=p)^w,16),s=ug(a^(O=rI(u,U,V,j=p)),(z=p)^s,63),a=p,G=i[(k=U=(B+1024|0)+(112|A)|0)>>2],u=i[k+4>>2],v=i[(k=(B+1024|0)+(80|A)|0)>>2],D=i[k+4>>2],H=G,G=(B+1024|0)+(16|A)|0,Y=i[(b=w=(B+1024|0)+(48|A)|0)>>2],b=i[b+4>>2],H=ug(H^(d=rI(i[G>>2],i[G+4>>2],Y,b)),(c=u)^(u=p),32),b=ug(D=(c=rI(v,D,H,_=p))^Y,b^(Y=p),24),IA=ug(($=rI(d,D=u,b,u=p))^H,(AA=p)^_,16),u=ug(b^(W=rI(c,Y,IA,gA=p)),(q=p)^u,63),b=p,H=i[(Y=(B+1024|0)+(120|A)|0)>>2],_=i[Y+4>>2],BA=i[(c=d=(B+1024|0)+(88|A)|0)>>2],X=i[c+4>>2],L=ug((v=H)^(T=rI(Z=i[(c=H=(B+1024|0)+(24|A)|0)>>2],D=i[c+4>>2],x=i[(A=(B+1024|0)+(56|A)|0)>>2],c=i[A+4>>2])),(D=_)^(_=p),32),c=ug(D=(X=rI(BA,X,L,K=p))^x,c^(x=p),24),v=x,L=ug((x=rI(T,D=_,c,_=p))^L,(T=p)^K,16),_=ug(c^(X=rI(X,v,L,K=p)),(Z=p)^_,63),c=p,v=W,D=q,W=ug(L^(m=rI(m,y,s,a)),K^(y=p),32),s=ug((L=rI(v,D,W,q=p))^s,(K=p)^a,24),a=rI(a=m,y,s,m=p),y=p,i[Q>>2]=a,i[Q+4>>2]=y,Q=ug(a^W,q^y,16),a=p,i[Y>>2]=Q,i[Y+4>>2]=a,Q=rI(L,K,Q,a),a=p,i[k>>2]=Q,i[k+4>>2]=a,QA=C,CA=ug(Q^s,a^m,63),i[QA>>2]=CA,i[C+4>>2]=p,y=u,a=ug(P^(C=rI(M,J,u,b)),S^(s=p),32),Q=ug(y^(u=rI(X,Z,a,k=p)),(Q=b)^(b=p),24),C=rI(C,y=s,Q,s=p),Y=p,i[o>>2]=C,i[o+4>>2]=Y,o=ug(C^a,k^Y,16),C=p,i[t>>2]=o,i[t+4>>2]=C,t=rI(u,b,o,C),i[d>>2]=t,o=p,i[d+4>>2]=o,QA=w,CA=ug(Q^t,o^s,63),i[QA>>2]=CA,i[w+4>>2]=p,Q=rI($,AA,_,c),a=rI(R,N,C=ug(V^Q,j^(o=p),32),s=p),Q=rI(Q,w=o,t=ug(a^_,(k=p)^c,24),o=p),u=w=p,i[G>>2]=Q,i[G+4>>2]=u,Q=ug(Q^C,s^u,16),C=p,i[r>>2]=Q,i[r+4>>2]=C,Q=rI(a,k,Q,C),i[f>>2]=Q,C=f,f=p,i[C+4>>2]=f,QA=A,CA=ug(Q^t,f^o,63),i[QA>>2]=CA,i[A+4>>2]=p,C=E,Q=ug(IA^(f=rI(x,T,E,e)),gA^(t=p),32),A=ug(C^(r=rI(O,z,Q,E=p)),(A=e)^(e=p),24),f=rI(f,C=t,A,t=p),C=o=p,i[H>>2]=f,i[H+4>>2]=C,f=ug(Q^f,E^C,16),Q=p,i[U>>2]=f,i[U+4>>2]=Q,f=rI(r,e,f,Q),i[l>>2]=f,Q=p,i[l+4>>2]=Q,QA=n,CA=ug(A^f,Q^t,63),i[QA>>2]=CA,i[n+4>>2]=p,8!=(0|(F=F+1|0)););for(;F=i[768+(A=(t=I<<4)+(B+1024|0)|0)>>2],f=i[A+772>>2],a=i[(Q=A+512|0)>>2],o=i[Q+4>>2],C=F,F=i[A+256>>2],Q=i[A+260>>2],E=ug(C^(n=rI(i[A>>2],i[A+4>>2],F,Q)),(E=f)^(f=p),32),Q=ug(C=(r=rI(a,o,E,e=p))^F,Q^(F=p),24),w=F,s=ug((o=rI(n,f,Q,F=p))^E,(C=p)^e,16),F=ug(Q^(U=rI(r,w,s,a=p)),(k=p)^F,63),f=p,Q=i[A+780>>2],u=i[A+520>>2],y=i[A+524>>2],r=ug((G=i[A+776>>2])^(e=rI(w=i[(n=t=(B+1024|0)+(8|t)|0)>>2],e=i[n+4>>2],n=i[A+264>>2],E=i[A+268>>2])),(w=Q)^(Q=p),32),E=ug(w=(G=rI(u,y,r,l=p))^n,E^(n=p),24),y=G,u=ug((G=rI(e,w=Q,E,Q=p))^r,(w=p)^l,16),Q=ug(E^(Y=rI(y,n,u,b=p)),(d=p)^Q,63),n=p,E=i[A+900>>2],D=i[A+640>>2],m=i[A+644>>2],c=i[A+896>>2],e=i[A+384>>2],r=i[A+388>>2],H=ug(c^(l=rI(i[A+128>>2],i[A+132>>2],e,r)),(y=E)^(E=p),32),r=ug(y=(c=rI(D,m,H,_=p))^e,r^(e=p),24),D=c,c=ug((c=H)^(H=rI(l,y=E,r,E=p)),(y=_)^(_=p),16),E=ug(r^(y=rI(D,e,c,m=p)),(P=p)^E,63),e=p,r=i[A+908>>2],q=i[A+648>>2],j=i[A+652>>2],v=i[A+904>>2],l=i[A+392>>2],S=i[A+396>>2],N=ug(v^(R=rI(i[A+136>>2],i[A+140>>2],l,S)),(D=r)^(r=p),32),v=S=ug(D=(J=rI(q,j,N,M=p))^l,S^(l=p),24),N=ug((S=rI(R,D=r,S,r=p))^N,(R=p)^M,16),r=ug(v^(J=rI(J,l,N,M=p)),(V=p)^r,63),l=p,v=y,D=P,y=ug(N^(o=rI(o,C,Q,n)),M^(C=p),32),Q=ug((N=rI(v,D,y,P=p))^Q,(M=p)^n,24),n=rI(n=o,C,Q,o=p),C=p,i[A>>2]=n,i[A+4>>2]=C,n=ug(n^y,P^C,16),C=p,i[A+904>>2]=n,i[A+908>>2]=C,n=rI(N,M,n,C),C=p,i[A+640>>2]=n,i[A+644>>2]=C,QA=A,CA=ug(Q^n,o^C,63),i[QA+264>>2]=CA,i[A+268>>2]=p,y=E,n=rI(G,w,E,e),s=rI(J,V,o=ug(s^n,a^(E=p),32),C=p),n=rI(n,a=E,Q=ug(y^s,(Q=e)^(e=p),24),E=p),a=p,i[t>>2]=n,i[t+4>>2]=a,t=ug(n^o,C^a,16),n=p,i[A+768>>2]=t,i[A+772>>2]=n,t=rI(s,e,t,n),i[A+648>>2]=t,n=p,i[A+652>>2]=n,QA=A,CA=ug(Q^t,n^E,63),i[QA+384>>2]=CA,i[A+388>>2]=p,o=r,E=ug(u^(Q=rI(H,_,r,l)),b^(n=p),32),t=ug(o^(r=rI(U,k,E,e=p)),(C=l)^(l=p),24),Q=rI(Q,C=n,t,n=p),C=o=p,i[A+128>>2]=Q,i[A+132>>2]=C,Q=ug(Q^E,C^e,16),E=p,i[A+776>>2]=Q,i[A+780>>2]=E,Q=rI(r,l,Q,E),i[A+512>>2]=Q,E=p,i[A+516>>2]=E,QA=A,CA=ug(Q^t,n^E,63),i[QA+392>>2]=CA,i[A+396>>2]=p,t=rI(S,R,F,f),e=rI(Y,d,n=ug(c^t,m^(Q=p),32),E=p),f=rI(C=t,Q,F=ug(e^F,(r=p)^f,24),t=p),Q=p,i[A+136>>2]=f,i[A+140>>2]=Q,f=ug(n^f,E^Q,16),Q=p,i[A+896>>2]=f,i[A+900>>2]=Q,f=rI(e,r,f,Q),i[A+520>>2]=f,Q=p,i[A+524>>2]=Q,QA=A,CA=ug(f^F,Q^t,63),i[QA+256>>2]=CA,i[A+260>>2]=p,8!=(0|(I=I+1|0)););Yg(g,B),QI(g,B+1024|0),h=B+2048|0}function b(A,I,g){var B,Q=0,C=0,E=0,n=0,a=0,r=0,o=0,e=0,t=0,f=0,c=0,y=0,s=0,w=0,D=0,u=0,l=0,F=0,G=0,k=0,_=0,H=0,Y=0,b=0,m=0,v=0,U=0,S=0,N=0,M=0,d=0,P=0,R=0,J=0,x=0,L=0,K=0,q=0,X=0,V=0,W=0,T=0,j=0,Z=0,O=0,z=0,$=0,AA=0,IA=0,gA=0,BA=0,QA=0,CA=0;for(h=B=h-2048|0,Yg(B+1024|0,I),QI(B+1024|0,A),Yg(B,B+1024|0),I=0;n=i[(Q=f=(B+1024|0)+(64|(A=F<<7))|0)>>2],e=i[(E=t=(B+1024|0)+(96|A)|0)>>2],E=i[E+4>>2],a=n,w=i[Q+4>>2],o=e,Q=A+(B+1024|0)|0,r=i[(n=(B+1024|0)+(32|A)|0)>>2],e=i[n+4>>2],o=ug(o^(l=rI(i[Q>>2],i[Q+4>>2],r,e)),(C=E)^(E=p),32),e=ug(a=(s=rI(a,w,o,C=p))^r,e^(r=p),24),P=ug((m=rI(l,a=E,e,E=p))^o,(y=p)^C,16),E=ug(e^(R=rI(s,r,P,S=p)),(N=p)^E,63),e=p,o=i[(r=(B+1024|0)+(104|A)|0)>>2],s=i[r+4>>2],H=i[(C=l=(B+1024|0)+(72|A)|0)>>2],c=i[C+4>>2],G=ug((G=o)^(k=rI(u=i[(C=o=(B+1024|0)+(8|A)|0)>>2],w=i[C+4>>2],U=i[(C=(B+1024|0)+(40|A)|0)>>2],a=i[C+4>>2])),(w=s)^(s=p),32),a=ug(c=(u=rI(H,c,G,w=p))^U,a^(U=p),24),V=ug((M=rI(k,c=s,a,s=p))^G,(J=p)^w,16),s=ug(a^(O=rI(u,U,V,j=p)),(z=p)^s,63),a=p,G=i[(k=U=(B+1024|0)+(112|A)|0)>>2],u=i[k+4>>2],v=i[(k=(B+1024|0)+(80|A)|0)>>2],D=i[k+4>>2],H=G,G=(B+1024|0)+(16|A)|0,Y=i[(b=w=(B+1024|0)+(48|A)|0)>>2],b=i[b+4>>2],H=ug(H^(d=rI(i[G>>2],i[G+4>>2],Y,b)),(c=u)^(u=p),32),b=ug(D=(c=rI(v,D,H,_=p))^Y,b^(Y=p),24),IA=ug(($=rI(d,D=u,b,u=p))^H,(AA=p)^_,16),u=ug(b^(W=rI(c,Y,IA,gA=p)),(q=p)^u,63),b=p,H=i[(Y=(B+1024|0)+(120|A)|0)>>2],_=i[Y+4>>2],BA=i[(c=d=(B+1024|0)+(88|A)|0)>>2],X=i[c+4>>2],L=ug((v=H)^(T=rI(Z=i[(c=H=(B+1024|0)+(24|A)|0)>>2],D=i[c+4>>2],x=i[(A=(B+1024|0)+(56|A)|0)>>2],c=i[A+4>>2])),(D=_)^(_=p),32),c=ug(D=(X=rI(BA,X,L,K=p))^x,c^(x=p),24),v=x,L=ug((x=rI(T,D=_,c,_=p))^L,(T=p)^K,16),_=ug(c^(X=rI(X,v,L,K=p)),(Z=p)^_,63),c=p,v=W,D=q,W=ug(L^(m=rI(m,y,s,a)),K^(y=p),32),s=ug((L=rI(v,D,W,q=p))^s,(K=p)^a,24),a=rI(a=m,y,s,m=p),y=p,i[Q>>2]=a,i[Q+4>>2]=y,Q=ug(a^W,q^y,16),a=p,i[Y>>2]=Q,i[Y+4>>2]=a,Q=rI(L,K,Q,a),a=p,i[k>>2]=Q,i[k+4>>2]=a,QA=C,CA=ug(Q^s,a^m,63),i[QA>>2]=CA,i[C+4>>2]=p,y=u,a=ug(P^(C=rI(M,J,u,b)),S^(s=p),32),Q=ug(y^(u=rI(X,Z,a,k=p)),(Q=b)^(b=p),24),C=rI(C,y=s,Q,s=p),Y=p,i[o>>2]=C,i[o+4>>2]=Y,o=ug(C^a,k^Y,16),C=p,i[t>>2]=o,i[t+4>>2]=C,t=rI(u,b,o,C),i[d>>2]=t,o=p,i[d+4>>2]=o,QA=w,CA=ug(Q^t,o^s,63),i[QA>>2]=CA,i[w+4>>2]=p,Q=rI($,AA,_,c),a=rI(R,N,C=ug(V^Q,j^(o=p),32),s=p),Q=rI(Q,w=o,t=ug(a^_,(k=p)^c,24),o=p),u=w=p,i[G>>2]=Q,i[G+4>>2]=u,Q=ug(Q^C,s^u,16),C=p,i[r>>2]=Q,i[r+4>>2]=C,Q=rI(a,k,Q,C),i[f>>2]=Q,C=f,f=p,i[C+4>>2]=f,QA=A,CA=ug(Q^t,f^o,63),i[QA>>2]=CA,i[A+4>>2]=p,C=E,Q=ug(IA^(f=rI(x,T,E,e)),gA^(t=p),32),A=ug(C^(r=rI(O,z,Q,E=p)),(A=e)^(e=p),24),f=rI(f,C=t,A,t=p),C=o=p,i[H>>2]=f,i[H+4>>2]=C,f=ug(Q^f,E^C,16),Q=p,i[U>>2]=f,i[U+4>>2]=Q,f=rI(r,e,f,Q),i[l>>2]=f,Q=p,i[l+4>>2]=Q,QA=n,CA=ug(A^f,Q^t,63),i[QA>>2]=CA,i[n+4>>2]=p,8!=(0|(F=F+1|0)););for(;F=i[768+(A=(t=I<<4)+(B+1024|0)|0)>>2],f=i[A+772>>2],a=i[(Q=A+512|0)>>2],o=i[Q+4>>2],C=F,F=i[A+256>>2],Q=i[A+260>>2],E=ug(C^(n=rI(i[A>>2],i[A+4>>2],F,Q)),(E=f)^(f=p),32),Q=ug(C=(r=rI(a,o,E,e=p))^F,Q^(F=p),24),w=F,s=ug((o=rI(n,f,Q,F=p))^E,(C=p)^e,16),F=ug(Q^(U=rI(r,w,s,a=p)),(k=p)^F,63),f=p,Q=i[A+780>>2],u=i[A+520>>2],y=i[A+524>>2],r=ug((G=i[A+776>>2])^(e=rI(w=i[(n=t=(B+1024|0)+(8|t)|0)>>2],e=i[n+4>>2],n=i[A+264>>2],E=i[A+268>>2])),(w=Q)^(Q=p),32),E=ug(w=(G=rI(u,y,r,l=p))^n,E^(n=p),24),y=G,u=ug((G=rI(e,w=Q,E,Q=p))^r,(w=p)^l,16),Q=ug(E^(Y=rI(y,n,u,b=p)),(d=p)^Q,63),n=p,E=i[A+900>>2],D=i[A+640>>2],m=i[A+644>>2],c=i[A+896>>2],e=i[A+384>>2],r=i[A+388>>2],H=ug(c^(l=rI(i[A+128>>2],i[A+132>>2],e,r)),(y=E)^(E=p),32),r=ug(y=(c=rI(D,m,H,_=p))^e,r^(e=p),24),D=c,c=ug((c=H)^(H=rI(l,y=E,r,E=p)),(y=_)^(_=p),16),E=ug(r^(y=rI(D,e,c,m=p)),(P=p)^E,63),e=p,r=i[A+908>>2],q=i[A+648>>2],j=i[A+652>>2],v=i[A+904>>2],l=i[A+392>>2],S=i[A+396>>2],N=ug(v^(R=rI(i[A+136>>2],i[A+140>>2],l,S)),(D=r)^(r=p),32),v=S=ug(D=(J=rI(q,j,N,M=p))^l,S^(l=p),24),N=ug((S=rI(R,D=r,S,r=p))^N,(R=p)^M,16),r=ug(v^(J=rI(J,l,N,M=p)),(V=p)^r,63),l=p,v=y,D=P,y=ug(N^(o=rI(o,C,Q,n)),M^(C=p),32),Q=ug((N=rI(v,D,y,P=p))^Q,(M=p)^n,24),n=rI(n=o,C,Q,o=p),C=p,i[A>>2]=n,i[A+4>>2]=C,n=ug(n^y,P^C,16),C=p,i[A+904>>2]=n,i[A+908>>2]=C,n=rI(N,M,n,C),C=p,i[A+640>>2]=n,i[A+644>>2]=C,QA=A,CA=ug(Q^n,o^C,63),i[QA+264>>2]=CA,i[A+268>>2]=p,y=E,n=rI(G,w,E,e),s=rI(J,V,o=ug(s^n,a^(E=p),32),C=p),n=rI(n,a=E,Q=ug(y^s,(Q=e)^(e=p),24),E=p),a=p,i[t>>2]=n,i[t+4>>2]=a,t=ug(n^o,C^a,16),n=p,i[A+768>>2]=t,i[A+772>>2]=n,t=rI(s,e,t,n),i[A+648>>2]=t,n=p,i[A+652>>2]=n,QA=A,CA=ug(Q^t,n^E,63),i[QA+384>>2]=CA,i[A+388>>2]=p,o=r,E=ug(u^(Q=rI(H,_,r,l)),b^(n=p),32),t=ug(o^(r=rI(U,k,E,e=p)),(C=l)^(l=p),24),Q=rI(Q,C=n,t,n=p),C=o=p,i[A+128>>2]=Q,i[A+132>>2]=C,Q=ug(Q^E,C^e,16),E=p,i[A+776>>2]=Q,i[A+780>>2]=E,Q=rI(r,l,Q,E),i[A+512>>2]=Q,E=p,i[A+516>>2]=E,QA=A,CA=ug(Q^t,n^E,63),i[QA+392>>2]=CA,i[A+396>>2]=p,t=rI(S,R,F,f),e=rI(Y,d,n=ug(c^t,m^(Q=p),32),E=p),f=rI(C=t,Q,F=ug(e^F,(r=p)^f,24),t=p),Q=p,i[A+136>>2]=f,i[A+140>>2]=Q,f=ug(n^f,E^Q,16),Q=p,i[A+896>>2]=f,i[A+900>>2]=Q,f=rI(e,r,f,Q),i[A+520>>2]=f,Q=p,i[A+524>>2]=Q,QA=A,CA=ug(f^F,Q^t,63),i[QA+256>>2]=CA,i[A+260>>2]=p,8!=(0|(I=I+1|0)););Yg(g,B),QI(g,B+1024|0),h=B+2048|0}function m(A){var I=0,g=0,B=0,Q=0,C=0,E=0,n=0,r=0,o=0;A:if(A|=0){C=(B=A-8|0)+(A=-8&(I=i[A-4>>2]))|0;I:if(!(1&I)){if(!(3&I))break A;if((B=B-(I=i[B>>2])|0)>>>0<a[8965])break A;if(A=A+I|0,i[8966]==(0|B)){if(3==(3&(I=i[C+4>>2])))return i[8963]=A,i[C+4>>2]=-2&I,i[B+4>>2]=1|A,void(i[A+B>>2]=A)}else{if(I>>>0<=255){if(Q=i[B+8>>2],I=I>>>3|0,(0|(g=i[B+12>>2]))==(0|Q)){r=35844,o=i[8961]&vI(-2,I),i[r>>2]=o;break I}i[Q+12>>2]=g,i[g+8>>2]=Q;break I}if(n=i[B+24>>2],(0|B)==(0|(I=i[B+12>>2])))if((g=i[(Q=B+20|0)>>2])||(g=i[(Q=B+16|0)>>2])){for(;E=Q,(g=i[(Q=(I=g)+20|0)>>2])||(Q=I+16|0,g=i[I+16>>2]););i[E>>2]=0}else I=0;else g=i[B+8>>2],i[g+12>>2]=I,i[I+8>>2]=g;if(!n)break I;Q=i[B+28>>2];g:{if(i[(g=36148+(Q<<2)|0)>>2]==(0|B)){if(i[g>>2]=I,I)break g;r=35848,o=i[8962]&vI(-2,Q),i[r>>2]=o;break I}if(i[n+(i[n+16>>2]==(0|B)?16:20)>>2]=I,!I)break I}if(i[I+24>>2]=n,(g=i[B+16>>2])&&(i[I+16>>2]=g,i[g+24>>2]=I),!(g=i[B+20>>2]))break I;i[I+20>>2]=g,i[g+24>>2]=I}}if(!(B>>>0>=C>>>0)&&1&(I=i[C+4>>2])){I:{if(!(2&I)){if(i[8967]==(0|C)){if(i[8967]=B,A=i[8964]+A|0,i[8964]=A,i[B+4>>2]=1|A,i[8966]!=(0|B))break A;return i[8963]=0,void(i[8966]=0)}if(i[8966]==(0|C))return i[8966]=B,A=i[8963]+A|0,i[8963]=A,i[B+4>>2]=1|A,void(i[A+B>>2]=A);A=(-8&I)+A|0;g:if(I>>>0<=255){if(I=I>>>3|0,(0|(g=i[C+8>>2]))==(0|(Q=i[C+12>>2]))){r=35844,o=i[8961]&vI(-2,I),i[r>>2]=o;break g}i[g+12>>2]=Q,i[Q+8>>2]=g}else{if(n=i[C+24>>2],(0|C)==(0|(I=i[C+12>>2])))if((g=i[(Q=C+20|0)>>2])||(g=i[(Q=C+16|0)>>2])){for(;E=Q,(g=i[(Q=(I=g)+20|0)>>2])||(Q=I+16|0,g=i[I+16>>2]););i[E>>2]=0}else I=0;else g=i[C+8>>2],i[g+12>>2]=I,i[I+8>>2]=g;if(n){Q=i[C+28>>2];B:{if(i[(g=36148+(Q<<2)|0)>>2]==(0|C)){if(i[g>>2]=I,I)break B;r=35848,o=i[8962]&vI(-2,Q),i[r>>2]=o;break g}if(i[n+(i[n+16>>2]==(0|C)?16:20)>>2]=I,!I)break g}i[I+24>>2]=n,(g=i[C+16>>2])&&(i[I+16>>2]=g,i[g+24>>2]=I),(g=i[C+20>>2])&&(i[I+20>>2]=g,i[g+24>>2]=I)}}if(i[B+4>>2]=1|A,i[A+B>>2]=A,i[8966]!=(0|B))break I;return void(i[8963]=A)}i[C+4>>2]=-2&I,i[B+4>>2]=1|A,i[A+B>>2]=A}if(A>>>0<=255)return I=35884+((A=A>>>3|0)<<3)|0,(g=i[8961])&(A=1<<A)?A=i[I+8>>2]:(i[8961]=A|g,A=I),i[I+8>>2]=B,i[A+12>>2]=B,i[B+12>>2]=I,void(i[B+8>>2]=A);Q=31,i[B+16>>2]=0,i[B+20>>2]=0,A>>>0<=16777215&&(I=A>>>8|0,I<<=E=I+1048320>>>16&8,Q=28+((I=((I<<=Q=I+520192>>>16&4)<<(g=I+245760>>>16&2)>>>15|0)-(g|Q|E)|0)<<1|A>>>I+21&1)|0),i[B+28>>2]=Q,E=36148+(Q<<2)|0;I:{g:{if((g=i[8962])&(I=1<<Q)){for(Q=A<<(31==(0|Q)?0:25-(Q>>>1|0)|0),I=i[E>>2];;){if(g=I,(-8&i[I+4>>2])==(0|A))break g;if(I=Q>>>29|0,Q<<=1,!(I=i[16+(E=g+(4&I)|0)>>2]))break}i[E+16>>2]=B,i[B+24>>2]=g}else i[8962]=I|g,i[E>>2]=B,i[B+24>>2]=E;i[B+12>>2]=B,i[B+8>>2]=B;break I}A=i[g+8>>2],i[A+12>>2]=B,i[g+8>>2]=B,i[B+24>>2]=0,i[B+12>>2]=g,i[B+8>>2]=A}A=i[8969]-1|0,i[8969]=A||-1}}}function v(A,I){var g,B=0,Q=0,C=0,E=0,n=0,a=0,r=0;g=A+I|0;A:{I:if(!(1&(B=i[A+4>>2]))){if(!(3&B))break A;if(I=(B=i[A>>2])+I|0,(0|(A=A-B|0))==i[8966]){if(3==(3&(B=i[g+4>>2])))return i[8963]=I,i[g+4>>2]=-2&B,i[A+4>>2]=1|I,void(i[g>>2]=I)}else{if(B>>>0<=255){if(C=i[A+8>>2],B=B>>>3|0,(0|(Q=i[A+12>>2]))==(0|C)){a=35844,r=i[8961]&vI(-2,B),i[a>>2]=r;break I}i[C+12>>2]=Q,i[Q+8>>2]=C;break I}if(n=i[A+24>>2],(0|(B=i[A+12>>2]))==(0|A))if((Q=i[(C=A+20|0)>>2])||(Q=i[(C=A+16|0)>>2])){for(;E=C,(Q=i[(C=(B=Q)+20|0)>>2])||(C=B+16|0,Q=i[B+16>>2]););i[E>>2]=0}else B=0;else Q=i[A+8>>2],i[Q+12>>2]=B,i[B+8>>2]=Q;if(!n)break I;C=i[A+28>>2];g:{if(i[(Q=36148+(C<<2)|0)>>2]==(0|A)){if(i[Q>>2]=B,B)break g;a=35848,r=i[8962]&vI(-2,C),i[a>>2]=r;break I}if(i[n+(i[n+16>>2]==(0|A)?16:20)>>2]=B,!B)break I}if(i[B+24>>2]=n,(Q=i[A+16>>2])&&(i[B+16>>2]=Q,i[Q+24>>2]=B),!(Q=i[A+20>>2]))break I;i[B+20>>2]=Q,i[Q+24>>2]=B}}I:{if(!(2&(B=i[g+4>>2]))){if(i[8967]==(0|g)){if(i[8967]=A,I=i[8964]+I|0,i[8964]=I,i[A+4>>2]=1|I,i[8966]!=(0|A))break A;return i[8963]=0,void(i[8966]=0)}if(i[8966]==(0|g))return i[8966]=A,I=i[8963]+I|0,i[8963]=I,i[A+4>>2]=1|I,void(i[A+I>>2]=I);I=(-8&B)+I|0;g:if(B>>>0<=255){if(C=i[g+8>>2],B=B>>>3|0,(0|(Q=i[g+12>>2]))==(0|C)){a=35844,r=i[8961]&vI(-2,B),i[a>>2]=r;break g}i[C+12>>2]=Q,i[Q+8>>2]=C}else{if(n=i[g+24>>2],(0|g)==(0|(B=i[g+12>>2])))if((C=i[(Q=g+20|0)>>2])||(C=i[(Q=g+16|0)>>2])){for(;E=Q,(C=i[(Q=(B=C)+20|0)>>2])||(Q=B+16|0,C=i[B+16>>2]););i[E>>2]=0}else B=0;else Q=i[g+8>>2],i[Q+12>>2]=B,i[B+8>>2]=Q;if(n){C=i[g+28>>2];B:{if(i[(Q=36148+(C<<2)|0)>>2]==(0|g)){if(i[Q>>2]=B,B)break B;a=35848,r=i[8962]&vI(-2,C),i[a>>2]=r;break g}if(i[n+(i[n+16>>2]==(0|g)?16:20)>>2]=B,!B)break g}i[B+24>>2]=n,(Q=i[g+16>>2])&&(i[B+16>>2]=Q,i[Q+24>>2]=B),(Q=i[g+20>>2])&&(i[B+20>>2]=Q,i[Q+24>>2]=B)}}if(i[A+4>>2]=1|I,i[A+I>>2]=I,i[8966]!=(0|A))break I;return void(i[8963]=I)}i[g+4>>2]=-2&B,i[A+4>>2]=1|I,i[A+I>>2]=I}if(I>>>0<=255)return B=35884+((I=I>>>3|0)<<3)|0,(Q=i[8961])&(I=1<<I)?I=i[B+8>>2]:(i[8961]=I|Q,I=B),i[B+8>>2]=A,i[I+12>>2]=A,i[A+12>>2]=B,void(i[A+8>>2]=I);C=31,i[A+16>>2]=0,i[A+20>>2]=0,I>>>0<=16777215&&(B=I>>>8|0,B<<=E=B+1048320>>>16&8,C=28+((B=((B<<=C=B+520192>>>16&4)<<(Q=B+245760>>>16&2)>>>15|0)-(Q|C|E)|0)<<1|I>>>B+21&1)|0),i[A+28>>2]=C,E=36148+(C<<2)|0;I:{if((Q=i[8962])&(B=1<<C)){for(C=I<<(31==(0|C)?0:25-(C>>>1|0)|0),B=i[E>>2];;){if(Q=B,(-8&i[B+4>>2])==(0|I))break I;if(B=C>>>29|0,C<<=1,!(B=i[16+(E=Q+(4&B)|0)>>2]))break}i[E+16>>2]=A,i[A+24>>2]=Q}else i[8962]=B|Q,i[E>>2]=A,i[A+24>>2]=E;return i[A+12>>2]=A,void(i[A+8>>2]=A)}I=i[Q+8>>2],i[I+12>>2]=A,i[Q+8>>2]=A,i[A+24>>2]=0,i[A+12>>2]=Q,i[A+8>>2]=I}}function U(A,I,g,B,Q){var E,a,r,o,e,t,f,c,y,s,w,D,u,p,l,F=0,G=0,k=0,_=0,H=0,Y=0,b=0,m=0,v=0,U=0,S=0,N=0,M=0,d=0,P=0,R=0,J=0,x=0,L=0,K=0,q=0,X=0,V=0,W=0,T=0,j=0,Z=0,O=0,z=0,$=0,AA=0,IA=0,gA=0,BA=0;for(h=E=h+-64|0,a=i[A+60>>2],r=i[A+56>>2],K=i[A+52>>2],x=i[A+48>>2],o=i[A+44>>2],e=i[A+40>>2],t=i[A+36>>2],f=i[A+32>>2],c=i[A+28>>2],y=i[A+24>>2],s=i[A+20>>2],w=i[A+16>>2],D=i[A+12>>2],u=i[A+8>>2],p=i[A+4>>2],l=i[A>>2];;){if(!Q&B>>>0>63|Q)k=g;else{if(_=0,k=F=EA(E,0,64),B|Q)for(;C[F+_|0]=n[I+_|0],!Q&(_=_+1|0)>>>0<B>>>0|Q;);I=k,V=g}for(q=20,m=l,v=p,U=u,S=D,_=w,F=s,g=y,N=c,H=f,Y=t,M=e,d=a,P=r,G=K,R=x,L=o;b=_,m=Hg((_=_+m|0)^R,16),R=Hg(b^(H=m+H|0),12),b=H,H=Hg((H=m)^(m=_+R|0),8),_=Hg(R^(J=b+H|0),7),b=F,v=Hg((F=F+v|0)^G,16),G=Hg(b^(Y=v+Y|0),12),b=Y,Y=Hg((Y=v)^(v=F+G|0),8),F=Hg(G^(X=b+Y|0),7),G=g,U=Hg((g=g+U|0)^P,16),b=P=Hg(G^(M=U+M|0),12),P=Hg((G=U)^(U=g+P|0),8),g=Hg(b^(M=P+M|0),7),G=N,S=Hg((N=N+S|0)^d,16),L=G=Hg(G^(d=S+L|0),12),b=d,d=Hg((d=S)^(S=N+G|0),8),N=Hg(L^(G=b+d|0),7),b=M,M=Hg((m=F+m|0)^d,16),F=Hg((R=b+M|0)^F,12),d=Hg(M^(m=F+m|0),8),F=Hg(F^(M=R+d|0),7),H=Hg((v=g+v|0)^H,16),g=Hg((G=H+G|0)^g,12),R=Hg(H^(v=g+v|0),8),g=Hg(g^(L=G+R|0),7),H=Hg((U=N+U|0)^Y,16),N=Hg((Y=H+J|0)^N,12),G=Hg(H^(U=N+U|0),8),N=Hg(N^(H=Y+G|0),7),Y=Hg((S=_+S|0)^P,16),_=Hg((J=Y+X|0)^_,12),P=Hg(Y^(S=_+S|0),8),_=Hg(_^(Y=J+P|0),7),q=q-2|0;);if(q=n[I+4|0]|n[I+5|0]<<8|n[I+6|0]<<16|n[I+7|0]<<24,J=n[I+8|0]|n[I+9|0]<<8|n[I+10|0]<<16|n[I+11|0]<<24,X=n[I+12|0]|n[I+13|0]<<8|n[I+14|0]<<16|n[I+15|0]<<24,W=n[I+16|0]|n[I+17|0]<<8|n[I+18|0]<<16|n[I+19|0]<<24,T=n[I+20|0]|n[I+21|0]<<8|n[I+22|0]<<16|n[I+23|0]<<24,j=n[I+24|0]|n[I+25|0]<<8|n[I+26|0]<<16|n[I+27|0]<<24,Z=n[I+28|0]|n[I+29|0]<<8|n[I+30|0]<<16|n[I+31|0]<<24,O=n[I+32|0]|n[I+33|0]<<8|n[I+34|0]<<16|n[I+35|0]<<24,z=n[I+36|0]|n[I+37|0]<<8|n[I+38|0]<<16|n[I+39|0]<<24,$=n[I+40|0]|n[I+41|0]<<8|n[I+42|0]<<16|n[I+43|0]<<24,AA=n[I+44|0]|n[I+45|0]<<8|n[I+46|0]<<16|n[I+47|0]<<24,IA=n[I+48|0]|n[I+49|0]<<8|n[I+50|0]<<16|n[I+51|0]<<24,gA=n[I+52|0]|n[I+53|0]<<8|n[I+54|0]<<16|n[I+55|0]<<24,BA=n[I+56|0]|n[I+57|0]<<8|n[I+58|0]<<16|n[I+59|0]<<24,b=n[I+60|0]|n[I+61|0]<<8|n[I+62|0]<<16|n[I+63|0]<<24,xI(k,m+l^(n[0|I]|n[I+1|0]<<8|n[I+2|0]<<16|n[I+3|0]<<24)),xI(k+4|0,v+p^q),xI(k+8|0,U+u^J),xI(k+12|0,S+D^X),xI(k+16|0,_+w^W),xI(k+20|0,F+s^T),xI(k+24|0,g+y^j),xI(k+28|0,N+c^Z),xI(k+32|0,H+f^O),xI(k+36|0,Y+t^z),xI(k+40|0,$^M+e),xI(k+44|0,AA^L+o),xI(k+48|0,IA^R+x),xI(k+52|0,gA^G+K),xI(k+56|0,BA^P+r),xI(k+60|0,b^d+a),K=((x=(g=x)+1|0)>>>0<g>>>0)+K|0,!Q&B>>>0<=64){if(!(!B|!Q&B>>>0>63|0!=(0|Q)))for(F=0;C[F+V|0]=n[k+F|0],(0|B)!=(0|(F=F+1|0)););i[A+52>>2]=K,i[A+48>>2]=x,h=E- -64|0;break}I=I- -64|0,g=k- -64|0,Q=Q-1|0,Q=(B=B+-64|0)>>>0<4294967232?Q+1|0:Q}}function S(A,I,g,B){var Q=0,C=0,E=0,a=0,o=0,e=0,t=0,f=0,c=0,y=0,s=0,w=0,h=0,D=0,u=0,l=0,F=0,G=0,k=0,_=0,H=0,Y=0,b=0,m=0,v=0;if(c=i[A+36>>2],a=i[A+32>>2],E=i[A+28>>2],C=i[A+24>>2],o=i[A+20>>2],!B&g>>>0>=16|B)for(H=!n[A+80|0]<<24,s=i[A+4>>2],Y=r(s,5),D=i[A+8>>2],_=r(D,5),G=i[A+12>>2],k=r(G,5),Q=i[A+16>>2],u=r(Q,5),b=Q,w=i[A>>2];Q=eg(e=((n[I+3|0]|n[I+4|0]<<8|n[I+5|0]<<16|n[I+6|0]<<24)>>>2&67108863)+C|0,0,G,0),t=p,C=(y=eg(o=(67108863&(n[0|I]|n[I+1|0]<<8|n[I+2|0]<<16|n[I+3|0]<<24))+o|0,0,b,0))+Q|0,Q=p+t|0,Q=C>>>0<y>>>0?Q+1|0:Q,f=C,C=eg(t=((n[I+6|0]|n[I+7|0]<<8|n[I+8|0]<<16|n[I+9|0]<<24)>>>4&67108863)+E|0,0,D,0),Q=p+Q|0,Q=C>>>0>(E=f+C|0)>>>0?Q+1|0:Q,C=E,E=eg(y=((n[I+9|0]|n[I+10|0]<<8|n[I+11|0]<<16|n[I+12|0]<<24)>>>6|0)+a|0,0,s,0),Q=p+Q|0,Q=E>>>0>(a=C+E|0)>>>0?Q+1|0:Q,C=a,a=eg(h=c+H+((n[I+12|0]|n[I+13|0]<<8|n[I+14|0]<<16|n[I+15|0]<<24)>>>8)|0,0,w,0),Q=p+Q|0,m=c=C+a|0,c=a>>>0>c>>>0?Q+1|0:Q,Q=eg(e,0,D,0),E=p,a=(C=eg(o,0,G,0))+Q|0,Q=p+E|0,Q=C>>>0>a>>>0?Q+1|0:Q,E=eg(t,0,s,0),Q=p+Q|0,Q=E>>>0>(a=E+a|0)>>>0?Q+1|0:Q,E=eg(y,0,w,0),Q=p+Q|0,Q=E>>>0>(a=E+a|0)>>>0?Q+1|0:Q,E=eg(h,0,u,0),Q=p+Q|0,v=a=E+a|0,a=E>>>0>a>>>0?Q+1|0:Q,Q=eg(e,0,s,0),C=p,E=(l=eg(o,0,D,0))+Q|0,Q=p+C|0,Q=E>>>0<l>>>0?Q+1|0:Q,C=eg(t,0,w,0),Q=p+Q|0,Q=C>>>0>(E=C+E|0)>>>0?Q+1|0:Q,C=eg(y,0,u,0),Q=p+Q|0,Q=C>>>0>(E=C+E|0)>>>0?Q+1|0:Q,C=eg(h,0,k,0),Q=p+Q|0,l=E=C+E|0,E=C>>>0>E>>>0?Q+1|0:Q,Q=eg(e,0,w,0),f=p,C=(F=eg(o,0,s,0))+Q|0,Q=p+f|0,Q=C>>>0<F>>>0?Q+1|0:Q,f=eg(t,0,u,0),Q=p+Q|0,Q=(C=f+C|0)>>>0<f>>>0?Q+1|0:Q,f=eg(y,0,k,0),Q=p+Q|0,Q=(C=f+C|0)>>>0<f>>>0?Q+1|0:Q,f=eg(h,0,_,0),Q=p+Q|0,Q=(C=f+C|0)>>>0<f>>>0?Q+1|0:Q,f=C,C=Q,Q=eg(e,0,u,0),F=p,e=(o=eg(o,0,w,0))+Q|0,Q=p+F|0,Q=e>>>0<o>>>0?Q+1|0:Q,o=eg(t,0,k,0),Q=p+Q|0,Q=(e=o+e|0)>>>0<o>>>0?Q+1|0:Q,o=eg(y,0,_,0),Q=p+Q|0,Q=(e=o+e|0)>>>0<o>>>0?Q+1|0:Q,o=eg(h,0,Y,0),Q=p+Q|0,Q=(e=o+e|0)>>>0<o>>>0?Q+1|0:Q,o=e,t=(67108863&Q)<<6|e>>>26,Q=C,t=(67108863&(Q=(e=t+f|0)>>>0<t>>>0?Q+1|0:Q))<<6|(C=e)>>>26,Q=E,Q=(C=t+l|0)>>>0<t>>>0?Q+1|0:Q,t=C,C=(67108863&Q)<<6|C>>>26,Q=a,y=E=C+v|0,E=(67108863&(Q=C>>>0>E>>>0?Q+1|0:Q))<<6|E>>>26,Q=c,c=a=E+m|0,C=(67108863&e)+((Q=r((67108863&(Q=E>>>0>a>>>0?Q+1|0:Q))<<6|a>>>26,5)+(67108863&o)|0)>>>26|0)|0,E=67108863&t,a=67108863&y,c&=67108863,o=67108863&Q,I=I+16|0,!(B=B-(g>>>0<16)|0)&(g=g-16|0)>>>0>15|B;);i[A+20>>2]=o,i[A+36>>2]=c,i[A+32>>2]=a,i[A+28>>2]=E,i[A+24>>2]=C}function N(A,I,g){var B,Q,E,i,a=0,r=0,o=0,e=0,t=0;return h=E=h-160|0,mI(I,g,32,0),C[0|I]=248&n[0|I],C[I+31|0]=63&n[I+31|0]|64,CA(E,I),nI(A,E),r=n[(Q=g)+8|0]|n[Q+9|0]<<8|n[Q+10|0]<<16|n[Q+11|0]<<24,a=n[Q+12|0]|n[Q+13|0]<<8|n[Q+14|0]<<16|n[Q+15|0]<<24,o=n[Q+16|0]|n[Q+17|0]<<8|n[Q+18|0]<<16|n[Q+19|0]<<24,e=n[Q+20|0]|n[Q+21|0]<<8|n[Q+22|0]<<16|n[Q+23|0]<<24,t=n[0|Q]|n[Q+1|0]<<8|n[Q+2|0]<<16|n[Q+3|0]<<24,g=n[Q+4|0]|n[Q+5|0]<<8|n[Q+6|0]<<16|n[Q+7|0]<<24,B=I,i=n[Q+28|0]|n[Q+29|0]<<8|n[Q+30|0]<<16|n[Q+31|0]<<24,I=n[Q+24|0]|n[Q+25|0]<<8|n[Q+26|0]<<16|n[Q+27|0]<<24,C[B+24|0]=I,C[B+25|0]=I>>>8,C[B+26|0]=I>>>16,C[B+27|0]=I>>>24,C[B+28|0]=i,C[B+29|0]=i>>>8,C[B+30|0]=i>>>16,C[B+31|0]=i>>>24,C[B+16|0]=o,C[B+17|0]=o>>>8,C[B+18|0]=o>>>16,C[B+19|0]=o>>>24,C[B+20|0]=e,C[B+21|0]=e>>>8,C[B+22|0]=e>>>16,C[B+23|0]=e>>>24,C[B+8|0]=r,C[B+9|0]=r>>>8,C[B+10|0]=r>>>16,C[B+11|0]=r>>>24,C[B+12|0]=a,C[B+13|0]=a>>>8,C[B+14|0]=a>>>16,C[B+15|0]=a>>>24,C[0|B]=t,C[B+1|0]=t>>>8,C[B+2|0]=t>>>16,C[B+3|0]=t>>>24,C[B+4|0]=g,C[B+5|0]=g>>>8,C[B+6|0]=g>>>16,C[B+7|0]=g>>>24,o=n[(a=A)+8|0]|n[a+9|0]<<8|n[a+10|0]<<16|n[a+11|0]<<24,e=n[a+12|0]|n[a+13|0]<<8|n[a+14|0]<<16|n[a+15|0]<<24,t=n[a+16|0]|n[a+17|0]<<8|n[a+18|0]<<16|n[a+19|0]<<24,g=n[a+20|0]|n[a+21|0]<<8|n[a+22|0]<<16|n[a+23|0]<<24,I=n[0|a]|n[a+1|0]<<8|n[a+2|0]<<16|n[a+3|0]<<24,A=n[a+4|0]|n[a+5|0]<<8|n[a+6|0]<<16|n[a+7|0]<<24,r=n[a+28|0]|n[a+29|0]<<8|n[a+30|0]<<16|n[a+31|0]<<24,a=n[a+24|0]|n[a+25|0]<<8|n[a+26|0]<<16|n[a+27|0]<<24,C[B+56|0]=a,C[B+57|0]=a>>>8,C[B+58|0]=a>>>16,C[B+59|0]=a>>>24,C[B+60|0]=r,C[B+61|0]=r>>>8,C[B+62|0]=r>>>16,C[B+63|0]=r>>>24,C[B+48|0]=t,C[B+49|0]=t>>>8,C[B+50|0]=t>>>16,C[B+51|0]=t>>>24,C[B+52|0]=g,C[B+53|0]=g>>>8,C[B+54|0]=g>>>16,C[B+55|0]=g>>>24,C[B+40|0]=o,C[B+41|0]=o>>>8,C[B+42|0]=o>>>16,C[B+43|0]=o>>>24,C[B+44|0]=e,C[B+45|0]=e>>>8,C[B+46|0]=e>>>16,C[B+47|0]=e>>>24,C[B+32|0]=I,C[B+33|0]=I>>>8,C[B+34|0]=I>>>16,C[B+35|0]=I>>>24,C[B+36|0]=A,C[B+37|0]=A>>>8,C[B+38|0]=A>>>16,C[B+39|0]=A>>>24,h=E+160|0,0}function M(A,I,g){var B,Q=0,E=0,i=0;h=B=h+-64|0;A:{if(!(!g|g>>>0>=65)){if(Q=-1,!(n[A+80|0]|n[A+81|0]<<8|n[A+82|0]<<16|n[A+83|0]<<24|n[A+84|0]|n[A+85|0]<<8|n[A+86|0]<<16|n[A+87|0]<<24)){if(E=A,(Q=n[A+352|0]|n[A+353|0]<<8|n[A+354|0]<<16|n[A+355|0]<<24)>>>0>=129){if(iA(A,128),l(A,i=A+96|0),Q=(n[A+352|0]|n[A+353|0]<<8|n[A+354|0]<<16|n[A+355|0]<<24)-128|0,C[A+352|0]=Q,C[A+353|0]=Q>>>8,C[A+354|0]=Q>>>16,C[A+355|0]=Q>>>24,Q>>>0>=129)break A;X(i,A+224|0,Q),Q=n[A+352|0]|n[A+353|0]<<8|n[A+354|0]<<16|n[A+355|0]<<24}iA(E,Q),n[A+356|0]&&(C[A+88|0]=255,C[A+89|0]=255,C[A+90|0]=255,C[A+91|0]=255,C[A+92|0]=255,C[A+93|0]=255,C[A+94|0]=255,C[A+95|0]=255),C[A+80|0]=255,C[A+81|0]=255,C[A+82|0]=255,C[A+83|0]=255,C[A+84|0]=255,C[A+85|0]=255,C[A+86|0]=255,C[A+87|0]=255,EA((Q=A+96|0)+(E=n[A+352|0]|n[A+353|0]<<8|n[A+354|0]<<16|n[A+355|0]<<24)|0,0,256-E|0),l(A,Q),tI(B,n[0|A]|n[A+1|0]<<8|n[A+2|0]<<16|n[A+3|0]<<24,n[A+4|0]|n[A+5|0]<<8|n[A+6|0]<<16|n[A+7|0]<<24),tI(8|B,n[A+8|0]|n[A+9|0]<<8|n[A+10|0]<<16|n[A+11|0]<<24,n[A+12|0]|n[A+13|0]<<8|n[A+14|0]<<16|n[A+15|0]<<24),tI(B+16|0,n[A+16|0]|n[A+17|0]<<8|n[A+18|0]<<16|n[A+19|0]<<24,n[A+20|0]|n[A+21|0]<<8|n[A+22|0]<<16|n[A+23|0]<<24),tI(B+24|0,n[A+24|0]|n[A+25|0]<<8|n[A+26|0]<<16|n[A+27|0]<<24,n[A+28|0]|n[A+29|0]<<8|n[A+30|0]<<16|n[A+31|0]<<24),tI(B+32|0,n[A+32|0]|n[A+33|0]<<8|n[A+34|0]<<16|n[A+35|0]<<24,n[A+36|0]|n[A+37|0]<<8|n[A+38|0]<<16|n[A+39|0]<<24),tI(B+40|0,n[A+40|0]|n[A+41|0]<<8|n[A+42|0]<<16|n[A+43|0]<<24,n[A+44|0]|n[A+45|0]<<8|n[A+46|0]<<16|n[A+47|0]<<24),tI(B+48|0,n[A+48|0]|n[A+49|0]<<8|n[A+50|0]<<16|n[A+51|0]<<24,n[A+52|0]|n[A+53|0]<<8|n[A+54|0]<<16|n[A+55|0]<<24),tI(B+56|0,n[A+56|0]|n[A+57|0]<<8|n[A+58|0]<<16|n[A+59|0]<<24,n[A+60|0]|n[A+61|0]<<8|n[A+62|0]<<16|n[A+63|0]<<24),X(I,B,g),fI(A,64),fI(Q,256),Q=0}return h=B- -64|0,Q}OI(),e()}t(1854,1886,306,1931),e()}function d(A,I){var g,B,Q,C,E,a,r,o,e,t=0,f=0,c=0,y=0,s=0,w=0,h=0,D=0,u=0,l=0,F=0;g=n[0|I]|n[I+1|0]<<8|n[I+2|0]<<16|n[I+3|0]<<24,u=HI(I+4|0),t=p,h=HI(I+7|0),c=p,D=HI(I+10|0),f=p,B=HI(I+13|0),s=p,y=n[I+16|0]|n[I+17|0]<<8|n[I+18|0]<<16|n[I+19|0]<<24,Q=HI(I+20|0),l=p,C=HI(I+23|0),E=p,a=HI(I+26|0),r=p,o=HI(I+29|0),I=f<<3|D>>>29,F=f=D<<3,D=f=f+16777216|0,f=I=f>>>0<16777216?I+1|0:I,c=I=c<<5|h>>>27,e=w=h<<5,t=I=t<<6|(h=u)>>>26,u=I=16777216+(h<<=6)|0,w=I,I=(I=(t=I>>>0<16777216?t+1|0:t)>>25)+c|0,I=(t=e+(w=(33554431&t)<<7|w>>>25)|0)>>>0<w>>>0?I+1|0:I,(c=t+33554432|0)>>>0<33554432&&(I=I+1|0),I=(F-(-33554432&D)|0)+((67108863&I)<<6|c>>>26)|0,i[A+12>>2]=I,I=-67108864&c,i[A+8>>2]=t-I,I=0,w=y=(c=y)+16777216|0,y=I=y>>>0<16777216?1:I,F=c-(-33554432&w)|0,I=s<<2|(c=B)>>>30,s=c<<2,c=I,I=(I=f>>25)+c|0,t=I=(f=(t=s)+(s=(33554431&f)<<7|D>>>25)|0)>>>0<s>>>0?I+1|0:I,c=I=f+33554432|0,I=((67108863&(t=I>>>0<33554432?t+1|0:t))<<6|I>>>26)+F|0,i[A+20>>2]=I,I=-67108864&c,i[A+16>>2]=f-I,s=(t=Q)<<7,I=(I=l<<7|t>>>25)+(t=y>>25)|0,I=(y=s+(c=(33554431&y)<<7|w>>>25)|0)>>>0<c>>>0?I+1|0:I,y=t=y,c=t=t+33554432|0,t=I=t>>>0<33554432?I+1|0:I,I=-67108864&c,i[(f=A)+24>>2]=y-I,y=f,I=E<<5|(f=C)>>>27,l=f<<=5,s=f=f+16777216|0,f=I=f>>>0<16777216?I+1|0:I,I=(l-(-33554432&s)|0)+((67108863&t)<<6|c>>>26)|0,i[y+28>>2]=I,c=(t=a)<<4,t=I=r<<4|t>>>28,I=(I=f>>25)+t|0,I=(f=(w=c)+(c=(33554431&f)<<7|s>>>25)|0)>>>0<c>>>0?I+1|0:I,f=t=f,c=t=t+33554432|0,t=I=t>>>0<33554432?I+1|0:I,I=-67108864&c,i[y+32>>2]=f-I,I=0,f=y=(y=o)<<2&33554428,I=(y=y+16777216|0)>>>0<16777216?I+1|0:I,t=(f-(33554432&y)|0)+((67108863&t)<<6|c>>>26)|0,i[A+36>>2]=t,y=eg((33554431&I)<<7|y>>>25,I>>>25|0,19,0),I=p,I=(t=y+g|0)>>>0<y>>>0?I+1|0:I,(f=t+33554432|0)>>>0<33554432&&(I=I+1|0),I=(h-(-33554432&u)|0)+((67108863&I)<<6|f>>>26)|0,i[A+4>>2]=I,I=A,A=-67108864&f,i[I>>2]=t-A}function P(A,I){var g,B,Q,C,E,n,a,r,o,e=0,t=0,f=0,c=0,y=0,s=0,w=0,h=0,D=0,u=0,l=0,F=0,G=0,k=0;l=t=i[(e=I)+4>>2],D=t>>31,F=t=i[e+8>>2],B=t>>31,w=t=i[e+12>>2],u=t>>31,G=t=i[e+16>>2],Q=t>>31,h=t=i[e+20>>2],s=t>>31,k=t=i[e+24>>2],C=t>>31,E=t=i[e>>2],n=t>>31,c=t=eg(e=i[e+36>>2],e>>31,121666,0),e=p,g=t=t+16777216|0,t=e=t>>>0<16777216?e+1|0:e,a=c-(-33554432&g)|0,f=eg(e=i[I+32>>2],e>>31,121666,0),r=p,c=eg(I=i[I+28>>2],I>>31,121666,0),e=p,y=f,o=I=c+16777216|0,f=I,I=(I=(e=I>>>0<16777216?e+1|0:e)>>25)+r|0,I=(e=y+(f=(33554431&e)<<7|f>>>25)|0)>>>0<f>>>0?I+1|0:I,f=e,e=I,y=I=f+33554432|0,I=((67108863&(e=I>>>0<33554432?e+1|0:e))<<6|I>>>26)+a|0,i[A+36>>2]=I,I=-67108864&y,i[A+32>>2]=f-I,y=c-(-33554432&o)|0,e=eg(k,C,121666,0),k=p,c=eg(h,s,121666,0),I=p,f=e,h=e=c+16777216|0,s=e,e=(e=(I=e>>>0<16777216?I+1|0:I)>>25)+k|0,e=(I=f+(s=(33554431&I)<<7|s>>>25)|0)>>>0<s>>>0?e+1|0:e,(f=I+33554432|0)>>>0<33554432&&(e=e+1|0),e=y+((67108863&e)<<6|f>>>26)|0,i[A+28>>2]=e,e=-67108864&f,i[A+24>>2]=I-e,h=c-(-33554432&h)|0,I=eg(G,Q,121666,0),G=p,c=eg(w,u,121666,0),e=p,y=I,w=I=c+16777216|0,u=(33554431&(e=I>>>0<16777216?e+1|0:e))<<7|I>>>25,e=(e>>25)+G|0,I=e=(f=y+u|0)>>>0<u>>>0?e+1|0:e,I=((67108863&(I=(e=f+33554432|0)>>>0<33554432?I+1|0:I))<<6|e>>>26)+h|0,i[A+20>>2]=I,I=-67108864&e,i[A+16>>2]=f-I,w=c-(-33554432&w)|0,e=eg(F,B,121666,0),F=p,c=eg(l,D,121666,0),I=p,y=e,l=e=c+16777216|0,D=(33554431&(I=e>>>0<16777216?I+1|0:I))<<7|e>>>25,I=(I>>25)+F|0,e=I=(f=y+D|0)>>>0<D>>>0?I+1|0:I,y=I=f+33554432|0,I=((67108863&(e=I>>>0<33554432?e+1|0:e))<<6|I>>>26)+w|0,i[A+12>>2]=I,I=-67108864&y,i[A+8>>2]=f-I,I=eg((33554431&t)<<7|g>>>25,t>>25,19,0),e=p,y=c-(-33554432&l)|0,t=eg(E,n,121666,0),e=p+e|0,e=(I=t+I|0)>>>0<t>>>0?e+1|0:e,(t=I+33554432|0)>>>0<33554432&&(e=e+1|0),e=y+((67108863&e)<<6|t>>>26)|0,i[A+4>>2]=e,e=A,A=-67108864&t,i[e>>2]=I-A}function R(A,I,g,B){var Q,E=0,a=0;h=Q=h-16|0,E=-31;A:{I:{g:{B:switch(B-1|0){case 1:if(I>>>0<13)break I;B=n[35660]|n[35661]<<8|n[35662]<<16|n[35663]<<24,E=n[35656]|n[35657]<<8|n[35658]<<16|n[35659]<<24,C[0|A]=E,C[A+1|0]=E>>>8,C[A+2|0]=E>>>16,C[A+3|0]=E>>>24,C[A+4|0]=B,C[A+5|0]=B>>>8,C[A+6|0]=B>>>16,C[A+7|0]=B>>>24,B=n[35665]|n[35666]<<8|n[35667]<<16|n[35668]<<24,E=n[35661]|n[35662]<<8|n[35663]<<16|n[35664]<<24,C[A+5|0]=E,C[A+6|0]=E>>>8,C[A+7|0]=E>>>16,C[A+8|0]=E>>>24,C[A+9|0]=B,C[A+10|0]=B>>>8,C[A+11|0]=B>>>16,C[A+12|0]=B>>>24,a=-12,B=12;break g;case 0:break B;default:break A}if(I>>>0<12)break I;B=n[35673]|n[35674]<<8|n[35675]<<16|n[35676]<<24,E=n[35669]|n[35670]<<8|n[35671]<<16|n[35672]<<24,C[0|A]=E,C[A+1|0]=E>>>8,C[A+2|0]=E>>>16,C[A+3|0]=E>>>24,C[A+4|0]=B,C[A+5|0]=B>>>8,C[A+6|0]=B>>>16,C[A+7|0]=B>>>24,B=n[35677]|n[35678]<<8|n[35679]<<16|n[35680]<<24,C[A+8|0]=B,C[A+9|0]=B>>>8,C[A+10|0]=B>>>16,C[A+11|0]=B>>>24,a=-11,B=11}if(E=oA(g))break A;if(qA(Q+5|0,19),!((E=I+a|0)>>>0<=(I=YA(Q+5|0))>>>0)&&(A=X(A+B|0,Q+5|0,I+1|0),!((B=E-I|0)>>>0<4)&&(C[0|(A=A+I|0)]=36,C[A+1|0]=109,C[A+2|0]=61,C[A+3|0]=0,qA(Q+5|0,i[g+44>>2]),!((B=B-3|0)>>>0<=(I=YA(Q+5|0))>>>0)&&(A=X(A+3|0,Q+5|0,I+1|0),!((B=B-I|0)>>>0<4)&&(C[0|(A=A+I|0)]=44,C[A+1|0]=116,C[A+2|0]=61,C[A+3|0]=0,qA(Q+5|0,i[g+40>>2]),!((B=B-3|0)>>>0<=(I=YA(Q+5|0))>>>0)&&(A=X(A+3|0,Q+5|0,I+1|0),!((B=B-I|0)>>>0<4)&&(C[0|(A=A+I|0)]=44,C[A+1|0]=112,C[A+2|0]=61,C[A+3|0]=0,qA(Q+5|0,i[g+48>>2]),!((B=B-3|0)>>>0<=(I=YA(Q+5|0))>>>0)&&(A=X(A+3|0,Q+5|0,I+1|0),!((B=B-I|0)>>>0<2)&&(C[0|(A=A+I|0)]=36,C[A+1|0]=0,O(A=A+1|0,I=B-1|0,i[g+16>>2],i[g+20>>2],3)))))))))){if(E=-31,(B=(B=I)-(I=YA(A))|0)>>>0<2)break A;return C[0|(A=A+I|0)]=36,C[A+1|0]=0,A=O(A+1|0,B-1|0,i[g>>2],i[g+4>>2],3),h=Q+16|0,A?0:-31}}E=-31}return h=Q+16|0,E}function J(A,I,g,B){var Q,E=0;Q=E=h,h=E=E-576&-64,i[E+188>>2]=0,xI(E+188|0,I);A:if(I>>>0<=64){if((0|iI(E+192|0,0,0,I))<0)break A;if((0|hg(E+192|0,E+188|0,4,0))<0)break A;if((0|hg(E+192|0,g,B,0))<0)break A;dI(E+192|0,A,I)}else if(!((0|iI(E+192|0,0,0,64))<0||(0|hg(E+192|0,E+188|0,4,0))<0||(0|hg(E+192|0,g,B,0))<0||(0|dI(E+192|0,E+112|0,64))<0)){if(g=i[E+116>>2],B=i[E+112>>2],C[0|A]=B,C[A+1|0]=B>>>8,C[A+2|0]=B>>>16,C[A+3|0]=B>>>24,C[A+4|0]=g,C[A+5|0]=g>>>8,C[A+6|0]=g>>>16,C[A+7|0]=g>>>24,g=i[E+124>>2],B=i[E+120>>2],C[A+8|0]=B,C[A+9|0]=B>>>8,C[A+10|0]=B>>>16,C[A+11|0]=B>>>24,C[A+12|0]=g,C[A+13|0]=g>>>8,C[A+14|0]=g>>>16,C[A+15|0]=g>>>24,g=i[E+140>>2],B=i[E+136>>2],C[A+24|0]=B,C[A+25|0]=B>>>8,C[A+26|0]=B>>>16,C[A+27|0]=B>>>24,C[A+28|0]=g,C[A+29|0]=g>>>8,C[A+30|0]=g>>>16,C[A+31|0]=g>>>24,g=i[E+132>>2],B=i[E+128>>2],C[A+16|0]=B,C[A+17|0]=B>>>8,C[A+18|0]=B>>>16,C[A+19|0]=B>>>24,C[A+20|0]=g,C[A+21|0]=g>>>8,C[A+22|0]=g>>>16,C[A+23|0]=g>>>24,A=A+32|0,(I=I-32|0)>>>0>=65)for(;;){if(X(E+48|0,E+112|0,64),(0|GI(E+112|0,64,E+48|0,64,0,0,0))<0)break A;if(g=i[E+116>>2],B=i[E+112>>2],C[0|A]=B,C[A+1|0]=B>>>8,C[A+2|0]=B>>>16,C[A+3|0]=B>>>24,C[A+4|0]=g,C[A+5|0]=g>>>8,C[A+6|0]=g>>>16,C[A+7|0]=g>>>24,g=i[E+124>>2],B=i[E+120>>2],C[A+8|0]=B,C[A+9|0]=B>>>8,C[A+10|0]=B>>>16,C[A+11|0]=B>>>24,C[A+12|0]=g,C[A+13|0]=g>>>8,C[A+14|0]=g>>>16,C[A+15|0]=g>>>24,g=i[E+140>>2],B=i[E+136>>2],C[A+24|0]=B,C[A+25|0]=B>>>8,C[A+26|0]=B>>>16,C[A+27|0]=B>>>24,C[A+28|0]=g,C[A+29|0]=g>>>8,C[A+30|0]=g>>>16,C[A+31|0]=g>>>24,g=i[E+132>>2],B=i[E+128>>2],C[A+16|0]=B,C[A+17|0]=B>>>8,C[A+18|0]=B>>>16,C[A+19|0]=B>>>24,C[A+20|0]=g,C[A+21|0]=g>>>8,C[A+22|0]=g>>>16,C[A+23|0]=g>>>24,A=A+32|0,!((I=I-32|0)>>>0>64))break}X(E+48|0,E+112|0,64),(0|GI(E+112|0,I,E+48|0,64,0,0,0))<0||X(A,E+112|0,I)}fI(E+192|0,384),h=Q}function x(A,I,g){var B=0,Q=0,C=0,E=0,i=0,a=0,r=0,o=0,e=0,t=0,f=0,c=0,y=0,s=0,w=0,h=0,D=0,u=0,p=0;for(C=2036477234,e=857760878,t=1634760805,E=1797285236,o=n[0|g]|n[g+1|0]<<8|n[g+2|0]<<16|n[g+3|0]<<24,B=n[g+4|0]|n[g+5|0]<<8|n[g+6|0]<<16|n[g+7|0]<<24,Q=n[g+8|0]|n[g+9|0]<<8|n[g+10|0]<<16|n[g+11|0]<<24,a=n[g+12|0]|n[g+13|0]<<8|n[g+14|0]<<16|n[g+15|0]<<24,c=n[g+16|0]|n[g+17|0]<<8|n[g+18|0]<<16|n[g+19|0]<<24,y=n[g+20|0]|n[g+21|0]<<8|n[g+22|0]<<16|n[g+23|0]<<24,w=n[g+24|0]|n[g+25|0]<<8|n[g+26|0]<<16|n[g+27|0]<<24,h=n[g+28|0]|n[g+29|0]<<8|n[g+30|0]<<16|n[g+31|0]<<24,g=n[0|I]|n[I+1|0]<<8|n[I+2|0]<<16|n[I+3|0]<<24,f=n[I+4|0]|n[I+5|0]<<8|n[I+6|0]<<16|n[I+7|0]<<24,i=n[I+8|0]|n[I+9|0]<<8|n[I+10|0]<<16|n[I+11|0]<<24,I=n[I+12|0]|n[I+13|0]<<8|n[I+14|0]<<16|n[I+15|0]<<24;r=o,t=Hg((s=g)^(g=o+t|0),16),r=c=Hg(r^(o=t+c|0),12),c=Hg((s=t)^(t=g+c|0),8),o=Hg(r^(D=c+o|0),7),r=B,e=Hg((g=B+e|0)^f,16),r=f=Hg(r^(B=e+y|0),12),f=Hg((s=e)^(e=g+f|0),8),g=Hg(r^(y=f+B|0),7),r=Q,B=Hg((C=C+Q|0)^i,16),r=i=Hg(r^(Q=B+w|0),12),s=Hg(B^(i=C+i|0),8),C=Hg(r^(B=s+Q|0),7),E=Hg((Q=I)^(I=E+a|0),16),a=Hg((Q=E+h|0)^a,12),I=Hg(E^(u=I+a|0),8),E=Hg(a^(Q=I+Q|0),7),r=B,B=Hg((B=I)^(I=g+t|0),16),g=Hg((a=r+B|0)^g,12),I=Hg(B^(t=I+g|0),8),B=Hg(g^(w=a+I|0),7),r=Q,Q=Hg((g=C+e|0)^c,16),C=Hg((a=r+Q|0)^C,12),g=Hg(Q^(e=g+C|0),8),Q=Hg(C^(h=a+g|0),7),a=Hg((C=E+i|0)^f,16),E=Hg((i=a+D|0)^E,12),f=Hg(a^(C=C+E|0),8),a=Hg(E^(c=i+f|0),7),i=Hg((E=o+u|0)^s,16),o=Hg((y=i+y|0)^o,12),i=Hg(i^(E=E+o|0),8),o=Hg(o^(y=y+i|0),7),10!=(0|(p=p+1|0)););xI(A,t),xI(A+4|0,e),xI(A+8|0,C),xI(A+12|0,E),xI(A+16|0,g),xI(A+20|0,f),xI(A+24|0,i),xI(A+28|0,I)}function L(A){var I,g=0,B=0;h=I=h-48|0,g=n[28+(A|=0)|0]|n[A+29|0]<<8|n[A+30|0]<<16|n[A+31|0]<<24,i[I+24>>2]=n[A+24|0]|n[A+25|0]<<8|n[A+26|0]<<16|n[A+27|0]<<24,i[I+28>>2]=g,g=n[A+20|0]|n[A+21|0]<<8|n[A+22|0]<<16|n[A+23|0]<<24,i[I+16>>2]=n[A+16|0]|n[A+17|0]<<8|n[A+18|0]<<16|n[A+19|0]<<24,i[I+20>>2]=g,g=n[A+4|0]|n[A+5|0]<<8|n[A+6|0]<<16|n[A+7|0]<<24,i[I>>2]=n[0|A]|n[A+1|0]<<8|n[A+2|0]<<16|n[A+3|0]<<24,i[I+4>>2]=g,g=n[A+12|0]|n[A+13|0]<<8|n[A+14|0]<<16|n[A+15|0]<<24,i[I+8>>2]=n[A+8|0]|n[A+9|0]<<8|n[A+10|0]<<16|n[A+11|0]<<24,i[I+12>>2]=g,g=n[A+40|0]|n[A+41|0]<<8|n[A+42|0]<<16|n[A+43|0]<<24,i[I+32>>2]=n[A+36|0]|n[A+37|0]<<8|n[A+38|0]<<16|n[A+39|0]<<24,i[I+36>>2]=g,Vg[i[8957]](I,I,40,0,A+32|0,0,A),g=i[I+28>>2],B=i[I+24>>2],C[A+24|0]=B,C[A+25|0]=B>>>8,C[A+26|0]=B>>>16,C[A+27|0]=B>>>24,C[A+28|0]=g,C[A+29|0]=g>>>8,C[A+30|0]=g>>>16,C[A+31|0]=g>>>24,g=i[I+20>>2],B=i[I+16>>2],C[A+16|0]=B,C[A+17|0]=B>>>8,C[A+18|0]=B>>>16,C[A+19|0]=B>>>24,C[A+20|0]=g,C[A+21|0]=g>>>8,C[A+22|0]=g>>>16,C[A+23|0]=g>>>24,g=i[I+12>>2],B=i[I+8>>2],C[A+8|0]=B,C[A+9|0]=B>>>8,C[A+10|0]=B>>>16,C[A+11|0]=B>>>24,C[A+12|0]=g,C[A+13|0]=g>>>8,C[A+14|0]=g>>>16,C[A+15|0]=g>>>24,g=i[I+4>>2],B=i[I>>2],C[0|A]=B,C[A+1|0]=B>>>8,C[A+2|0]=B>>>16,C[A+3|0]=B>>>24,C[A+4|0]=g,C[A+5|0]=g>>>8,C[A+6|0]=g>>>16,C[A+7|0]=g>>>24,g=i[I+36>>2],B=i[I+32>>2],C[A+36|0]=B,C[A+37|0]=B>>>8,C[A+38|0]=B>>>16,C[A+39|0]=B>>>24,C[A+40|0]=g,C[A+41|0]=g>>>8,C[A+42|0]=g>>>16,C[A+43|0]=g>>>24,XI(A),h=I+48|0}function K(A,I,g){var B=0,Q=0,C=0,E=0,i=0,a=0,r=0,o=0,e=0,t=0,f=0,c=0,y=0,s=0,w=0,h=0,D=0,u=0,p=0,l=0,F=0;for(Q=2036477234,C=857760878,E=1634760805,i=1797285236,w=20,o=n[0|g]|n[g+1|0]<<8|n[g+2|0]<<16|n[g+3|0]<<24,s=n[g+4|0]|n[g+5|0]<<8|n[g+6|0]<<16|n[g+7|0]<<24,h=n[g+8|0]|n[g+9|0]<<8|n[g+10|0]<<16|n[g+11|0]<<24,c=n[g+12|0]|n[g+13|0]<<8|n[g+14|0]<<16|n[g+15|0]<<24,e=n[g+16|0]|n[g+17|0]<<8|n[g+18|0]<<16|n[g+19|0]<<24,a=n[g+20|0]|n[g+21|0]<<8|n[g+22|0]<<16|n[g+23|0]<<24,t=n[g+24|0]|n[g+25|0]<<8|n[g+26|0]<<16|n[g+27|0]<<24,f=n[g+28|0]|n[g+29|0]<<8|n[g+30|0]<<16|n[g+31|0]<<24,g=n[0|I]|n[I+1|0]<<8|n[I+2|0]<<16|n[I+3|0]<<24,r=n[I+4|0]|n[I+5|0]<<8|n[I+6|0]<<16|n[I+7|0]<<24,B=n[I+8|0]|n[I+9|0]<<8|n[I+10|0]<<16|n[I+11|0]<<24,I=n[I+12|0]|n[I+13|0]<<8|n[I+14|0]<<16|n[I+15|0]<<24;D=B,B=Hg(E+a|0,7)^c,y=D^Hg(B+E|0,9),u=Hg(B+y|0,13)^a,c=Hg(y+u|0,18),I=Hg(C+o|0,7)^I,t=Hg(I+C|0,9)^t,o=Hg(I+t|0,13)^o,l=Hg(t+o|0,18),f=Hg(g+Q|0,7)^f,a=Hg(f+Q|0,9)^s,p=Hg(a+f|0,13)^g,F=Hg(a+p|0,18),g=Hg(i+e|0,7)^h,r=Hg(g+i|0,9)^r,e=Hg(g+r|0,13)^e,D=Hg(r+e|0,18),o=Hg((E^=c)+g|0,7)^o,s=Hg(o+E|0,9)^a,h=Hg(o+s|0,13)^g,E=Hg(s+h|0,18)^E,g=Hg((C^=l)+B|0,7)^p,r=Hg(g+C|0,9)^r,c=Hg(g+r|0,13)^B,C=Hg(r+c|0,18)^C,e=Hg((Q^=F)+I|0,7)^e,B=Hg(e+Q|0,9)^y,I=Hg(B+e|0,13)^I,Q=Hg(I+B|0,18)^Q,a=Hg((i^=D)+f|0,7)^u,t=Hg(a+i|0,9)^t,f=Hg(a+t|0,13)^f,i=Hg(t+f|0,18)^i,y=w>>>0>2,w=w-2|0,y;);return xI(A,E),xI(A+4|0,C),xI(A+8|0,Q),xI(A+12|0,i),xI(A+16|0,g),xI(A+20|0,r),xI(A+24|0,B),xI(A+28|0,I),0}function q(A,I,g,B,Q,E,a){var r,o,e,t,f,c,y,s=0;return h=r=h-560|0,ig(r+352|0,a),mI(r+288|0,E,32,0),V(r+352|0,r+320|0,32,0),V(r+352|0,g,B,Q),UI(r+352|0,r+224|0),o=n[(s=E)+32|0]|n[s+33|0]<<8|n[s+34|0]<<16|n[s+35|0]<<24,e=n[s+36|0]|n[s+37|0]<<8|n[s+38|0]<<16|n[s+39|0]<<24,t=n[s+40|0]|n[s+41|0]<<8|n[s+42|0]<<16|n[s+43|0]<<24,f=n[s+44|0]|n[s+45|0]<<8|n[s+46|0]<<16|n[s+47|0]<<24,c=n[s+48|0]|n[s+49|0]<<8|n[s+50|0]<<16|n[s+51|0]<<24,E=n[s+52|0]|n[s+53|0]<<8|n[s+54|0]<<16|n[s+55|0]<<24,y=n[s+60|0]|n[s+61|0]<<8|n[s+62|0]<<16|n[s+63|0]<<24,s=n[s+56|0]|n[s+57|0]<<8|n[s+58|0]<<16|n[s+59|0]<<24,C[A+56|0]=s,C[A+57|0]=s>>>8,C[A+58|0]=s>>>16,C[A+59|0]=s>>>24,C[A+60|0]=y,C[A+61|0]=y>>>8,C[A+62|0]=y>>>16,C[A+63|0]=y>>>24,C[A+48|0]=c,C[A+49|0]=c>>>8,C[A+50|0]=c>>>16,C[A+51|0]=c>>>24,C[A+52|0]=E,C[A+53|0]=E>>>8,C[A+54|0]=E>>>16,C[A+55|0]=E>>>24,C[A+40|0]=t,C[A+41|0]=t>>>8,C[A+42|0]=t>>>16,C[A+43|0]=t>>>24,C[A+44|0]=f,C[A+45|0]=f>>>8,C[A+46|0]=f>>>16,C[A+47|0]=f>>>24,C[0|(E=A+32|0)]=o,C[E+1|0]=o>>>8,C[E+2|0]=o>>>16,C[E+3|0]=o>>>24,C[E+4|0]=e,C[E+5|0]=e>>>8,C[E+6|0]=e>>>16,C[E+7|0]=e>>>24,G(r+224|0),CA(r,r+224|0),nI(A,r),ig(r+352|0,a),V(r+352|0,A,64,0),V(r+352|0,g,B,Q),UI(r+352|0,r+160|0),G(r+160|0),C[r+288|0]=248&n[r+288|0],C[r+319|0]=63&n[r+319|0]|64,function(A,I,g,B){var Q,E,i,a,r,o,e,t,f,c,y,s,w,h,D,u,l,F,G,k,_,H,Y,b,m,v,U,S,N,M,d,P,R,J,x,L,K,q,X,V,W,T,j,Z,O,z,$,AA,IA=0,gA=0,BA=0,QA=0,CA=0,EA=0,iA=0,nA=0,aA=0,rA=0,oA=0,eA=0,tA=0,fA=0,cA=0,yA=0,sA=0,wA=0,hA=0,DA=0,uA=0,pA=0,lA=0,FA=0,GA=0,kA=0,_A=0,HA=0,YA=0,bA=0,mA=0,vA=0,UA=0,SA=0,NA=0,MA=0,dA=0,PA=0,RA=0,JA=0,xA=0,LA=0,KA=0,qA=0,XA=0,VA=0,WA=0,TA=0,jA=0,ZA=0,OA=0;RA=HI(I),sA=n[I+2|0]|n[I+3|0]<<8|n[I+4|0]<<16|n[I+5|0]<<24,WA=HI(I+5|0),YA=p,wA=n[I+7|0]|n[I+8|0]<<8|n[I+9|0]<<16|n[I+10|0]<<24,hA=n[I+10|0]|n[I+11|0]<<8|n[I+12|0]<<16|n[I+13|0]<<24,mA=HI(I+13|0),oA=p,tA=n[I+15|0]|n[I+16|0]<<8|n[I+17|0]<<16|n[I+18|0]<<24,KA=HI(I+18|0),fA=p,bA=HI(I+21|0),iA=n[I+23|0]|n[I+24|0]<<8|n[I+25|0]<<16|n[I+26|0]<<24,aA=HI(I+26|0),QA=p,BA=n[I+28|0]|n[I+29|0]<<8|n[I+30|0]<<16|n[I+31|0]<<24,NA=HI(g),pA=n[(I=g)+2|0]|n[I+3|0]<<8|n[I+4|0]<<16|n[I+5|0]<<24,XA=HI(I+5|0),rA=p,cA=n[I+7|0]|n[I+8|0]<<8|n[I+9|0]<<16|n[I+10|0]<<24,yA=n[I+10|0]|n[I+11|0]<<8|n[I+12|0]<<16|n[I+13|0]<<24,VA=HI(I+13|0),eA=p,CA=n[I+15|0]|n[I+16|0]<<8|n[I+17|0]<<16|n[I+18|0]<<24,qA=HI(I+18|0),gA=p,JA=HI(I+21|0),IA=n[I+23|0]|n[I+24|0]<<8|n[I+25|0]<<16|n[I+26|0]<<24,nA=HI(I+26|0),g=p,I=n[I+28|0]|n[I+29|0]<<8|n[I+30|0]<<16|n[I+31|0]<<24,Z=HI(B),O=n[B+2|0]|n[B+3|0]<<8|n[B+4|0]<<16|n[B+5|0]<<24,z=HI(B+5|0),$=p,MA=n[B+7|0]|n[B+8|0]<<8|n[B+9|0]<<16|n[B+10|0]<<24,xA=n[B+10|0]|n[B+11|0]<<8|n[B+12|0]<<16|n[B+13|0]<<24,LA=HI(B+13|0),SA=p,vA=n[B+15|0]|n[B+16|0]<<8|n[B+17|0]<<16|n[B+18|0]<<24,TA=HI(B+18|0),_A=p,FA=HI(B+21|0),I=eg(Q=I>>>7|0,0,E=2097151&((3&QA)<<30|aA>>>2),0),EA=p,QA=I,I=eg(i=2097151&((3&g)<<30|nA>>>2),0,a=BA>>>7|0,0),g=p+EA|0,EA=BA=QA+I|0,BA=I>>>0>BA>>>0?g+1|0:g,I=eg(E,0,i,0),QA=p,IA=(g=eg(r=IA>>>5&2097151,0,a,0))+I|0,I=p+QA|0,g=I=g>>>0>IA>>>0?I+1|0:I,I=eg(Q,0,o=iA>>>5&2097151,0),g=p+g|0,iA=IA=I+IA|0,lA=g=I>>>0>IA>>>0?g+1|0:g,DA=(I=IA)- -1048576|0,uA=g=g-((I>>>0<4293918720)-1|0)|0,I=(IA=g>>21)+BA|0,aA=I=(g=(2097151&g)<<11|DA>>>21)>>>0>(BA=QA=g+EA|0)>>>0?I+1|0:I,GA=(I=BA)- -1048576|0,nA=EA=aA-((I>>>0<4293918720)-1|0)|0,QA=eg(Q,0,a,0),g=HA=(PA=p)-(((I=QA)>>>0<4293918720)-1|0)|0,IA=EA>>21,HA=(2097151&EA)<<11|GA>>>21,QA=I-(EA=-2097152&(dA=I- -1048576|0))|0,I=(PA-((I>>>0<EA>>>0)+g|0)|0)+IA|0,P=I=QA>>>0>(v=HA+QA|0)>>>0?I+1|0:I,EA=eg(v,I,-683901,-1),QA=p,R=I=g>>21,I=eg(S=(2097151&g)<<11|dA>>>21,I,136657,0),IA=p+QA|0,HA=g=I+EA|0,EA=I>>>0>g>>>0?IA+1|0:IA,I=eg(e=2097151&((1&eA)<<31|VA>>>1),0,E,0),g=p,IA=I,I=eg(t=yA>>>4&2097151,0,a,0),g=p+g|0,g=I>>>0>(IA=IA+I|0)>>>0?g+1|0:g,I=eg(f=CA>>>6&2097151,0,o,0),g=p+g|0,g=I>>>0>(IA=I+IA|0)>>>0?g+1|0:g,m=I=0,QA=IA,IA=eg(c=2097151&JA,I,y=2097151&((7&fA)<<29|KA>>>3),0),I=p+g|0,I=IA>>>0>(QA=QA+IA|0)>>>0?I+1|0:I,IA=eg(s=2097151&((7&gA)<<29|qA>>>3),0,w=2097151&bA,0),g=p+I|0,g=IA>>>0>(QA=IA+QA|0)>>>0?g+1|0:g,I=eg(r,0,h=tA>>>6&2097151,0),IA=p+g|0,IA=I>>>0>(QA=I+QA|0)>>>0?IA+1|0:IA,g=eg(i,0,D=2097151&((1&oA)<<31|mA>>>1),0),I=p+IA|0,g=g>>>0>(IA=QA=g+QA|0)>>>0?I+1|0:I,I=eg(Q,0,u=hA>>>4&2097151,0),g=p+g|0,fA=IA=I+IA|0,QA=I>>>0>IA>>>0?g+1|0:g,I=eg(E,0,t,0),g=p,gA=(IA=I)+(I=eg(l=cA>>>7&2097151,0,a,0))|0,IA=p+g|0,IA=I>>>0>gA>>>0?IA+1|0:IA,g=eg(o,0,e,0),I=p+IA|0,I=g>>>0>(gA=g+gA|0)>>>0?I+1|0:I,IA=eg(f,0,w,0),g=p+I|0,g=IA>>>0>(gA=IA+gA|0)>>>0?g+1|0:g,I=eg(c,m,h,0),g=p+g|0,g=I>>>0>(IA=I+gA|0)>>>0?g+1|0:g,gA=(I=IA)+(IA=eg(y,0,s,0))|0,I=p+g|0,I=IA>>>0>gA>>>0?I+1|0:I,g=eg(r,0,D,0),IA=p+I|0,IA=g>>>0>(gA=g+gA|0)>>>0?IA+1|0:IA,g=eg(i,0,u,0),I=p+IA|0,g=g>>>0>(IA=gA=g+gA|0)>>>0?I+1|0:I,I=eg(Q,0,F=wA>>>7&2097151,0),g=p+g|0,yA=IA=I+IA|0,CA=g=I>>>0>IA>>>0?g+1|0:g,eA=(I=IA)- -1048576|0,gA=g=g-((I>>>0<4293918720)-1|0)|0,I=(IA=g>>21)+QA|0,g=I=(g=(2097151&g)<<11|eA>>>21)>>>0>(cA=g+fA|0)>>>0?I+1|0:I,I=I+EA|0,I=(IA=QA=cA)>>>0>(cA=IA+HA|0)>>>0?I+1|0:I,EA=(EA=g)-(((g=QA)>>>0<4293918720)-1|0)|0,oA=g- -1048576|0,tA=(g=IA=cA)-(IA=-2097152&oA)|0,fA=I-((QA=EA)+(g>>>0<IA>>>0)|0)|0,N=BA-(I=-2097152&GA)|0,J=g=aA-((I>>>0>BA>>>0)+nA|0)|0,I=eg(S,R,-997805,-1),IA=p+CA|0,IA=I>>>0>(BA=I+yA|0)>>>0?IA+1|0:IA,CA=(I=BA)+(BA=eg(v,P,136657,0))|0,I=p+IA|0,g=eg(N,g,-683901,-1),I=p+(BA>>>0>CA>>>0?I+1|0:I)|0,I=g>>>0>(IA=g+CA|0)>>>0?I+1|0:I,EA=IA-(g=-2097152&eA)|0,CA=I-((g>>>0>IA>>>0)+gA|0)|0,I=eg(E,0,l,0),IA=p,BA=(g=eg(G=2097151&((3&rA)<<30|XA>>>2),0,a,0))+I|0,I=p+IA|0,I=g>>>0>BA>>>0?I+1|0:I,IA=eg(o,0,t,0),g=p+I|0,g=IA>>>0>(BA=IA+BA|0)>>>0?g+1|0:g,I=eg(e,0,w,0),IA=p+g|0,IA=I>>>0>(BA=I+BA|0)>>>0?IA+1|0:IA,g=eg(f,0,y,0),I=p+IA|0,I=g>>>0>(BA=g+BA|0)>>>0?I+1|0:I,IA=eg(c,m,D,0),g=p+I|0,g=IA>>>0>(BA=IA+BA|0)>>>0?g+1|0:g,IA=eg(s,0,h,0),I=p+g|0,I=IA>>>0>(BA=IA+BA|0)>>>0?I+1|0:I,IA=eg(r,0,u,0),g=p+I|0,g=IA>>>0>(BA=IA+BA|0)>>>0?g+1|0:g,I=eg(i,0,F,0),IA=p+g|0,IA=I>>>0>(BA=I+BA|0)>>>0?IA+1|0:IA,g=eg(Q,0,k=2097151&((3&YA)<<30|WA>>>2),0),I=p+IA|0,BA=g>>>0>(gA=BA=g+BA|0)>>>0?I+1|0:I,I=eg(E,0,G,0),g=p,IA=I,I=eg(_=pA>>>5&2097151,0,a,0),g=p+g|0,g=I>>>0>(IA=IA+I|0)>>>0?g+1|0:g,nA=(I=eg(o,0,l,0))+IA|0,IA=p+g|0,IA=I>>>0>nA>>>0?IA+1|0:IA,g=eg(t,0,w,0),I=p+IA|0,I=g>>>0>(nA=g+nA|0)>>>0?I+1|0:I,g=eg(e,0,y,0),I=p+I|0,I=g>>>0>(IA=g+nA|0)>>>0?I+1|0:I,nA=(g=IA)+(IA=eg(f,0,h,0))|0,g=p+I|0,g=IA>>>0>nA>>>0?g+1|0:g,I=eg(c,m,u,0),g=p+g|0,g=I>>>0>(IA=I+nA|0)>>>0?g+1|0:g,nA=(I=eg(s,0,D,0))+IA|0,IA=p+g|0,IA=I>>>0>nA>>>0?IA+1|0:IA,g=eg(r,0,F,0),I=p+IA|0,I=g>>>0>(nA=g+nA|0)>>>0?I+1|0:I,g=eg(i,0,k,0),I=p+I|0,g=I=g>>>0>(IA=g+nA|0)>>>0?I+1|0:I,I=eg(Q,0,H=sA>>>5&2097151,0),g=p+g|0,cA=IA=I+IA|0,XA=g=I>>>0>IA>>>0?g+1|0:g,AA=(I=IA)- -1048576|0,VA=IA=g-((I>>>0<4293918720)-1|0)|0,I=(I=IA>>21)+BA|0,yA=IA=(g=(2097151&IA)<<11|AA>>>21)+gA|0,qA=I=g>>>0>IA>>>0?I+1|0:I,WA=(I=IA)- -1048576|0,JA=IA=qA-((I>>>0<4293918720)-1|0)|0,g=(I=IA>>21)+CA|0,eA=BA=(IA=(2097151&IA)<<11|WA>>>21)+EA|0,PA=g=IA>>>0>BA>>>0?g+1|0:g,mA=(I=BA)- -1048576|0,HA=IA=g-((I>>>0<4293918720)-1|0)|0,I=(I=IA>>21)+fA|0,CA=IA=(g=(2097151&IA)<<11|mA>>>21)+tA|0,sA=IA=(GA=I=g>>>0>IA>>>0?I+1|0:I)-(((I=IA)>>>0<4293918720)-1|0)|0,aA=(2097151&IA)<<11|(bA=I- -1048576|0)>>>21,gA=IA>>21,I=eg(E,0,f,0),g=p,IA=I,I=eg(a,0,e,0),g=p+g|0,g=I>>>0>(IA=IA+I|0)>>>0?g+1|0:g,I=eg(c,m,w,0),g=p+g|0,g=I>>>0>(IA=I+IA|0)>>>0?g+1|0:g,BA=(I=IA)+(IA=eg(o,0,s,0))|0,I=p+g|0,I=IA>>>0>BA>>>0?I+1|0:I,g=eg(r,0,y,0),IA=p+I|0,IA=g>>>0>(BA=g+BA|0)>>>0?IA+1|0:IA,g=eg(i,0,h,0),I=p+IA|0,I=g>>>0>(BA=g+BA|0)>>>0?I+1|0:I,IA=eg(Q,0,D,0),g=p+I|0,g=IA>>>0>(BA=IA+BA|0)>>>0?g+1|0:g,IA=eg(S,R,-683901,-1),g=(I=g)+p|0,g=IA>>>0>(EA=BA+IA|0)>>>0?g+1|0:g,IA=EA,EA=(EA=I)-(((I=BA)>>>0<4293918720)-1|0)|0,pA=I- -1048576|0,nA=(I=IA)-(IA=-2097152&pA)|0,IA=g-((BA=EA)+(I>>>0<IA>>>0)|0)|0,I=(I=QA>>21)+IA|0,I=(g=(2097151&QA)<<11|oA>>>21)>>>0>(QA=g+nA|0)>>>0?I+1|0:I,EA=(g=QA)-(IA=-2097152&(rA=g- -1048576|0))|0,IA=(I-((g>>>0<IA>>>0)+(QA=nA=I-((g>>>0<4293918720)-1|0)|0)|0)|0)+gA|0,x=aA=EA+aA|0,L=IA=EA>>>0>aA>>>0?IA+1|0:IA,nA=eg(aA,IA,-683901,-1),EA=p,g=eg(o,0,c,m),I=p,IA=g,g=eg(a,0,f,0),I=p+I|0,I=g>>>0>(IA=IA+g|0)>>>0?I+1|0:I,gA=(g=IA)+(IA=eg(E,0,s,0))|0,g=p+I|0,g=IA>>>0>gA>>>0?g+1|0:g,IA=eg(r,0,w,0),I=p+g|0,I=IA>>>0>(gA=IA+gA|0)>>>0?I+1|0:I,IA=eg(i,0,y,0),g=p+I|0,g=IA>>>0>(gA=IA+gA|0)>>>0?g+1|0:g,I=eg(Q,0,h,0),IA=p+g|0,IA=I>>>0>(gA=I+gA|0)>>>0?IA+1|0:IA,I=(I=BA>>21)+IA|0,wA=gA=(I=(g=(2097151&BA)<<11|pA>>>21)>>>0>(BA=g+gA|0)>>>0?I+1|0:I)-(((g=BA)>>>0<4293918720)-1|0)|0,BA=g-(IA=-2097152&(UA=g- -1048576|0))|0,IA=(I-((g>>>0<IA>>>0)+gA|0)|0)+(QA>>21)|0,K=BA=(I=(2097151&QA)<<11|rA>>>21)+BA|0,q=IA=I>>>0>BA>>>0?IA+1|0:IA,g=eg(BA,IA,136657,0),I=p+EA|0,KA=IA=g+nA|0,hA=g>>>0>IA>>>0?I+1|0:I,g=eg(w,0,_,0),I=p,IA=g,g=eg(Y=2097151&NA,0,o,0),I=p+I|0,I=g>>>0>(IA=IA+g|0)>>>0?I+1|0:I,BA=(g=IA)+(IA=eg(y,0,G,0))|0,g=p+I|0,g=IA>>>0>BA>>>0?g+1|0:g,I=eg(h,0,l,0),IA=p+g|0,IA=I>>>0>(BA=I+BA|0)>>>0?IA+1|0:IA,g=eg(t,0,D,0),I=p+IA|0,I=g>>>0>(BA=g+BA|0)>>>0?I+1|0:I,IA=eg(e,0,u,0),g=p+I|0,g=IA>>>0>(BA=IA+BA|0)>>>0?g+1|0:g,IA=eg(f,0,F,0),I=p+g|0,I=IA>>>0>(BA=IA+BA|0)>>>0?I+1|0:I,IA=eg(c,m,H,0),g=p+I|0,g=IA>>>0>(BA=IA+BA|0)>>>0?g+1|0:g,I=eg(s,0,k,0),IA=p+g|0,IA=I>>>0>(BA=I+BA|0)>>>0?IA+1|0:IA,g=eg(r,0,b=2097151&RA,0),I=p+IA|0,I=g>>>0>(BA=g+BA|0)>>>0?I+1|0:I,QA=BA=(IA=(n[B+23|0]|n[B+24|0]<<8|n[B+25|0]<<16|n[B+26|0]<<24)>>>5&2097151)+BA|0,BA=IA>>>0>BA>>>0?I+1|0:I,I=eg(y,0,_,0),g=p,IA=I,I=eg(w,0,Y,0),g=p+g|0,g=I>>>0>(IA=IA+I|0)>>>0?g+1|0:g,gA=(I=eg(h,0,G,0))+IA|0,IA=p+g|0,IA=I>>>0>gA>>>0?IA+1|0:IA,g=eg(D,0,l,0),I=p+IA|0,I=g>>>0>(gA=g+gA|0)>>>0?I+1|0:I,g=eg(t,0,u,0),I=p+I|0,I=g>>>0>(IA=g+gA|0)>>>0?I+1|0:I,gA=(g=IA)+(IA=eg(e,0,F,0))|0,g=p+I|0,g=IA>>>0>gA>>>0?g+1|0:g,I=eg(f,0,k,0),g=p+g|0,g=I>>>0>(IA=I+gA|0)>>>0?g+1|0:g,gA=(I=eg(c,m,b,0))+IA|0,IA=p+g|0,IA=I>>>0>gA>>>0?IA+1|0:IA,g=eg(s,0,H,0),I=p+IA|0,I=g>>>0>(gA=g+gA|0)>>>0?I+1|0:I,gA=IA=(g=2097151&FA)+gA|0,tA=IA=(oA=I=g>>>0>IA>>>0?I+1|0:I)-(((I=IA)>>>0<4293918720)-1|0)|0,I=(2097151&IA)<<11|(YA=I- -1048576|0)>>>21,IA=(IA>>>21|0)+BA|0,rA=IA=I>>>0>(QA=I+QA|0)>>>0?IA+1|0:IA,NA=iA-(I=-2097152&DA)|0,FA=lA-((I>>>0>iA>>>0)+uA|0)|0,g=eg(E,0,r,0),I=p,IA=g,g=eg(a,0,c,m),I=p+I|0,I=g>>>0>(IA=IA+g|0)>>>0?I+1|0:I,BA=(g=IA)+(IA=eg(i,0,o,0))|0,g=p+I|0,g=IA>>>0>BA>>>0?g+1|0:g,I=eg(Q,0,w,0),IA=p+g|0,IA=I>>>0>(BA=I+BA|0)>>>0?IA+1|0:IA,EA=BA,I=eg(a,0,s,0),g=p,BA=I,I=eg(E,0,c,m),g=p+g|0,g=I>>>0>(BA=BA+I|0)>>>0?g+1|0:g,iA=(I=BA)+(BA=eg(o,0,r,0))|0,I=p+g|0,I=BA>>>0>iA>>>0?I+1|0:I,g=eg(i,0,w,0),I=p+I|0,I=g>>>0>(BA=g+iA|0)>>>0?I+1|0:I,iA=(g=BA)+(BA=eg(Q,0,y,0))|0,g=p+I|0,aA=g=BA>>>0>iA>>>0?g+1|0:g,lA=(I=BA=iA)- -1048576|0,nA=iA=g-((I>>>0<4293918720)-1|0)|0,g=(I=iA>>21)+IA|0,EA=g=(IA=EA=(iA=(2097151&iA)<<11|lA>>>21)+EA|0)>>>0<iA>>>0?g+1|0:g,uA=(I=IA)- -1048576|0,g=(I=(iA=DA=g-((I>>>0<4293918720)-1|0)|0)>>21)+FA|0,X=g=(DA=(2097151&iA)<<11|uA>>>21)>>>0>(U=NA=DA+NA|0)>>>0?g+1|0:g,FA=eg(U,g,470296,0),DA=p,M=IA-(g=-2097152&uA)|0,dA=I=EA-((g>>>0>IA>>>0)+iA|0)|0,g=eg(N,J,666643,0),IA=p+DA|0,IA=g>>>0>(iA=g+FA|0)>>>0?IA+1|0:IA,g=eg(M,I,654183,0),I=p+IA|0,g=g>>>0>(EA=iA=g+iA|0)>>>0?I+1|0:I,I=BA-(IA=-2097152&lA)|0,IA=(wA>>21)+(iA=aA-((IA>>>0>BA>>>0)+nA|0)|0)|0,V=nA=(BA=(2097151&wA)<<11|UA>>>21)+I|0,RA=IA=BA>>>0>nA>>>0?IA+1|0:IA,jA=QA- -1048576|0,BA=iA=rA-((QA>>>0<4293918720)-1|0)|0,I=eg(nA,IA,-997805,-1),g=p+g|0,I=(g=I>>>0>(IA=I+EA|0)>>>0?g+1|0:g)+rA|0,I=IA>>>0>(QA=IA+QA|0)>>>0?I+1|0:I,FA=(IA=QA)-(g=-2097152&jA)|0,DA=I-((g>>>0>IA>>>0)+BA|0)|0,I=eg(M,dA,470296,0),g=p,QA=(IA=I)+(I=eg(U,X,666643,0))|0,IA=p+g|0,IA=I>>>0>QA>>>0?IA+1|0:IA,g=eg(nA,RA,654183,0),I=p+IA|0,g=oA+(g>>>0>(QA=g+QA|0)>>>0?I+1|0:I)|0,rA=(IA=gA+QA|0)-(I=-2097152&YA)|0,iA=(g=IA>>>0<gA>>>0?g+1|0:g)-((I>>>0>IA>>>0)+tA|0)|0,g=eg(h,0,_,0),I=p,IA=g,g=eg(y,0,Y,0),I=p+I|0,I=g>>>0>(IA=IA+g|0)>>>0?I+1|0:I,g=eg(D,0,G,0),I=p+I|0,I=g>>>0>(IA=g+IA|0)>>>0?I+1|0:I,QA=(g=IA)+(IA=eg(u,0,l,0))|0,g=p+I|0,g=IA>>>0>QA>>>0?g+1|0:g,I=eg(t,0,F,0),IA=p+g|0,IA=I>>>0>(QA=I+QA|0)>>>0?IA+1|0:IA,I=eg(e,0,k,0),g=p+IA|0,g=I>>>0>(QA=I+QA|0)>>>0?g+1|0:g,IA=eg(f,0,H,0),I=p+g|0,I=IA>>>0>(QA=IA+QA|0)>>>0?I+1|0:I,g=eg(s,0,b,0),I=p+I|0,I=g>>>0>(IA=g+QA|0)>>>0?I+1|0:I,g=IA,QA=(IA=2097151&((7&_A)<<29|TA>>>3))>>>0>(gA=QA=g+IA|0)>>>0?I+1|0:I,I=eg(D,0,_,0),g=p,EA=(IA=I)+(I=eg(h,0,Y,0))|0,IA=p+g|0,IA=I>>>0>EA>>>0?IA+1|0:IA,g=eg(u,0,G,0),I=p+IA|0,I=g>>>0>(EA=g+EA|0)>>>0?I+1|0:I,IA=eg(F,0,l,0),g=p+I|0,g=IA>>>0>(EA=IA+EA|0)>>>0?g+1|0:g,IA=eg(t,0,k,0),I=p+g|0,I=IA>>>0>(EA=IA+EA|0)>>>0?I+1|0:I,IA=eg(e,0,H,0),g=p+I|0,g=IA>>>0>(EA=IA+EA|0)>>>0?g+1|0:g,I=eg(f,0,b,0),IA=p+g|0,I=I>>>0>(g=EA=I+EA|0)>>>0?IA+1|0:IA,lA=IA=EA+(g=vA>>>6&2097151)|0,fA=IA=(aA=I=g>>>0>IA>>>0?I+1|0:I)-(((I=IA)>>>0<4293918720)-1|0)|0,I=(2097151&IA)<<11|(uA=I- -1048576|0)>>>21,IA=(IA>>>21|0)+QA|0,nA=IA=I>>>0>(gA=I+gA|0)>>>0?IA+1|0:IA,wA=(I=gA)- -1048576|0,EA=IA=IA-((I>>>0<4293918720)-1|0)|0,I=(g=IA>>>21|0)+iA|0,oA=QA=(IA=(2097151&IA)<<11|wA>>>21)+rA|0,pA=IA=(iA=I=IA>>>0>QA>>>0?I+1|0:I)-(((I=QA)>>>0<4293918720)-1|0)|0,I=(2097151&IA)<<11|(tA=I- -1048576|0)>>>21,IA=(IA>>21)+DA|0,I=(g=IA=I>>>0>(QA=I+FA|0)>>>0?IA+1|0:IA)+hA|0,rA=(rA=g)-(((g=QA)>>>0<4293918720)-1|0)|0,ZA=g- -1048576|0,OA=(g=IA=_A=QA+KA|0)-(IA=-2097152&ZA)|0,kA=(I=QA>>>0>_A>>>0?I+1|0:I)-((QA=rA)+(g>>>0<IA>>>0)|0)|0,I=eg(K,q,-997805,-1),g=p+iA|0,UA=IA=I+oA|0,rA=I>>>0>IA>>>0?g+1|0:g,g=eg(V,RA,470296,0),I=p,IA=g,g=eg(M,dA,666643,0),I=p+I|0,I=(I=g>>>0>(IA=IA+g|0)>>>0?I+1|0:I)+nA|0,I=(g=IA+gA|0)>>>0<gA>>>0?I+1|0:I,wA=(IA=g)-(g=-2097152&wA)|0,hA=I-((g>>>0>IA>>>0)+EA|0)|0,I=eg(V,RA,666643,0),g=p+aA|0,oA=IA=I+lA|0,iA=I>>>0>IA>>>0?g+1|0:g,g=eg(u,0,_,0),I=p,IA=g,g=eg(D,0,Y,0),I=p+I|0,I=g>>>0>(IA=IA+g|0)>>>0?I+1|0:I,g=eg(F,0,G,0),I=p+I|0,I=g>>>0>(IA=g+IA|0)>>>0?I+1|0:I,gA=(g=IA)+(IA=eg(k,0,l,0))|0,g=p+I|0,g=IA>>>0>gA>>>0?g+1|0:g,I=eg(t,0,H,0),IA=p+g|0,IA=I>>>0>(gA=I+gA|0)>>>0?IA+1|0:IA,I=eg(e,0,b,0),g=p+IA|0,I=g=I>>>0>(gA=I+gA|0)>>>0?g+1|0:g,EA=gA=(IA=2097151&((1&SA)<<31|LA>>>1))+gA|0,gA=IA>>>0>gA>>>0?I+1|0:I,g=eg(F,0,_,0),I=p,IA=g,g=eg(u,0,Y,0),I=p+I|0,I=g>>>0>(IA=IA+g|0)>>>0?I+1|0:I,nA=(g=IA)+(IA=eg(k,0,G,0))|0,g=p+I|0,g=IA>>>0>nA>>>0?g+1|0:g,I=eg(H,0,l,0),g=p+g|0,g=I>>>0>(IA=I+nA|0)>>>0?g+1|0:g,nA=(I=eg(t,0,b,0))+IA|0,IA=p+g|0,I=I>>>0>(g=nA)>>>0?IA+1|0:IA,aA=IA=nA+(g=xA>>>4&2097151)|0,xA=IA=(YA=I=g>>>0>IA>>>0?I+1|0:I)-(((I=IA)>>>0<4293918720)-1|0)|0,I=(2097151&IA)<<11|(TA=I- -1048576|0)>>>21,IA=(IA>>>21|0)+gA|0,nA=EA=I+EA|0,SA=IA=I>>>0>EA>>>0?IA+1|0:IA,KA=(I=EA)- -1048576|0,vA=IA=IA-((I>>>0<4293918720)-1|0)|0,I=(g=IA>>>21|0)+iA|0,lA=IA=(_A=(IA=(IA=(2097151&IA)<<11|KA>>>21)>>>0>(g=gA=IA+oA|0)>>>0?I+1|0:I)-(((I=-2097152&uA)>>>0>g>>>0)+fA|0)|0)-(((I=EA=g-I|0)>>>0<4293918720)-1|0)|0,g=(g=IA>>21)+hA|0,FA=IA=(I=(2097151&IA)<<11|(NA=I- -1048576|0)>>>21)+wA|0,uA=g=I>>>0>IA>>>0?g+1|0:g,DA=(I=IA)- -1048576|0,wA=gA=g-((I>>>0<4293918720)-1|0)|0,d=CA-(I=-2097152&bA)|0,LA=IA=GA-((I>>>0>CA>>>0)+sA|0)|0,I=(g=gA>>21)+rA|0,I=(gA=(2097151&gA)<<11|DA>>>21)>>>0>(CA=gA+UA|0)>>>0?I+1|0:I,iA=(gA=eg(x,L,136657,0))+(CA-(g=-2097152&tA)|0)|0,g=p+(I-((g>>>0>CA>>>0)+pA|0)|0)|0,g=gA>>>0>iA>>>0?g+1|0:g,IA=eg(d,IA,-683901,-1),I=p+g|0,iA=gA=IA+iA|0,oA=IA=(hA=I=IA>>>0>gA>>>0?I+1|0:I)-(((I=gA)>>>0<4293918720)-1|0)|0,g=(g=IA>>21)+kA|0,CA=IA=(I=(2097151&IA)<<11|(bA=I- -1048576|0)>>>21)+OA|0,tA=g=I>>>0>IA>>>0?g+1|0:g,fA=IA=g-(((I=IA)>>>0<4293918720)-1|0)|0,UA=(2097151&IA)<<11|(GA=I- -1048576|0)>>>21,pA=IA>>21,g=eg(o,0,_,0),I=p,IA=g,g=eg(E,0,Y,0),I=p+I|0,I=g>>>0>(IA=IA+g|0)>>>0?I+1|0:I,gA=(g=eg(w,0,G,0))+IA|0,IA=p+I|0,IA=g>>>0>gA>>>0?IA+1|0:IA,I=eg(y,0,l,0),g=p+IA|0,g=I>>>0>(gA=I+gA|0)>>>0?g+1|0:g,IA=eg(t,0,h,0),I=p+g|0,I=IA>>>0>(gA=IA+gA|0)>>>0?I+1|0:I,IA=eg(e,0,D,0),g=p+I|0,g=IA>>>0>(gA=IA+gA|0)>>>0?g+1|0:g,IA=eg(f,0,u,0),I=p+g|0,I=IA>>>0>(gA=IA+gA|0)>>>0?I+1|0:I,g=eg(c,m,k,0),IA=p+I|0,IA=g>>>0>(gA=g+gA|0)>>>0?IA+1|0:IA,I=eg(s,0,F,0),g=p+IA|0,g=I>>>0>(gA=I+gA|0)>>>0?g+1|0:g,IA=eg(r,0,H,0),I=p+g|0,I=IA>>>0>(gA=IA+gA|0)>>>0?I+1|0:I,IA=eg(i,0,b,0),g=p+I|0,g=IA>>>0>(gA=IA+gA|0)>>>0?g+1|0:g,I=HI(B+26|0),IA=2097151&((3&(IA=p))<<30|I>>>2),I=g,sA=gA=IA+gA|0,gA=I=IA>>>0>gA>>>0?I+1|0:I,I=eg(N,J,470296,0),g=p,kA=(IA=I)+(I=eg(v,P,666643,0))|0,IA=p+g|0,IA=I>>>0>kA>>>0?IA+1|0:IA,I=eg(U,X,654183,0),g=p+IA|0,g=I>>>0>(kA=I+kA|0)>>>0?g+1|0:g,I=eg(M,dA,-997805,-1),g=p+g|0,g=I>>>0>(IA=I+kA|0)>>>0?g+1|0:g,kA=(I=IA)+(IA=eg(V,RA,136657,0))|0,I=p+g|0,I=(I=IA>>>0>kA>>>0?I+1|0:I)+gA|0,I=(g=kA)>>>0>(IA=g+sA|0)>>>0?I+1|0:I,g=IA,IA=I,W=(I=sA)- -1048576|0,gA=rA=gA-((I>>>0<4293918720)-1|0)|0,rA=g,IA=(g=BA>>21)+IA|0,IA=(I=(2097151&BA)<<11|jA>>>21)>>>0>(BA=rA+I|0)>>>0?IA+1|0:IA,g=BA-(I=-2097152&W)|0,sA=eg(K,q,-683901,-1),I=(BA=IA-((I>>>0>BA>>>0)+gA|0)|0)+p|0,IA=I=sA>>>0>(kA=g+sA|0)>>>0?I+1|0:I,rA=BA-(((I=g)>>>0<4293918720)-1|0)|0,T=I- -1048576|0,IA=(g=QA>>21)+IA|0,IA=(I=(2097151&QA)<<11|ZA>>>21)>>>0>(QA=I+(sA=kA)|0)>>>0?IA+1|0:IA,sA=g=QA-(I=-2097152&T)|0,I=(QA=IA-((I>>>0>QA>>>0)+(BA=rA)|0)|0)+pA|0,j=g- -1048576|0,rA=QA-((g>>>0<4293918720)-1|0)|0,jA=(g=IA=UA=g+UA|0)-(IA=-2097152&j)|0,ZA=(sA>>>0>g>>>0?I+1|0:I)-((g>>>0<IA>>>0)+(QA=rA)|0)|0,OA=CA-(I=-2097152&GA)|0,kA=tA-((I>>>0>CA>>>0)+fA|0)|0,UA=iA-(I=-2097152&bA)|0,bA=hA-((I>>>0>iA>>>0)+oA|0)|0,g=eg(K,q,654183,0),I=p+uA|0,I=g>>>0>(IA=g+FA|0)>>>0?I+1|0:I,iA=((CA=IA)-(g=-2097152&DA)|0)+(IA=eg(x,L,-997805,-1))|0,g=p+(I-((g>>>0>CA>>>0)+wA|0)|0)|0,g=IA>>>0>iA>>>0?g+1|0:g,IA=eg(d,LA,136657,0),I=p+g|0,GA=CA=IA+iA|0,iA=IA>>>0>CA>>>0?I+1|0:I,sA=eA-(I=-2097152&mA)|0,hA=PA-((I>>>0>eA>>>0)+HA|0)|0,I=eg(v,P,-997805,-1),g=p,IA=I,I=eg(S,R,654183,0),g=p+g|0,g=I>>>0>(IA=IA+I|0)>>>0?g+1|0:g,I=eg(N,J,136657,0),g=p+g|0,g=I>>>0>(IA=I+IA|0)>>>0?g+1|0:g,CA=(I=IA)+(IA=eg(U,X,-683901,-1))|0,I=p+g|0,IA=qA+(IA>>>0>CA>>>0?I+1|0:I)|0,oA=(g=CA+yA|0)-(I=-2097152&WA)|0,tA=(IA=g>>>0<yA>>>0?IA+1|0:IA)-((I>>>0>g>>>0)+JA|0)|0,I=eg(v,P,654183,0),g=p,IA=I,I=eg(S,R,470296,0),g=p+g|0,g=I>>>0>(IA=IA+I|0)>>>0?g+1|0:g,CA=(I=IA)+(IA=eg(N,J,-997805,-1))|0,I=p+g|0,g=CA+cA|0,IA=XA+(IA>>>0>CA>>>0?I+1|0:I)|0,CA=(I=eg(U,X,136657,0))+g|0,g=p+(g>>>0<cA>>>0?IA+1|0:IA)|0,g=I>>>0>CA>>>0?g+1|0:g,IA=eg(M,dA,-683901,-1),I=p+g|0,I=IA>>>0>(CA=IA+CA|0)>>>0?I+1|0:I,yA=(IA=CA)-(g=-2097152&AA)|0,eA=I-((g>>>0>IA>>>0)+VA|0)|0,g=eg(E,0,_,0),I=p,IA=g,g=eg(a,0,Y,0),I=p+I|0,I=g>>>0>(IA=IA+g|0)>>>0?I+1|0:I,CA=(g=IA)+(IA=eg(o,0,G,0))|0,g=p+I|0,g=IA>>>0>CA>>>0?g+1|0:g,IA=eg(w,0,l,0),I=p+g|0,I=IA>>>0>(CA=IA+CA|0)>>>0?I+1|0:I,g=eg(t,0,y,0),IA=p+I|0,IA=g>>>0>(CA=g+CA|0)>>>0?IA+1|0:IA,I=eg(e,0,h,0),g=p+IA|0,g=I>>>0>(CA=I+CA|0)>>>0?g+1|0:g,IA=eg(f,0,D,0),I=p+g|0,I=IA>>>0>(CA=IA+CA|0)>>>0?I+1|0:I,IA=eg(c,m,F,0),g=p+I|0,g=IA>>>0>(CA=IA+CA|0)>>>0?g+1|0:g,IA=eg(s,0,u,0),I=p+g|0,I=IA>>>0>(CA=IA+CA|0)>>>0?I+1|0:I,g=eg(r,0,k,0),IA=p+I|0,IA=g>>>0>(CA=g+CA|0)>>>0?IA+1|0:IA,I=eg(Q,0,b,0),g=p+IA|0,g=I>>>0>(CA=I+CA|0)>>>0?g+1|0:g,IA=eg(i,0,H,0),I=p+g|0,I=IA>>>0>(CA=IA+CA|0)>>>0?I+1|0:I,g=(B=(n[B+28|0]|n[B+29|0]<<8|n[B+30|0]<<16|n[B+31|0]<<24)>>>7|0)>>>0>(IA=B+CA|0)>>>0?I+1|0:I,I=IA,IA=gA>>21,gA=I+(B=(2097151&gA)<<11|W>>>21)|0,I=g+IA|0,CA=gA,fA=I=B>>>0>gA>>>0?I+1|0:I,uA=(I=gA)- -1048576|0,pA=g=fA-((I>>>0<4293918720)-1|0)|0,I=(IA=g>>21)+eA|0,gA=B=(g=(2097151&g)<<11|uA>>>21)+yA|0,rA=I=g>>>0>B>>>0?I+1|0:I,wA=(I=B)- -1048576|0,cA=g=rA-((I>>>0<4293918720)-1|0)|0,I=(IA=g>>21)+tA|0,yA=I=(g=(2097151&g)<<11|wA>>>21)>>>0>(B=g+oA|0)>>>0?I+1|0:I,tA=(I=B)- -1048576|0,eA=g=yA-((I>>>0<4293918720)-1|0)|0,I=(IA=g>>21)+hA|0,mA=oA=(g=(2097151&g)<<11|tA>>>21)+sA|0,HA=I=g>>>0>oA>>>0?I+1|0:I,I=eg(oA,I,-683901,-1),g=p+iA|0,oA=IA=I+GA|0,iA=I>>>0>IA>>>0?g+1|0:g,FA=B-(I=-2097152&tA)|0,GA=eA=yA-((I>>>0>B>>>0)+eA|0)|0,g=eg(K,q,470296,0)+EA|0,I=_A+p|0,I=g>>>0<EA>>>0?I+1|0:I,EA=((IA=g)-(B=-2097152&NA)|0)+(g=eg(x,L,654183,0))|0,IA=p+(I-((B>>>0>IA>>>0)+lA|0)|0)|0,I=eg(d,LA,-997805,-1),g=p+(g>>>0>EA>>>0?IA+1|0:IA)|0,g=I>>>0>(B=I+EA|0)>>>0?g+1|0:g,IA=(I=B)+(B=eg(mA,HA,136657,0))|0,I=p+g|0,I=B>>>0>IA>>>0?I+1|0:I,B=eg(FA,eA,-683901,-1),g=p+I|0,yA=g=B>>>0>(IA=B+IA|0)>>>0?g+1|0:g,hA=(I=IA)- -1048576|0,eA=B=g-((I>>>0<4293918720)-1|0)|0,I=(I=B>>21)+iA|0,EA=I=(g=(2097151&B)<<11|hA>>>21)>>>0>(B=g+oA|0)>>>0?I+1|0:I,tA=(I=B)- -1048576|0,g=(I=(iA=oA=EA-((I>>>0<4293918720)-1|0)|0)>>21)+bA|0,bA=lA=(oA=(2097151&iA)<<11|tA>>>21)+UA|0,oA=oA>>>0>lA>>>0?g+1|0:g,XA=B-(I=-2097152&tA)|0,VA=EA-((I>>>0>B>>>0)+iA|0)|0,JA=IA-(I=-2097152&hA)|0,PA=yA-((I>>>0>IA>>>0)+eA|0)|0,I=eg(K,q,666643,0),IA=p+(SA-(((g=-2097152&KA)>>>0>nA>>>0)+vA|0)|0)|0,IA=I>>>0>(B=I+(nA-g|0)|0)>>>0?IA+1|0:IA,I=eg(x,L,470296,0),g=p+IA|0,g=I>>>0>(B=I+B|0)>>>0?g+1|0:g,IA=(I=B)+(B=eg(d,LA,654183,0))|0,I=p+g|0,eA=IA,B=B>>>0>IA>>>0?I+1|0:I,nA=gA-(I=-2097152&wA)|0,iA=rA-((I>>>0>gA>>>0)+cA|0)|0,g=eg(v,P,470296,0),I=p,IA=g,g=eg(S,R,666643,0),I=p+I|0,I=g>>>0>(IA=IA+g|0)>>>0?I+1|0:I,gA=(g=IA)+(IA=eg(N,J,654183,0))|0,g=p+I|0,g=IA>>>0>gA>>>0?g+1|0:g,IA=eg(U,X,-997805,-1),I=p+g|0,I=IA>>>0>(gA=IA+gA|0)>>>0?I+1|0:I,g=eg(M,dA,136657,0),IA=p+I|0,IA=g>>>0>(gA=g+gA|0)>>>0?IA+1|0:IA,I=eg(V,RA,-683901,-1),g=p+IA|0,I=fA+(I>>>0>(gA=I+gA|0)>>>0?g+1|0:g)|0,I=(IA=gA+CA|0)>>>0<CA>>>0?I+1|0:I,g=(gA=IA)-(IA=-2097152&uA)|0,IA=I-((IA>>>0>gA>>>0)+pA|0)|0,I=(I=BA>>21)+IA|0,EA=BA=(gA=g)+(g=(2097151&BA)<<11|T>>>21)|0,cA=IA=(rA=I=g>>>0>BA>>>0?I+1|0:I)-(((I=BA)>>>0<4293918720)-1|0)|0,g=(2097151&IA)<<11|(_A=I- -1048576|0)>>>21,IA=(IA>>21)+iA|0,DA=BA=g+nA|0,sA=IA=g>>>0>BA>>>0?IA+1|0:IA,I=eg(BA,IA,-683901,-1),g=p+B|0,g=I>>>0>(IA=I+eA|0)>>>0?g+1|0:g,B=eg(mA,HA,-997805,-1),I=p+g|0,I=B>>>0>(IA=B+IA|0)>>>0?I+1|0:I,B=eg(FA,GA,136657,0),g=p+I|0,nA=IA=B+IA|0,gA=B>>>0>IA>>>0?g+1|0:g,g=eg(k,0,_,0),I=p,B=g,g=eg(F,0,Y,0),I=p+I|0,I=g>>>0>(B=B+g|0)>>>0?I+1|0:I,g=eg(H,0,G,0),IA=p+I|0,IA=g>>>0>(B=g+B|0)>>>0?IA+1|0:IA,I=eg(b,0,l,0),g=p+IA|0,I=g=I>>>0>(B=I+B|0)>>>0?g+1|0:g,CA=B=(g=MA>>>7&2097151)+B|0,B=g>>>0>B>>>0?I+1|0:I,I=eg(H,0,_,0),g=p,IA=I,I=eg(k,0,Y,0),g=p+g|0,g=I>>>0>(IA=IA+I|0)>>>0?g+1|0:g,I=eg(b,0,G,0),g=p+g|0,g=I>>>0>(IA=I+IA|0)>>>0?g+1|0:g,BA=(I=IA)+(IA=2097151&((3&$)<<30|z>>>2))|0,I=g,iA=BA,tA=IA=(BA=I=IA>>>0>BA>>>0?I+1|0:I)-(((I=iA)>>>0<4293918720)-1|0)|0,g=(g=IA>>>21|0)+B|0,CA=IA=(I=(2097151&IA)<<11|(vA=I- -1048576|0)>>>21)+CA|0,fA=g=I>>>0>IA>>>0?g+1|0:g,lA=(I=IA)- -1048576|0,yA=B=g-((I>>>0<4293918720)-1|0)|0,I=(g=B>>>21|0)+YA|0,I=(B=aA+((2097151&B)<<11|lA>>>21)|0)>>>0<aA>>>0?I+1|0:I,aA=((IA=B)-(g=-2097152&TA)|0)+(B=eg(x,L,666643,0))|0,g=p+(I-((g>>>0>IA>>>0)+xA|0)|0)|0,g=B>>>0>aA>>>0?g+1|0:g,I=eg(d,LA,470296,0),g=p+g|0,g=I>>>0>(B=I+aA|0)>>>0?g+1|0:g,IA=(I=B)+(B=eg(DA,sA,136657,0))|0,I=p+g|0,I=B>>>0>IA>>>0?I+1|0:I,g=eg(mA,HA,654183,0),I=p+I|0,I=g>>>0>(B=g+IA|0)>>>0?I+1|0:I,g=eg(FA,GA,-997805,-1),IA=p+I|0,uA=B=g+B|0,eA=IA=g>>>0>B>>>0?IA+1|0:IA,wA=(I=B)- -1048576|0,aA=B=IA-((I>>>0<4293918720)-1|0)|0,g=(I=B>>21)+gA|0,gA=IA=(B=(2097151&B)<<11|wA>>>21)+nA|0,B=g=B>>>0>IA>>>0?g+1|0:g,nA=IA=g-(((I=IA)>>>0<4293918720)-1|0)|0,g=(2097151&IA)<<11|(hA=I- -1048576|0)>>>21,IA=(IA>>21)+PA|0,qA=pA=g+JA|0,pA=g>>>0>pA>>>0?IA+1|0:IA,IA=QA>>21,QA=(I=(2097151&QA)<<11|j>>>21)+(EA-(g=-2097152&_A)|0)|0,g=IA+(rA-((g>>>0>EA>>>0)+cA|0)|0)|0,rA=g=I>>>0>QA>>>0?g+1|0:g,cA=g=g-(((I=QA)>>>0<4293918720)-1|0)|0,SA=IA=g>>21,g=eg(MA=(2097151&g)<<11|(_A=I- -1048576|0)>>>21,IA,-683901,-1),I=p+B|0,I=g>>>0>(IA=g+gA|0)>>>0?I+1|0:I,JA=IA-(g=-2097152&hA)|0,PA=I-((g>>>0>IA>>>0)+nA|0)|0,I=eg(MA,SA,136657,0),g=p+eA|0,g=I>>>0>(B=I+uA|0)>>>0?g+1|0:g,YA=B-(I=-2097152&wA)|0,xA=g-((I>>>0>B>>>0)+aA|0)|0,B=(I=eg(d,LA,666643,0))+(CA-(g=-2097152&lA)|0)|0,g=p+(fA-((g>>>0>CA>>>0)+yA|0)|0)|0,g=I>>>0>B>>>0?g+1|0:g,IA=(I=B)+(B=eg(DA,sA,-997805,-1))|0,I=p+g|0,I=B>>>0>IA>>>0?I+1|0:I,B=(g=eg(mA,HA,470296,0))+IA|0,IA=p+I|0,IA=g>>>0>B>>>0?IA+1|0:IA,I=eg(FA,GA,654183,0),g=p+IA|0,fA=B=I+B|0,EA=I>>>0>B>>>0?g+1|0:g,gA=BA,g=eg(b,0,_,0),I=p,B=g,g=eg(H,0,Y,0),I=p+I|0,I=g>>>0>(B=B+g|0)>>>0?I+1|0:I,g=B,g=(B=O>>>5&2097151)>>>0>(IA=g+B|0)>>>0?I+1|0:I,B=2097151&Z,BA=eg(b,0,Y,0)+B|0,I=p,eA=B=(yA=I=B>>>0>BA>>>0?I+1|0:I)-(((I=BA)>>>0<4293918720)-1|0)|0,CA=IA,g=g+(IA=B>>>21|0)|0,aA=g=(I=(2097151&B)<<11|(lA=I- -1048576|0)>>>21)>>>0>(B=CA+I|0)>>>0?g+1|0:g,uA=(I=B)- -1048576|0,nA=g=g-((I>>>0<4293918720)-1|0)|0,I=(IA=g>>>21|0)+gA|0,I=(g=(2097151&g)<<11|uA>>>21)>>>0>(CA=g+iA|0)>>>0?I+1|0:I,CA=(IA=eg(DA,sA,654183,0))+((gA=CA)-(g=-2097152&vA)|0)|0,g=p+(I-((16383&tA)+(g>>>0>gA>>>0)|0)|0)|0,I=eg(mA,HA,666643,0),IA=p+(IA>>>0>CA>>>0?g+1|0:g)|0,IA=I>>>0>(gA=I+CA|0)>>>0?IA+1|0:IA,g=eg(FA,GA,470296,0),I=p+IA|0,wA=gA=g+gA|0,iA=I=g>>>0>gA>>>0?I+1|0:I,hA=(I=gA)- -1048576|0,CA=g=iA-((I>>>0<4293918720)-1|0)|0,I=(IA=g>>21)+EA|0,tA=gA=(g=(2097151&g)<<11|hA>>>21)+fA|0,g=I=g>>>0>gA>>>0?I+1|0:I,fA=(I=gA)- -1048576|0,I=(IA=(gA=EA=g-((I>>>0<4293918720)-1|0)|0)>>21)+xA|0,EA=(EA=(2097151&gA)<<11|fA>>>21)>>>0>(YA=vA=EA+YA|0)>>>0?I+1|0:I,I=eg(MA,SA,-997805,-1);g=p+g|0,g=I>>>0>(IA=I+tA|0)>>>0?g+1|0:g,xA=IA-(I=-2097152&fA)|0,vA=g-((I>>>0>IA>>>0)+gA|0)|0,I=eg(MA,SA,654183,0),g=p+iA|0,g=I>>>0>(IA=I+wA|0)>>>0?g+1|0:g,tA=IA-(I=-2097152&hA)|0,fA=g-((I>>>0>IA>>>0)+CA|0)|0,IA=(g=eg(DA,sA,470296,0))+(B-(I=-2097152&uA)|0)|0,I=p+(aA-((16383&nA)+(I>>>0>B>>>0)|0)|0)|0,I=g>>>0>IA>>>0?I+1|0:I,B=(g=eg(FA,GA,666643,0))+IA|0,IA=p+I|0,IA=g>>>0>B>>>0?IA+1|0:IA,gA=B,B=(I=eg(DA,sA,666643,0))+(BA-(g=-2097152&lA)|0)|0,g=p+(yA-((4095&eA)+(g>>>0>BA>>>0)|0)|0)|0,iA=g=I>>>0>B>>>0?g+1|0:g,eA=(I=B)- -1048576|0,CA=BA=g-((I>>>0<4293918720)-1|0)|0,IA=(I=BA>>21)+IA|0,aA=BA=(g=(2097151&BA)<<11|eA>>>21)+gA|0,gA=IA=g>>>0>BA>>>0?IA+1|0:IA,nA=(I=BA)- -1048576|0,BA=IA=IA-((I>>>0<4293918720)-1|0)|0,g=(I=IA>>21)+fA|0,IA=g=(IA=(2097151&IA)<<11|nA>>>21)>>>0>(yA=IA+tA|0)>>>0?g+1|0:g,g=eg(MA,SA,470296,0),I=p+gA|0,I=g>>>0>(aA=g+aA|0)>>>0?I+1|0:I,g=aA-(gA=-2097152&nA)|0,gA=I-((gA>>>0>aA>>>0)+BA|0)|0,nA=g,BA=(I=eg(MA,SA,666643,0))+(B-(g=-2097152&eA)|0)|0,g=p+(iA-((g>>>0>B>>>0)+CA|0)|0)|0,I=(I=(g=I>>>0>BA>>>0?g+1|0:g)>>21)+gA|0,CA=B=nA+(g=(2097151&g)<<11|(B=BA)>>>21)|0,IA=(g=(I=g>>>0>B>>>0?I+1|0:I)>>21)+IA|0,gA=B=(I=(2097151&I)<<11|B>>>21)+yA|0,B=(2097151&(IA=I>>>0>(g=B)>>>0?IA+1|0:IA))<<11|g>>>21,g=(I=IA>>21)+vA|0,aA=IA=B+xA|0,IA=(g=B>>>0>(I=IA)>>>0?g+1|0:g)>>21,g=(2097151&g)<<11|I>>>21,I=IA+EA|0,uA=B=g+YA|0,g=(g=(I=g>>>0>B>>>0?I+1|0:I)>>21)+PA|0,wA=B=(I=(2097151&I)<<11|B>>>21)+JA|0,I=(I=(g=I>>>0>B>>>0?g+1|0:g)>>21)+pA|0,hA=B=(g=(2097151&g)<<11|B>>>21)+qA|0,IA=(g=(I=g>>>0>B>>>0?I+1|0:I)>>21)+VA|0,tA=B=(I=(2097151&I)<<11|B>>>21)+XA|0,B=(2097151&(IA=I>>>0>(g=B)>>>0?IA+1|0:IA))<<11|g>>>21,g=(I=IA>>21)+oA|0,fA=IA=B+bA|0,IA=(g=B>>>0>(I=IA)>>>0?g+1|0:g)>>21,g=(2097151&g)<<11|I>>>21,I=IA+kA|0,pA=B=g+OA|0,g=(g=(I=g>>>0>B>>>0?I+1|0:I)>>21)+ZA|0,yA=B=(I=(2097151&I)<<11|B>>>21)+jA|0,I=(g=I>>>0>B>>>0?g+1|0:g)>>21,iA=(IA=(2097151&g)<<11|B>>>21)+(g=QA-(B=-2097152&_A)|0)|0,IA=(rA-((B>>>0>QA>>>0)+cA|0)|0)+I|0,eA=iA,cA=(2097151&(IA=g>>>0>(I=iA)>>>0?IA+1|0:IA))<<11|I>>>21,EA=g=IA>>21,I=2097151&BA,B=eg(cA,g,666643,0)+I|0,g=p,iA=B,B=g=I>>>0>B>>>0?g+1|0:g,C[0|A]=iA,C[A+1|0]=(255&g)<<24|iA>>>8,BA=A,g=2097151&CA,IA=eg(cA,EA,470296,0)+g|0,I=p,I=g>>>0>IA>>>0?I+1|0:I,CA=IA,QA=(2097151&(IA=B))<<11|iA>>>21,IA=I+(g=IA>>21)|0,IA=QA>>>0>(CA=CA+QA|0)>>>0?IA+1|0:IA,QA=CA,C[BA+4|0]=(2047&IA)<<21|QA>>>11,I=IA,IA=QA,C[BA+3|0]=(7&I)<<29|IA>>>3,IA=2097151&gA,gA=eg(cA,EA,654183,0)+IA|0,g=p,g=IA>>>0>gA>>>0?g+1|0:g,IA=gA,gA=(2097151&I)<<11|QA>>>21,I=(I>>21)+g|0,g=I=gA>>>0>(CA=IA+gA|0)>>>0?I+1|0:I,C[BA+6|0]=(63&I)<<26|CA>>>6,gA=0,I=nA=2097151&QA,C[BA+2|0]=31&((65535&B)<<16|iA>>>16)|I<<5,B=2097151&aA,IA=eg(cA,EA,-997805,-1)+B|0,I=p,B=I=B>>>0>IA>>>0?I+1|0:I,I=g>>21,QA=(g=(2097151&g)<<11|CA>>>21)+IA|0,IA=I+B|0,iA=QA,IA=g>>>0>QA>>>0?IA+1|0:IA,C[BA+9|0]=(511&IA)<<23|QA>>>9,I=IA,C[BA+8|0]=(1&I)<<31|QA>>>1,QA=0,B=aA=2097151&CA,C[BA+5|0]=(524287&gA)<<13|nA>>>19|B<<2,B=2097151&uA,IA=eg(cA,EA,136657,0)+B|0,g=p,g=B>>>0>IA>>>0?g+1|0:g,B=IA,g=g+(IA=I>>21)|0,CA=B=B+(I=(2097151&I)<<11|iA>>>21)|0,g=I>>>0>B>>>0?g+1|0:g,C[BA+12|0]=(4095&g)<<20|B>>>12,B=g,I=g,g=CA,C[BA+11|0]=(15&I)<<28|g>>>4,BA=0,g=nA=2097151&iA,C[A+7|0]=(16383&QA)<<18|aA>>>14|g<<7,IA=A,g=2097151&wA,QA=eg(cA,EA,-683901,-1)+g|0,I=p,I=(I=g>>>0>QA>>>0?I+1|0:I)+(g=B>>21)|0,g=I=(B=(2097151&B)<<11|CA>>>21)>>>0>(gA=QA=B+QA|0)>>>0?I+1|0:I,C[IA+14|0]=(127&I)<<25|gA>>>7,QA=0,B=iA=2097151&CA,C[IA+10|0]=(131071&BA)<<15|nA>>>17|B<<4,B=IA,I>>=21,IA=(g=(2097151&g)<<11|gA>>>21)>>>0>(CA=g+(2097151&hA)|0)>>>0?I+1|0:I,C[B+17|0]=(1023&IA)<<22|CA>>>10,I=IA,C[B+16|0]=(3&I)<<30|CA>>>2,B=EA=2097151&gA,C[A+13|0]=(1048575&QA)<<12|iA>>>20|B<<1,g=I,I>>=21,g=(IA=(2097151&g)<<11|CA>>>21)>>>0>(gA=IA+(2097151&tA)|0)>>>0?I+1|0:I,C[(B=A)+20|0]=(8191&g)<<19|gA>>>13,I=g,g=gA,C[B+19|0]=(31&I)<<27|g>>>5,g=iA=2097151&CA,C[B+15|0]=(32767&BA)<<17|EA>>>15|g<<6,g=I,I>>=21,g=(B=(2097151&g)<<11|gA>>>21)>>>0>(EA=B+(2097151&fA)|0)>>>0?I+1|0:I,C[A+21|0]=EA,I=gA,C[A+18|0]=(262143&QA)<<14|iA>>>18|I<<3,B=g,I=g,g=EA,C[A+22|0]=(255&I)<<24|g>>>8,g=I>>21,IA=(I=(2097151&I)<<11|EA>>>21)>>>0>(gA=I+(2097151&pA)|0)>>>0?g+1|0:g,C[A+25|0]=(2047&IA)<<21|gA>>>11,I=IA,IA=gA,C[A+24|0]=(7&I)<<29|IA>>>3,g=I>>21,g=(BA=(2097151&I)<<11|gA>>>21)>>>0>(CA=BA+(2097151&yA)|0)>>>0?g+1|0:g,BA=CA,I=g,C[(IA=A)+27|0]=(63&I)<<26|BA>>>6,IA=0,g=CA=2097151&gA,C[A+23|0]=31&((65535&B)<<16|EA>>>16)|g<<5,g=I,I>>=21,I=(g=(2097151&g)<<11|BA>>>21)>>>0>(QA=g+(2097151&eA)|0)>>>0?I+1|0:I,B=QA,C[A+31|0]=(131071&I)<<15|B>>>17,C[A+30|0]=(511&I)<<23|B>>>9,C[A+29|0]=(1&I)<<31|B>>>1,I=0,gA=BA&=2097151,C[A+26|0]=(524287&IA)<<13|CA>>>19|gA<<2,C[A+28|0]=(16383&I)<<18|gA>>>14|B<<7}(E,r+160|0,r+288|0,r+224|0),fI(r+288|0,64),fI(r+224|0,64),I&&(i[I>>2]=64,i[I+4>>2]=0),h=r+560|0,0}function X(A,I,g){var B,Q=0,E=0;if(g>>>0>=512)return s(0|A,0|I,0|g),A;B=A+g|0;A:if(3&(A^I))if(B>>>0<4)g=A;else if((Q=B-4|0)>>>0<A>>>0)g=A;else for(g=A;C[0|g]=n[0|I],C[g+1|0]=n[I+1|0],C[g+2|0]=n[I+2|0],C[g+3|0]=n[I+3|0],I=I+4|0,Q>>>0>=(g=g+4|0)>>>0;);else{I:if((0|g)<1)g=A;else if(3&A)for(g=A;;){if(C[0|g]=n[0|I],I=I+1|0,B>>>0<=(g=g+1|0)>>>0)break I;if(!(3&g))break}else g=A;if(!((Q=-4&B)>>>0<64||(E=Q+-64|0)>>>0<g>>>0))for(;i[g>>2]=i[I>>2],i[g+4>>2]=i[I+4>>2],i[g+8>>2]=i[I+8>>2],i[g+12>>2]=i[I+12>>2],i[g+16>>2]=i[I+16>>2],i[g+20>>2]=i[I+20>>2],i[g+24>>2]=i[I+24>>2],i[g+28>>2]=i[I+28>>2],i[g+32>>2]=i[I+32>>2],i[g+36>>2]=i[I+36>>2],i[g+40>>2]=i[I+40>>2],i[g+44>>2]=i[I+44>>2],i[g+48>>2]=i[I+48>>2],i[g+52>>2]=i[I+52>>2],i[g+56>>2]=i[I+56>>2],i[g+60>>2]=i[I+60>>2],I=I- -64|0,E>>>0>=(g=g- -64|0)>>>0;);if(g>>>0>=Q>>>0)break A;for(;i[g>>2]=i[I>>2],I=I+4|0,Q>>>0>(g=g+4|0)>>>0;);}if(g>>>0<B>>>0)for(;C[0|g]=n[0|I],I=I+1|0,(0|B)!=(0|(g=g+1|0)););return A}function V(A,I,g,B){var Q,E=0,a=0,r=0,o=0,e=0,t=0,f=0;if(h=Q=h-704|0,g|B)if(E=B<<3|g>>>29,r=(f=i[(a=A)+72>>2])+(e=g<<3)|0,E=E+(o=i[a+76>>2])|0,t=r,i[a+72>>2]=r,E=r>>>0<e>>>0?E+1|0:E,i[a+76>>2]=E,t=(e=(0|E)==(0|o)&f>>>0>t>>>0|E>>>0<o>>>0)+i[(a=r=a- -64|0)>>2]|0,E=i[a+4>>2],E=e>>>0>t>>>0?E+1|0:E,r=(e=B>>>29|0)+t|0,i[a>>2]=r,i[a+4>>2]=r>>>0<e>>>0?E+1|0:E,(0|(E=B))==(0|(t=0-((o=127&((7&o)<<29|f>>>3))>>>0>128)|0))&g>>>0>=(r=128-o|0)>>>0|E>>>0>t>>>0){for(a=0,E=0;C[80+(A+(e=a+o|0)|0)|0]=n[I+a|0],(0|r)!=(0|(a=a+1|0))|(0|(E=a>>>0<1?E+1|0:E))!=(0|t););if(F(A,A+80|0,Q,E=Q+640|0),I=I+r|0,!(B=B-((g>>>0<r>>>0)+t|0)|0)&(g=g-r|0)>>>0>127|B)for(;F(A,I,Q,E),I=I+128|0,!(B=B-(g>>>0<128)|0)&(g=g-128|0)>>>0>127|B;);if(g|B)for(a=0,E=0;C[80+(A+a|0)|0]=n[I+a|0],(0|g)!=(0|(a=o=a+1|0))|(0|B)!=(0|(E=o>>>0<1?E+1|0:E)););fI(Q,704)}else for(a=g,r=(g=!B&g>>>0>1|0!=(0|B))?a:1,f=g?B:0,a=0,E=0;C[80+(A+(B=a+o|0)|0)|0]=n[I+a|0],(0|r)!=(0|(a=g=a+1|0))|(0|(E=g>>>0<1?E+1|0:E))!=(0|f););return h=Q+704|0,0}function W(A,I,g,B,Q,E,n,a){A|=0,I|=0,g|=0,B|=0,Q|=0,E|=0,n|=0,a|=0;var r,o=0,e=0,t=0,f=0,c=0,y=0,s=0,w=0,D=0;h=r=h-16|0,i[r+12>>2]=0,pg(a);A:{if(B){w=4&a;I:{g:{B:{for(;;){o=f;Q:{C:{for(;;){if(y=C[g+o|0],255!=(0|(t=w?LA(y):KA(y))))break C;if(!Q)break Q;if(!gg(Q,y))break B;if(!((o=o+1|0)>>>0<B>>>0))break}A=f+1|0,i[r+12>>2]=A>>>0<B>>>0?B:A;break g}if(s=(s<<6)+t|0,(t=e+6|0)>>>0<8)e=t;else{if(e=e-2|0,I>>>0<=c>>>0){i[r+12>>2]=o,i[8960]=68,o=1;break I}C[A+c|0]=s>>>e,c=c+1|0}if((f=o+1|0)>>>0<B>>>0)continue}break}i[r+12>>2]=f;break g}i[r+12>>2]=o}o=0}if(!(e>>>0<=4)){A=-1;break A}}if(A=-1,!((-1<<e^-1)&s|o)&&(2&a||!(A=function(A,I,g,B,Q){var E=0,n=0,a=0;I:if(Q)for(E=i[g>>2];;){g:{if(I>>>0<=E>>>0)i[8960]=68;else{if(61==(0|(n=C[A+E|0]))){Q=Q-1|0;break g}if(B&&gg(B,n))break g;i[8960]=28}a=-1;break I}if(E=E+1|0,i[g>>2]=E,!Q)break}return a}(g,B,r+12|0,Q,e>>>1|0)))){A=0;I:if(Q&&!((o=i[r+12>>2])>>>0>=B>>>0)){g:{for(;;){if(!gg(Q,C[g+o|0]))break g;if((0|(o=o+1|0))==(0|B))break}i[r+12>>2]=B;break I}i[r+12>>2]=o}D=c}}return I=i[r+12>>2],n?i[n>>2]=I+g:(0|I)!=(0|B)&&(i[8960]=28,A=-1),E&&(i[E>>2]=D),h=r+16|0,0|A}function T(A,I,g){var B,Q,C,E=0;h=B=h-16|0,Q=i[A+20>>2],i[A+20>>2]=0,C=i[A+4>>2],i[A+4>>2]=0,E=-26;A:{I:{g:switch(g-1|0){case 1:if(E=-32,XA(I,35621,9))break A;I=I+9|0;break I;case 0:break g;default:break A}if(E=-32,XA(I,35631,8))break A;I=I+8|0}if(!XA(I,35640,3)&&(I=bA(I+3|0,B+12|0))){if(E=-26,19!=i[B+12>>2])break A;if(!XA(I,35644,3)&&(I=bA(I+3|0,B+12|0))&&(i[A+44>>2]=i[B+12>>2],!XA(I,35648,3)&&(I=bA(I+3|0,B+12|0))&&(i[A+40>>2]=i[B+12>>2],!XA(I,35652,3)&&(I=bA(I+3|0,B+12|0))&&(g=i[B+12>>2],i[A+48>>2]=g,i[A+52>>2]=g,36==(0|(g=n[0|I]))&&(i[B+12>>2]=Q,I=36==(0|g)?I+1|0:I,!W(i[A+16>>2],Q,I,YA(I),0,B+12|0,B+8|0,3)&&(i[A+20>>2]=i[B+12>>2],I=i[B+8>>2],36==(0|(g=n[0|I]))&&(i[B+12>>2]=C,I=36==(0|g)?I+1|0:I,!W(i[A>>2],C,I,YA(I),0,B+12|0,B+8|0,3)))))))){if(i[A+4>>2]=i[B+12>>2],I=i[B+8>>2],E=oA(A))break A;return h=B+16|0,n[0|I]?-32:0}}E=-32}return h=B+16|0,E}function j(A,I){var g;for(h=g=h-192|0,H(g+144|0,I),H(g+96|0,g+144|0),H(g+96|0,g+96|0),_(g+96|0,I,g+96|0),_(g+144|0,g+144|0,g+96|0),H(g+48|0,g+144|0),_(g+96|0,g+96|0,g+48|0),H(g+48|0,g+96|0),I=1;H(g+48|0,g+48|0),5!=(0|(I=I+1|0)););for(_(g+96|0,g+48|0,g+96|0),H(g+48|0,g+96|0),I=1;H(g+48|0,g+48|0),10!=(0|(I=I+1|0)););for(_(g+48|0,g+48|0,g+96|0),H(g,g+48|0),I=1;H(g,g),20!=(0|(I=I+1|0)););for(_(g+48|0,g,g+48|0),I=1;H(g+48|0,g+48|0),11!=(0|(I=I+1|0)););for(_(g+96|0,g+48|0,g+96|0),H(g+48|0,g+96|0),I=1;H(g+48|0,g+48|0),50!=(0|(I=I+1|0)););for(_(g+48|0,g+48|0,g+96|0),H(g,g+48|0),I=1;H(g,g),100!=(0|(I=I+1|0)););for(_(g+48|0,g,g+48|0),I=1;H(g+48|0,g+48|0),51!=(0|(I=I+1|0)););for(_(g+96|0,g+48|0,g+96|0),I=1;H(g+96|0,g+96|0),6!=(0|(I=I+1|0)););_(A,g+96|0,g+144|0),h=g+192|0}function Z(A,I){var g,B,Q,E,n,a,o,e,t,f,c=0,y=0,s=0,w=0,h=0,D=0,u=0;(y=s=i[A+60>>2])|(c=i[A+56>>2])&&(s=c,C[(w=c+A|0)- -64|0]=1,!(y=(c=c+1|0)>>>0<1?y+1|0:y)&c>>>0<=15&&EA(w+65|0,0,15-s|0),C[A+80|0]=1,S(A,A- -64|0,16,0)),t=i[A+52>>2],f=i[A+48>>2],s=i[A+44>>2],u=i[A+24>>2],h=i[A+28>>2]+(u>>>26|0)|0,c=i[A+32>>2]+(h>>>26|0)|0,e=(g=(E=(-67108864|(Q=i[A+36>>2]+(c>>>26|0)|0))+((o=(a=67108863&c)+((h=(D=67108863&h)+((y=(c=(67108863&u)+((y=i[A+20>>2]+r(Q>>>26|0,5)|0)>>>26|0)|0)+((n=5+(w=67108863&y)|0)>>>26|0)|0)>>>26|0)|0)>>>26|0)|0)>>>26|0)|0)>>31)&c|(B=67108863&(u=(E>>>31|0)-1|0))&y,y=0,y=(c=w&g|B&n|e<<26)>>>0>(w=c+i[A+40>>2]|0)>>>0?1:y,xI(I,w),h=(c=(D=D&g|h&B)<<20|e>>>6)+s|0,s=0,s=c>>>0>h>>>0?1:s,c=y,y=s,y=c>>>0>(h=c+h|0)>>>0?y+1|0:y,xI(I+4|0,h),s=0,s=(c=(w=g&a|B&o)<<14|D>>>12)>>>0>(D=c+f|0)>>>0?1:s,c=y,y=s,y=c>>>0>(D=c+D|0)>>>0?y+1|0:y,xI(I+8|0,D),xI(s=I+12|0,y=y+(w=(I=(u&E|g&Q)<<8|w>>>18)+t|0)|0),fI(A,88)}function O(A,I,g,B,Q){A|=0,I|=0,g|=0,B|=0;var E=0,i=0,a=0,o=0,f=0,c=0,y=0,s=0,w=0;pg(Q|=0),i=(E=(B>>>0)/3|0)<<2,(E=r(E,-3)+B|0)&&(i=2&Q?(2|i)+(E>>>1|0)|0:i+4|0);A:{I:{g:{B:{if(I>>>0>i>>>0){if(!(4&Q)){if(a=0,!B)break g;Q=0,E=0;break B}if(a=0,!B)break g;for(Q=0,E=0;;){for(f=n[g+o|0]|f<<8,Q=Q+8|0;c=E,y=Q,s=A+E|0,w=CI(f>>>(Q=Q-6|0)&63),C[0|s]=w,E=E+1|0,Q>>>0>5;);if((0|(o=o+1|0))==(0|B))break}if(a=E,!Q)break g;s=A+E|0,w=CI(f<<12-y&63),C[0|s]=w,a=c+2|0;break g}OI(),e()}for(;;){for(f=n[g+o|0]|f<<8,Q=Q+8|0;c=E,y=Q,s=A+E|0,w=EI(f>>>(Q=Q-6|0)&63),C[0|s]=w,E=E+1|0,Q>>>0>5;);if((0|(o=o+1|0))==(0|B))break}a=E,Q&&(s=A+E|0,w=EI(f<<12-y&63),C[0|s]=w,a=c+2|0)}if((E=a)>>>0<=i>>>0){if(E>>>0<i>>>0)break I;i=E;break A}t(35568,35587,230,35603),e()}EA(A+E|0,61,i-E|0)}return EA(A+i|0,0,(I>>>0>(g=i+1|0)>>>0?I:g)-i|0),0|A}function z(A,I,g,B){var Q=0,E=0,a=0,r=0,o=0,e=0;A:{if((Q=i[A+56>>2])|(E=i[A+60>>2])){if(e=A,o=a=16-Q|0,o=(a=(0|(r=0-((Q>>>0>16)+E|0)|0))==(0|B)&g>>>0<a>>>0|B>>>0<r>>>0)?g:o,(a=r=a?B:r)|o){if(C[(A+Q|0)- -64|0]=n[0|I],E=1,Q=0,1!=(0|o)|a)for(;r=E+i[A+56>>2]|0,C[(A+r|0)- -64|0]=n[I+E|0],(0|o)!=(0|(E=E+1|0))|(0|(Q=E>>>0<1?Q+1|0:Q))!=(0|a););Q=i[A+56>>2],E=i[A+60>>2]}if(r=Q+o|0,Q=E+a|0,E=r,i[e+56>>2]=E,Q=E>>>0<o>>>0?Q+1|0:Q,i[e+60>>2]=Q,!Q&E>>>0<16)break A;S(A,A- -64|0,16,0),i[A+56>>2]=0,i[A+60>>2]=0,g=(Q=g)-(E=o)|0,B=B-((Q>>>0<E>>>0)+a|0)|0,I=I+E|0}if(!B&g>>>0>=16|B&&(S(A,I,Q=-16&g,B),g&=15,B=0,I=I+Q|0),g|B){for(E=0,Q=0;e=E+i[A+56>>2]|0,C[(A+e|0)- -64|0]=n[I+E|0],(0|g)!=(0|(E=E+1|0))|(0|B)!=(0|(Q=E>>>0<1?Q+1|0:Q)););I=A,Q=g+i[A+56>>2]|0,A=B+i[A+60>>2]|0,i[I+56>>2]=Q,i[I+60>>2]=g>>>0>Q>>>0?A+1|0:A}}}function $(A,I){var g=0,B=0,Q=0,C=0,E=0,o=0,e=0,t=0,f=0,c=0,y=0,s=0,w=0;A:if(A&&(2!=i[A+36>>2]||(Q=i[I>>2],n[I+8|0]<2&&!Q)?(function(A,I,g){var B,Q=0,C=0,E=0;if(h=B=h-4096|0,vg(B+3072|0),vg(B+2048|0),!(!A|!I)&&(i[B+2048>>2]=i[I>>2],i[B+2052>>2]=0,i[B+2056>>2]=i[I+4>>2],i[B+2060>>2]=0,i[B+2064>>2]=n[I+8|0],i[B+2068>>2]=0,i[B+2072>>2]=i[A+16>>2],i[B+2076>>2]=0,i[B+2080>>2]=i[A+8>>2],i[B+2084>>2]=0,i[B+2088>>2]=i[A+36>>2],i[B+2092>>2]=0,i[A+20>>2]))for(I=0;(E=127&I)||(Q=i[B+2100>>2],Q=(C=i[B+2096>>2]+1|0)>>>0<1?Q+1|0:Q,i[B+2096>>2]=C,i[B+2100>>2]=Q,vg(B),vg(B+1024|0),Y(B+3072|0,B+2048|0,B),Y(B+3072|0,B,B+1024|0)),E=i[4+(C=(B+1024|0)+(E<<3)|0)>>2],i[(Q=(I<<3)+g|0)>>2]=i[C>>2],i[Q+4>>2]=E,(I=I+1|0)>>>0<a[A+20>>2];);h=B+4096|0}(A,I,t=i[A+4>>2]),Q=i[I>>2],B=0):(t=i[A+4>>2],B=1),c=B,!((E=!((B=n[I+8|0])|Q)<<1)>>>0>=(g=i[A+20>>2])>>>0)))for(C=i[A+24>>2],g=(Q=(r(C,i[I+4>>2])+E|0)+r(g,B)|0)+((Q>>>0)%(C>>>0)|0?-1:C-1|0)|0;;){if(f=1==((Q>>>0)%(C>>>0)|0)?Q-1|0:g,c?(o=i[A>>2],g=i[o+4>>2]+(f<<10)|0):(o=i[A>>2],g=(E<<3)+t|0),B=i[g+4>>2],y=i[g>>2],g=i[A+28>>2],i[I+12>>2]=E,B=(B>>>0)%(g>>>0)|0,e=i[I+4>>2],g=n[I+8|0]?B:e,o=i[o+4>>2],s=C,w=B,C=i[I>>2],e=(o+(r(s,g=(B=C)?w:g)<<10)|0)+(FA(A,I,y,!0&(0|g)==(0|e))<<10)|0,B=o+(f<<10)|0,g=o+(Q<<10)|0,C?Y(B,e,g):b(B,e,g),(E=E+1|0)>>>0>=a[A+20>>2])break A;Q=Q+1|0,g=f+1|0,C=i[A+24>>2]}}function AA(A,I,g){var B,Q,C,E,n,a,r,o,e,t,f,c,y=0,s=0,w=0,h=0,D=0,u=0,p=0,l=0,F=0;B=i[I+4>>2],Q=i[A+4>>2],C=i[I+8>>2],s=i[A+8>>2],E=i[I+12>>2],w=i[A+12>>2],n=i[I+16>>2],h=i[A+16>>2],a=i[I+20>>2],D=i[A+20>>2],r=i[I+24>>2],u=i[A+24>>2],o=i[I+28>>2],p=i[A+28>>2],e=i[I+32>>2],l=i[A+32>>2],t=i[I+36>>2],F=i[A+36>>2],c=(g=0-g|0)&((f=i[I>>2])^(y=i[A>>2])),i[A>>2]=c^y,y=F,F=g&(F^t),i[A+36>>2]=y^F,y=l,l=g&(l^e),i[A+32>>2]=y^l,y=p,p=g&(p^o),i[A+28>>2]=y^p,y=u,u=g&(u^r),i[A+24>>2]=y^u,y=D,D=g&(D^a),i[A+20>>2]=y^D,y=h,h=g&(h^n),i[A+16>>2]=y^h,y=w,w=g&(w^E),i[A+12>>2]=y^w,y=s,s=g&(s^C),i[A+8>>2]=y^s,y=A,A=g&(B^Q),i[y+4>>2]=A^Q,i[I+36>>2]=F^t,i[I+32>>2]=l^e,i[I+28>>2]=p^o,i[I+24>>2]=u^r,i[I+20>>2]=D^a,i[I+16>>2]=h^n,i[I+12>>2]=w^E,i[I+8>>2]=s^C,i[I+4>>2]=A^B,i[I>>2]=f^c}function IA(A,I){var g;i[A>>2]=67108863&(n[0|I]|n[I+1|0]<<8|n[I+2|0]<<16|n[I+3|0]<<24),i[A+4>>2]=(n[I+3|0]|n[I+4|0]<<8|n[I+5|0]<<16|n[I+6|0]<<24)>>>2&67108611,i[A+8>>2]=(n[I+6|0]|n[I+7|0]<<8|n[I+8|0]<<16|n[I+9|0]<<24)>>>4&67092735,i[A+12>>2]=(n[I+9|0]|n[I+10|0]<<8|n[I+11|0]<<16|n[I+12|0]<<24)>>>6&66076671,g=n[I+12|0]|n[I+13|0]<<8|n[I+14|0]<<16|n[I+15|0]<<24,i[A+20>>2]=0,i[A+24>>2]=0,i[A+28>>2]=0,i[A+32>>2]=0,i[A+36>>2]=0,i[A+16>>2]=g>>>8&1048575,i[A+40>>2]=n[I+16|0]|n[I+17|0]<<8|n[I+18|0]<<16|n[I+19|0]<<24,i[A+44>>2]=n[I+20|0]|n[I+21|0]<<8|n[I+22|0]<<16|n[I+23|0]<<24,i[A+48>>2]=n[I+24|0]|n[I+25|0]<<8|n[I+26|0]<<16|n[I+27|0]<<24,I=n[I+28|0]|n[I+29|0]<<8|n[I+30|0]<<16|n[I+31|0]<<24,C[A+80|0]=0,i[A+56>>2]=0,i[A+60>>2]=0,i[A+52>>2]=I}function gA(A,I,g){var B=0;A:if((0|A)!=(0|I)){if((I-A|0)-g>>>0<=0-(g<<1)>>>0)return X(A,I,g);if(B=3&(A^I),A>>>0<I>>>0){if(B)B=A;else{if(3&A)for(B=A;;){if(!g)break A;if(C[0|B]=n[0|I],I=I+1|0,g=g-1|0,!(3&(B=B+1|0)))break}else B=A;if(!(g>>>0<=3))for(;i[B>>2]=i[I>>2],I=I+4|0,B=B+4|0,(g=g-4|0)>>>0>3;);}if(g)for(;C[0|B]=n[0|I],B=B+1|0,I=I+1|0,g=g-1|0;);}else{if(!B){if(A+g&3)for(;;){if(!g)break A;if(C[0|(B=(g=g-1|0)+A|0)]=n[I+g|0],!(3&B))break}if(!(g>>>0<=3))for(;i[(g=g-4|0)+A>>2]=i[I+g>>2],g>>>0>3;);}if(!g)break A;for(;C[(g=g-1|0)+A|0]=n[I+g|0],g;);}}return A}function BA(A,I){var g,B=0;h=g=h-48|0,function(A,I){var g,B,Q,C,E,n,a,o,e=0;B=i[I+28>>2],Q=i[I+24>>2],C=i[I+20>>2],E=i[I+16>>2],n=i[I+12>>2],a=i[I+8>>2],o=i[I+4>>2],e=i[I>>2],g=i[I+36>>2],I=i[I+32>>2],e=r(((B+(Q+(C+(E+(n+(a+(o+(e+(r(g,19)+16777216>>>25|0)>>26)>>25)>>26)>>25)>>26)>>25)>>26)>>25)+I>>26)+g>>25,19)+e|0,i[A>>2]=67108863&e,e=o+(e>>26)|0,i[A+4>>2]=33554431&e,e=a+(e>>25)|0,i[A+8>>2]=67108863&e,e=n+(e>>26)|0,i[A+12>>2]=33554431&e,e=E+(e>>25)|0,i[A+16>>2]=67108863&e,e=C+(e>>26)|0,i[A+20>>2]=33554431&e,e=Q+(e>>25)|0,i[A+24>>2]=67108863&e,e=B+(e>>26)|0,i[A+28>>2]=33554431&e,I=I+(e>>25)|0,i[A+32>>2]=67108863&I,i[A+36>>2]=g+(I>>26)&33554431}(g,I),I=i[g>>2],C[0|A]=I,C[A+2|0]=I>>>16,C[A+1|0]=I>>>8,B=i[g+4>>2],C[A+5|0]=B>>>14,C[A+4|0]=B>>>6,C[A+3|0]=B<<2|I>>>24,I=i[g+8>>2],C[A+8|0]=I>>>13,C[A+7|0]=I>>>5,C[A+6|0]=I<<3|B>>>22,B=i[g+12>>2],C[A+11|0]=B>>>11,C[A+10|0]=B>>>3,C[A+9|0]=B<<5|I>>>21,I=i[g+16>>2],C[A+15|0]=I>>>18,C[A+14|0]=I>>>10,C[A+13|0]=I>>>2,C[A+12|0]=I<<6|B>>>19,I=i[g+20>>2],C[A+16|0]=I,C[A+18|0]=I>>>16,C[A+17|0]=I>>>8,B=i[g+24>>2],C[A+21|0]=B>>>15,C[A+20|0]=B>>>7,C[A+19|0]=B<<1|I>>>24,I=i[g+28>>2],C[A+24|0]=I>>>13,C[A+23|0]=I>>>5,C[A+22|0]=I<<3|B>>>23,B=i[g+32>>2],C[A+27|0]=B>>>12,C[A+26|0]=B>>>4,C[A+25|0]=B<<4|I>>>21,I=i[g+36>>2],C[A+31|0]=I>>>18,C[A+30|0]=I>>>10,C[A+29|0]=I>>>2,C[A+28|0]=I<<6|B>>>20,h=g+48|0}function QA(A,I,g,B){var Q=0,E=0,i=0,a=0,r=0,o=0;A:if(g|B)for(o=A+224|0,i=A+96|0,Q=n[A+352|0]|n[A+353|0]<<8|n[A+354|0]<<16|n[A+355|0]<<24;;){if(a=96+(A+Q|0)|0,r=E=256-Q|0,!B&g>>>0<=E>>>0){X(a,I,g),I=g+(n[A+352|0]|n[A+353|0]<<8|n[A+354|0]<<16|n[A+355|0]<<24)|0,C[A+352|0]=I,C[A+353|0]=I>>>8,C[A+354|0]=I>>>16,C[A+355|0]=I>>>24;break A}if(X(a,I,E),Q=(n[A+352|0]|n[A+353|0]<<8|n[A+354|0]<<16|n[A+355|0]<<24)+E|0,C[A+352|0]=Q,C[A+353|0]=Q>>>8,C[A+354|0]=Q>>>16,C[A+355|0]=Q>>>24,iA(A,128),l(A,i),X(i,o,128),Q=(n[A+352|0]|n[A+353|0]<<8|n[A+354|0]<<16|n[A+355|0]<<24)-128|0,C[A+352|0]=Q,C[A+353|0]=Q>>>8,C[A+354|0]=Q>>>16,C[A+355|0]=Q>>>24,I=I+E|0,!((g=(E=g)-r|0)|(B=B-(E>>>0<r>>>0)|0)))break}return 0}function CA(A,I){var g,B=0,Q=0,E=0,i=0;for(h=g=h-464|0;Q=B<<1,i=n[I+B|0],C[Q+(g+400|0)|0]=15&i,C[(g+400|0)+(1|Q)|0]=i>>>4,32!=(0|(B=B+1|0)););for(B=0;I=((Q=(I=B)+n[0|(B=(g+400|0)+E|0)]|0)<<24)- -134217728|0,C[0|B]=Q-(I>>24&240),B=I>>28,63!=(0|(E=E+1|0)););for(C[g+463|0]=n[g+463|0]+B,zI(A),B=1;fg(g,B>>>1|0,C[(g+400|0)+B|0]),OA(g+240|0,A,g),DI(A,g+240|0),I=B>>>0<62,B=B+2|0,I;);for(JI(g+240|0,A),_I(g+120|0,g+240|0),AI(g+240|0,g+120|0),_I(g+120|0,g+240|0),AI(g+240|0,g+120|0),_I(g+120|0,g+240|0),AI(g+240|0,g+120|0),DI(A,g+240|0),B=0;fg(g,B>>>1|0,C[(g+400|0)+B|0]),OA(g+240|0,A,g),DI(A,g+240|0),I=B>>>0<62,B=B+2|0,I;);h=g+464|0}function EA(A,I,g){var B=0,Q=0,E=0,n=0;if(g&&(C[(B=A+g|0)-1|0]=I,C[0|A]=I,!(g>>>0<3||(C[B-2|0]=I,C[A+1|0]=I,C[B-3|0]=I,C[A+2|0]=I,g>>>0<7||(C[B-4|0]=I,C[A+3|0]=I,g>>>0<9||(Q=(B=0-A&3)+A|0,I=r(255&I,16843009),i[Q>>2]=I,i[(B=(g=g-B&-4)+Q|0)-4>>2]=I,g>>>0<9||(i[Q+8>>2]=I,i[Q+4>>2]=I,i[B-8>>2]=I,i[B-12>>2]=I,g>>>0<25||(i[Q+24>>2]=I,i[Q+20>>2]=I,i[Q+16>>2]=I,i[Q+12>>2]=I,i[B-16>>2]=I,i[B-20>>2]=I,i[B-24>>2]=I,i[B-28>>2]=I,(g=g-(n=4&Q|24)|0)>>>0<32))))))))for(B=I,E=I,I=Q+n|0;i[I+24>>2]=E,i[I+28>>2]=B,i[I+16>>2]=E,i[I+20>>2]=B,i[I+8>>2]=E,i[I+12>>2]=B,i[I>>2]=E,i[I+4>>2]=B,I=I+32|0,(g=g-32|0)>>>0>31;);return A}function iA(A,I){var g,B,Q,E=0,i=0;i=E=A- -64|0,B=1+(g=n[E+4|0]|n[E+5|0]<<8|n[E+6|0]<<16|n[E+7|0]<<24)|0,E=(I=I+(E=Q=n[0|E]|n[E+1|0]<<8|n[E+2|0]<<16|n[E+3|0]<<24)|0)>>>0<E>>>0?B:g,C[0|i]=I,C[i+1|0]=I>>>8,C[i+2|0]=I>>>16,C[i+3|0]=I>>>24,C[i+4|0]=E,C[i+5|0]=E>>>8,C[i+6|0]=E>>>16,C[i+7|0]=E>>>24,I=(E=(0|E)==(0|g)&I>>>0<Q>>>0|E>>>0<g>>>0)+(n[A+72|0]|n[A+73|0]<<8|n[A+74|0]<<16|n[A+75|0]<<24)|0,i=n[A+76|0]|n[A+77|0]<<8|n[A+78|0]<<16|n[A+79|0]<<24,E=I>>>0<E>>>0?i+1|0:i,C[A+72|0]=I,C[A+73|0]=I>>>8,C[A+74|0]=I>>>16,C[A+75|0]=I>>>24,C[A+76|0]=E,C[A+77|0]=E>>>8,C[A+78|0]=E>>>16,C[A+79|0]=E>>>24}function nA(A,I,g,B,Q,C,E){var n,a,r,o,e=0;return h=n=h-352|0,K(n,C,E),!Q&B>>>0<=g-A>>>0|A>>>0>=g>>>0&&!(!Q&B>>>0>A-g>>>0|Q&&A>>>0>g>>>0)||(g=gA(A,g,B)),i[n+56>>2]=0,i[n+60>>2]=0,i[n+48>>2]=0,i[n+52>>2]=0,i[n+40>>2]=0,i[n+44>>2]=0,i[n+32>>2]=0,i[n+36>>2]=0,(a=!((E=(e=!Q&B>>>0>32|0!=(0|Q))?32:B)|(e=e?0:Q)))||X(n- -64|0,g,E),o=C+16|0,$I(n+32|0,n+32|0,r=E+32|0,C=r>>>0<32?e+1|0:e,o,n),lg(n+96|0,n+32|0),a||X(A,n- -64|0,E),fI(n+32|0,64),!Q&B>>>0>=33|Q&&Ag(A+E|0,C=g+E|0,(g=B)-E|0,Q-(e+(g>>>0<E>>>0)|0)|0,o,n),fI(n,32),yg(n+96|0,A,B,Q),Fg(n+96|0,I),fI(n+96|0,256),h=n+352|0,0}function aA(A,I){i[A>>2]=1634760805,i[A+4>>2]=857760878,i[A+8>>2]=2036477234,i[A+12>>2]=1797285236,i[A+16>>2]=n[0|I]|n[I+1|0]<<8|n[I+2|0]<<16|n[I+3|0]<<24,i[A+20>>2]=n[I+4|0]|n[I+5|0]<<8|n[I+6|0]<<16|n[I+7|0]<<24,i[A+24>>2]=n[I+8|0]|n[I+9|0]<<8|n[I+10|0]<<16|n[I+11|0]<<24,i[A+28>>2]=n[I+12|0]|n[I+13|0]<<8|n[I+14|0]<<16|n[I+15|0]<<24,i[A+32>>2]=n[I+16|0]|n[I+17|0]<<8|n[I+18|0]<<16|n[I+19|0]<<24,i[A+36>>2]=n[I+20|0]|n[I+21|0]<<8|n[I+22|0]<<16|n[I+23|0]<<24,i[A+40>>2]=n[I+24|0]|n[I+25|0]<<8|n[I+26|0]<<16|n[I+27|0]<<24,i[A+44>>2]=n[I+28|0]|n[I+29|0]<<8|n[I+30|0]<<16|n[I+31|0]<<24}function rA(A,I,g,B,Q,C,E){var n,a,r=0,o=0;h=n=h-96|0,K(n,C,E),a=C+16|0,Vg[i[8952]](n+32|0,32,0,a,n),C=-1;A:{if(!(0|Vg[i[8946]](g,I,B,Q,n+32|0))){if(C=0,!A)break A;!Q&B>>>0<=A-I>>>0|A>>>0<=I>>>0&&!(!Q&B>>>0>I-A>>>0|Q&&A>>>0<I>>>0)||(I=gA(A,I,B)),g=(C=!Q&B>>>0>32|0!=(0|Q))?32:B,E=C=C?0:Q,g|C?(o=X(n- -64|0,I,g),C=E,$I(n+32|0,n+32|0,r=g+32|0,C=r>>>0<32?C+1|0:C,a,n),X(A,o,g)):(C=E,$I(n+32|0,n+32|0,r=g+32|0,C=r>>>0<32?C+1|0:C,a,n)),C=0,!Q&B>>>0<33||Ag((r=A)+(A=g)|0,A+I|0,B-A|0,Q-(E+(A>>>0>B>>>0)|0)|0,a,n)}fI(n,32)}return h=n+96|0,C}function oA(A){var I=0,g=0,B=0;if(!A)return-25;if(!i[A>>2])return-1;A:{I:{if(I=-2,!(a[A+4>>2]<16)&&(i[A+8>>2]||(I=-18,!i[A+12>>2]))){if(g=i[A+20>>2],!i[A+16>>2])break I;if(I=-6,!(g>>>0<8)&&(i[A+24>>2]||(I=-20,!i[A+28>>2]))&&(i[A+32>>2]||(I=-21,!i[A+36>>2]))){if(!(g=i[A+48>>2]))return-16;if(I=-17,!(g>>>0>16777215||(I=-14,(B=i[A+44>>2])>>>0<8||(I=-15,B>>>0>2097152||(I=-14,g<<3>>>0>B>>>0))))){if(!i[A+40>>2])return-12;if(A=i[A+52>>2])break A;I=-28}}}return I}return g?-19:-6}return A>>>0>16777215?-29:0}function eA(A,I,g){var B,Q,C,E,n,a,r,o,e,t,f,c,y,s,w,h,D,u,p,l;f=i[I+4>>2],B=i[A+4>>2],c=i[I+8>>2],Q=i[A+8>>2],y=i[I+12>>2],C=i[A+12>>2],s=i[I+16>>2],E=i[A+16>>2],w=i[I+20>>2],n=i[A+20>>2],h=i[I+24>>2],a=i[A+24>>2],D=i[I+28>>2],r=i[A+28>>2],u=i[I+32>>2],o=i[A+32>>2],p=i[I+36>>2],e=i[A+36>>2],t=i[A>>2],l=i[I>>2]^t,I=0-g|0,i[A>>2]=t^l&I,i[A+36>>2]=I&(e^p)^e,i[A+32>>2]=I&(o^u)^o,i[A+28>>2]=I&(r^D)^r,i[A+24>>2]=I&(a^h)^a,i[A+20>>2]=I&(n^w)^n,i[A+16>>2]=I&(E^s)^E,i[A+12>>2]=I&(C^y)^C,i[A+8>>2]=I&(Q^c)^Q,i[A+4>>2]=I&(B^f)^B}function tA(A,I){for(var g=0,B=0,Q=0,E=0,i=0,a=0,r=0,o=0;C[A+g|0]=n[(g>>>3|0)+I|0]>>>(7&g)&1,256!=(0|(g=g+1|0)););for(;;){a=(I=a)+1|0;A:if(n[0|(i=A+I|0)]&&(g=a,Q=1,!(I>>>0>254)))for(;;){I:if(E=C[0|(B=A+g|0)])if((0|(o=(r=C[0|i])+(E<<=Q)|0))<=15)C[0|i]=o,C[0|B]=0;else{if((0|(B=r-E|0))<-15)break A;for(C[0|i]=B;;){if(!n[0|(B=A+g|0)]){C[0|B]=1;break I}if(C[0|B]=0,B=g>>>0<255,g=g+1|0,!B)break}}if(Q>>>0>5)break A;if(!((g=I+(Q=Q+1|0)|0)>>>0<256))break}if(256==(0|a))break}}function fA(A,I,g,B){var Q,C,E,n,a=0;h=Q=h+-64|0,EA(Q+8|0,0,52),a=YA(A),i[Q+20>>2]=a,i[Q+36>>2]=a,i[Q+4>>2]=a,C=k(a),i[Q+32>>2]=C,E=k(a),i[Q+16>>2]=E,n=k(a),i[Q>>2]=n;A:if(!n|!C|!E||!(a=k(a)))m(C),m(E),m(n),A=-22;else{if(A=T(Q,A,B)){m(i[Q+32>>2]),m(i[Q+16>>2]),m(i[Q>>2]),m(a);break A}A=0,I=pA(i[Q+40>>2],i[Q+44>>2],i[Q+52>>2],I,g,i[Q+16>>2],i[Q+20>>2],a,i[Q+4>>2],0,0,B),m(i[Q+32>>2]),m(i[Q+16>>2]),(I||zA(a,i[Q>>2],i[Q+4>>2]))&&(A=-35),m(a),m(i[Q>>2])}return h=Q- -64|0,A}function cA(A,I){var g,B,Q=0;h=g=h-288|0,d(B=A+40|0,I),wg(Q=A+80|0),H(g+240|0,B),_(g+192|0,g+240|0,2128),yA(g+240|0,g+240|0,Q),sA(g+192|0,g+192|0,Q),H(g+144|0,g+192|0),_(g+144|0,g+144|0,g+192|0),H(A,g+144|0),_(A,A,g+192|0),_(A,A,g+240|0),function(A,I){var g,B=0;for(h=g=h-144|0,H(g+96|0,I),H(g+48|0,g+96|0),H(g+48|0,g+48|0),_(g+48|0,I,g+48|0),_(g+96|0,g+96|0,g+48|0),H(g+96|0,g+96|0),_(g+96|0,g+48|0,g+96|0),H(g+48|0,g+96|0),B=1;H(g+48|0,g+48|0),5!=(0|(B=B+1|0)););for(_(g+96|0,g+48|0,g+96|0),H(g+48|0,g+96|0),B=1;H(g+48|0,g+48|0),10!=(0|(B=B+1|0)););for(_(g+48|0,g+48|0,g+96|0),H(g,g+48|0),B=1;H(g,g),20!=(0|(B=B+1|0)););for(_(g+48|0,g,g+48|0),B=1;H(g+48|0,g+48|0),11!=(0|(B=B+1|0)););for(_(g+96|0,g+48|0,g+96|0),H(g+48|0,g+96|0),B=1;H(g+48|0,g+48|0),50!=(0|(B=B+1|0)););for(_(g+48|0,g+48|0,g+96|0),H(g,g+48|0),B=1;H(g,g),100!=(0|(B=B+1|0)););for(_(g+48|0,g,g+48|0),B=1;H(g+48|0,g+48|0),51!=(0|(B=B+1|0)););_(g+96|0,g+48|0,g+96|0),H(g+96|0,g+96|0),H(g+96|0,g+96|0),_(A,g+96|0,I),h=g+144|0}(A,A),_(A,A,g+144|0),_(A,A,g+240|0),H(g+96|0,A),_(g+96|0,g+96|0,g+192|0),yA(g+48|0,g+96|0,g+240|0);A:{if(!RI(g+48|0)){if(sA(g,g+96|0,g+240|0),Q=-1,!RI(g))break A;_(A,A,2176)}(0|KI(A))==(n[I+31|0]>>>7|0)&&mA(A,A),_(A+120|0,A,B),Q=0}return h=g+288|0,Q}function yA(A,I,g){var B,Q,C,E,n,a,r,o,e,t,f,c,y,s,w,h,D,u;B=i[g+4>>2],Q=i[I+4>>2],C=i[g+8>>2],E=i[I+8>>2],n=i[g+12>>2],a=i[I+12>>2],r=i[g+16>>2],o=i[I+16>>2],e=i[g+20>>2],t=i[I+20>>2],f=i[g+24>>2],c=i[I+24>>2],y=i[g+28>>2],s=i[I+28>>2],w=i[g+32>>2],h=i[I+32>>2],D=i[g+36>>2],u=i[I+36>>2],i[A>>2]=i[I>>2]-i[g>>2],i[A+36>>2]=u-D,i[A+32>>2]=h-w,i[A+28>>2]=s-y,i[A+24>>2]=c-f,i[A+20>>2]=t-e,i[A+16>>2]=o-r,i[A+12>>2]=a-n,i[A+8>>2]=E-C,i[A+4>>2]=Q-B}function sA(A,I,g){var B,Q,C,E,n,a,r,o,e,t,f,c,y,s,w,h,D,u;B=i[g+4>>2],Q=i[I+4>>2],C=i[g+8>>2],E=i[I+8>>2],n=i[g+12>>2],a=i[I+12>>2],r=i[g+16>>2],o=i[I+16>>2],e=i[g+20>>2],t=i[I+20>>2],f=i[g+24>>2],c=i[I+24>>2],y=i[g+28>>2],s=i[I+28>>2],w=i[g+32>>2],h=i[I+32>>2],D=i[g+36>>2],u=i[I+36>>2],i[A>>2]=i[g>>2]+i[I>>2],i[A+36>>2]=D+u,i[A+32>>2]=w+h,i[A+28>>2]=y+s,i[A+24>>2]=f+c,i[A+20>>2]=e+t,i[A+16>>2]=r+o,i[A+12>>2]=n+a,i[A+8>>2]=C+E,i[A+4>>2]=B+Q}function wA(A){var I,g=0,B=0,Q=0,E=0;for(C[11+(I=h-16|0)|0]=0,C[I+12|0]=0,C[I+13|0]=0,C[I+14|0]=0,i[I+8>>2]=0;;){for(Q=n[A+B|0],g=0;C[0|(E=(I+8|0)+g|0)]=n[0|E]|Q^n[(3232+(g<<5)|0)+B|0],7!=(0|(g=g+1|0)););if(31==(0|(B=B+1|0)))break}for(B=127&n[A+31|0],A=0,g=0;C[0|(Q=(I+8|0)+g|0)]=n[0|Q]|B^n[3263+(g<<5)|0],7!=(0|(g=g+1|0)););for(g=0;g=n[(I+8|0)+A|0]-1|g,7!=(0|(A=A+1|0)););return g>>>8&1}function hA(A,I){var g=0,B=0,Q=0,E=0,i=0;for(EA(X(A,1952,64)- -64|0,0,293);Q=B=(g=E<<3)+A|0,g=I+g|0,i=n[0|B]|n[B+1|0]<<8|n[B+2|0]<<16|n[B+3|0]<<24,B=(n[g+4|0]|n[g+5|0]<<8|n[g+6|0]<<16|n[g+7|0]<<24)^(n[B+4|0]|n[B+5|0]<<8|n[B+6|0]<<16|n[B+7|0]<<24),g=(n[0|g]|n[g+1|0]<<8|n[g+2|0]<<16|n[g+3|0]<<24)^i,C[0|Q]=g,C[Q+1|0]=g>>>8,C[Q+2|0]=g>>>16,C[Q+3|0]=g>>>24,C[Q+4|0]=B,C[Q+5|0]=B>>>8,C[Q+6|0]=B>>>16,C[Q+7|0]=B>>>24,8!=(0|(E=E+1|0)););}function DA(A,I,g,B,Q){var C,E=0;h=C=h+-64|0;A:{I:{if(E=!g,(g=YA(A))>>>0<128&&E){if(i[C+56>>2]=0,i[C+48>>2]=0,i[C+52>>2]=0,i[C+40>>2]=0,i[C+44>>2]=0,E=function(A){var I=0,g=0;return I=0,A&&(g=A,I=A,(1|A)>>>0<65536||(I=g)),g=I,!(A=k(I))|!(3&n[A-4|0])||EA(A,0,g),A}(g))break I}else i[8960]=28;A=-1;break A}i[C+32>>2]=0,i[C+36>>2]=0,i[C+8>>2]=E,i[C+16>>2]=E,i[C+20>>2]=g,i[C>>2]=E,i[C+12>>2]=g,i[C+24>>2]=0,i[C+28>>2]=0,i[C+4>>2]=g,T(C,A,Q)?(i[8960]=28,A=-1):(A=1,(0|I)==i[C+40>>2]&&(A=i[C+44>>2]!=(B>>>10|0))),m(E)}return h=C- -64|0,A}function uA(A,I){var g,B=0,Q=0,E=0,o=0;if(h=g=h-48|0,!((B=oA(A))||(B=-26,I-1>>>0>1||(E=i[A+44>>2],B=i[A+48>>2],i[g>>2]=0,Q=i[A+40>>2],i[g+28>>2]=B,i[g+12>>2]=-1,i[g+8>>2]=Q,B=((Q=E>>>0<(Q=B<<3)>>>0?Q:E)>>>0)/((E=B<<2)>>>0)|0,i[g+20>>2]=B,i[g+24>>2]=B<<2,i[g+16>>2]=r(B,E),B=i[A+52>>2],i[g+36>>2]=I,i[g+32>>2]=B,B=function(A,I){var g,B=0;return h=g=h-80|0,B=-25,!A|!I||(B=k(i[A+20>>2]<<3),i[A+4>>2]=B,B?(B=function(A,I){var g,B=0,Q=0;h=g=h-16|0,Q=-22;A:if(!(!A|!I)&&1024==(((B=I<<10)>>>0)/(I>>>0)|0)&&(I=k(12),i[A>>2]=I,I)){i[I>>2]=0,i[I+4>>2]=0,I=function(A,I){if(I>>>0>4294967168)A=48;else{if(!(I=function(A){var I=0,g=0,B=0,Q=0,C=0,E=0;return A>>>0>=4294967168?(i[8960]=48,0):(A=k(76+(B=A>>>0<11?16:A+11&-8)|0))?(I=A-8|0,63&A?(Q=(-8&(E=i[(C=A-4|0)>>2]))-(g=(A=(A=(A+63&-64)-8|0)-I>>>0>15?A:A- -64|0)-I|0)|0,3&E?(i[A+4>>2]=Q|1&i[A+4>>2]|2,i[4+(Q=A+Q|0)>>2]=1|i[Q+4>>2],i[C>>2]=g|1&i[C>>2]|2,i[A+4>>2]=1|i[A+4>>2],v(I,g)):(I=i[I>>2],i[A+4>>2]=Q,i[A>>2]=I+g)):A=I,3&(I=i[A+4>>2])&&((g=-8&I)>>>0<=B+16>>>0||(i[A+4>>2]=B|1&I|2,I=A+B|0,B=g-B|0,i[I+4>>2]=3|B,i[4+(g=A+g|0)>>2]=1|i[g+4>>2],v(I,B))),A+8|0):0}(I)))return 48;i[A>>2]=I,A=0}return A}(g+12|0,B),i[8960]=I;I:{if(I)i[g+12>>2]=0;else if(I=i[g+12>>2])break I;m(i[A>>2]),i[A>>2]=0;break A}i[i[A>>2]>>2]=I,i[i[A>>2]+4>>2]=I,i[i[A>>2]+8>>2]=B,Q=0}return h=g+16|0,Q}(A,i[A+16>>2]))?eI(A,i[I+56>>2]):(function(A,I,g){var B,Q=0;B=Q=h,h=Q=Q-448&-64,!A|!I||(iI(Q- -64|0,0,0,64),xI(Q+60|0,i[I+48>>2]),hg(Q- -64|0,Q+60|0,4,0),xI(Q+60|0,i[I+4>>2]),hg(Q- -64|0,Q+60|0,4,0),xI(Q+60|0,i[I+44>>2]),hg(Q- -64|0,Q+60|0,4,0),xI(Q+60|0,i[I+40>>2]),hg(Q- -64|0,Q+60|0,4,0),xI(Q+60|0,19),hg(Q- -64|0,Q+60|0,4,0),xI(Q+60|0,g),hg(Q- -64|0,Q+60|0,4,0),xI(Q+60|0,i[I+12>>2]),hg(Q- -64|0,Q+60|0,4,0),(g=i[I+8>>2])&&(hg(Q- -64|0,g,i[I+12>>2],0),1&C[I+56|0]&&(fI(i[I+8>>2],i[I+12>>2]),i[I+12>>2]=0)),xI(Q+60|0,i[I+20>>2]),hg(Q- -64|0,Q+60|0,4,0),(g=i[I+16>>2])&&hg(Q- -64|0,g,i[I+20>>2],0),xI(Q+60|0,i[I+28>>2]),hg(Q- -64|0,Q+60|0,4,0),(g=i[I+24>>2])&&(hg(Q- -64|0,g,i[I+28>>2],0),2&n[I+56|0]&&(fI(i[I+24>>2],i[I+28>>2]),i[I+28>>2]=0)),xI(Q+60|0,i[I+36>>2]),hg(Q- -64|0,Q+60|0,4,0),(g=i[I+32>>2])&&hg(Q- -64|0,g,i[I+36>>2],0),dI(Q- -64|0,A,64)),h=B}(g,I,i[A+36>>2]),fI(g- -64|0,8),function(A,I){var g,B=0,Q=0,C=0;if(h=g=h-1024|0,i[I+28>>2])for(C=A+68|0,Q=A- -64|0;xI(Q,0),xI(C,B),J(g,1024,A,72),TA(i[i[I>>2]+4>>2]+(r(i[I+24>>2],B)<<10)|0,g),xI(Q,1),J(g,1024,A,72),TA(1024+(i[i[I>>2]+4>>2]+(r(i[I+24>>2],B)<<10)|0)|0,g),(B=B+1|0)>>>0<a[I+28>>2];);fI(g,1024),h=g+1024|0}(g,A),fI(g,72),B=0):B=-22),h=g+80|0,B}(g,A))))){if(i[g+8>>2])for(;kA(g,o),(o=o+1|0)>>>0<a[g+8>>2];);!function(A,I){var g,B=0,Q=0;if(h=g=h-2048|0,!(!A|!I)){if(Yg(g+1024|0,(i[i[I>>2]+4>>2]+(i[I+24>>2]<<10)|0)-1024|0),a[I+28>>2]>=2)for(B=1;Q=i[I+24>>2],QI(g+1024|0,(i[i[I>>2]+4>>2]+(Q+r(B,Q)<<10)|0)-1024|0),(B=B+1|0)>>>0<a[I+28>>2];);!function(A,I){for(var g=0,B=0;tI((g=B<<3)+A|0,i[(g=I+g|0)>>2],i[g+4>>2]),128!=(0|(B=B+1|0)););}(g,g+1024|0),J(i[A>>2],i[A+4>>2],g,1024),fI(g+1024|0,1024),fI(g,1024),eI(I,i[A+56>>2])}h=g+2048|0}(A,g),B=0}return h=g+48|0,B}function pA(A,I,g,B,Q,C,E,n,a,r,o,e){var t,f;return h=t=h+-64|0,(f=k(a))?(i[t+32>>2]=0,i[t+36>>2]=0,i[t+24>>2]=0,i[t+28>>2]=0,i[t+20>>2]=E,i[t+16>>2]=C,i[t+12>>2]=Q,i[t+8>>2]=B,i[t+4>>2]=a,i[t>>2]=f,i[t+56>>2]=0,i[t+52>>2]=g,i[t+48>>2]=g,i[t+44>>2]=I,i[t+40>>2]=A,(g=uA(t,e))?fI(f,a):!r|!o||!R(r,o,t,e)?(n&&X(n,f,a),fI(f,a),g=0):(fI(f,a),fI(r,o),g=-31),m(f)):g=-22,h=t- -64|0,g}function lA(A,I,g,B,Q,E){var i,a,o=0,e=0,t=0;return h=i=h-592|0,o=-1,function(A){var I=0,g=0,B=0,Q=0,C=0;for(I=32,g=1;C=(B=n[(I=I-1|0)+A|0])-(Q=n[I+3456|0])>>8&g|255&C,g&=65535+(B^Q)>>>8,I;);return 0!=(0|C)}(a=A+32|0)&&(wA(A)||function(A){var I=0,g=0;for(g=127&(-1^n[A+31|0]),I=30;g=-1^n[A+I|0]|g,I=I-1|0;);return 1&(((255&g)-1&236-n[0|A])>>>8^-1)}(Q)&&(wA(Q)||cA(i+128|0,Q)||(ig(i+384|0,E),V(i+384|0,A,32,0),V(i+384|0,Q,32,0),V(i+384|0,I,g,B),UI(i+384|0,i+320|0),G(i+320|0),function(A,I,g,B){var Q;h=Q=h-2272|0,tA(Q+2016|0,I),tA(Q+1760|0,B),FI(Q+480|0,g),JI(Q+320|0,g),DI(Q,Q+320|0),VA(Q+320|0,Q,Q+480|0),DI(Q+160|0,Q+320|0),FI(I=Q+640|0,Q+160|0),VA(Q+320|0,Q,I),DI(Q+160|0,Q+320|0),FI(I=Q+800|0,Q+160|0),VA(Q+320|0,Q,I),DI(Q+160|0,Q+320|0),FI(I=Q+960|0,Q+160|0),VA(Q+320|0,Q,I),DI(Q+160|0,Q+320|0),FI(I=Q+1120|0,Q+160|0),VA(Q+320|0,Q,I),DI(Q+160|0,Q+320|0),FI(I=Q+1280|0,Q+160|0),VA(Q+320|0,Q,I),DI(Q+160|0,Q+320|0),FI(I=Q+1440|0,Q+160|0),VA(Q+320|0,Q,I),DI(Q+160|0,Q+320|0),FI(Q+1600|0,Q+160|0),Ug(A),wg(A+40|0),wg(A+80|0),B=255;A:{for(;;){if(!(n[(g=B)+(Q+2016|0)|0]|n[(Q+1760|0)+g|0])){if(B=g-1|0,g)continue;break A}break}if(!((0|g)<0))for(;AI(Q+320|0,A),(0|(g=C[(I=g)+(Q+2016|0)|0]))>=1?(DI(Q+160|0,Q+320|0),VA(Q+320|0,Q+160|0,(Q+480|0)+r((254&g)>>>1|0,160)|0)):(0|g)>-1||(DI(Q+160|0,Q+320|0),WA(Q+320|0,Q+160|0,(Q+480|0)+r((0-g&254)>>>1|0,160)|0)),(0|(g=C[I+(Q+1760|0)|0]))>=1?(DI(Q+160|0,Q+320|0),OA(Q+320|0,Q+160|0,r((254&g)>>>1|0,120)+2272|0)):(0|g)>-1||(DI(Q+160|0,Q+320|0),ZA(Q+320|0,Q+160|0,r((0-g&254)>>>1|0,120)+2272|0)),_I(A,Q+320|0),g=I-1|0,(0|I)>0;);}h=Q+2272|0}(i+8|0,i+320|0,i+128|0,a),nI(i+288|0,i+8|0),e=-1,t=Gg(i+288|0,A),o=((i+288|0)==(0|A)?e:t)|zA(A,i+288|0,32)))),h=i+592|0,o}function FA(A,I,g,B){var Q=0,C=0;A:if(i[I>>2])C=i[A+24>>2],Q=i[A+20>>2],B=B?i[I+12>>2]+(C+(-1^Q)|0)|0:(C-Q|0)-!i[I+12>>2]|0,C=0,3!=(0|(I=n[I+8|0]))&&(C=r(Q,I+1|0));else{if(!(Q=n[I+8|0])){B=i[I+12>>2]-1|0,C=0;break A}if(Q=r(Q,i[A+20>>2]),I=i[I+12>>2],B){B=(I+Q|0)-1|0,C=0;break A}B=Q-!I|0,C=0}return I=C+(Q=B-1|0)|0,eg(g,0,g,0),eg(B,0,p,0),function(A,I,g){var B=0,Q=0,C=0,E=0,i=0,n=0,a=0,e=0,t=0;A:{I:{g:{B:{Q:{C:{E:{i:{n:{if(Q=I){if(!(B=g))break n;break i}return D=A-r((A>>>0)/(g>>>0)|0,g)|0,u=0,void(p=0)}if(!A)break E;break C}if(!((E=B-1|0)&B))break Q;i=0-(E=(o(B)+33|0)-o(Q)|0)|0;break g}return D=0,u=Q,void(p=0)}if((B=32-o(Q)|0)>>>0<31)break B;break I}if(D=A&E,u=0,1==(0|B))break A;return g=31&(A=B?31-o(B-1^B)|0:32),void(p=(63&A)>>>0>=32?0:I>>>g|0)}E=B+1|0,i=63-B|0}if(B=I,C=31&(Q=63&E),Q>>>0>=32?(Q=0,C=B>>>C|0):(Q=B>>>C|0,C=((1<<C)-1&B)<<32-C|A>>>C),B=31&(i&=63),i>>>0>=32?(I=A<<B,A=0):(I=(1<<B)-1&A>>>32-B|I<<B,A<<=B),E)for(i=-1!=(0|(B=g-1|0))?0:-1;C=(a=n=C<<1|I>>>31)-(e=g&(n=i-((Q=Q<<1|C>>>31)+(B>>>0<n>>>0)|0)>>31))|0,Q=Q-(a>>>0<e>>>0)|0,I=I<<1|A>>>31,A=t|A<<1,t=1&n,E=E-1|0;);return D=C,u=Q,void(p=I<<1|A>>>31)}D=A,u=I,I=0}p=I}(I-(g=p)|0,(I>>>0<Q>>>0)-(I>>>0<g>>>0)|0,i[A+24>>2]),p=u,D}function GA(A,I,g,B,Q,C,E,i,n,a){var r;return h=r=h-352|0,_g(r+32|0,64,n,a),lg(r+96|0,r+32|0),fI(r+32|0,64),yg(r+96|0,C,E,i),yg(r+96|0,34688,0-E&15,0),yg(r+96|0,I,g,B),yg(r+96|0,34688,0-g&15,0),tI(r+24|0,E,i),yg(r+96|0,r+24|0,8,0),tI(r+24|0,g,B),yg(r+96|0,r+24|0,8,0),Fg(r+96|0,r),fI(r+96|0,256),Q=kg(r,Q),fI(r,16),A&&(Q?(EA(A,0,g),Q=-1):(BI(A,I,g,B,n,1,a),Q=0)),h=r+352|0,Q}function kA(A,I){var g,B=0,Q=0,E=0;if(h=g=h-32|0,!(!A|!i[A+28>>2]))for(i[g+16>>2]=I,B=1;;){if(C[g+24|0]=Q,I=0,E=0,B)for(;i[g+28>>2]=0,B=i[g+28>>2],i[g+8>>2]=i[g+24>>2],i[g+12>>2]=B,i[g+20>>2]=I,B=i[g+20>>2],i[g>>2]=i[g+16>>2],i[g+4>>2]=B,$(A,g),(I=I+1|0)>>>0<(E=i[A+28>>2])>>>0;);if(B=E,4==(0|(Q=Q+1|0)))break}h=g+32|0}function _A(A,I,g,B,Q,C,E,n,a,r,o){var e;return h=e=h-336|0,_g(e+16|0,64,r,o),lg(e+80|0,e+16|0),fI(e+16|0,64),yg(e+80|0,E,n,a),yg(e+80|0,34688,0-n&15,0),BI(A,B,Q,C,r,1,o),yg(e+80|0,A,Q,C),yg(e+80|0,34688,0-Q&15,0),tI(e+8|0,n,a),yg(e+80|0,e+8|0,8,0),tI(e+8|0,Q,C),yg(e+80|0,e+8|0,8,0),Fg(e+80|0,I),fI(e+80|0,256),g&&(i[g>>2]=16,i[g+4>>2]=0),h=e+336|0,0}function HA(A,I,g,B,Q,C,E,i,n,a){var r;return h=r=h-352|0,og(r+32|0,n,a),lg(r+96|0,r+32|0),fI(r+32|0,64),yg(r+96|0,C,E,i),tI(r+24|0,E,i),yg(r+96|0,r+24|0,8,0),yg(r+96|0,I,g,B),tI(r+24|0,g,B),yg(r+96|0,r+24|0,8,0),Fg(r+96|0,r),fI(r+96|0,256),Q=kg(r,Q),fI(r,16),A&&(Q?(EA(A,0,g),Q=-1):(NI(A,I,g,B,n,a),Q=0)),h=r+352|0,Q}function YA(A){var I=0,g=0,B=0;A:{I:if(3&(I=A)){if(!n[0|A])return 0;for(;;){if(!(3&(I=I+1|0)))break I;if(!n[0|I])break}break A}for(;g=I,I=I+4|0,!((-1^(B=i[g>>2]))&B-16843009&-2139062144););if(!(255&B))return g-A|0;for(;B=n[g+1|0],g=I=g+1|0,B;);}return I-A|0}function bA(A,I){var g,B=0,Q=0,C=0,E=0,a=0;A:if(!(((g=n[0|A])-48&255)>>>0>9)){for(Q=g,B=A;;){if(E=B,C>>>0>429496729)break A;if((Q=(255&Q)-48|0)>>>0>(-1^(B=r(C,10)))>>>0)break A;if(C=B+Q|0,!(((Q=n[0|(B=E+1|0)])-48&255)>>>0<10))break}(0|A)==(0|B)|(48==(0|g)?(0|A)!=(0|E):0)||(i[I>>2]=C,a=B)}return a}function mA(A,I){var g,B,Q,C,E,n,a,r,o;g=i[I+4>>2],B=i[I+8>>2],Q=i[I+12>>2],C=i[I+16>>2],E=i[I+20>>2],n=i[I+24>>2],a=i[I+28>>2],r=i[I+32>>2],o=i[I+36>>2],i[A>>2]=0-i[I>>2],i[A+36>>2]=0-o,i[A+32>>2]=0-r,i[A+28>>2]=0-a,i[A+24>>2]=0-n,i[A+20>>2]=0-E,i[A+16>>2]=0-C,i[A+12>>2]=0-Q,i[A+8>>2]=0-B,i[A+4>>2]=0-g}function vA(A,I,g){var B=0;B=I<<8&16711680|I<<24,B|=255&(g<<8|I>>>24)|65280&(g<<24|I>>>8),I=-16777216&((255&g)<<24|I>>>8)|16711680&((16777215&g)<<8|I>>>24)|g>>>8&65280|g>>>24|0,C[0|A]=I,C[A+1|0]=I>>>8,C[A+2|0]=I>>>16,C[A+3|0]=I>>>24,I=B,C[A+4|0]=I,C[A+5|0]=I>>>8,C[A+6|0]=I>>>16,C[A+7|0]=I>>>24}function UA(A,I,g){var B;B=A,g?(i[A+48>>2]=n[0|g]|n[g+1|0]<<8|n[g+2|0]<<16|n[g+3|0]<<24,g=n[g+4|0]|n[g+5|0]<<8|n[g+6|0]<<16|n[g+7|0]<<24):(i[A+48>>2]=0,g=0),i[B+52>>2]=g,i[A+56>>2]=n[0|I]|n[I+1|0]<<8|n[I+2|0]<<16|n[I+3|0]<<24,i[A+60>>2]=n[I+4|0]|n[I+5|0]<<8|n[I+6|0]<<16|n[I+7|0]<<24}function SA(A,I){var g,B,Q,C,E,n,a,r,o;g=i[I+8>>2],B=i[I+12>>2],Q=i[I+16>>2],C=i[I+20>>2],E=i[I+24>>2],n=i[I+28>>2],a=i[I>>2],r=i[I+4>>2],o=i[I+36>>2],i[A+32>>2]=i[I+32>>2],i[A+36>>2]=o,i[A+24>>2]=E,i[A+28>>2]=n,i[A+16>>2]=Q,i[A+20>>2]=C,i[A+8>>2]=g,i[A+12>>2]=B,i[A>>2]=a,i[A+4>>2]=r}function NA(A,I,g,B,Q,C,E,a,r,o,e){var t;return h=t=h-48|0,i[t+8>>2]=0,i[t>>2]=0,i[t+4>>2]=0,x(t+16|0,o,e),e=n[o+16|0]|n[o+17|0]<<8|n[o+18|0]<<16|n[o+19|0]<<24,o=n[o+20|0]|n[o+21|0]<<8|n[o+22|0]<<16|n[o+23|0]<<24,i[t+4>>2]=e,i[t+8>>2]=o,function(A,I,g,B,Q,C,E,n,a,r,o){var e;h=e=h-336|0,rg(e+16|0,64,r,o),lg(e+80|0,e+16|0),fI(e+16|0,64),yg(e+80|0,E,n,a),yg(e+80|0,34704,0-n&15,0),SI(A,B,Q,C,r,1,o),yg(e+80|0,A,Q,C),yg(e+80|0,34704,0-Q&15,0),tI(e+8|0,n,a),yg(e+80|0,e+8|0,8,0),tI(e+8|0,Q,C),yg(e+80|0,e+8|0,8,0),Fg(e+80|0,I),fI(e+80|0,256),g&&(i[g>>2]=16,i[g+4>>2]=0),h=e+336|0}(A,I,g,B,Q,C,E,a,r,t,t+16|0),fI(t+16|0,32),h=t+48|0,0}function MA(A,I,g,B,Q,C,E,a,r,o){var e;return h=e=h-48|0,i[e+8>>2]=0,i[e>>2]=0,i[e+4>>2]=0,x(e+16|0,r,o),o=n[r+16|0]|n[r+17|0]<<8|n[r+18|0]<<16|n[r+19|0]<<24,r=n[r+20|0]|n[r+21|0]<<8|n[r+22|0]<<16|n[r+23|0]<<24,i[e+4>>2]=o,i[e+8>>2]=r,A=function(A,I,g,B,Q,C,E,i,n,a){var r;return h=r=h-352|0,rg(r+32|0,64,n,a),lg(r+96|0,r+32|0),fI(r+32|0,64),yg(r+96|0,C,E,i),yg(r+96|0,34704,0-E&15,0),yg(r+96|0,I,g,B),yg(r+96|0,34704,0-g&15,0),tI(r+24|0,E,i),yg(r+96|0,r+24|0,8,0),tI(r+24|0,g,B),yg(r+96|0,r+24|0,8,0),Fg(r+96|0,r),fI(r+96|0,256),Q=kg(r,Q),fI(r,16),A&&(Q?(EA(A,0,g),Q=-1):(SI(A,I,g,B,n,1,a),Q=0)),h=r+352|0,Q}(A,I,g,B,Q,C,E,a,e,e+16|0),fI(e+16|0,32),h=e+48|0,A}function dA(A){var I;return I=n[0|A]|n[A+1|0]<<8|n[A+2|0]<<16|n[A+3|0]<<24,A=n[A+4|0]|n[A+5|0]<<8|n[A+6|0]<<16|n[A+7|0]<<24,p=65280&(A<<24|I>>>8)|255&(A<<8|I>>>24)|I<<8&16711680|I<<24,-16777216&((255&A)<<24|I>>>8)|16711680&((16777215&A)<<8|I>>>24)|A>>>8&65280|A>>>24|0}function PA(A,I,g,B,Q,C,E,n,a,r,o){var e;return h=e=h-336|0,og(e+16|0,r,o),lg(e+80|0,e+16|0),fI(e+16|0,64),yg(e+80|0,E,n,a),tI(e+8|0,n,a),yg(e+80|0,e+8|0,8,0),NI(A,B,Q,C,r,o),yg(e+80|0,A,Q,C),tI(e+8|0,Q,C),yg(e+80|0,e+8|0,8,0),Fg(e+80|0,I),fI(e+80|0,256),g&&(i[g>>2]=16,i[g+4>>2]=0),h=e+336|0,0}function RA(A,I,g,B){var Q;if(h=Q=h-192|0,!(!g|(I-1&255)>>>0>=64|(B-1&255)>>>0>=64))return E[Q+130>>1]=257,C[Q+129|0]=B,C[Q+128|0]=I,WI(Q+128|4),tI(Q+128|8,0,0),EA(Q+144|0,0,48),hA(A,Q+128|0),EA(B+Q|0,0,128-B|0),QA(I=A,A=X(Q,g,B),128,0),fI(A,128),h=A+192|0,0;OI(),e()}function JA(A,I,g){i[A+48>>2]=g?n[0|g]|n[g+1|0]<<8|n[g+2|0]<<16|n[g+3|0]<<24:0,i[A+52>>2]=n[0|I]|n[I+1|0]<<8|n[I+2|0]<<16|n[I+3|0]<<24,i[A+56>>2]=n[I+4|0]|n[I+5|0]<<8|n[I+6|0]<<16|n[I+7|0]<<24,i[A+60>>2]=n[I+8|0]|n[I+9|0]<<8|n[I+10|0]<<16|n[I+11|0]<<24}function xA(A,I,g,B,Q,C,E){var n;return h=n=h-16|0,A=EA(A,0,128),E>>>0<2147483649&&!(B|C)?E>>>0>8191&&Q|C?(cI(n,16),A=pA(Q,E>>>10|0,1,I,g,n,16,0,32,A,128,2)?-1:0):(i[8960]=28,A=-1):(i[8960]=22,A=-1),h=n+16|0,A}function LA(A){var I=0;return(0-(I=A+4&(A+65488>>>8^-1)&(57-A>>>8^-1)&255|((I=A-65|0)>>>8^-1)&I&(90-A>>>8^-1)&255|A+185&(A+65439>>>8^-1)&(122-A>>>8^-1)&255|63&(1+(16288^A)>>>8^-1)|62&(1+(16338^A)>>>8^-1))>>>8^-1)&1+(65470^A)>>>8&255|I}function KA(A){var I=0;return(0-(I=A+4&(A+65488>>>8^-1)&(57-A>>>8^-1)&255|((I=A-65|0)>>>8^-1)&I&(90-A>>>8^-1)&255|A+185&(A+65439>>>8^-1)&(122-A>>>8^-1)&255|63&(1+(16336^A)>>>8^-1)|62&(1+(16340^A)>>>8^-1))>>>8^-1)&1+(65470^A)>>>8&255|I}function qA(A,I){var g,B,Q=0,E=0,i=0,n=0;for(h=g=h-16|0,Q=10;n=Q,i=(I>>>0)/10|0,C[0|(E=(Q=Q-1|0)+(g+6|0)|0)]=I-r(i,10)|48,!(I>>>0<10)&&(I=i,Q););B=X(I=A,E,A=11-n|0)+A|0,C[0|B]=0,h=g+16|0}function XA(A,I,g){var B=0,Q=0,C=0;if(!g)return 0;A:if(B=n[0|A]){for(;;){if((0|(Q=n[0|I]))==(0|B)&&!(!(g=g-1|0)|!Q)){if(I=I+1|0,B=n[A+1|0],A=A+1|0,B)continue;break A}break}C=B}return(255&C)-n[0|I]|0}function VA(A,I,g){var B,Q,C,E=0;h=Q=h-48|0,sA(A,E=I+40|0,I),yA(B=A+40|0,E,I),_(E=A+80|0,A,g),_(B,B,g+40|0),_(C=A+120|0,g+120|0,I+120|0),_(A,I+80|0,g+80|0),sA(Q,A,A),yA(A,E,B),sA(B,E,B),sA(E,Q,C),yA(C,Q,C),h=Q+48|0}function WA(A,I,g){var B,Q,C,E=0;h=Q=h-48|0,sA(A,E=I+40|0,I),yA(B=A+40|0,E,I),_(E=A+80|0,A,g+40|0),_(B,B,g),_(C=A+120|0,g+120|0,I+120|0),_(A,I+80|0,g+80|0),sA(Q,A,A),yA(A,E,B),sA(B,E,B),yA(E,Q,C),sA(C,Q,C),h=Q+48|0}function TA(A,I){for(var g=0,B=0,Q=0,C=0;Q=(g=B<<3)+A|0,C=n[0|(g=I+g|0)]|n[g+1|0]<<8|n[g+2|0]<<16|n[g+3|0]<<24,g=n[g+4|0]|n[g+5|0]<<8|n[g+6|0]<<16|n[g+7|0]<<24,i[Q>>2]=C,i[Q+4>>2]=g,128!=(0|(B=B+1|0)););}function jA(A,I,g){var B;if(i[12+(B=h-16|0)>>2]=A,i[B+8>>2]=I,I=0,i[B+4>>2]=0,(0|g)>=1)for(;i[B+4>>2]=i[B+4>>2]|n[i[B+8>>2]+I|0]^n[i[B+12>>2]+I|0],(0|g)!=(0|(I=I+1|0)););return(i[B+4>>2]-1>>>8&1)-1|0}function ZA(A,I,g){var B,Q,C,E=0;h=Q=h-48|0,sA(A,E=I+40|0,I),yA(B=A+40|0,E,I),_(E=A+80|0,A,g+40|0),_(B,B,g),_(C=A+120|0,g+80|0,I+120|0),sA(Q,I=I+80|0,I),yA(A,E,B),sA(B,E,B),yA(E,Q,C),sA(C,Q,C),h=Q+48|0}function OA(A,I,g){var B,Q,C,E=0;h=Q=h-48|0,sA(A,E=I+40|0,I),yA(B=A+40|0,E,I),_(E=A+80|0,A,g),_(B,B,g+40|0),_(C=A+120|0,g+80|0,I+120|0),sA(Q,I=I+80|0,I),yA(A,E,B),sA(B,E,B),sA(E,Q,C),yA(C,Q,C),h=Q+48|0}function zA(A,I,g){var B;if(i[12+(B=h-16|0)>>2]=A,i[B+8>>2]=I,I=0,C[B+7|0]=0,g)for(;C[B+7|0]=n[B+7|0]|n[i[B+8>>2]+I|0]^n[i[B+12>>2]+I|0],(0|g)!=(0|(I=I+1|0)););return(n[B+7|0]-1>>>8&1)-1|0}function $A(A,I,g){var B,Q=0,E=0;if(h=B=h-16|0,C[B+15|0]=0,E=-1,!(0|Vg[i[8950]](A,I,g))){for(;C[B+15|0]=n[A+Q|0]|n[B+15|0],32!=(0|(Q=Q+1|0)););E=0-(n[B+15|0]-1>>>8&1)|0}return h=B+16|0,E}function AI(A,I){var g,B,Q,C,E;h=B=h-48|0,H(A,I),H(g=A+80|0,E=I+40|0),function(A,I){var g,B,Q,C,E,n,a,o,e,t,f,c,y,s,w,h,D,u,l,F,G,k,_,H,Y,b,m,v,U,S,N,M,d,P,R,J,x,L,K=0,q=0,X=0,V=0,W=0,T=0,j=0,Z=0,O=0,z=0,$=0,AA=0,IA=0,gA=0,BA=0,QA=0,CA=0,EA=0,iA=0,nA=0;E=K=(W=i[I+12>>2])<<1,n=K>>31,a=K=(O=i[I+4>>2])<<1,K=eg(E,n,K,g=K>>31),X=p,q=K,k=K=gA=i[I+8>>2],V=eg(K,z=K>>31,K,z),K=p+X|0,K=(q=q+V|0)>>>0<V>>>0?K+1|0:K,V=q,B=q=BA=i[I+16>>2],o=q>>31,e=q=(QA=i[I>>2])<<1,X=eg(B,o,q,Q=q>>31),K=p+K|0,K=(q=V+X|0)>>>0<X>>>0?K+1|0:K,j=q,X=i[I+28>>2],l=q=r(X,38),U=X,V=eg(q,h=q>>31,X,_=X>>31),K=p+K|0,K=(q=j+V|0)>>>0<V>>>0?K+1|0:K,T=q,j=i[I+32>>2],Z=eg(f=q=r(j,19),c=q>>31,q=(V=i[I+24>>2])<<1,q>>31),q=p+K|0,q=Z>>>0>($=T+Z|0)>>>0?q+1|0:q,T=$,IA=i[I+36>>2],t=K=r(IA,38),C=K>>31,D=I=($=i[I+20>>2])<<1,Z=eg(K,C,I,s=I>>31),I=p+q|0,H=(K=T+Z|0)<<1,P=K=(K>>>0<Z>>>0?I+1|0:I)<<1|K>>>31,S=I=H+33554432|0,R=K=I>>>0<33554432?K+1|0:K,I=K>>26,K=(67108863&K)<<6|S>>>26,q=eg(a,g,B,o),Z=p,T=K,u=K=gA<<1,CA=W,W=eg(K,w=K>>31,W,Y=W>>31),K=p+Z|0,K=(q=W+q|0)>>>0<W>>>0?K+1|0:K,gA=$,W=(Z=eg($,F=$>>31,e,Q))+q|0,q=p+K|0,q=W>>>0<Z>>>0?q+1|0:q,BA=W,N=K=X<<1,W=eg(f,c,K,b=K>>31),K=p+q|0,K=(X=BA+W|0)>>>0<W>>>0?K+1|0:K,q=X,W=V,X=eg(t,C,V,y=V>>31),K=p+K|0,K=(q=q+X|0)>>>0<X>>>0?K+1|0:K,X=q,I=I+(q=K<<1|q>>>31)|0,EA=K=T+(X<<=1)|0,K=K>>>0<X>>>0?I+1|0:I,J=I=EA+16777216|0,I=(33554431&(K=I>>>0<16777216?K+1|0:K))<<7|I>>>25,X=K>>25,K=eg(E,n,CA,Y),q=p,T=I,I=(Z=eg(B,o,u,w))+K|0,K=p+q|0,K=I>>>0<Z>>>0?K+1|0:K,q=eg(a,g,D,s),K=p+K|0,K=(I=q+I|0)>>>0<q>>>0?K+1|0:K,q=(Z=eg(e,Q,V,y))+I|0,I=p+K|0,I=q>>>0<Z>>>0?I+1|0:I,Z=j,j=eg(f,c,j,G=j>>31),K=p+I|0,K=(q=j+q|0)>>>0<j>>>0?K+1|0:K,I=(j=eg(t,C,N,b))+q|0,q=p+K|0,I=((K=I)>>>0<j>>>0?q+1|0:q)<<1|K>>>31,j=K<<1,K=I+X|0,K=(q=T+j|0)>>>0<j>>>0?K+1|0:K,iA=q=(I=q)+33554432|0,X=K=q>>>0<33554432?K+1|0:K,K=-67108864&q,i[A+24>>2]=I-K,j=A,I=eg(I=r($,38),I>>31,$,F),K=p,T=I,$=eg(I=QA,q=I>>31,I,q),q=p+K|0,q=(I=T+$|0)>>>0<$>>>0?q+1|0:q,K=I,AA=I=r(V,19),m=I>>31,M=I=B<<1,I=K+(V=eg(AA,m,I,v=I>>31))|0,K=p+q|0,K=I>>>0<V>>>0?K+1|0:K,q=eg(E,n,l,h),K=p+K|0,K=(I=q+I|0)>>>0<q>>>0?K+1|0:K,q=(V=eg(f,c,u,w))+I|0,I=p+K|0,I=q>>>0<V>>>0?I+1|0:I,V=eg(a,g,t,C),K=p+I|0,x=K=((I=q=V+q|0)>>>0<V>>>0?K+1|0:K)<<1|I>>>31,QA=I=33554432+($=I<<1)|0,BA=q=I>>>0<33554432?K+1|0:K,I=(67108863&q)<<6|I>>>26,V=q>>26,K=eg(AA,m,D,s),q=p,nA=I,I=(O=eg(e,Q,T=O,d=T>>31))+K|0,K=p+q|0,K=I>>>0<O>>>0?K+1|0:K,q=(O=eg(B,o,l,h))+I|0,I=p+K|0,I=q>>>0<O>>>0?I+1|0:I,O=eg(f,c,E,n),K=p+I|0,K=(q=O+q|0)>>>0<O>>>0?K+1|0:K,I=(O=eg(t,C,k,z))+q|0,q=p+K|0,I=((K=I)>>>0<O>>>0?q+1|0:q)<<1|K>>>31,O=K<<1,K=I+V|0,K=(q=nA+O|0)>>>0<O>>>0?K+1|0:K,O=q,(I=q+16777216|0)>>>0<16777216&&(K=K+1|0),nA=I,q=I,I=K>>25,K=(33554431&K)<<7|q>>>25,V=I,I=eg(e,Q,k,z),q=p,L=K,T=eg(a,g,T,d),K=p+q|0,K=(I=T+I|0)>>>0<T>>>0?K+1|0:K,T=eg(AA,m,W,y),q=p+K|0,q=(I=T+I|0)>>>0<T>>>0?q+1|0:q,T=eg(D,s,l,h),K=p+q|0,K=(I=T+I|0)>>>0<T>>>0?K+1|0:K,q=eg(f,c,M,v),K=p+K|0,K=(I=q+I|0)>>>0<q>>>0?K+1|0:K,q=(T=eg(t,C,E,n))+I|0,I=p+K|0,K=(K=(I=q>>>0<T>>>0?I+1|0:I)<<1|q>>>31)+V|0,q=K=(I=L+(q<<=1)|0)>>>0<q>>>0?K+1|0:K,T=K=I+33554432|0,V=q=K>>>0<33554432?q+1|0:q,K&=-67108864,i[j+8>>2]=I-K,I=eg(u,w,gA,F),q=p,K=(AA=eg(B,o,E,n))+I|0,I=p+q|0,I=K>>>0<AA>>>0?I+1|0:I,q=(AA=eg(a,g,W,y))+K|0,K=p+I|0,K=q>>>0<AA>>>0?K+1|0:K,I=(AA=eg(e,Q,U,_))+q|0,q=p+K|0,q=I>>>0<AA>>>0?q+1|0:q,AA=eg(t,C,Z,G),K=p+q|0,K=(K=(K=(I=AA+I|0)>>>0<AA>>>0?K+1|0:K)<<1|I>>>31)+(q=X>>26)|0,q=I=(X=(67108863&X)<<6|iA>>>26)+(I<<1)|0,I=K=I>>>0<X>>>0?K+1|0:K,iA=K=q+16777216|0,X=I=K>>>0<16777216?I+1|0:I,I=-33554432&K,i[j+28>>2]=q-I,I=eg(e,Q,CA,Y),K=p,q=eg(a,g,k,z),K=p+K|0,K=(I=q+I|0)>>>0<q>>>0?K+1|0:K,q=eg(W,y,l,h),K=p+K|0,K=(I=q+I|0)>>>0<q>>>0?K+1|0:K,q=(z=eg(f,c,D,s))+I|0,I=p+K|0,I=q>>>0<z>>>0?I+1|0:I,K=(z=eg(t,C,B,o))+q|0,q=p+I|0,I=K,K=(K>>>0<z>>>0?q+1|0:q)<<1|K>>>31,q=I<<1,K=(I=V>>26)+K|0,K=(q=q+(V=(67108863&V)<<6|T>>>26)|0)>>>0<V>>>0?K+1|0:K,CA=q=(I=q)+16777216|0,V=K=q>>>0<16777216?K+1|0:K,K=-33554432&q,i[j+12>>2]=I-K,z=A,I=eg(W,y,u,w),K=p,q=eg(B,o,B,o),K=p+K|0,K=(I=q+I|0)>>>0<q>>>0?K+1|0:K,q=eg(E,n,D,s),K=p+K|0,K=(I=q+I|0)>>>0<q>>>0?K+1|0:K,q=eg(a,g,N,b),K=p+K|0,K=(I=q+I|0)>>>0<q>>>0?K+1|0:K,q=(j=eg(e,Q,Z,G))+I|0,I=p+K|0,I=q>>>0<j>>>0?I+1|0:I,K=(IA=eg(t,C,j=IA,T=j>>31))+q|0,q=p+I|0,A=(I=K)<<1,K=(I=X>>25)+(K=(K>>>0<IA>>>0?q+1|0:q)<<1|K>>>31)|0,K=(q=A+(X=(33554431&X)<<7|iA>>>25)|0)>>>0<X>>>0?K+1|0:K,IA=q=(I=q)+33554432|0,X=K=q>>>0<33554432?K+1|0:K,K=-67108864&q,i[z+32>>2]=I-K,K=V>>25,q=(V=(33554431&V)<<7|CA>>>25)+(H-(I=-67108864&S)|0)|0,I=K+(P-((I>>>0>H>>>0)+R|0)|0)|0,K=I=q>>>0<V>>>0?I+1|0:I,V=I=q+33554432|0,I=((67108863&(K=I>>>0<33554432?K+1|0:K))<<6|I>>>26)+(EA=EA-(-33554432&J)|0)|0,i[z+20>>2]=I,I=-67108864&V,i[z+16>>2]=q-I,I=eg(E,n,W,y),q=p,K=(W=eg(gA,F,M,v))+I|0,I=p+q|0,I=K>>>0<W>>>0?I+1|0:I,q=(W=eg(u,w,U,_))+K|0,K=p+I|0,K=q>>>0<W>>>0?K+1|0:K,I=(W=eg(a,g,Z,G))+q|0,q=p+K|0,q=I>>>0<W>>>0?q+1|0:q,W=eg(e,Q,j,T),K=p+q|0,K=(K=(K=(I=W+I|0)>>>0<W>>>0?K+1|0:K)<<1|I>>>31)+(q=X>>26)|0,K=(I=(X=(67108863&X)<<6|IA>>>26)+(I<<1)|0)>>>0<X>>>0?K+1|0:K,q=I,X=I,I=K,I=(K=q+16777216|0)>>>0<16777216?I+1|0:I,q=-33554432&K,i[z+36>>2]=X-q,V=O-(-33554432&nA)|0,I=(K=eg((33554431&I)<<7|K>>>25,I>>25,19,0))+($-(q=-67108864&QA)|0)|0,q=p+(x-((q>>>0>$>>>0)+BA|0)|0)|0,q=I>>>0<K>>>0?q+1|0:q,K=I,I=q,I=((67108863&(I=(q=K+33554432|0)>>>0<33554432?I+1|0:I))<<6|q>>>26)+V|0,i[z+4>>2]=I,A=-67108864&q,i[z>>2]=K-A}(C=A+120|0,I+80|0),sA(Q=A+40|0,I,E),H(B,Q),sA(Q,g,A),yA(g,g,A),yA(A,B,Q),yA(C,C,g),h=B+48|0}function II(A){var I,g;return(A=(I=i[8943])+(g=A+3&-4)|0)>>>0<=I>>>0&&(0|g)>=1||A>>>0>Wg()<<16>>>0&&!(0|w(0|A))?(i[8960]=48,-1):(i[8943]=A,I)}function gI(A,I){var g;return h=g=h+-64|0,(I-1&255)>>>0>=64&&(OI(),e()),C[g+3|0]=1,C[g+1|0]=0,C[g+2|0]=1,C[0|g]=I,WI(4|g),tI(8|g,0,0),EA(g+16|0,0,48),hA(A,g),h=g- -64|0,0}function BI(A,I,g,B,Q,C,E){var i=0,n=0;i=B,1==(((i=(n=g+63|0)>>>0<63?i+1|0:i)>>>6|0)+(0!=(0|(i=(63&i)<<26|n>>>6)))|0)&(n=0-i|0)>>>0<C>>>0&&(OI(),e()),SI(A,I,g,B,Q,C,E)}function QI(A,I){for(var g=0,B=0,Q=0,C=0;B=(g=Q<<3)+A|0,C=i[(g=I+g|0)>>2],g=i[B+4>>2]^i[g+4>>2],i[B>>2]=i[B>>2]^C,i[B+4>>2]=g,128!=(0|(Q=Q+1|0)););}function CI(A){var I,g;return 95&(1+(32704^A)>>>8^-1)|45&(1+(16321^A)>>>8^-1)|(I=A+65510>>>8&255)&A+65|(g=A+65484>>>8|0)&A+71&(255^I)|A+252&A+65474>>>8&(-1^g)&255}function EI(A){var I,g;return 47&(1+(16320^A)>>>8^-1)|43&(1+(16321^A)>>>8^-1)|(I=A+65510>>>8&255)&A+65|(g=A+65484>>>8|0)&A+71&(255^I)|A+252&A+65474>>>8&(-1^g)&255}function iI(A,I,g,B){var Q=0;Q=-1;A:if(!(g>>>0>64|B-1>>>0>63)){I:{if(!g||!I){if(!gI(A,255&B))break I;break A}if(RA(A,255&B,I,255&g))break A}Q=0}return Q}function nI(A,I){var g,B,Q;h=g=h-144|0,j(g+96|0,I+80|0),_(g+48|0,I,g+96|0),_(g,I+40|0,g+96|0),BA(A,g),B=A,Q=KI(g+48|0)<<7^n[A+31|0],C[B+31|0]=Q,h=g+144|0}function aI(A,I){var g,B=0;if(C[15+(g=h-16|0)|0]=0,I)for(;C[g+15|0]=n[A+B|0]|n[g+15|0],(0|(B=B+1|0))!=(0|I););return n[g+15|0]-1>>>8&1}function rI(A,I,g,B){var Q;return B=I+B|0,B=(Q=A+g|0)>>>0<g>>>0?B+1|0:B,g=eg(A<<1&-2,1&(I=I<<1|A>>>31),g,0),A=p+B|0,p=A=(I=g+Q|0)>>>0<g>>>0?A+1|0:A,I}function oI(A,I,g){var B,Q=0;if(B=g>>>3|0)for(g=0;vA((Q=g<<3)+A|0,i[(Q=I+Q|0)>>2],i[Q+4>>2]),(0|B)!=(0|(g=g+1|0)););}function eI(A,I){var g=0;!function(A,I){I&&((I=i[A>>2])&&fI(i[I+4>>2],i[A+16>>2]<<10),(I=i[A+4>>2])&&fI(I,i[A+20>>2]<<3))}(A,4&I),m(i[A+4>>2]),i[A+4>>2]=0,(I=i[A>>2])&&(g=i[I>>2])&&m(g),m(I),i[A>>2]=0}function tI(A,I,g){C[0|A]=I,C[A+1|0]=I>>>8,C[A+2|0]=I>>>16,C[A+3|0]=I>>>24,C[A+4|0]=g,C[A+5|0]=g>>>8,C[A+6|0]=g>>>16,C[A+7|0]=g>>>24}function fI(A,I){var g;if(i[12+(g=h-16|0)>>2]=A,I)for(A=0;C[i[g+12>>2]+A|0]=0,(0|I)!=(0|(A=A+1|0)););}function cI(A,I){A|=0;var g=0,B=0,Q=0;if(I|=0)for(;B=A+g|0,Q=YI(),C[0|B]=Q,(0|(g=g+1|0))!=(0|I););}function yI(A,I,g,B,Q){var C,E;return A|=0,I|=0,g|=0,B|=0,h=C=(E=h)-128&-64,IA(C,Q|=0),z(C,I,g,B),Z(C,A),h=E,0}function sI(A){var I=0,g=0,B=0;for(I=1;I=n[0|(B=A+g|0)]+I|0,C[0|B]=I,I=I>>>8|0,4!=(0|(g=g+1|0)););}function wI(A,I,g,B,Q,C,E,i){var n,a=0;return h=n=h-32|0,a=-1,jI(n,E,i)||(a=Qg(A,I,g,B,Q,C,n),fI(n,32)),h=n+32|0,a}function hI(A,I,g,B,Q,C,E,i){var n,a=0;return h=n=h-32|0,a=-1,jI(n,E,i)||(a=Cg(A,I,g,B,Q,C,n),fI(n,32)),h=n+32|0,a}function DI(A,I){var g,B,Q;_(A,I,g=I+120|0),_(A+40|0,B=I+40|0,Q=I+80|0),_(A+80|0,Q,g),_(A+120|0,I,B)}function uI(A,I,g,B,Q,C,E){return!B&g>>>0>=16|B?hI(A,I+16|0,I,g-16|0,B-(g>>>0<16)|0,Q,C,E):-1}function pI(A,I){for(var g=0,B=0;C[0|(B=A+g|0)]=n[0|B]^n[I+g|0],8!=(0|(g=g+1|0)););}function lI(A,I,g){var B,Q;h=B=(Q=h)-384&-64,qI(B,0,0,24),sg(B,I,32,0),sg(B,g,32,0),TI(B,A,24),h=Q}function FI(A,I){var g;sA(A,g=I+40|0,I),yA(A+40|0,g,I),SA(A+80|0,I+80|0),_(A+120|0,I+120|0,2224)}function GI(A,I,g,B,Q,C,E){return I-1>>>0>63|E>>>0>64?-1:function(A,I,g,B,Q,C,E){var i,n=0;if(i=n=h,h=n=n-384&-64,!(!A|(B-1&255)>>>0>=64|(Q|C?!I:0)|E>>>0>=65|(E?!g:0)))return E?RA(n,B,g,E):gI(n,B),QA(n,I,Q,C),M(n,A,B),h=i,0;OI(),e()}(A,g,C,255&I,B,Q,255&E)}function kI(A,I,g,B,Q,C,E){return!B&g>>>0>=4294967280|B&&(OI(),e()),wI(A+16|0,A,I,g,B,Q,C,E)}function _I(A,I){var g;_(A,I,g=I+120|0),_(A+40|0,I+40|0,I=I+80|0),_(A+80|0,I,g)}function HI(A){var I;return I=n[0|A]|n[A+1|0]<<8,A=n[A+2|0],p=A>>>16|0,I|A<<16}function YI(){var A,I;return h=A=h-16|0,C[A+15|0]=0,I=0|f(1024,A+15|0,0),h=A+16|0,0|I}function bI(A,I,g,B,Q){var E;return h=E=h-416|0,function(A,I){var g,B=0,Q=0;for(h=g=h-192|0,MI(A),EA(g- -64|0,54,128),C[g+64|0]=54^n[0|I],B=1;C[0|(Q=(g- -64|0)+B|0)]=n[0|Q]^n[I+B|0],32!=(0|(B=B+1|0)););for(V(A,g- -64|0,128,0),MI(A=A+208|0),EA(g- -64|0,92,128),C[g+64|0]=92^n[0|I],B=1;C[0|(Q=(g- -64|0)+B|0)]=n[0|Q]^n[I+B|0],32!=(0|(B=B+1|0)););V(A,g- -64|0,128,0),fI(g- -64|0,128),fI(g,64),h=g+192|0}(E,Q),V(E,I,g,B),function(A,I){var g,B=0;h=g=h+-64|0,function(A,I){var g;h=g=h+-64|0,UI(A,g),V(A=A+208|0,g,64,0),UI(A,I),fI(g,64),h=g- -64|0}(A,g),B=i[g+28>>2],A=i[g+24>>2],C[I+24|0]=A,C[I+25|0]=A>>>8,C[I+26|0]=A>>>16,C[I+27|0]=A>>>24,C[I+28|0]=B,C[I+29|0]=B>>>8,C[I+30|0]=B>>>16,C[I+31|0]=B>>>24,B=i[g+20>>2],A=i[g+16>>2],C[I+16|0]=A,C[I+17|0]=A>>>8,C[I+18|0]=A>>>16,C[I+19|0]=A>>>24,C[I+20|0]=B,C[I+21|0]=B>>>8,C[I+22|0]=B>>>16,C[I+23|0]=B>>>24,B=i[g+12>>2],A=i[g+8>>2],C[I+8|0]=A,C[I+9|0]=A>>>8,C[I+10|0]=A>>>16,C[I+11|0]=A>>>24,C[I+12|0]=B,C[I+13|0]=B>>>8,C[I+14|0]=B>>>16,C[I+15|0]=B>>>24,B=i[g+4>>2],A=i[g>>2],C[0|I]=A,C[I+1|0]=A>>>8,C[I+2|0]=A>>>16,C[I+3|0]=A>>>24,C[I+4|0]=B,C[I+5|0]=B>>>8,C[I+6|0]=B>>>16,C[I+7|0]=B>>>24,h=g- -64|0}(E,A),h=E+416|0,0}function mI(A,I,g,B){var Q;return h=Q=h-208|0,MI(Q),V(Q,I,g,B),UI(Q,A),h=Q+208|0,0}function vI(A,I){var g=0;return(-1>>>(g=31&I)&A)<<g|((g=A)&-1<<(A=0-I&31))>>>A}function UI(A,I){var g;h=g=h-704|0,function(A,I){var g,B=0;(g=i[A+72>>2]>>>3&127)>>>0<=111?X(80+(A+g|0)|0,35424,112-g|0):(X((B=A+80|0)+g|0,35424,128-g|0),F(A,B,I,I+640|0),EA(B,0,112)),oI(A+192|0,A- -64|0,16),F(A,A+80|0,I,I+640|0)}(A,g),oI(I,A,64),fI(g,704),fI(A,208),h=g+704|0}function SI(A,I,g,B,Q,C,E){1==(0|B)|B>>>0>1&&(OI(),e()),Vg[i[8957]](A,I,g,B,Q,C,E)}function NI(A,I,g,B,Q,C){1==(0|B)|B>>>0>1&&(OI(),e()),Vg[i[8956]](A,I,g,B,Q,1,0,C)}function MI(A){i[A+64>>2]=0,i[A+68>>2]=0,i[A+72>>2]=0,i[A+76>>2]=0,X(A,34720,64)}function dI(A,I,g){return g>>>0>=256&&(t(2016,2036,107,2089),e()),M(A,I,255&g)}function PI(){var A;h=A=h-16|0,C[A+15|0]=0,f(1062,A+15|0,0),h=A+16|0}function RI(A){var I;return h=I=h-32|0,BA(I,A),A=aI(I,32),h=I+32|0,A}function JI(A,I){var g;h=g=h-128|0,function(A,I){SA(A,I),SA(A+40|0,I+40|0),SA(A+80|0,I+80|0)}(g+8|0,I),AI(A,g+8|0),h=g+128|0}function xI(A,I){C[0|A]=I,C[A+1|0]=I>>>8,C[A+2|0]=I>>>16,C[A+3|0]=I>>>24}function LI(A,I,g){eA(A,I,g),eA(A+40|0,I+40|0,g),eA(A+80|0,I+80|0,g)}function KI(A){var I;return h=I=h-32|0,BA(I,A),h=I+32|0,1&C[0|I]}function qI(A,I,g,B){return 0|iI(A|=0,I|=0,g|=0,B|=0)}function XI(A){C[A+32|0]=1,C[A+33|0]=0,C[A+34|0]=0,C[A+35|0]=0}function VI(A){i[A>>2]=0,i[A+4>>2]=0,i[A+8>>2]=0,i[A+12>>2]=0}function WI(A){C[0|A]=0,C[A+1|0]=0,C[A+2|0]=0,C[A+3|0]=0}function TI(A,I,g){return 0|dI(A|=0,I|=0,g|=0)}function jI(A,I,g){return 0|function(A,I,g){var B,Q=0;return h=B=h-32|0,Q=-1,$A(B,g,I)||(Q=K(A,35552,B)),h=B+32|0,Q}(A|=0,I|=0,g|=0)}function ZI(A,I,g){return 0|$A(A|=0,I|=0,g|=0)}function OI(){var A;(A=i[9105])&&Vg[0|A](),c(),e()}function zI(A){Ug(A),wg(A+40|0),wg(A+80|0),Ug(A+120|0)}function $I(A,I,g,B,Q,C){Vg[i[8953]](A,I,g,B,Q,0,0,C)}function Ag(A,I,g,B,Q,C){Vg[i[8953]](A,I,g,B,Q,1,0,C)}function Ig(A,I){return A|=0,cI(I|=0,32),0|cg(A,I)}function gg(A,I){return A=function(A,I){var g=0,B=0;A:{if(B=255&I){if(3&A)for(;;){if(!(g=n[0|A])|(0|g)==(255&I))break A;if(!(3&(A=A+1|0)))break}I:if(!((-1^(g=i[A>>2]))&g-16843009&-2139062144))for(B=r(B,16843009);;){if((-1^(g^=B))&g-16843009&-2139062144)break I;if(g=i[A+4>>2],A=A+4|0,g-16843009&(-1^g)&-2139062144)break}for(;(B=n[0|(g=A)])&&(A=g+1|0,(0|B)!=(255&I)););return g}return YA(A)+A|0}return A}(A,I),n[0|A]==(255&I)?A:0}function Bg(A,I,g,B,Q,C){return q(A,I,g,B,Q,C,0),0}function Qg(A,I,g,B,Q,C,E){return nA(A,I,g,B,Q,C,E)}function Cg(A,I,g,B,Q,C,E){return rA(A,I,g,B,Q,C,E)}function Eg(A,I,g,B,Q,C,E){return GI(A,I,g,B,Q,C,E)}function ig(A,I){MI(A),I&&V(A,35728,34,0)}function ng(A,I,g,B,Q){return lA(A,I,g,B,Q,0)}function ag(A,I){return 0|cg(A|=0,I|=0)}function rg(A,I,g,B){Vg[i[8955]](A,I,0,g,B)}function og(A,I,g){Vg[i[8954]](A,64,0,I,g)}function eg(A,I,g,B){return function(A,I,g,B){var Q,C,E,i,n=0,a=0;return i=r(n=g>>>16|0,a=A>>>16|0),n=(65535&(a=((E=r(Q=65535&g,C=65535&A))>>>16|0)+r(a,Q)|0))+r(n,C)|0,A=(r(I,g)+i|0)+r(A,B)+(a>>>16)+(n>>>16)|0,p=A,65535&E|n<<16}(A,I,g,B)}function tg(A,I){return(255&(A^I))-1>>>31|0}function fg(A,I,g){!function(A,I,g){var B,Q;h=B=h-128|0,wg(A),wg(A+40|0),Ug(A+80|0),LI(A,I,tg(g=g-((0-(Q=(128&g)>>>7|0)&g)<<1)<<24>>24,1)),LI(A,I+120|0,tg(g,2)),LI(A,I+240|0,tg(g,3)),LI(A,I+360|0,tg(g,4)),LI(A,I+480|0,tg(g,5)),LI(A,I+600|0,tg(g,6)),LI(A,I+720|0,tg(g,7)),LI(A,I+840|0,tg(g,8)),SA(B+8|0,A+40|0),SA(B+48|0,A),mA(B+88|0,A+80|0),LI(A,B+8|0,Q),h=B+128|0}(A,r(I,960)+3488|0,g)}function cg(A,I){return 0|Vg[i[8951]](A,I)}function yg(A,I,g,B){Vg[i[8948]](A,I,g,B)}function sg(A,I,g,B){return hg(A,I,g,B)}function wg(A){i[A>>2]=1,EA(A+4|0,0,36)}function hg(A,I,g,B){return QA(A,I,g,B)}function Dg(A,I,g){return function(A,I,g){var B=0,Q=0,C=0,E=0;return B=31&(C=E=63&g),C>>>0>=32?B=-1>>>B|0:(Q=-1>>>B|0,B=(1<<B)-1<<32-B|-1>>>B),C=B&A,B=I&Q,Q=31&E,E>>>0>=32?(B=C<<Q,E=0):(B=(1<<Q)-1&C>>>32-Q|B<<Q,E=C<<Q),C=B,g=31&(B=Q=0-g&63),B>>>0>=32?(B=-1<<g,g=0):(B=(1<<g)-1&-1>>>32-g|-1<<g,g=-1<<g),A&=g,B&=I,I=31&Q,Q>>>0>=32?(g=0,A=B>>>I|0):(g=B>>>I|0,A=((1<<I)-1&B)<<32-I|A>>>I),p=g|C,A|E}(A,I,g)}function ug(A,I,g){return function(A,I,g){var B=0,Q=0,C=0,E=0,i=0;return B=31&(E=63&g),E>>>0>=32?(Q=-1<<B,i=0):(Q=(1<<B)-1&-1>>>32-B|-1<<B,i=-1<<B),i&=A,B=I&Q,C=31&E,E>>>0>=32?(Q=0,E=B>>>C|0):(Q=B>>>C|0,E=((1<<C)-1&B)<<32-C|i>>>C),i=Q,C=31&(B=0-g&63),B>>>0>=32?(Q=0,g=-1>>>C|0):(Q=-1>>>C|0,g=(1<<C)-1<<32-C|-1>>>C),A&=g,I&=Q,Q=31&B,B>>>0>=32?(g=A<<Q,A=0):(g=(1<<Q)-1&A>>>32-Q|I<<Q,A<<=Q),p=g|i,A|E}(A,I,g)}function pg(A){1!=(-7&A)&&(OI(),e())}function lg(A,I){Vg[i[8947]](A,I)}function Fg(A,I){Vg[i[8949]](A,I)}function Gg(A,I){return jA(A,I,32)}function kg(A,I){return jA(A,I,16)}function _g(A,I,g,B){rg(A,I,g,B)}function Hg(A,I){return vI(A,I)}function Yg(A,I){X(A,I,1024)}function bg(A){cI(A|=0,32)}function mg(A,I,g){!function(A,I,g){var B,Q,C,E,i,a,r,o,e,t,f,c,y=0,s=0,w=0,h=0,D=0,u=0,p=0,l=0,F=0,G=0,k=0,_=0,H=0,Y=0,b=0,m=0,v=0,U=0,S=0,N=0,M=0;for(B=n[0|g]|n[g+1|0]<<8|n[g+2|0]<<16|n[g+3|0]<<24,Q=n[g+4|0]|n[g+5|0]<<8|n[g+6|0]<<16|n[g+7|0]<<24,C=n[g+8|0]|n[g+9|0]<<8|n[g+10|0]<<16|n[g+11|0]<<24,E=n[g+12|0]|n[g+13|0]<<8|n[g+14|0]<<16|n[g+15|0]<<24,i=n[g+16|0]|n[g+17|0]<<8|n[g+18|0]<<16|n[g+19|0]<<24,a=n[g+20|0]|n[g+21|0]<<8|n[g+22|0]<<16|n[g+23|0]<<24,r=n[g+24|0]|n[g+25|0]<<8|n[g+26|0]<<16|n[g+27|0]<<24,o=n[g+28|0]|n[g+29|0]<<8|n[g+30|0]<<16|n[g+31|0]<<24,g=1634760805,h=B,D=Q,b=C,u=E,H=857760878,p=e=n[0|I]|n[I+1|0]<<8|n[I+2|0]<<16|n[I+3|0]<<24,l=t=n[I+4|0]|n[I+5|0]<<8|n[I+6|0]<<16|n[I+7|0]<<24,F=f=n[I+8|0]|n[I+9|0]<<8|n[I+10|0]<<16|n[I+11|0]<<24,_=c=n[I+12|0]|n[I+13|0]<<8|n[I+14|0]<<16|n[I+15|0]<<24,I=2036477234,s=i,G=1797285236,k=o,w=r,y=a;u=Hg(g+y|0,7)^u,F=Hg(u+g|0,9)^F,m=Hg(F+u|0,13)^y,S=Hg(F+m|0,18),y=Hg(h+H|0,7)^_,Y=Hg(y+H|0,9)^w,h=Hg(y+Y|0,13)^h,_=Hg(Y+h|0,18),k=Hg(I+p|0,7)^k,D=Hg(k+I|0,9)^D,p=Hg(D+k|0,13)^p,N=Hg(D+p|0,18),w=Hg(s+G|0,7)^b,l=Hg(w+G|0,9)^l,v=Hg(l+w|0,13)^s,M=Hg(l+v|0,18),h=Hg((g^=S)+w|0,7)^h,D=Hg(h+g|0,9)^D,b=Hg(h+D|0,13)^w,g=Hg(D+b|0,18)^g,p=Hg((s=H^_)+u|0,7)^p,l=Hg(p+s|0,9)^l,u=Hg(l+p|0,13)^u,H=Hg(l+u|0,18)^s,s=Hg((I^=N)+y|0,7)^v,F=Hg(s+I|0,9)^F,_=Hg(F+s|0,13)^y,I=Hg(F+_|0,18)^I,y=Hg((G^=M)+k|0,7)^m,w=Hg(y+G|0,9)^Y,k=Hg(y+w|0,13)^k,G=Hg(w+k|0,18)^G,Y=U>>>0<18,U=U+2|0,Y;);xI(A,g+1634760805|0),xI(A+4|0,h+B|0),xI(A+8|0,D+Q|0),xI(A+12|0,b+C|0),xI(A+16|0,u+E|0),xI(A+20|0,H+857760878|0),xI(A+24|0,p+e|0),xI(A+28|0,l+t|0),xI(A+32|0,F+f|0),xI(A+36|0,_+c|0),xI(A+40|0,I+2036477234|0),xI(A+44|0,s+i|0),xI(A+48|0,y+a|0),xI(A+52|0,w+r|0),xI(A+56|0,k+o|0),xI(A+60|0,G+1797285236|0)}(A,I,g)}function vg(A){EA(A,0,1024)}function Ug(A){EA(A,0,40)}function Sg(){return 16}function Ng(){return 32}function Mg(){return 24}function dg(){return-17}function Pg(){return 64}function Rg(){return 1}function Jg(){return 2}function xg(){return 8}function Lg(){return 0}function Kg(){return-1}function qg(){return 3}Q(I=n,1024,\"InsgcmV0dXJuIE1vZHVsZS5nZXRSYW5kb21WYWx1ZSgpOyB9IgB7IGlmIChNb2R1bGUuZ2V0UmFuZG9tVmFsdWUgPT09IHVuZGVmaW5lZCkgeyB0cnkgeyB2YXIgd2luZG93XyA9ICdvYmplY3QnID09PSB0eXBlb2Ygd2luZG93ID8gd2luZG93IDogc2VsZjsgdmFyIGNyeXB0b18gPSB0eXBlb2Ygd2luZG93Xy5jcnlwdG8gIT09ICd1bmRlZmluZWQnID8gd2luZG93Xy5jcnlwdG8gOiB3aW5kb3dfLm1zQ3J5cHRvOyB2YXIgcmFuZG9tVmFsdWVzU3RhbmRhcmQgPSBmdW5jdGlvbigpIHsgdmFyIGJ1ZiA9IG5ldyBVaW50MzJBcnJheSgxKTsgY3J5cHRvXy5nZXRSYW5kb21WYWx1ZXMoYnVmKTsgcmV0dXJuIGJ1ZlswXSA+Pj4gMDsgfTsgcmFuZG9tVmFsdWVzU3RhbmRhcmQoKTsgTW9kdWxlLmdldFJhbmRvbVZhbHVlID0gcmFuZG9tVmFsdWVzU3RhbmRhcmQ7IH0gY2F0Y2ggKGUpIHsgdHJ5IHsgdmFyIGNyeXB0byA9IHJlcXVpcmUoJ2NyeXB0bycpOyB2YXIgcmFuZG9tVmFsdWVOb2RlSlMgPSBmdW5jdGlvbigpIHsgdmFyIGJ1ZiA9IGNyeXB0b1sncmFuZG9tQnl0ZXMnXSg0KTsgcmV0dXJuIChidWZbMF0gPDwgMjQgfCBidWZbMV0gPDwgMTYgfCBidWZbMl0gPDwgOCB8IGJ1ZlszXSkgPj4+IDA7IH07IHJhbmRvbVZhbHVlTm9kZUpTKCk7IE1vZHVsZS5nZXRSYW5kb21WYWx1ZSA9IHJhbmRvbVZhbHVlTm9kZUpTOyB9IGNhdGNoIChlKSB7IHRocm93ICdObyBzZWN1cmUgcmFuZG9tIG51bWJlciBnZW5lcmF0b3IgZm91bmQnOyB9IH0gfSB9AExpYnNvZGl1bURSR2J1Zl9sZW4gPD0gU0laRV9NQVgAcmFuZG9tYnl0ZXMvcmFuZG9tYnl0ZXMuYwByYW5kb21ieXRlcwBTLT5idWZsZW4gPD0gQkxBS0UyQl9CTE9DS0JZVEVTAGNyeXB0b19nZW5lcmljaGFzaC9ibGFrZTJiL3JlZi9ibGFrZTJiLXJlZi5jAGJsYWtlMmJfZmluYWwAAAAAAAAAAAjJvPNn5glqO6fKhIWuZ7sr+JT+cvNuPPE2HV869U+l0YLmrX9SDlEfbD4rjGgFm2u9Qfur2YMfeSF+ExnN4FtvdXRsZW4gPD0gVUlOVDhfTUFYAGNyeXB0b19nZW5lcmljaGFzaC9ibGFrZTJiL3JlZi9nZW5lcmljaGFzaF9ibGFrZTJiLmMAY3J5cHRvX2dlbmVyaWNoYXNoX2JsYWtlMmJfZmluYWwAAAAAAAAAtnhZ/4Vy0wC9bhX/DwpqACnAAQCY6Hn/vDyg/5lxzv8At+L+tA1I/wAAAAAAAAAAsKAO/tPJhv+eGI8Af2k1AGAMvQCn1/v/n0yA/mpl4f8e/AQAkgyu\"),Q(I,2224,\"WfGy/grlpv973Sr+HhTUAFKAAwAw0fMAd3lA/zLjnP8AbsUBZxuQ\"),Q(I,2272,\"hTuMAb3xJP/4JcMBYNw3ALdMPv/DQj0AMkykAeGkTP9MPaP/dT4fAFGRQP92QQ4AonPW/waKLgB85vT/CoqPADQawgC49EwAgY8pAb70E/97qnr/YoFEAHnVkwBWZR7/oWebAIxZQ//v5b4BQwu1AMbwif7uRbz/Q5fuABMqbP/lVXEBMkSH/xFqCQAyZwH/UAGoASOYHv8QqLkBOFno/2XS/AAp+kcAzKpP/w4u7/9QTe8AvdZL/xGN+QAmUEz/vlV1AFbkqgCc2NABw8+k/5ZCTP+v4RD/jVBiAUzb8gDGonIALtqYAJsr8f6boGj/M7ulAAIRrwBCVKAB9zoeACNBNf5F7L8ALYb1AaN73QAgbhT/NBelALrWRwDpsGAA8u82ATlZigBTAFT/iKBkAFyOeP5ofL4AtbE+//opVQCYgioBYPz2AJeXP/7vhT4AIDicAC2nvf+OhbMBg1bTALuzlv76qg7/0qNOACU0lwBjTRoA7pzV/9XA0QFJLlQAFEEpATbOTwDJg5L+qm8Y/7EhMv6rJsv/Tvd0ANHdmQCFgLIBOiwZAMknOwG9E/wAMeXSAXW7dQC1s7gBAHLbADBekwD1KTgAfQ3M/vStdwAs3SD+VOoUAPmgxgHsfur/L2Oo/qrimf9ms9gA4o16/3pCmf629YYA4+QZAdY56//YrTj/tefSAHeAnf+BX4j/bn4zAAKpt/8HgmL+RbBe/3QE4wHZ8pH/yq0fAWkBJ/8ur0UA5C86/9fgRf7POEX/EP6L/xfP1P/KFH7/X9Vg/wmwIQDIBc//8SqA/iMhwP/45cQBgRF4APtnl/8HNHD/jDhC/yji9f/ZRiX+rNYJ/0hDhgGSwNb/LCZwAES4S//OWvsAleuNALWqOgB09O8AXJ0CAGatYgDpiWABfzHLAAWblAAXlAn/03oMACKGGv/bzIgAhggp/+BTK/5VGfcAbX8A/qmIMADud9v/563VAM4S/v4Iugf/fgkHAW8qSABvNOz+YD+NAJO/f/7NTsD/DmrtAbvbTACv87v+aVmtAFUZWQGi85QAAnbR/iGeCQCLoy7/XUYoAGwqjv5v/I7/m9+QADPlp/9J/Jv/XnQM/5ig2v+c7iX/s+rP/8UAs/+apI0A4cRoAAojGf7R1PL/Yf3e/rhl5QDeEn8BpIiH/x7PjP6SYfMAgcAa/slUIf9vCk7/k1Gy/wQEGACh7tf/Bo0hADXXDv8ptdD/54udALPL3f//uXEAveKs/3FC1v/KPi3/ZkAI/06uEP6FdUT/\"),Q(I,3264,\"AQ==\"),Q(I,3296,\"JuiVj8KyJ7BFw/SJ8u+Y8NXfrAXTxjM5sTgCiG1T/AXHF2pwPU3YT7o8C3YNEGcPKiBT+iw5zMZOx/13kqwDeuz///////////////////////////////////////9/7f///////////////////////////////////////3/u////////////////////////////////////////f+3T9VwaYxJY1pz3ot753hQ=\"),Q(I,3487,\"\"),Q(I,34460,\"AQ==\"),Q(I,34496,\"AQ==\"),Q(I,34528,\"4Ot6fDtBuK4WVuP68Z/EatoJjeucMrH9hmIFFl9JuABfnJW8o1CMJLHQsVWcg+9bBERcxFgcjobYIk7d0J8RV+z///////////////////////////////////////9/7f///////////////////////////////////////3/u////////////////////////////////////////fw==\"),Q(I,34720,\"CMm882fmCWo7p8qEha5nuyv4lP5y82488TYdXzr1T6XRguatf1IOUR9sPiuMaAWba71B+6vZgx95IX4TGc3gWyKuKNeYL4pCzWXvI5FEN3EvO03sz/vAtbzbiYGl27XpOLVI81vCVjkZ0AW28RHxWZtPGa+kgj+SGIFt2tVeHKtCAgOjmKoH2L5vcEUBW4MSjLLkTr6FMSTitP/Vw30MVW+Je/J0Xb5ysZYWO/6x3oA1Esclpwbcm5Qmac908ZvB0krxnsFpm+TjJU84hke+77XVjIvGncEPZZysd8yhDCR1AitZbyzpLYPkpm6qhHRK1PtBvdypsFy1UxGD2oj5dqvfZu5SUT6YEDK0LW3GMag/IfuYyCcDsOQO777Hf1m/wo+oPfML4MYlpwqTR5Gn1W+CA+BRY8oGcG4OCmcpKRT8L9JGhQq3JybJJlw4IRsu7SrEWvxtLE3fs5WdEw04U95jr4tUcwplqLJ3PLsKanbmru1HLsnCgTs1ghSFLHKSZAPxTKHov6IBMEK8S2YaqJGX+NBwi0vCML5UBqNRbMcYUu/WGeiS0RCpZVUkBpnWKiBxV4U1DvS40bsycKBqEMjQ0rgWwaQZU6tBUQhsNx6Z647fTHdIJ6hIm+G1vLA0Y1rJxbMMHDnLikHjSqrYTnPjY3dPypxbo7iy1vNvLmj8su9d7oKPdGAvF0NvY6V4cqvwoRR4yITsOWQaCALHjCgeYyP6/76Q6b2C3utsUKQVecay96P5vitTcuPyeHHGnGEm6s4+J8oHwsAhx7iG0R7r4M3WfdrqeNFu7n9PffW6bxdyqmfwBqaYyKLFfWMKrg35vgSYPxEbRxwTNQtxG4R9BCP1d9sokyTHQHuryjK8vskVCr6ePEwNEJzEZx1DtkI+y77UxUwqfmX8nCl/Wez61jqrb8tfF1hHSowZRGyA\"),Q(I,35568,\"YjY0X3BvcyA8PSBiNjRfbGVuAHNvZGl1bS9jb2RlY3MuYwBzb2RpdW1fYmluMmJhc2U2NAAkYXJnb24yaWQAJGFyZ29uMmkAJHY9ACRtPQAsdD0ALHA9ACRhcmdvbjJpZCR2PQAkYXJnb24yaSR2PQAkYXJnb24yaWQkACRhcmdvbjJpJA==\"),Q(I,35728,\"U2lnRWQyNTUxOSBubyBFZDI1NTE5IGNvbGxpc2lvbnMBADEuMC4xOA==\"),Q(I,35772,\"UI5QAABAAAABAAAAAgAAAAMAAAAEAAAABQAAAAYAAAAHAAAACAAAAAkAAAAKAAAACwAAAAwAAAAN\");var Xg,Vg=((Xg=[null,yI,function(A,I,g,B,Q){var C;return A|=0,h=C=h-16|0,yI(C,I|=0,g|=0,B|=0,Q|=0),A=kg(A,C),h=C+16|0,0|A},function(A,I){return IA(A|=0,I|=0),0},function(A,I,g,B){return z(A|=0,I|=0,g|=0,B|=0),0},function(A,I){return Z(A|=0,I|=0),0},function(A,I,g){A|=0,I|=0;var B,Q=0,E=0;if(h=B=h-336|0,Q=-1,!function(A){var I,g=0,B=0,Q=0,E=0;for(C[11+(I=h-16|0)|0]=0,C[I+12|0]=0,C[I+13|0]=0,C[I+14|0]=0,i[I+8>>2]=0;;){for(Q=n[A+B|0],g=0;C[0|(E=(I+8|0)+g|0)]=n[0|E]|Q^n[(34464+(g<<5)|0)+B|0],7!=(0|(g=g+1|0)););if(31==(0|(B=B+1|0)))break}for(B=127&n[A+31|0],A=0,g=0;C[0|(Q=(I+8|0)+g|0)]=n[0|Q]|B^n[34495+(g<<5)|0],7!=(0|(g=g+1|0)););for(g=0;g=n[(I+8|0)+A|0]-1|g,7!=(0|(A=A+1|0)););return g>>>8&1}(g|=0)){for(Q=0;C[A+Q|0]=n[I+Q|0],32!=(0|(Q=Q+1|0)););for(C[0|A]=248&n[0|A],C[A+31|0]=63&n[A+31|0]|64,d(B+288|0,g),wg(B+240|0),Ug(B+192|0),SA(B+144|0,B+288|0),wg(B+96|0),g=254,I=0;Q=I,E=g,AA(B+240|0,B+144|0,Q^=I=n[(g>>>3|0)+A|0]>>>(7&g)&1),AA(B+192|0,B+96|0,Q),g=g-1|0,yA(B+48|0,B+144|0,B+96|0),yA(B,B+240|0,B+192|0),sA(B+240|0,B+240|0,B+192|0),sA(B+192|0,B+144|0,B+96|0),_(B+96|0,B+48|0,B+240|0),_(B+192|0,B+192|0,B),H(B+48|0,B),H(B,B+240|0),sA(B+144|0,B+96|0,B+192|0),yA(B+192|0,B+96|0,B+192|0),_(B+240|0,B,B+48|0),yA(B,B,B+48|0),H(B+192|0,B+192|0),P(B+96|0,B),H(B+144|0,B+144|0),sA(B+48|0,B+48|0,B+96|0),_(B+96|0,B+288|0,B+192|0),_(B+192|0,B,B+48|0),E;);AA(B+240|0,B+144|0,I),AA(B+192|0,B+96|0,I),j(B+192|0,B+192|0),_(B+240|0,B+240|0,B+192|0),BA(A,B+240|0),Q=0}return h=B+336|0,0|Q},function(A,I){A|=0,I|=0;var g,B=0;for(h=g=h-208|0;C[A+B|0]=n[I+B|0],32!=(0|(B=B+1|0)););return C[0|A]=248&n[0|A],C[A+31|0]=63&n[A+31|0]|64,CA(g+48|0,A),function(A,I,g){var B;h=B=h-96|0,sA(B+48|0,g,I),yA(B,g,I),j(B,B),_(A,B+48|0,B),h=B+96|0}(g,g+88|0,g+128|0),BA(A,g),h=g+208|0,0},function(A,I,g,B,Q){A|=0,B|=0,Q|=0;var E,a=0;if(h=E=h-112|0,(I|=0)|(g|=0)){a=n[Q+28|0]|n[Q+29|0]<<8|n[Q+30|0]<<16|n[Q+31|0]<<24,i[E+24>>2]=n[Q+24|0]|n[Q+25|0]<<8|n[Q+26|0]<<16|n[Q+27|0]<<24,i[E+28>>2]=a,a=n[Q+20|0]|n[Q+21|0]<<8|n[Q+22|0]<<16|n[Q+23|0]<<24,i[E+16>>2]=n[Q+16|0]|n[Q+17|0]<<8|n[Q+18|0]<<16|n[Q+19|0]<<24,i[E+20>>2]=a,a=n[Q+4|0]|n[Q+5|0]<<8|n[Q+6|0]<<16|n[Q+7|0]<<24,i[E>>2]=n[0|Q]|n[Q+1|0]<<8|n[Q+2|0]<<16|n[Q+3|0]<<24,i[E+4>>2]=a,a=n[Q+12|0]|n[Q+13|0]<<8|n[Q+14|0]<<16|n[Q+15|0]<<24,i[E+8>>2]=n[Q+8|0]|n[Q+9|0]<<8|n[Q+10|0]<<16|n[Q+11|0]<<24,i[E+12>>2]=a,Q=n[0|B]|n[B+1|0]<<8|n[B+2|0]<<16|n[B+3|0]<<24,B=n[B+4|0]|n[B+5|0]<<8|n[B+6|0]<<16|n[B+7|0]<<24,i[E+104>>2]=0,i[E+108>>2]=0,i[E+96>>2]=Q,i[E+100>>2]=B;A:{if(!g&I>>>0>=64|g){for(;;){for(mg(A,E+96|0,E),Q=8,B=1;B=n[0|(a=(E+96|0)+Q|0)]+B|0,C[0|a]=B,B=B>>>8|0,16!=(0|(Q=Q+1|0)););if(A=A- -64|0,g=g-1|0,!(!(g=(I=I+-64|0)>>>0<4294967232?g+1|0:g)&I>>>0>63|g))break}if(!(I|g))break A}for(Q=0,mg(E+32|0,E+96|0,E);C[A+Q|0]=n[(E+32|0)+Q|0],(0|I)!=(0|(Q=Q+1|0)););}fI(E+32|0,64),fI(E,32)}return h=E+112|0,0},function(A,I,g,B,Q,E,a,r){A|=0,I|=0,Q|=0,E|=0,a|=0,r|=0;var o,e=0,t=0;if(h=o=h-112|0,(g|=0)|(B|=0)){for(e=n[r+28|0]|n[r+29|0]<<8|n[r+30|0]<<16|n[r+31|0]<<24,i[o+24>>2]=n[r+24|0]|n[r+25|0]<<8|n[r+26|0]<<16|n[r+27|0]<<24,i[o+28>>2]=e,e=n[r+20|0]|n[r+21|0]<<8|n[r+22|0]<<16|n[r+23|0]<<24,i[o+16>>2]=n[r+16|0]|n[r+17|0]<<8|n[r+18|0]<<16|n[r+19|0]<<24,i[o+20>>2]=e,e=n[r+4|0]|n[r+5|0]<<8|n[r+6|0]<<16|n[r+7|0]<<24,i[o>>2]=n[0|r]|n[r+1|0]<<8|n[r+2|0]<<16|n[r+3|0]<<24,i[o+4>>2]=e,e=8,t=n[r+12|0]|n[r+13|0]<<8|n[r+14|0]<<16|n[r+15|0]<<24,i[o+8>>2]=n[r+8|0]|n[r+9|0]<<8|n[r+10|0]<<16|n[r+11|0]<<24,i[o+12>>2]=t,r=n[Q+4|0]|n[Q+5|0]<<8|n[Q+6|0]<<16|n[Q+7|0]<<24,i[o+96>>2]=n[0|Q]|n[Q+1|0]<<8|n[Q+2|0]<<16|n[Q+3|0]<<24,i[o+100>>2]=r;C[(o+96|0)+e|0]=E,E=(255&a)<<24|E>>>8,a=a>>>8|0,16!=(0|(e=e+1|0)););if(!B&g>>>0>63|B)for(;;){for(e=0,mg(o+32|0,o+96|0,o);C[A+e|0]=n[(o+32|0)+e|0]^n[I+e|0],r=1,64!=(0|(e=e+1|0)););for(e=8;Q=n[0|(E=(o+96|0)+e|0)]+r|0,C[0|E]=Q,r=Q>>>8|0,16!=(0|(e=e+1|0)););if(I=I- -64|0,A=A- -64|0,B=B-1|0,!(!(B=(g=g+-64|0)>>>0<4294967232?B+1|0:B)&g>>>0>63|B))break}if(g|B)for(e=0,mg(o+32|0,o+96|0,o);C[A+e|0]=n[(o+32|0)+e|0]^n[I+e|0],(0|g)!=(0|(e=e+1|0)););fI(o+32|0,64),fI(o,32)}return h=o+112|0,0},function(A,I,g,B,Q){var C;return A|=0,B|=0,h=C=h+-64|0,(I|=0)|(g|=0)&&(aA(C,Q|=0),UA(C,B,0),U(C,A=EA(A,0,I),A,I,g),fI(C,64)),h=C- -64|0,0},function(A,I,g,B,Q){var C;return A|=0,B|=0,h=C=h+-64|0,(I|=0)|(g|=0)&&(aA(C,Q|=0),JA(C,B,0),U(C,A=EA(A,0,I),A,I,g),fI(C,64)),h=C- -64|0,0},function(A,I,g,B,Q,C,E,i){var n;return A|=0,I|=0,Q|=0,E|=0,i|=0,h=n=h-80|0,(g|=0)|(B|=0)&&(xI(n+8|0,C|=0),xI(n+12|0,E),aA(n+16|0,i),UA(n+16|0,Q,n+8|0),U(n+16|0,I,A,g,B),fI(n+16|0,64)),h=n+80|0,0},function(A,I,g,B,Q,C,E){var i;return A|=0,I|=0,Q|=0,E|=0,h=i=h-80|0,(g|=0)|(B|=0)&&(xI(i+12|0,C|=0),aA(i+16|0,E),JA(i+16|0,Q,i+12|0),U(i+16|0,I,A,g,B),fI(i+16|0,64)),h=i+80|0,0}]).grow=function(A){var I=this.length;return this.length=this.length+A,I},Xg.set=function(A,I){this[A]=I},Xg.get=function(A){return this[A]},Xg);function Wg(){return B.byteLength/65536|0}return{h:Vg,i:function(){},j:function(A,I,g,B,Q,C,E,i,n,a,r,o){return 0|PA(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0,i|=0,n|=0,r|=0,o|=0)},k:function(A,I,g,B,Q,C,E,n,a,r,o){return 0|function(A,I,g,B,Q,C,E,n,a,r){if(!Q&B>>>0<4294967280)return PA(A,A+B|0,0,g,B,Q,C,E,n,a,r),I&&(Q=(A=B+16|0)>>>0<16?Q+1|0:Q,i[I>>2]=A,i[I+4>>2]=Q),0;OI(),e()}(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0,n|=0,r|=0,o|=0)},l:function(A,I,g,B,Q,C,E,i,n,a,r,o){return 0|_A(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0,i|=0,n|=0,r|=0,o|=0)},m:function(A,I,g,B,Q,C,E,n,a,r,o){return 0|function(A,I,g,B,Q,C,E,n,a,r){if(!Q&B>>>0<4294967280)return _A(A,A+B|0,0,g,B,Q,C,E,n,a,r),I&&(Q=(A=B+16|0)>>>0<16?Q+1|0:Q,i[I>>2]=A,i[I+4>>2]=Q),0;OI(),e()}(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0,n|=0,r|=0,o|=0)},n:function(A,I,g,B,Q,C,E,i,n,a,r){return 0|HA(A|=0,g|=0,B|=0,Q|=0,C|=0,E|=0,i|=0,n|=0,a|=0,r|=0)},o:function(A,I,g,B,Q,C,E,n,a,r,o){return 0|function(A,I,g,B,Q,C,E,n,a,r){var o=0;return o=-1,!Q&B>>>0>=16|Q&&(o=HA(A,g,B-16|0,Q-(B>>>0<16)|0,(g+B|0)-16|0,C,E,n,a,r)),I&&(i[I>>2]=o?0:B-16|0,i[I+4>>2]=o?0:Q-(B>>>0<16)|0),o}(A|=0,I|=0,B|=0,Q|=0,C|=0,E|=0,n|=0,a|=0,r|=0,o|=0)},p:function(A,I,g,B,Q,C,E,i,n,a,r){return 0|GA(A|=0,g|=0,B|=0,Q|=0,C|=0,E|=0,i|=0,n|=0,a|=0,r|=0)},q:function(A,I,g,B,Q,C,E,n,a,r,o){return 0|function(A,I,g,B,Q,C,E,n,a,r){var o=0;return o=-1,!Q&B>>>0>=16|Q&&(o=GA(A,g,B-16|0,Q-(B>>>0<16)|0,(g+B|0)-16|0,C,E,n,a,r)),I&&(i[I>>2]=o?0:B-16|0,i[I+4>>2]=o?0:Q-(B>>>0<16)|0),o}(A|=0,I|=0,B|=0,Q|=0,C|=0,E|=0,n|=0,a|=0,r|=0,o|=0)},r:Ng,s:function(){return 12},t:Lg,u:Sg,v:dg,w:bg,x:Ng,y:xg,z:Lg,A:Sg,B:dg,C:bg,D:function(A,I,g,B,Q,C,E,i,n,a,r,o){return 0|NA(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0,i|=0,n|=0,r|=0,o|=0)},E:function(A,I,g,B,Q,C,E,n,a,r,o){return 0|function(A,I,g,B,Q,C,E,n,a,r){if(!Q&B>>>0<4294967280)return NA(A,A+B|0,0,g,B,Q,C,E,n,a,r),I&&(Q=(A=B+16|0)>>>0<16?Q+1|0:Q,i[I>>2]=A,i[I+4>>2]=Q),0;OI(),e()}(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0,n|=0,r|=0,o|=0)},F:function(A,I,g,B,Q,C,E,i,n,a,r){return 0|MA(A|=0,g|=0,B|=0,Q|=0,C|=0,E|=0,i|=0,n|=0,a|=0,r|=0)},G:function(A,I,g,B,Q,C,E,n,a,r,o){return 0|function(A,I,g,B,Q,C,E,n,a,r){var o=0;return o=-1,!Q&B>>>0>=16|Q&&(o=MA(A,g,B-16|0,Q-(B>>>0<16)|0,(g+B|0)-16|0,C,E,n,a,r)),I&&(i[I>>2]=o?0:B-16|0,i[I+4>>2]=o?0:Q-(B>>>0<16)|0),o}(A|=0,I|=0,B|=0,Q|=0,C|=0,E|=0,n|=0,a|=0,r|=0,o|=0)},H:Ng,I:Mg,J:Lg,K:Sg,L:dg,M:bg,N:Ng,O:Ng,P:function(A,I,g,B,Q){return 0|bI(A|=0,I|=0,g|=0,B|=0,Q|=0)},Q:function(A,I,g,B,Q){return 0|function(A,I,g,B,Q){var C;return h=C=h-32|0,bI(C,I,g,B,Q),I=Gg(A,C),g=zA(C,A,32),h=C+32|0,g|((0|A)==(0|C)?-1:I)}(A|=0,I|=0,g|=0,B|=0,Q|=0)},R:bg,S:Ng,T:Ng,U:Ng,V:Ng,W:Mg,X:Sg,Y:dg,Z:function(A,I,g){return 0|function(A,I,g){var B,Q=0;return h=B=h+-64|0,mI(B,g,32,0),g=i[B+28>>2],Q=i[B+24>>2],C[I+24|0]=Q,C[I+25|0]=Q>>>8,C[I+26|0]=Q>>>16,C[I+27|0]=Q>>>24,C[I+28|0]=g,C[I+29|0]=g>>>8,C[I+30|0]=g>>>16,C[I+31|0]=g>>>24,g=i[B+20>>2],Q=i[B+16>>2],C[I+16|0]=Q,C[I+17|0]=Q>>>8,C[I+18|0]=Q>>>16,C[I+19|0]=Q>>>24,C[I+20|0]=g,C[I+21|0]=g>>>8,C[I+22|0]=g>>>16,C[I+23|0]=g>>>24,g=i[B+12>>2],Q=i[B+8>>2],C[I+8|0]=Q,C[I+9|0]=Q>>>8,C[I+10|0]=Q>>>16,C[I+11|0]=Q>>>24,C[I+12|0]=g,C[I+13|0]=g>>>8,C[I+14|0]=g>>>16,C[I+15|0]=g>>>24,g=i[B+4>>2],Q=i[B>>2],C[0|I]=Q,C[I+1|0]=Q>>>8,C[I+2|0]=Q>>>16,C[I+3|0]=Q>>>24,C[I+4|0]=g,C[I+5|0]=g>>>8,C[I+6|0]=g>>>16,C[I+7|0]=g>>>24,fI(B,64),A=cg(A,I),h=B- -64|0,A}(A|=0,I|=0,g|=0)},_:Ig,$:jI,aa:function(A,I,g,B,Q,C,E){return 0|Qg(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0)},ba:function(A,I,g,B,Q,C,E,i){return 0|wI(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0,i|=0)},ca:function(A,I,g,B,Q,C){return 0|function(A,I,g,B,Q,C){return!B&g>>>0>=4294967280|B&&(OI(),e()),Qg(A+16|0,A,I,g,B,Q,C)}(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0)},da:function(A,I,g,B,Q,C,E){return 0|kI(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0)},ea:function(A,I,g,B,Q,C,E){return 0|Cg(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0)},fa:function(A,I,g,B,Q,C,E,i){return 0|hI(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0,i|=0)},ga:function(A,I,g,B,Q,C){return 0|function(A,I,g,B,Q,C){return!B&g>>>0>=16|B?Cg(A,I+16|0,I,g-16|0,B-(g>>>0<16)|0,Q,C):-1}(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0)},ha:function(A,I,g,B,Q,C,E){return 0|uI(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0)},ia:function(A,I,g,B,Q){return 0|function(A,I,g,B,Q){var E,n=0;return h=E=h-96|0,n=-1,Ig(E+32|0,E)||(lI(E- -64|0,E+32|0,Q),n=kI(A+32|0,I,g,B,E- -64|0,Q,E),I=i[E+60>>2],g=i[E+56>>2],C[A+24|0]=g,C[A+25|0]=g>>>8,C[A+26|0]=g>>>16,C[A+27|0]=g>>>24,C[A+28|0]=I,C[A+29|0]=I>>>8,C[A+30|0]=I>>>16,C[A+31|0]=I>>>24,I=i[E+52>>2],g=i[E+48>>2],C[A+16|0]=g,C[A+17|0]=g>>>8,C[A+18|0]=g>>>16,C[A+19|0]=g>>>24,C[A+20|0]=I,C[A+21|0]=I>>>8,C[A+22|0]=I>>>16,C[A+23|0]=I>>>24,I=i[E+44>>2],g=i[E+40>>2],C[A+8|0]=g,C[A+9|0]=g>>>8,C[A+10|0]=g>>>16,C[A+11|0]=g>>>24,C[A+12|0]=I,C[A+13|0]=I>>>8,C[A+14|0]=I>>>16,C[A+15|0]=I>>>24,I=i[E+36>>2],g=i[E+32>>2],C[0|A]=g,C[A+1|0]=g>>>8,C[A+2|0]=g>>>16,C[A+3|0]=g>>>24,C[A+4|0]=I,C[A+5|0]=I>>>8,C[A+6|0]=I>>>16,C[A+7|0]=I>>>24,fI(E,32),fI(E+32|0,32),fI(E- -64|0,24)),h=E+96|0,n}(A|=0,I|=0,g|=0,B|=0,Q|=0)},ja:function(A,I,g,B,Q,C){return 0|function(A,I,g,B,Q,C){var E,i=0;return h=E=h-32|0,i=-1,!B&g>>>0>=48|B&&(lI(E,I,Q),i=uI(A,I+32|0,g-32|0,B-(g>>>0<32)|0,E,I,C)),h=E+32|0,i}(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0)},ka:function(){return 48},la:Sg,ma:Pg,na:Ng,oa:Sg,pa:Pg,qa:Ng,ra:function(){return 384},sa:function(A,I,g,B,Q,C,E){return 0|Eg(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0)},ta:qI,ua:function(A,I,g,B){return 0|sg(A|=0,I|=0,g|=0,B|=0)},va:TI,wa:bg,xa:Pg,ya:function(A,I,g,B){return 0|mI(A|=0,I|=0,g|=0,B|=0)},za:Sg,Aa:Pg,Ba:xg,Ca:Ng,Da:function(A,I,g,B,Q,a){return 0|function(A,I,g,B,Q,a){var r,o;return h=r=h-32|0,o=n[0|Q]|n[Q+1|0]<<8|n[Q+2|0]<<16|n[Q+3|0]<<24,Q=n[Q+4|0]|n[Q+5|0]<<8|n[Q+6|0]<<16|n[Q+7|0]<<24,i[r+24>>2]=0,i[r+28>>2]=0,i[r+16>>2]=o,i[r+20>>2]=Q,tI(r,g,B),i[r+8>>2]=0,i[r+12>>2]=0,I-16>>>0>=49?(i[8960]=28,A=-1):(g=r+16|0,A=I-1>>>0>63?-1:function(A,I,g,B,Q){var a,r=0;if(a=r=h,h=r=r-384&-64,!(!I|!A|(g-1&255)>>>0>=64))return function(A,I,g,B,Q){var a;if(h=a=h-192|0,!(!g|(I-1&255)>>>0>=64))return E[a+130>>1]=257,C[a+129|0]=32,C[a+128|0]=I,WI(a+128|4),tI(a+128|8,0,0),i[a+152>>2]=0,i[a+156>>2]=0,i[a+144>>2]=0,i[a+148>>2]=0,B?function(A,I){var g,B=0;B=n[I+4|0]|n[I+5|0]<<8|n[I+6|0]<<16|n[I+7|0]<<24,g=n[0|I]|n[I+1|0]<<8|n[I+2|0]<<16|n[I+3|0]<<24,C[A+32|0]=g,C[A+33|0]=g>>>8,C[A+34|0]=g>>>16,C[A+35|0]=g>>>24,C[A+36|0]=B,C[A+37|0]=B>>>8,C[A+38|0]=B>>>16,C[A+39|0]=B>>>24,B=n[I+12|0]|n[I+13|0]<<8|n[I+14|0]<<16|n[I+15|0]<<24,I=n[I+8|0]|n[I+9|0]<<8|n[I+10|0]<<16|n[I+11|0]<<24,C[A+40|0]=I,C[A+41|0]=I>>>8,C[A+42|0]=I>>>16,C[A+43|0]=I>>>24,C[A+44|0]=B,C[A+45|0]=B>>>8,C[A+46|0]=B>>>16,C[A+47|0]=B>>>24}(a+128|0,B):(i[a+168>>2]=0,i[a+172>>2]=0,i[a+160>>2]=0,i[a+164>>2]=0),Q?function(A,I){var g,B=0;B=n[I+4|0]|n[I+5|0]<<8|n[I+6|0]<<16|n[I+7|0]<<24,g=n[0|I]|n[I+1|0]<<8|n[I+2|0]<<16|n[I+3|0]<<24,C[A+48|0]=g,C[A+49|0]=g>>>8,C[A+50|0]=g>>>16,C[A+51|0]=g>>>24,C[A+52|0]=B,C[A+53|0]=B>>>8,C[A+54|0]=B>>>16,C[A+55|0]=B>>>24,B=n[I+12|0]|n[I+13|0]<<8|n[I+14|0]<<16|n[I+15|0]<<24,I=n[I+8|0]|n[I+9|0]<<8|n[I+10|0]<<16|n[I+11|0]<<24,C[A+56|0]=I,C[A+57|0]=I>>>8,C[A+58|0]=I>>>16,C[A+59|0]=I>>>24,C[A+60|0]=B,C[A+61|0]=B>>>8,C[A+62|0]=B>>>16,C[A+63|0]=B>>>24}(a+128|0,Q):(i[a+184>>2]=0,i[a+188>>2]=0,i[a+176>>2]=0,i[a+180>>2]=0),hA(A,a+128|0),EA(a+32|0,0,96),QA(I=A,A=X(a,g,32),128,0),fI(A,128),void(h=A+192|0);OI(),e()}(r,g,I,B,Q),QA(r,0,0,0),M(r,A,g),h=a,0;OI(),e()}(A,a,255&I,r,g)),h=r+32|0,A}(A|=0,I|=0,g|=0,B|=0,Q|=0,a|=0)},Ea:bg,Fa:function(A,I,g){return A|=0,Eg(I|=0,32,g|=0,32,0,0,0),0|ag(A,I)},Ga:function(A,I){return A|=0,cI(I|=0,32),0|ag(A,I)},Ha:function(A,I,g,B,Q){I|=0,g|=0,Q|=0;var E,i,a=0;if(i=a=h,h=a=a-512&-64,E=(A|=0)||I){if(A=-1,!ZI(a+96|0,B|=0,Q)){for(I=I||E,A=0,qI(a+128|0,0,0,64),sg(a+128|0,a+96|0,32,0),fI(a+96|0,32),sg(a+128|0,g,32,0),sg(a+128|0,Q,32,0),TI(a+128|0,a+32|0,64),fI(a+128|0,384);g=(a+32|0)+A|0,C[A+E|0]=n[0|g],C[A+I|0]=n[g+32|0],32!=(0|(A=A+1|0)););fI(a+32|0,64),A=0}return h=i,0|A}OI(),e()},Ia:function(A,I,g,B,Q){I|=0,g|=0,Q|=0;var E,i,a=0;if(i=a=h,h=a=a-512&-64,E=(A|=0)||I){if(A=-1,!ZI(a+96|0,B|=0,Q)){for(I=I||E,A=0,qI(a+128|0,0,0,64),sg(a+128|0,a+96|0,32,0),fI(a+96|0,32),sg(a+128|0,Q,32,0),sg(a+128|0,g,32,0),TI(a+128|0,a+32|0,64),fI(a+128|0,384);g=(a+32|0)+A|0,C[A+I|0]=n[0|g],C[A+E|0]=n[g+32|0],32!=(0|(A=A+1|0)););fI(a+32|0,64),A=0}return h=i,0|A}OI(),e()},Ja:Ng,Ka:Ng,La:Ng,Ma:Ng,Na:Rg,Oa:Jg,Pa:Jg,Qa:Sg,Ra:Kg,Sa:Lg,Ta:Kg,Ua:Sg,Va:function(){return 128},Wa:function(){return 35681},Xa:Rg,Ya:Kg,Za:function(){return 8192},_a:function(){return-2147483648},$a:Jg,ab:function(){return 67108864},bb:qg,cb:function(){return 268435456},db:function(){return 4},eb:function(){return 1073741824},fb:function(A,I,g,B,Q,C,E,n,a,r,o){return 0|function(A,I,g,B,Q,C,E,n,a,r,o){switch(o-1|0){case 0:return function(A,I,g,B,Q,C,E,n,a,r){var o,e;e=I,o=EA(A,0,I),A=22;A:if(!g){if(!(!g&I>>>0<16)){if(C|a|r>>>0>2147483648)break A;if(!(!a&n>>>0<3|r>>>0<8192)){if(A=28,(0|B)==(0|o))break A;return pA(n,r>>>10|0,1,B,Q,E,16,o,e,0,0,1)?-1:0}}A=28}return i[8960]=A,-1}(A,I,g,B,Q,C,E,n,a,r);case 1:return function(A,I,g,B,Q,C,E,n,a,r){var o,e;e=I,o=EA(A,0,I),A=22;A:if(!g){if(!(!g&I>>>0<16)){if(C|a|r>>>0>2147483648)break A;if(!(!(n|a)|r>>>0<8192)){if(A=28,(0|B)==(0|o))break A;return pA(n,r>>>10|0,1,B,Q,E,16,o,e,0,0,2)?-1:0}}A=28}return i[8960]=A,-1}(A,I,g,B,Q,C,E,n,a,r)}return i[8960]=28,-1}(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0,n|=0,a|=0,r|=0,o|=0)},gb:function(A,I,g,B,Q,C,E){return 0|xA(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0)},hb:function(A,I,g,B,Q,C,E,n){return 0|function(A,I,g,B,Q,C,E,n){switch(n-1|0){case 1:return xA(A,I,g,B,Q,C,E);default:OI(),e();case 0:}return function(A,I,g,B,Q,C,E){var n;return h=n=h-16|0,A=EA(A,0,128),E>>>0<2147483649&&!(B|C)?E>>>0>8191&&!C&Q>>>0>=3|0!=(0|C)?(cI(n,16),A=pA(Q,E>>>10|0,1,I,g,n,16,0,32,A,128,1)?-1:0):(i[8960]=28,A=-1):(i[8960]=22,A=-1),h=n+16|0,A}(A,I,g,B,Q,C,E)}(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0,E|=0,n|=0)},ib:function(A,I,g,B){return 0|function(A,I,g,B){return XA(A,35681,10)?XA(A,35692,9)?(i[8960]=28,-1):function(A,I,g,B){A:{if(1==(0|B)|B>>>0>1)i[8960]=22;else{if(!(A=fA(A,I,g,1)))break A;-35==(0|A)&&(i[8960]=28)}A=-1}return A}(A,I,g,B):function(A,I,g,B){A:{if(1==(0|B)|B>>>0>1)i[8960]=22;else{if(!(A=fA(A,I,g,2)))break A;-35==(0|A)&&(i[8960]=28)}A=-1}return A}(A,I,g,B)}(A|=0,I|=0,g|=0,B|=0)},jb:function(A,I,g,B){return 0|function(A,I,g,B){return XA(A,35681,10)?XA(A,35692,9)?(i[8960]=28,-1):DA(A,I,g,B,1):DA(A,I,g,B,2)}(A|=0,I|=0,g|=0,B|=0)},kb:ag,lb:ZI,mb:Ng,nb:Ng,ob:Ng,pb:Mg,qb:Sg,rb:dg,sb:bg,tb:Qg,ub:function(A,I,g,B,Q,C){return 0|function(A,I,g,B,Q,C){return!B&g>>>0>=4294967280|B&&(OI(),e()),nA(A+16|0,A,I,g,B,Q,C),0}(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0)},vb:Cg,wb:function(A,I,g,B,Q,C){return 0|function(A,I,g,B,Q,C){return!B&g>>>0>=16|B?rA(A,I+16|0,I,g-16|0,B-(g>>>0<16)|0,Q,C):-1}(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0)},xb:bg,yb:function(A,I,g){return A|=0,g|=0,cI(I|=0,24),x(A,I,g),XI(A),g=n[I+16|0]|n[I+17|0]<<8|n[I+18|0]<<16|n[I+19|0]<<24,I=n[I+20|0]|n[I+21|0]<<8|n[I+22|0]<<16|n[I+23|0]<<24,C[A+44|0]=0,C[A+45|0]=0,C[A+46|0]=0,C[A+47|0]=0,C[A+48|0]=0,C[A+49|0]=0,C[A+50|0]=0,C[A+51|0]=0,C[A+36|0]=g,C[A+37|0]=g>>>8,C[A+38|0]=g>>>16,C[A+39|0]=g>>>24,C[A+40|0]=I,C[A+41|0]=I>>>8,C[A+42|0]=I>>>16,C[A+43|0]=I>>>24,0},zb:function(A,I,g){return x(A|=0,I|=0,g|=0),XI(A),g=n[I+16|0]|n[I+17|0]<<8|n[I+18|0]<<16|n[I+19|0]<<24,I=n[I+20|0]|n[I+21|0]<<8|n[I+22|0]<<16|n[I+23|0]<<24,C[A+44|0]=0,C[A+45|0]=0,C[A+46|0]=0,C[A+47|0]=0,C[A+48|0]=0,C[A+49|0]=0,C[A+50|0]=0,C[A+51|0]=0,C[A+36|0]=g,C[A+37|0]=g>>>8,C[A+38|0]=g>>>16,C[A+39|0]=g>>>24,C[A+40|0]=I,C[A+41|0]=I>>>8,C[A+42|0]=I>>>16,C[A+43|0]=I>>>24,0},Ab:L,Bb:function(A,I,g,B,Q,E,a,r,o,t){return 0|function(A,I,g,B,Q,E,a,r,o,t){var f,c=0;if(h=f=h-336|0,g&&(i[g>>2]=0,i[g+4>>2]=0),!E&Q>>>0<4294967279)return _g(f+16|0,64,c=A+32|0,A),lg(f+80|0,f+16|0),fI(f+16|0,64),yg(f+80|0,a,r,o),yg(f+80|0,35712,0-r&15,0),EA(f+16|0,0,64),C[f+16|0]=t,BI(f+16|0,f+16|0,64,0,c,1,A),yg(f+80|0,f+16|0,64,0),C[0|I]=n[f+16|0],BI(a=I+1|0,B,Q,E,c,2,A),yg(f+80|0,a,Q,E),yg(f+80|0,35712,15&Q,0),tI(f+8|0,r,o),yg(f+80|0,f+8|0,8,0),tI(f+8|0,Q- -64|0,E-((Q>>>0<4294967232)-1|0)|0),yg(f+80|0,f+8|0,8,0),Fg(f+80|0,I=Q+a|0),fI(f+80|0,256),pI(A+36|0,I),sI(c),(2&t||aI(c,4))&&L(A),g&&(E=(A=Q+17|0)>>>0<17?E+1|0:E,i[g>>2]=A,i[g+4>>2]=E),h=f+336|0,0;OI(),e()}(A|=0,I|=0,g|=0,B|=0,Q|=0,E|=0,a|=0,r|=0,o|=0,t|=0)},Cb:function(A,I,g,B,Q,E,a,r,o,t){return 0|function(A,I,g,B,Q,E,a,r,o,t){var f,c=0,y=0,s=0,w=0,D=0;h=f=h-352|0,g&&(i[g>>2]=0,i[g+4>>2]=0),B&&(C[0|B]=255),w=-1;A:{if(!(!a&E>>>0<17)){if(!(c=a-(E>>>0<17)|0)&(y=E-17|0)>>>0>=4294967279|c)break A;_g(f+32|0,64,s=A+32|0,A),lg(f+96|0,f+32|0),fI(f+32|0,64),yg(f+96|0,r,o,t),yg(f+96|0,35712,0-o&15,0),EA(f+32|0,0,64),C[f+32|0]=n[0|Q],BI(f+32|0,f+32|0,64,0,s,1,A),D=n[f+32|0],C[f+32|0]=n[0|Q],yg(f+96|0,f+32|0,64,0),yg(f+96|0,r=Q+1|0,y,c),yg(f+96|0,35712,E-1&15,0),tI(f+24|0,o,t),yg(f+96|0,f+24|0,8,0),tI(f+24|0,Q=E+47|0,a=Q>>>0<47?a+1|0:a),yg(f+96|0,f+24|0,8,0),Fg(f+96|0,f),fI(f+96|0,256),zA(f,r+y|0,16)?fI(f,16):(BI(I,r,y,c,s,2,A),pI(A+36|0,f),sI(s),(2&D||aI(s,4))&&L(A),g&&(i[g>>2]=y,i[g+4>>2]=c),w=0,B&&(C[0|B]=D))}return h=f+352|0,w}OI(),e()}(A|=0,I|=0,g|=0,B|=0,Q|=0,E|=0,a|=0,r|=0,o|=0,t|=0)},Db:function(){return 52},Eb:function(){return 17},Fb:Mg,Gb:Ng,Hb:function(){return-18},Ib:Lg,Jb:Rg,Kb:Jg,Lb:qg,Mb:xg,Nb:Sg,Ob:function(A,I,g,B,Q){return 0|function(A,I,g,B){var Q=0,C=0,E=0,i=0,a=0,r=0,o=0,e=0,t=0,f=0,c=0,y=0,s=0,w=0,h=0,D=0;if(Q=1886610805^(E=n[0|B]|n[B+1|0]<<8|n[B+2|0]<<16|n[B+3|0]<<24),i=1936682341^(C=n[B+4|0]|n[B+5|0]<<8|n[B+6|0]<<16|n[B+7|0]<<24),a=1852142177^E,o=1819895653^C,E=1852075885^(t=n[B+8|0]|n[B+9|0]<<8|n[B+10|0]<<16|n[B+11|0]<<24),C=1685025377^(B=n[B+12|0]|n[B+13|0]<<8|n[B+14|0]<<16|n[B+15|0]<<24),t^=2037671283,r=1952801890^B,(0|(B=(I+g|0)-(y=7&g)|0))!=(0|I)){for(;e=n[0|I]|n[I+1|0]<<8|n[I+2|0]<<16|n[I+3|0]<<24,f=n[I+4|0]|n[I+5|0]<<8|n[I+6|0]<<16|n[I+7|0]<<24,c=Dg(E,C,13),s=p,w=1+(C=C+i|0)|0,i=C,h=Dg(C=Q+E|0,i=C>>>0<Q>>>0?w:i,32),w=p,r=Q=r^f,E=Dg(t^=e,Q,16),Q=a+t|0,a=o+r|0,t=o=(a=Q>>>0<t>>>0?a+1|0:a)^p,o=Dg(E^=Q,o,21),r=p,c=Dg(C^=c,i^=s,17),D=p,i=a+i|0,a=Q,i=Dg(Q=Q+C|0,C=a>>>0>Q>>>0?i+1|0:i,32),a=p,s=Dg(c^=Q,C^=D,13),D=p,w=1+(Q=t+w|0)|0,t=Q,E=(Q=E+h|0)>>>0<E>>>0?w:t,c=t=Q+c|0,C=E+C|0,C=Dg(t,h=Q>>>0>t>>>0?C+1|0:C,32),t=p,o=Dg(Q^=o,E^=r,16),E=a+E|0,E=(Q=Q+i|0)>>>0<i>>>0?E+1|0:E,i=C+(a=Q^o)|0,C=(r=t)+(t=E^p)|0,t=Dg(a,t,21)^i,r=(w=i>>>0<a>>>0?C+1|0:C)^p,a=C=h^D,C=Dg(o=c^s,C,17),E=E+a|0,o=(a=Q+o|0)>>>0<Q>>>0?E+1|0:E,E=C^a,C=o^p,Q=i^e,i=f^w,a=Dg(a,o,32),o=p,(0|B)!=(0|(I=I+8|0)););I=B}switch(B=g<<24,g=0,y-1|0){case 6:B|=n[I+6|0]<<16;case 5:B|=n[I+5|0]<<8;case 4:B|=n[I+4|0];case 3:e=(g=n[I+3|0])>>>8|0,g<<=24,B|=e;case 2:g|=(e=n[I+2|0])<<16,B|=f=e>>>16|0;case 1:g|=(e=n[I+1|0])<<8,B|=f=e>>>24|0;case 0:g=n[0|I]|g}return e=Dg(E,C,13),f=p,I=C+i|0,y=Dg(E=Q+E|0,C=E>>>0<Q>>>0?I+1|0:I,32),c=p,i=Q=B^r,Q=Dg(I=g^t,Q,16),i=i+o|0,o=a=(i=(r=I)>>>0>(I=I+a|0)>>>0?i+1|0:i)^p,a=Dg(Q^=I,a,21),t=p,e=Dg(E^=e,C^=f,17),f=p,C=i+C|0,r=I,C=Dg(I=I+E|0,E=r>>>0>I>>>0?C+1|0:C,32),i=p,e=Dg(r=I^e,E^=f,13),f=p,s=1+(I=o+c|0)|0,o=I,E=(Q=(I=Q+y|0)>>>0<Q>>>0?s:o)+E|0,E=Dg(r=o=I+r|0,o=I>>>0>o>>>0?E+1|0:E,32),y=p,a=Dg(I^=a,Q^=t,16),Q=i+Q|0,Q=(I=I+C|0)>>>0<C>>>0?Q+1|0:Q,C=I^a,a=i=Q^p,i=Dg(C,i,21),t=p,f=o^=f,o=Dg(r^=e,o,17),e=p,Q=Q+f|0,s=I,r=Dg(I=I+r|0,Q=s>>>0>I>>>0?Q+1|0:Q,32),f=p,e=Dg(I^=o,o=Q^e,13),c=p,s=I,a=1+(I=a+y|0)|0,Q=I,B=o+(B^(Q=(I=E+C|0)>>>0<E>>>0?a:Q))|0,g=Dg(C=E=s+(g^=I)|0,E=g>>>0>E>>>0?B+1|0:B,32),a=p,i=Dg(I^=i,B=Q^t,16),B=B+f|0,B=(Q=I)>>>0>(I=I+(255^r)|0)>>>0?B+1|0:B,Q=I^i,o=i=B^p,i=Dg(Q,i,21),t=p,r=E^=c,E=Dg(C^=e,E,17),e=p,B=B+r|0,r=I,C=Dg(I=I+C|0,B=r>>>0>I>>>0?B+1|0:B,32),r=p,f=Dg(E^=I,e^=B,13),y=p,o=1+(I=a+o|0)|0,B=I,Q=(B=(I=g+Q|0)>>>0<g>>>0?o:B)+e|0,a=Q=I>>>0>(g=I+E|0)>>>0?Q+1|0:Q,Q=Dg(g,Q,32),o=p,i=Dg(I^=i,B^=t,16),B=B+r|0,r=I,E=(I=I+C|0)^i,i=C=(B=r>>>0>I>>>0?B+1|0:B)^p,C=Dg(E,C,21),t=p,r=a^=y,a=Dg(g^=f,a,17),e=p,B=B+r|0,r=I,r=Dg(I=I+g|0,g=r>>>0>I>>>0?B+1|0:B,32),f=p,y=Dg(a^=I,e^=g,13),c=p,B=1+(I=i+o|0)|0,g=I,Q=(B=(I=Q+E|0)>>>0<Q>>>0?B:g)+e|0,i=Q=I>>>0>(g=I+a|0)>>>0?Q+1|0:Q,Q=Dg(g,Q,32),a=p,C=Dg(I^=C,B^=t,16),B=B+f|0,o=I,E=(I=I+r|0)^C,o=C=(B=o>>>0>I>>>0?B+1|0:B)^p,C=Dg(E,C,21),t=p,r=i^=c,i=Dg(g^=y,i,17),e=p,B=B+r|0,r=I,B=Dg(I=I+g|0,g=r>>>0>I>>>0?B+1|0:B,32),r=p,e=g^=e,f=Dg(i^=I,g,13),y=p,o=1+(I=a+o|0)|0,g=I,a=E=t^(Q=(I=Q+E|0)>>>0<Q>>>0?o:g),E=Dg(g=I^C,E,16),C=a+r|0,r=g,E=Dg((g=g+B|0)^E,(B=r>>>0>g>>>0?C+1|0:C)^p,21),C=p,Q=Q+e|0,o=1+(B=B+(Q=((r=I)>>>0>(I=I+i|0)>>>0?Q+1|0:Q)^y)|0)|0,r=B,g=(I=g+(B=I^f)|0)>>>0<g>>>0?o:r,B=Dg(B,Q,17)^I^E,Q=p^g^C,tI(A,Dg(I,g,32)^B,p^Q),0}(A|=0,I|=0,g|=0,Q|=0)},Pb:function(A){cI(A|=0,16)},Qb:function(){return 208},Rb:Pg,Sb:Ng,Tb:Ng,Ub:Pg,Vb:function(){return-65},Wb:function(A,I,g){return 0|N(A|=0,I|=0,g|=0)},Xb:function(A,I){return 0|function(A,I){var g;return h=g=h-32|0,cI(g,32),N(A,I,g),fI(g,32),h=g+32|0,0}(A|=0,I|=0)},Yb:function(A,I,g,B,Q,C){return 0|function(A,I,g,B,Q,C){var E,n;return h=E=h-16|0,n=g,g=B,Bg(A,E+8|0,gA(A- -64|0,n,B),B,Q,C),64!=i[E+8>>2]|i[E+12>>2]?(I&&(i[I>>2]=0,i[I+4>>2]=0),EA(A,0,g- -64|0),A=-1):(A=0,I&&(i[I>>2]=B- -64,i[I+4>>2]=Q-((B>>>0<4294967232)-1|0))),h=E+16|0,A}(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0)},Zb:function(A,I,g,B,Q,C){return 0|function(A,I,g,B,Q,C){var E=0;A:{I:{if(!(!Q&B>>>0<64||(Q=Q-1|0,!(Q=(B=B+-64|0)>>>0<4294967232?Q+1|0:Q)&B>>>0>4294967231|Q))){if(!ng(g,E=g- -64|0,B,Q,C))break I;A&&EA(A,0,B)}if(g=-1,!I)break A;return i[I>>2]=0,i[I+4>>2]=0,-1}I&&(i[I>>2]=B,i[I+4>>2]=Q),g=0,A&&gA(A,E,B)}return g}(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0)},_b:function(A,I,g,B,Q,C){return 0|Bg(A|=0,I|=0,g|=0,B|=0,Q|=0,C|=0)},$b:function(A,I,g,B,Q){return 0|ng(A|=0,I|=0,g|=0,B|=0,Q|=0)},ac:function(A){return MI(A|=0),0},bc:function(A,I,g,B){return 0|V(A|=0,I|=0,g|=0,B|=0)},cc:function(A,I,g,B){return 0|function(A,I,g,B){var Q;return h=Q=h+-64|0,UI(A,Q),A=q(I,g,Q,64,0,B,1),h=Q- -64|0,A}(A|=0,I|=0,g|=0,B|=0)},dc:function(A,I,g){return 0|function(A,I,g){var B;return h=B=h+-64|0,UI(A,B),A=lA(I,B,64,0,g,1),h=B- -64|0,A}(A|=0,I|=0,g|=0)},ec:function(A,I){A|=0;var g,B=0;return h=g=h-256|0,B=-1,wA(I|=0)||cA(g+96|0,I)||function(A){var I;return h=I=h-160|0,function(A,I){var g,B=0;for(h=g=h-1760|0,FI(g+480|0,I),JI(g+320|0,I),DI(g,g+320|0),VA(g+320|0,g,g+480|0),DI(g+160|0,g+320|0),FI(I=g+640|0,g+160|0),VA(g+320|0,g,I),DI(g+160|0,g+320|0),FI(I=g+800|0,g+160|0),VA(g+320|0,g,I),DI(g+160|0,g+320|0),FI(I=g+960|0,g+160|0),VA(g+320|0,g,I),DI(g+160|0,g+320|0),FI(I=g+1120|0,g+160|0),VA(g+320|0,g,I),DI(g+160|0,g+320|0),FI(I=g+1280|0,g+160|0),VA(g+320|0,g,I),DI(g+160|0,g+320|0),FI(I=g+1440|0,g+160|0),VA(g+320|0,g,I),DI(g+160|0,g+320|0),FI(g+1600|0,g+160|0),zI(A),I=252;JI(g+320|0,A),B=I,(0|(I=C[I+34208|0]))>=1?(DI(g+160|0,g+320|0),VA(g+320|0,g+160|0,(g+480|0)+r((254&I)>>>1|0,160)|0)):(0|I)>-1||(DI(g+160|0,g+320|0),WA(g+320|0,g+160|0,(g+480|0)+r((0-I&254)>>>1|0,160)|0)),DI(A,g+320|0),I=B-1|0,B;);h=g+1760|0}(I,A),A=RI(I),h=I+160|0,A}(g+96|0)&&(wg(g),yA(g,g,I=g+136|0),wg(g+48|0),sA(g+48|0,g+48|0,I),j(g,g),_(g+48|0,g+48|0,g),BA(A,g+48|0),B=0),h=g+256|0,0|B},fc:function(A,I){A|=0;var g,B=0;return h=g=h+-64|0,mI(g,I|=0,32,0),C[0|g]=248&n[0|g],C[g+31|0]=63&n[g+31|0]|64,I=i[g+20>>2],B=i[g+16>>2],C[A+16|0]=B,C[A+17|0]=B>>>8,C[A+18|0]=B>>>16,C[A+19|0]=B>>>24,C[A+20|0]=I,C[A+21|0]=I>>>8,C[A+22|0]=I>>>16,C[A+23|0]=I>>>24,I=i[g+12>>2],B=i[g+8>>2],C[A+8|0]=B,C[A+9|0]=B>>>8,C[A+10|0]=B>>>16,C[A+11|0]=B>>>24,C[A+12|0]=I,C[A+13|0]=I>>>8,C[A+14|0]=I>>>16,C[A+15|0]=I>>>24,I=i[g+4>>2],B=i[g>>2],C[0|A]=B,C[A+1|0]=B>>>8,C[A+2|0]=B>>>16,C[A+3|0]=B>>>24,C[A+4|0]=I,C[A+5|0]=I>>>8,C[A+6|0]=I>>>16,C[A+7|0]=I>>>24,I=i[g+28>>2],B=i[g+24>>2],C[A+24|0]=B,C[A+25|0]=B>>>8,C[A+26|0]=B>>>16,C[A+27|0]=B>>>24,C[A+28|0]=I,C[A+29|0]=I>>>8,C[A+30|0]=I>>>16,C[A+31|0]=I>>>24,fI(g,64),h=g- -64|0,0},gc:YI,hc:PI,ic:function(A){var I=0,g=0;if((A|=0)>>>0>=2){for(g=(0-A>>>0)%(A>>>0)|0;(I=YI())>>>0<g>>>0;);A=(I>>>0)%(A>>>0)|0}else A=0;return 0|A},jc:cI,kc:function(A,I,g){_g(A|=0,I|=0,1784,g|=0)},lc:Ng,mc:function(){var A=0,I=0;return(A=i[9097])&&(A=i[A+20>>2])&&(I=0|Vg[0|A]()),0|I},nc:function(A,I,g){!function(A,I,g){1==(0|g)|g>>>0>1&&(t(1796,1816,197,1842),e()),cI(A,I)}(A|=0,I|=0,g|=0)},oc:function(A,I,g,B){A|=0,g|=0;var Q=0,E=0,i=0;if(!((B|=0)>>>0>2147483646|B<<1>>>0>=(I|=0)>>>0)){if(I=0,B){for(;Q=I<<1,E=(i=n[I+g|0])>>>4|0,C[Q+A|0]=87+(E+(E+65526>>>8&217)|0),E=(1|Q)+A|0,Q=15&i,C[0|E]=22272+((Q<<8)+(Q+65526&55552)|0)>>>8,(0|B)!=(0|(I=I+1|0)););I=B<<1}else I=0;return C[I+A|0]=0,0|A}OI(),e()},pc:function(A,I,g,B,Q,E,a){A|=0,I|=0,g|=0,Q|=0,E|=0,a|=0;var r=0,o=0,e=0,t=0,f=0,c=0,y=0,s=0,w=0,h=0,D=0;A:if(B|=0){I:{g:{B:for(;;){for(o=r;;){Q:{if(!(255&((w=(65526+(y=(223&(c=n[g+o|0]))-55&255)^y+65520)>>>8|0)|(e=65526+(h=48^c)>>>8|0)))){if(e=1,!Q|255&f)break g;if(gg(Q,c))break Q;r=o;break A}if(I>>>0<=t>>>0){i[8960]=68,e=0;break g}if(r=y&w|e&h,255&f?(C[A+t|0]=r|D,t=t+1|0):D=r<<4,f^=-1,e=1,(r=o+1|0)>>>0<B>>>0)continue B;break I}if(f=0,!((o=o+1|0)>>>0<B>>>0))break}break}r=(A=r+1|0)>>>0<B>>>0?B:A;break A}r=o}255&f?(i[8960]=28,s=-1,r=r-1|0,t=0):e||(t=0,s=-1)}return a?i[a>>2]=g+r:(0|B)!=(0|r)&&(i[8960]=28,s=-1),E&&(i[E>>2]=t),0|s},qc:function(A,I){var g;return A|=0,pg(I|=0),A=r(g=(A>>>0)/3|0,-3)+A|0,r(4-(3-A&0-(I>>>1&1))|0,1&(A|A>>>1))+(g<<2|1)|0},rc:O,sc:W,tc:function(){var A=0;return i[9104]?A=1:(i[9086]=0,function(){var A;h=A=h-16|0,VI(A),i[A>>2]&&(VI(A),EA(36348,0,40)),h=A+16|0}(),i[9085]=1,PI(),function(){var A=0;(0|(A=0|y(30)))>=1?i[8944]=A:A=i[8944],A>>>0<=15&&(OI(),e()),cI(36400,16)}(),i[9104]=1,A=0),0|A},uc:function(A,I,g,B,Q){A|=0,I|=0,g|=0,Q|=0;var E,a=0,r=0,o=0;h=E=h-16|0;A:{if(B|=0){if(o=-1,(a=(a=B-1|0)-(r=a&B?(g>>>0)%(B>>>0)|0:g&a)|0)>>>0>=(-1^g)>>>0)break A;if(!((g=g+a|0)>>>0>=Q>>>0))for(A&&(i[A>>2]=g+1),A=I+g|0,o=0,C[E+15|0]=0,I=B>>>0>1?B:1,B=0;Q=g=A-B|0,r=n[0|g]&n[E+15|0],g=(B^a)-1>>>24|0,C[0|Q]=r|128&g,C[E+15|0]=g|n[E+15|0],(0|I)!=(0|(B=B+1|0)););}else o=-1;return h=E+16|0,0|o}OI(),e()},vc:function(A,I,g,B){A|=0,I|=0,g|=0,B|=0;var Q,C=0,E=0,a=0,r=0,o=0;if(i[12+(Q=h-16|0)>>2]=0,B-1>>>0<g>>>0){for(o=(C=g-1|0)+I|0,g=0,I=0;r=((128^(E=n[o-g|0]))-1&i[Q+12>>2]-1&a-1)>>>8&1,i[Q+12>>2]=i[Q+12>>2]|0-r&g,I|=r,a|=E,(0|B)!=(0|(g=g+1|0)););i[A>>2]=C-i[Q+12>>2],A=I-1|0}else A=-1;return 0|A},wc:function(){return 35762},xc:function(){return 10},yc:qg,zc:Rg,Ac:function(){return 35840},Bc:k,Cc:m}}(A)}(vA)},instantiate:function(A,I){return{then:function(I){var g=new u.Module(A);I({instance:new u.Instance(g)})}}},RuntimeError:Error};function p(A,I,g,B){switch(\"*\"===(g=g||\"i8\").charAt(g.length-1)&&(g=\"i32\"),g){case\"i1\":case\"i8\":_[A>>0]=I;break;case\"i16\":Y[A>>1]=I;break;case\"i32\":b[A>>2]=I;break;case\"i64\":nA=[I>>>0,(iA=I,+Math.abs(iA)>=1?iA>0?(0|Math.min(+Math.floor(iA/4294967296),4294967295))>>>0:~~+Math.ceil((iA-+(~~iA>>>0))/4294967296)>>>0:0)],b[A>>2]=nA[0],b[A+4>>2]=nA[1];break;case\"float\":m[A>>2]=I;break;case\"double\":v[A>>3]=I;break;default:IA(\"invalid type for setValue: \"+g)}}function l(A,I,g){switch(\"*\"===(I=I||\"i8\").charAt(I.length-1)&&(I=\"i32\"),I){case\"i1\":case\"i8\":return _[A>>0];case\"i16\":return Y[A>>1];case\"i32\":case\"i64\":return b[A>>2];case\"float\":return m[A>>2];case\"double\":return v[A>>3];default:IA(\"invalid type for getValue: \"+I)}return null}w=[],\"object\"!=typeof u&&IA(\"no native wasm support detected\");var F=!1;function G(A,I){A||IA(\"Assertion failed: \"+I)}var k,_,H,Y,b,m,v,U=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;function S(A,I,g){for(var B=I+g,Q=I;A[Q]&&!(Q>=B);)++Q;if(Q-I>16&&A.subarray&&U)return U.decode(A.subarray(I,Q));for(var C=\"\";I<Q;){var E=A[I++];if(128&E){var i=63&A[I++];if(192!=(224&E)){var n=63&A[I++];if((E=224==(240&E)?(15&E)<<12|i<<6|n:(7&E)<<18|i<<12|n<<6|63&A[I++])<65536)C+=String.fromCharCode(E);else{var a=E-65536;C+=String.fromCharCode(55296|a>>10,56320|1023&a)}}else C+=String.fromCharCode((31&E)<<6|i)}else C+=String.fromCharCode(E)}return C}function N(A,I){return A?S(H,A,I):\"\"}function M(A,I){return A%I>0&&(A+=I-A%I),A}function d(A){k=A,Q.HEAP8=_=new Int8Array(A),Q.HEAP16=Y=new Int16Array(A),Q.HEAP32=b=new Int32Array(A),Q.HEAPU8=H=new Uint8Array(A),Q.HEAPU16=new Uint16Array(A),Q.HEAPU32=new Uint32Array(A),Q.HEAPF32=m=new Float32Array(A),Q.HEAPF64=v=new Float64Array(A)}var P,R=Q.INITIAL_MEMORY||16777216;(D=Q.wasmMemory?Q.wasmMemory:new u.Memory({initial:R/65536,maximum:32768}))&&(k=D.buffer),R=k.byteLength,d(k);var J=[],x=[],L=[],K=[];function q(){if(Q.preRun)for(\"function\"==typeof Q.preRun&&(Q.preRun=[Q.preRun]);Q.preRun.length;)T(Q.preRun.shift());fA(J)}function X(){fA(x)}function V(){fA(L)}function W(){if(Q.postRun)for(\"function\"==typeof Q.postRun&&(Q.postRun=[Q.postRun]);Q.postRun.length;)j(Q.postRun.shift());fA(K)}function T(A){J.unshift(A)}function j(A){K.unshift(A)}x.push({func:function(){UA()}});var Z=0,O=null,z=null;function $(A){Z++,Q.monitorRunDependencies&&Q.monitorRunDependencies(Z)}function AA(A){if(Z--,Q.monitorRunDependencies&&Q.monitorRunDependencies(Z),0==Z&&(null!==O&&(clearInterval(O),O=null),z)){var I=z;z=null,I()}}function IA(A){throw Q.onAbort&&Q.onAbort(A),h(A+=\"\"),F=!0,A=\"abort(\"+A+\"). Build with -s ASSERTIONS=1 for more info.\",new u.RuntimeError(A)}function gA(A,I){return String.prototype.startsWith?A.startsWith(I):0===A.indexOf(I)}Q.preloadedImages={},Q.preloadedAudios={};var BA=\"data:application/octet-stream;base64,\";function QA(A){return gA(A,BA)}var CA=\"file://\";function EA(A){return gA(A,CA)}var iA,nA,aA=\"<<< WASM_BINARY_FILE >>>\";function rA(A){try{if(A==aA&&w)return new Uint8Array(w);var I=bA(A);if(I)return I;if(t)return t(A);throw\"both async and sync fetching of the wasm failed\"}catch(A){IA(A)}}function oA(){if(!w&&(i||n)){if(\"function\"==typeof fetch&&!EA(aA))return fetch(aA,{credentials:\"same-origin\"}).then((function(A){if(!A.ok)throw\"failed to load wasm binary file at '\"+aA+\"'\";return A.arrayBuffer()})).catch((function(){return rA(aA)}));if(e)return new Promise((function(A,I){e(aA,(function(I){A(new Uint8Array(I))}),I)}))}return Promise.resolve().then((function(){return rA(aA)}))}function eA(){var A={a:vA};function I(A,I){var g=A.exports;Q.asm=g,P=Q.asm.h,AA()}function g(A){I(A.instance)}function B(I){return oA().then((function(I){return u.instantiate(I,A)})).then(I,(function(A){h(\"failed to asynchronously prepare wasm: \"+A),IA(A)}))}if($(),Q.instantiateWasm)try{return Q.instantiateWasm(A,I)}catch(A){return h(\"Module.instantiateWasm callback failed with error: \"+A),!1}return w||\"function\"!=typeof u.instantiateStreaming||QA(aA)||EA(aA)||\"function\"!=typeof fetch?B(g):fetch(aA,{credentials:\"same-origin\"}).then((function(I){return u.instantiateStreaming(I,A).then(g,(function(A){return h(\"wasm streaming compile failed: \"+A),h(\"falling back to ArrayBuffer instantiation\"),B(g)}))})),{}}QA(aA)||(aA=s(aA));var tA={1024:function(){return Q.getRandomValue()},1062:function(){if(void 0===Q.getRandomValue)try{var A=\"object\"==typeof window?window:self,I=void 0!==A.crypto?A.crypto:A.msCrypto,g=function(){var A=new Uint32Array(1);return I.getRandomValues(A),A[0]>>>0};g(),Q.getRandomValue=g}catch(A){try{var B=__webpack_require__(/*! crypto */ \"?5162\"),C=function(){var A=B.randomBytes(4);return(A[0]<<24|A[1]<<16|A[2]<<8|A[3])>>>0};C(),Q.getRandomValue=C}catch(A){throw\"No secure random number generator found\"}}}};function fA(A){for(;A.length>0;){var I=A.shift();if(\"function\"!=typeof I){var g=I.func;\"number\"==typeof g?void 0===I.arg?P.get(g)():P.get(g)(I.arg):g(void 0===I.arg?null:I.arg)}else I(Q)}}function cA(A,I,g,B){IA(\"Assertion failed: \"+N(A)+\", at: \"+[I?N(I):\"unknown filename\",g,B?N(B):\"unknown function\"])}function yA(){IA()}function sA(A,I,g){var B=GA(I,g);return tA[A].apply(null,B)}function wA(A,I,g){H.copyWithin(A,I,I+g)}function hA(){return H.length}function DA(A){try{return D.grow(A-k.byteLength+65535>>>16),d(D.buffer),1}catch(A){}}function uA(A){A>>>=0;var I=hA(),g=2147483648;if(A>g)return!1;for(var B=1;B<=4;B*=2){var Q=I*(1+.2/B);if(Q=Math.min(Q,A+100663296),DA(Math.min(g,M(Math.max(16777216,A,Q),65536))))return!0}return!1}function pA(A){return b[SA()>>2]=A,A}function lA(A){switch(A){case 30:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return\"object\"==typeof navigator&&navigator.hardwareConcurrency||1}return pA(28),-1}var FA=[];function GA(A,I){var g;for(FA.length=0,I>>=2;g=H[A++];){var B=g<105;B&&1&I&&I++,FA.push(B?v[I++>>1]:b[I]),++I}return FA}var kA=!1;function _A(A){for(var I=[],g=0;g<A.length;g++){var B=A[g];B>255&&(kA&&G(!1,\"Character code \"+B+\" (\"+String.fromCharCode(B)+\")  at offset \"+g+\" not in 0x00-0xFF.\"),B&=255),I.push(String.fromCharCode(B))}return I.join(\"\")}var HA=\"function\"==typeof atob?atob:function(A){var I,g,B,Q,C,E,i=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",n=\"\",a=0;A=A.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");do{I=i.indexOf(A.charAt(a++))<<2|(Q=i.indexOf(A.charAt(a++)))>>4,g=(15&Q)<<4|(C=i.indexOf(A.charAt(a++)))>>2,B=(3&C)<<6|(E=i.indexOf(A.charAt(a++))),n+=String.fromCharCode(I),64!==C&&(n+=String.fromCharCode(g)),64!==E&&(n+=String.fromCharCode(B))}while(a<A.length);return n};function YA(A){if(\"boolean\"==typeof a&&a){var I;try{I=Buffer.from(A,\"base64\")}catch(g){I=new Buffer(A,\"base64\")}return new Uint8Array(I.buffer,I.byteOffset,I.byteLength)}try{for(var g=HA(A),B=new Uint8Array(g.length),Q=0;Q<g.length;++Q)B[Q]=g.charCodeAt(Q);return B}catch(A){throw new Error(\"Converting base64 string to bytes failed.\")}}function bA(A){if(QA(A))return YA(A.slice(BA.length))}var mA,vA={b:cA,d:yA,c:sA,f:wA,g:uA,a:D,e:lA},UA=(eA(),Q.___wasm_call_ctors=function(){return(UA=Q.___wasm_call_ctors=Q.asm.i).apply(null,arguments)}),SA=(Q._crypto_aead_chacha20poly1305_encrypt_detached=function(){return(Q._crypto_aead_chacha20poly1305_encrypt_detached=Q.asm.j).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_encrypt=function(){return(Q._crypto_aead_chacha20poly1305_encrypt=Q.asm.k).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_encrypt_detached=function(){return(Q._crypto_aead_chacha20poly1305_ietf_encrypt_detached=Q.asm.l).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_encrypt=function(){return(Q._crypto_aead_chacha20poly1305_ietf_encrypt=Q.asm.m).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_decrypt_detached=function(){return(Q._crypto_aead_chacha20poly1305_decrypt_detached=Q.asm.n).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_decrypt=function(){return(Q._crypto_aead_chacha20poly1305_decrypt=Q.asm.o).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_decrypt_detached=function(){return(Q._crypto_aead_chacha20poly1305_ietf_decrypt_detached=Q.asm.p).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_decrypt=function(){return(Q._crypto_aead_chacha20poly1305_ietf_decrypt=Q.asm.q).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_keybytes=function(){return(Q._crypto_aead_chacha20poly1305_ietf_keybytes=Q.asm.r).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_npubbytes=function(){return(Q._crypto_aead_chacha20poly1305_ietf_npubbytes=Q.asm.s).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_nsecbytes=function(){return(Q._crypto_aead_chacha20poly1305_ietf_nsecbytes=Q.asm.t).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_abytes=function(){return(Q._crypto_aead_chacha20poly1305_ietf_abytes=Q.asm.u).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_messagebytes_max=function(){return(Q._crypto_aead_chacha20poly1305_ietf_messagebytes_max=Q.asm.v).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_keygen=function(){return(Q._crypto_aead_chacha20poly1305_ietf_keygen=Q.asm.w).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_keybytes=function(){return(Q._crypto_aead_chacha20poly1305_keybytes=Q.asm.x).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_npubbytes=function(){return(Q._crypto_aead_chacha20poly1305_npubbytes=Q.asm.y).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_nsecbytes=function(){return(Q._crypto_aead_chacha20poly1305_nsecbytes=Q.asm.z).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_abytes=function(){return(Q._crypto_aead_chacha20poly1305_abytes=Q.asm.A).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_messagebytes_max=function(){return(Q._crypto_aead_chacha20poly1305_messagebytes_max=Q.asm.B).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_keygen=function(){return(Q._crypto_aead_chacha20poly1305_keygen=Q.asm.C).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_encrypt_detached=function(){return(Q._crypto_aead_xchacha20poly1305_ietf_encrypt_detached=Q.asm.D).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_encrypt=function(){return(Q._crypto_aead_xchacha20poly1305_ietf_encrypt=Q.asm.E).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_decrypt_detached=function(){return(Q._crypto_aead_xchacha20poly1305_ietf_decrypt_detached=Q.asm.F).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_decrypt=function(){return(Q._crypto_aead_xchacha20poly1305_ietf_decrypt=Q.asm.G).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_keybytes=function(){return(Q._crypto_aead_xchacha20poly1305_ietf_keybytes=Q.asm.H).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_npubbytes=function(){return(Q._crypto_aead_xchacha20poly1305_ietf_npubbytes=Q.asm.I).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_nsecbytes=function(){return(Q._crypto_aead_xchacha20poly1305_ietf_nsecbytes=Q.asm.J).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_abytes=function(){return(Q._crypto_aead_xchacha20poly1305_ietf_abytes=Q.asm.K).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_messagebytes_max=function(){return(Q._crypto_aead_xchacha20poly1305_ietf_messagebytes_max=Q.asm.L).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_keygen=function(){return(Q._crypto_aead_xchacha20poly1305_ietf_keygen=Q.asm.M).apply(null,arguments)},Q._crypto_auth_bytes=function(){return(Q._crypto_auth_bytes=Q.asm.N).apply(null,arguments)},Q._crypto_auth_keybytes=function(){return(Q._crypto_auth_keybytes=Q.asm.O).apply(null,arguments)},Q._crypto_auth=function(){return(Q._crypto_auth=Q.asm.P).apply(null,arguments)},Q._crypto_auth_verify=function(){return(Q._crypto_auth_verify=Q.asm.Q).apply(null,arguments)},Q._crypto_auth_keygen=function(){return(Q._crypto_auth_keygen=Q.asm.R).apply(null,arguments)},Q._crypto_box_seedbytes=function(){return(Q._crypto_box_seedbytes=Q.asm.S).apply(null,arguments)},Q._crypto_box_publickeybytes=function(){return(Q._crypto_box_publickeybytes=Q.asm.T).apply(null,arguments)},Q._crypto_box_secretkeybytes=function(){return(Q._crypto_box_secretkeybytes=Q.asm.U).apply(null,arguments)},Q._crypto_box_beforenmbytes=function(){return(Q._crypto_box_beforenmbytes=Q.asm.V).apply(null,arguments)},Q._crypto_box_noncebytes=function(){return(Q._crypto_box_noncebytes=Q.asm.W).apply(null,arguments)},Q._crypto_box_macbytes=function(){return(Q._crypto_box_macbytes=Q.asm.X).apply(null,arguments)},Q._crypto_box_messagebytes_max=function(){return(Q._crypto_box_messagebytes_max=Q.asm.Y).apply(null,arguments)},Q._crypto_box_seed_keypair=function(){return(Q._crypto_box_seed_keypair=Q.asm.Z).apply(null,arguments)},Q._crypto_box_keypair=function(){return(Q._crypto_box_keypair=Q.asm._).apply(null,arguments)},Q._crypto_box_beforenm=function(){return(Q._crypto_box_beforenm=Q.asm.$).apply(null,arguments)},Q._crypto_box_detached_afternm=function(){return(Q._crypto_box_detached_afternm=Q.asm.aa).apply(null,arguments)},Q._crypto_box_detached=function(){return(Q._crypto_box_detached=Q.asm.ba).apply(null,arguments)},Q._crypto_box_easy_afternm=function(){return(Q._crypto_box_easy_afternm=Q.asm.ca).apply(null,arguments)},Q._crypto_box_easy=function(){return(Q._crypto_box_easy=Q.asm.da).apply(null,arguments)},Q._crypto_box_open_detached_afternm=function(){return(Q._crypto_box_open_detached_afternm=Q.asm.ea).apply(null,arguments)},Q._crypto_box_open_detached=function(){return(Q._crypto_box_open_detached=Q.asm.fa).apply(null,arguments)},Q._crypto_box_open_easy_afternm=function(){return(Q._crypto_box_open_easy_afternm=Q.asm.ga).apply(null,arguments)},Q._crypto_box_open_easy=function(){return(Q._crypto_box_open_easy=Q.asm.ha).apply(null,arguments)},Q._crypto_box_seal=function(){return(Q._crypto_box_seal=Q.asm.ia).apply(null,arguments)},Q._crypto_box_seal_open=function(){return(Q._crypto_box_seal_open=Q.asm.ja).apply(null,arguments)},Q._crypto_box_sealbytes=function(){return(Q._crypto_box_sealbytes=Q.asm.ka).apply(null,arguments)},Q._crypto_generichash_bytes_min=function(){return(Q._crypto_generichash_bytes_min=Q.asm.la).apply(null,arguments)},Q._crypto_generichash_bytes_max=function(){return(Q._crypto_generichash_bytes_max=Q.asm.ma).apply(null,arguments)},Q._crypto_generichash_bytes=function(){return(Q._crypto_generichash_bytes=Q.asm.na).apply(null,arguments)},Q._crypto_generichash_keybytes_min=function(){return(Q._crypto_generichash_keybytes_min=Q.asm.oa).apply(null,arguments)},Q._crypto_generichash_keybytes_max=function(){return(Q._crypto_generichash_keybytes_max=Q.asm.pa).apply(null,arguments)},Q._crypto_generichash_keybytes=function(){return(Q._crypto_generichash_keybytes=Q.asm.qa).apply(null,arguments)},Q._crypto_generichash_statebytes=function(){return(Q._crypto_generichash_statebytes=Q.asm.ra).apply(null,arguments)},Q._crypto_generichash=function(){return(Q._crypto_generichash=Q.asm.sa).apply(null,arguments)},Q._crypto_generichash_init=function(){return(Q._crypto_generichash_init=Q.asm.ta).apply(null,arguments)},Q._crypto_generichash_update=function(){return(Q._crypto_generichash_update=Q.asm.ua).apply(null,arguments)},Q._crypto_generichash_final=function(){return(Q._crypto_generichash_final=Q.asm.va).apply(null,arguments)},Q._crypto_generichash_keygen=function(){return(Q._crypto_generichash_keygen=Q.asm.wa).apply(null,arguments)},Q._crypto_hash_bytes=function(){return(Q._crypto_hash_bytes=Q.asm.xa).apply(null,arguments)},Q._crypto_hash=function(){return(Q._crypto_hash=Q.asm.ya).apply(null,arguments)},Q._crypto_kdf_bytes_min=function(){return(Q._crypto_kdf_bytes_min=Q.asm.za).apply(null,arguments)},Q._crypto_kdf_bytes_max=function(){return(Q._crypto_kdf_bytes_max=Q.asm.Aa).apply(null,arguments)},Q._crypto_kdf_contextbytes=function(){return(Q._crypto_kdf_contextbytes=Q.asm.Ba).apply(null,arguments)},Q._crypto_kdf_keybytes=function(){return(Q._crypto_kdf_keybytes=Q.asm.Ca).apply(null,arguments)},Q._crypto_kdf_derive_from_key=function(){return(Q._crypto_kdf_derive_from_key=Q.asm.Da).apply(null,arguments)},Q._crypto_kdf_keygen=function(){return(Q._crypto_kdf_keygen=Q.asm.Ea).apply(null,arguments)},Q._crypto_kx_seed_keypair=function(){return(Q._crypto_kx_seed_keypair=Q.asm.Fa).apply(null,arguments)},Q._crypto_kx_keypair=function(){return(Q._crypto_kx_keypair=Q.asm.Ga).apply(null,arguments)},Q._crypto_kx_client_session_keys=function(){return(Q._crypto_kx_client_session_keys=Q.asm.Ha).apply(null,arguments)},Q._crypto_kx_server_session_keys=function(){return(Q._crypto_kx_server_session_keys=Q.asm.Ia).apply(null,arguments)},Q._crypto_kx_publickeybytes=function(){return(Q._crypto_kx_publickeybytes=Q.asm.Ja).apply(null,arguments)},Q._crypto_kx_secretkeybytes=function(){return(Q._crypto_kx_secretkeybytes=Q.asm.Ka).apply(null,arguments)},Q._crypto_kx_seedbytes=function(){return(Q._crypto_kx_seedbytes=Q.asm.La).apply(null,arguments)},Q._crypto_kx_sessionkeybytes=function(){return(Q._crypto_kx_sessionkeybytes=Q.asm.Ma).apply(null,arguments)},Q._crypto_pwhash_alg_argon2i13=function(){return(Q._crypto_pwhash_alg_argon2i13=Q.asm.Na).apply(null,arguments)},Q._crypto_pwhash_alg_argon2id13=function(){return(Q._crypto_pwhash_alg_argon2id13=Q.asm.Oa).apply(null,arguments)},Q._crypto_pwhash_alg_default=function(){return(Q._crypto_pwhash_alg_default=Q.asm.Pa).apply(null,arguments)},Q._crypto_pwhash_bytes_min=function(){return(Q._crypto_pwhash_bytes_min=Q.asm.Qa).apply(null,arguments)},Q._crypto_pwhash_bytes_max=function(){return(Q._crypto_pwhash_bytes_max=Q.asm.Ra).apply(null,arguments)},Q._crypto_pwhash_passwd_min=function(){return(Q._crypto_pwhash_passwd_min=Q.asm.Sa).apply(null,arguments)},Q._crypto_pwhash_passwd_max=function(){return(Q._crypto_pwhash_passwd_max=Q.asm.Ta).apply(null,arguments)},Q._crypto_pwhash_saltbytes=function(){return(Q._crypto_pwhash_saltbytes=Q.asm.Ua).apply(null,arguments)},Q._crypto_pwhash_strbytes=function(){return(Q._crypto_pwhash_strbytes=Q.asm.Va).apply(null,arguments)},Q._crypto_pwhash_strprefix=function(){return(Q._crypto_pwhash_strprefix=Q.asm.Wa).apply(null,arguments)},Q._crypto_pwhash_opslimit_min=function(){return(Q._crypto_pwhash_opslimit_min=Q.asm.Xa).apply(null,arguments)},Q._crypto_pwhash_opslimit_max=function(){return(Q._crypto_pwhash_opslimit_max=Q.asm.Ya).apply(null,arguments)},Q._crypto_pwhash_memlimit_min=function(){return(Q._crypto_pwhash_memlimit_min=Q.asm.Za).apply(null,arguments)},Q._crypto_pwhash_memlimit_max=function(){return(Q._crypto_pwhash_memlimit_max=Q.asm._a).apply(null,arguments)},Q._crypto_pwhash_opslimit_interactive=function(){return(Q._crypto_pwhash_opslimit_interactive=Q.asm.$a).apply(null,arguments)},Q._crypto_pwhash_memlimit_interactive=function(){return(Q._crypto_pwhash_memlimit_interactive=Q.asm.ab).apply(null,arguments)},Q._crypto_pwhash_opslimit_moderate=function(){return(Q._crypto_pwhash_opslimit_moderate=Q.asm.bb).apply(null,arguments)},Q._crypto_pwhash_memlimit_moderate=function(){return(Q._crypto_pwhash_memlimit_moderate=Q.asm.cb).apply(null,arguments)},Q._crypto_pwhash_opslimit_sensitive=function(){return(Q._crypto_pwhash_opslimit_sensitive=Q.asm.db).apply(null,arguments)},Q._crypto_pwhash_memlimit_sensitive=function(){return(Q._crypto_pwhash_memlimit_sensitive=Q.asm.eb).apply(null,arguments)},Q._crypto_pwhash=function(){return(Q._crypto_pwhash=Q.asm.fb).apply(null,arguments)},Q._crypto_pwhash_str=function(){return(Q._crypto_pwhash_str=Q.asm.gb).apply(null,arguments)},Q._crypto_pwhash_str_alg=function(){return(Q._crypto_pwhash_str_alg=Q.asm.hb).apply(null,arguments)},Q._crypto_pwhash_str_verify=function(){return(Q._crypto_pwhash_str_verify=Q.asm.ib).apply(null,arguments)},Q._crypto_pwhash_str_needs_rehash=function(){return(Q._crypto_pwhash_str_needs_rehash=Q.asm.jb).apply(null,arguments)},Q._crypto_scalarmult_base=function(){return(Q._crypto_scalarmult_base=Q.asm.kb).apply(null,arguments)},Q._crypto_scalarmult=function(){return(Q._crypto_scalarmult=Q.asm.lb).apply(null,arguments)},Q._crypto_scalarmult_bytes=function(){return(Q._crypto_scalarmult_bytes=Q.asm.mb).apply(null,arguments)},Q._crypto_scalarmult_scalarbytes=function(){return(Q._crypto_scalarmult_scalarbytes=Q.asm.nb).apply(null,arguments)},Q._crypto_secretbox_keybytes=function(){return(Q._crypto_secretbox_keybytes=Q.asm.ob).apply(null,arguments)},Q._crypto_secretbox_noncebytes=function(){return(Q._crypto_secretbox_noncebytes=Q.asm.pb).apply(null,arguments)},Q._crypto_secretbox_macbytes=function(){return(Q._crypto_secretbox_macbytes=Q.asm.qb).apply(null,arguments)},Q._crypto_secretbox_messagebytes_max=function(){return(Q._crypto_secretbox_messagebytes_max=Q.asm.rb).apply(null,arguments)},Q._crypto_secretbox_keygen=function(){return(Q._crypto_secretbox_keygen=Q.asm.sb).apply(null,arguments)},Q._crypto_secretbox_detached=function(){return(Q._crypto_secretbox_detached=Q.asm.tb).apply(null,arguments)},Q._crypto_secretbox_easy=function(){return(Q._crypto_secretbox_easy=Q.asm.ub).apply(null,arguments)},Q._crypto_secretbox_open_detached=function(){return(Q._crypto_secretbox_open_detached=Q.asm.vb).apply(null,arguments)},Q._crypto_secretbox_open_easy=function(){return(Q._crypto_secretbox_open_easy=Q.asm.wb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_keygen=function(){return(Q._crypto_secretstream_xchacha20poly1305_keygen=Q.asm.xb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_init_push=function(){return(Q._crypto_secretstream_xchacha20poly1305_init_push=Q.asm.yb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_init_pull=function(){return(Q._crypto_secretstream_xchacha20poly1305_init_pull=Q.asm.zb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_rekey=function(){return(Q._crypto_secretstream_xchacha20poly1305_rekey=Q.asm.Ab).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_push=function(){return(Q._crypto_secretstream_xchacha20poly1305_push=Q.asm.Bb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_pull=function(){return(Q._crypto_secretstream_xchacha20poly1305_pull=Q.asm.Cb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_statebytes=function(){return(Q._crypto_secretstream_xchacha20poly1305_statebytes=Q.asm.Db).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_abytes=function(){return(Q._crypto_secretstream_xchacha20poly1305_abytes=Q.asm.Eb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_headerbytes=function(){return(Q._crypto_secretstream_xchacha20poly1305_headerbytes=Q.asm.Fb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_keybytes=function(){return(Q._crypto_secretstream_xchacha20poly1305_keybytes=Q.asm.Gb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_messagebytes_max=function(){return(Q._crypto_secretstream_xchacha20poly1305_messagebytes_max=Q.asm.Hb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_tag_message=function(){return(Q._crypto_secretstream_xchacha20poly1305_tag_message=Q.asm.Ib).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_tag_push=function(){return(Q._crypto_secretstream_xchacha20poly1305_tag_push=Q.asm.Jb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_tag_rekey=function(){return(Q._crypto_secretstream_xchacha20poly1305_tag_rekey=Q.asm.Kb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_tag_final=function(){return(Q._crypto_secretstream_xchacha20poly1305_tag_final=Q.asm.Lb).apply(null,arguments)},Q._crypto_shorthash_bytes=function(){return(Q._crypto_shorthash_bytes=Q.asm.Mb).apply(null,arguments)},Q._crypto_shorthash_keybytes=function(){return(Q._crypto_shorthash_keybytes=Q.asm.Nb).apply(null,arguments)},Q._crypto_shorthash=function(){return(Q._crypto_shorthash=Q.asm.Ob).apply(null,arguments)},Q._crypto_shorthash_keygen=function(){return(Q._crypto_shorthash_keygen=Q.asm.Pb).apply(null,arguments)},Q._crypto_sign_statebytes=function(){return(Q._crypto_sign_statebytes=Q.asm.Qb).apply(null,arguments)},Q._crypto_sign_bytes=function(){return(Q._crypto_sign_bytes=Q.asm.Rb).apply(null,arguments)},Q._crypto_sign_seedbytes=function(){return(Q._crypto_sign_seedbytes=Q.asm.Sb).apply(null,arguments)},Q._crypto_sign_publickeybytes=function(){return(Q._crypto_sign_publickeybytes=Q.asm.Tb).apply(null,arguments)},Q._crypto_sign_secretkeybytes=function(){return(Q._crypto_sign_secretkeybytes=Q.asm.Ub).apply(null,arguments)},Q._crypto_sign_messagebytes_max=function(){return(Q._crypto_sign_messagebytes_max=Q.asm.Vb).apply(null,arguments)},Q._crypto_sign_seed_keypair=function(){return(Q._crypto_sign_seed_keypair=Q.asm.Wb).apply(null,arguments)},Q._crypto_sign_keypair=function(){return(Q._crypto_sign_keypair=Q.asm.Xb).apply(null,arguments)},Q._crypto_sign=function(){return(Q._crypto_sign=Q.asm.Yb).apply(null,arguments)},Q._crypto_sign_open=function(){return(Q._crypto_sign_open=Q.asm.Zb).apply(null,arguments)},Q._crypto_sign_detached=function(){return(Q._crypto_sign_detached=Q.asm._b).apply(null,arguments)},Q._crypto_sign_verify_detached=function(){return(Q._crypto_sign_verify_detached=Q.asm.$b).apply(null,arguments)},Q._crypto_sign_init=function(){return(Q._crypto_sign_init=Q.asm.ac).apply(null,arguments)},Q._crypto_sign_update=function(){return(Q._crypto_sign_update=Q.asm.bc).apply(null,arguments)},Q._crypto_sign_final_create=function(){return(Q._crypto_sign_final_create=Q.asm.cc).apply(null,arguments)},Q._crypto_sign_final_verify=function(){return(Q._crypto_sign_final_verify=Q.asm.dc).apply(null,arguments)},Q._crypto_sign_ed25519_pk_to_curve25519=function(){return(Q._crypto_sign_ed25519_pk_to_curve25519=Q.asm.ec).apply(null,arguments)},Q._crypto_sign_ed25519_sk_to_curve25519=function(){return(Q._crypto_sign_ed25519_sk_to_curve25519=Q.asm.fc).apply(null,arguments)},Q._randombytes_random=function(){return(Q._randombytes_random=Q.asm.gc).apply(null,arguments)},Q._randombytes_stir=function(){return(Q._randombytes_stir=Q.asm.hc).apply(null,arguments)},Q._randombytes_uniform=function(){return(Q._randombytes_uniform=Q.asm.ic).apply(null,arguments)},Q._randombytes_buf=function(){return(Q._randombytes_buf=Q.asm.jc).apply(null,arguments)},Q._randombytes_buf_deterministic=function(){return(Q._randombytes_buf_deterministic=Q.asm.kc).apply(null,arguments)},Q._randombytes_seedbytes=function(){return(Q._randombytes_seedbytes=Q.asm.lc).apply(null,arguments)},Q._randombytes_close=function(){return(Q._randombytes_close=Q.asm.mc).apply(null,arguments)},Q._randombytes=function(){return(Q._randombytes=Q.asm.nc).apply(null,arguments)},Q._sodium_bin2hex=function(){return(Q._sodium_bin2hex=Q.asm.oc).apply(null,arguments)},Q._sodium_hex2bin=function(){return(Q._sodium_hex2bin=Q.asm.pc).apply(null,arguments)},Q._sodium_base64_encoded_len=function(){return(Q._sodium_base64_encoded_len=Q.asm.qc).apply(null,arguments)},Q._sodium_bin2base64=function(){return(Q._sodium_bin2base64=Q.asm.rc).apply(null,arguments)},Q._sodium_base642bin=function(){return(Q._sodium_base642bin=Q.asm.sc).apply(null,arguments)},Q._sodium_init=function(){return(Q._sodium_init=Q.asm.tc).apply(null,arguments)},Q._sodium_pad=function(){return(Q._sodium_pad=Q.asm.uc).apply(null,arguments)},Q._sodium_unpad=function(){return(Q._sodium_unpad=Q.asm.vc).apply(null,arguments)},Q._sodium_version_string=function(){return(Q._sodium_version_string=Q.asm.wc).apply(null,arguments)},Q._sodium_library_version_major=function(){return(Q._sodium_library_version_major=Q.asm.xc).apply(null,arguments)},Q._sodium_library_version_minor=function(){return(Q._sodium_library_version_minor=Q.asm.yc).apply(null,arguments)},Q._sodium_library_minimal=function(){return(Q._sodium_library_minimal=Q.asm.zc).apply(null,arguments)},Q.___errno_location=function(){return(SA=Q.___errno_location=Q.asm.Ac).apply(null,arguments)});function NA(A){function I(){mA||(mA=!0,Q.calledRun=!0,F||(X(),V(),Q.onRuntimeInitialized&&Q.onRuntimeInitialized(),W()))}A=A||E,Z>0||(q(),Z>0||(Q.setStatus?(Q.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){Q.setStatus(\"\")}),1),I()}),1)):I()))}if(Q._malloc=function(){return(Q._malloc=Q.asm.Bc).apply(null,arguments)},Q._free=function(){return(Q._free=Q.asm.Cc).apply(null,arguments)},Q.setValue=p,Q.getValue=l,Q.UTF8ToString=N,z=function A(){mA||NA(),mA||(z=A)},Q.run=NA,Q.preInit)for(\"function\"==typeof Q.preInit&&(Q.preInit=[Q.preInit]);Q.preInit.length>0;)Q.preInit.pop()();NA()}))};var g,Q=void 0!==Q?Q:{},C={};for(g in Q)Q.hasOwnProperty(g)&&(C[g]=Q[g]);var E=[],i=!1,n=!1,a=!1,r=!1;i=\"object\"==typeof window,n=\"function\"==typeof importScripts,a=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,r=!i&&!a&&!n;var o,e,t,f,c,y=\"\";function s(A){return Q.locateFile?Q.locateFile(A,y):y+A}a?(y=n?__webpack_require__(/*! path */ \"?ebe9\").dirname(y)+\"/\":__dirname+\"/\",o=function(A,I){var g=HA(A);return g?I?g:g.toString():(f||(f=__webpack_require__(/*! fs */ \"?f0f8\")),c||(c=__webpack_require__(/*! path */ \"?ebe9\")),A=c.normalize(A),f.readFileSync(A,I?null:\"utf8\"))},t=function(A){var I=o(A,!0);return I.buffer||(I=new Uint8Array(I)),F(I.buffer),I},process.argv.length>1&&process.argv[1].replace(/\\\\/g,\"/\"),E=process.argv.slice(2), true&&(module.exports=Q),Q.inspect=function(){return\"[Emscripten Module object]\"}):r?(\"undefined\"!=typeof read&&(o=function(A){var I=HA(A);return I?GA(I):read(A)}),t=function(A){var I;return(I=HA(A))?I:\"function\"==typeof readbuffer?new Uint8Array(readbuffer(A)):(F(\"object\"==typeof(I=read(A,\"binary\"))),I)},\"undefined\"!=typeof scriptArgs?E=scriptArgs:void 0!==arguments&&(E=arguments),\"undefined\"!=typeof print&&(\"undefined\"==typeof console&&(console={}),console.log=print,console.warn=console.error=\"undefined\"!=typeof printErr?printErr:print)):(i||n)&&(n?y=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(y=document.currentScript.src),y=0!==y.indexOf(\"blob:\")?y.substr(0,y.lastIndexOf(\"/\")+1):\"\",o=function(A){try{var I=new XMLHttpRequest;return I.open(\"GET\",A,!1),I.send(null),I.responseText}catch(I){var g=HA(A);if(g)return GA(g);throw I}},n&&(t=function(A){try{var I=new XMLHttpRequest;return I.open(\"GET\",A,!1),I.responseType=\"arraybuffer\",I.send(null),new Uint8Array(I.response)}catch(I){var g=HA(A);if(g)return g;throw I}}),e=function(A,I,g){var B=new XMLHttpRequest;B.open(\"GET\",A,!0),B.responseType=\"arraybuffer\",B.onload=function(){if(200==B.status||0==B.status&&B.response)I(B.response);else{var Q=HA(A);Q?I(Q.buffer):g()}},B.onerror=g,B.send(null)}),Q.print;var w,h,D=Q.printErr||void 0;for(g in C)C.hasOwnProperty(g)&&(Q[g]=C[g]);function u(A,I,g,B){switch(\"*\"===(g=g||\"i8\").charAt(g.length-1)&&(g=\"i32\"),g){case\"i1\":case\"i8\":k[A>>0]=I;break;case\"i16\":H[A>>1]=I;break;case\"i32\":Y[A>>2]=I;break;case\"i64\":EA=[I>>>0,(CA=I,+Math.abs(CA)>=1?CA>0?(0|Math.min(+Math.floor(CA/4294967296),4294967295))>>>0:~~+Math.ceil((CA-+(~~CA>>>0))/4294967296)>>>0:0)],Y[A>>2]=EA[0],Y[A+4>>2]=EA[1];break;case\"float\":b[A>>2]=I;break;case\"double\":m[A>>3]=I;break;default:$(\"invalid type for setValue: \"+g)}}function p(A,I,g){switch(\"*\"===(I=I||\"i8\").charAt(I.length-1)&&(I=\"i32\"),I){case\"i1\":case\"i8\":return k[A>>0];case\"i16\":return H[A>>1];case\"i32\":case\"i64\":return Y[A>>2];case\"float\":return b[A>>2];case\"double\":return m[A>>3];default:$(\"invalid type for getValue: \"+I)}return null}C=null,Q.arguments&&(E=Q.arguments),Q.thisProgram&&Q.thisProgram,Q.quit&&Q.quit,Q.wasmBinary&&(w=Q.wasmBinary),Q.noExitRuntime&&Q.noExitRuntime,\"object\"!=typeof WebAssembly&&$(\"no native wasm support detected\");var l=!1;function F(A,I){A||$(\"Assertion failed: \"+I)}var G,k,_,H,Y,b,m,v=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;function U(A,I,g){for(var B=I+g,Q=I;A[Q]&&!(Q>=B);)++Q;if(Q-I>16&&A.subarray&&v)return v.decode(A.subarray(I,Q));for(var C=\"\";I<Q;){var E=A[I++];if(128&E){var i=63&A[I++];if(192!=(224&E)){var n=63&A[I++];if((E=224==(240&E)?(15&E)<<12|i<<6|n:(7&E)<<18|i<<12|n<<6|63&A[I++])<65536)C+=String.fromCharCode(E);else{var a=E-65536;C+=String.fromCharCode(55296|a>>10,56320|1023&a)}}else C+=String.fromCharCode((31&E)<<6|i)}else C+=String.fromCharCode(E)}return C}function S(A,I){return A?U(_,A,I):\"\"}function N(A,I){return A%I>0&&(A+=I-A%I),A}function M(A){G=A,Q.HEAP8=k=new Int8Array(A),Q.HEAP16=H=new Int16Array(A),Q.HEAP32=Y=new Int32Array(A),Q.HEAPU8=_=new Uint8Array(A),Q.HEAPU16=new Uint16Array(A),Q.HEAPU32=new Uint32Array(A),Q.HEAPF32=b=new Float32Array(A),Q.HEAPF64=m=new Float64Array(A)}Q.INITIAL_MEMORY;var d,P=[],R=[],J=[],x=[];function L(){if(Q.preRun)for(\"function\"==typeof Q.preRun&&(Q.preRun=[Q.preRun]);Q.preRun.length;)V(Q.preRun.shift());eA(P)}function K(){eA(R)}function q(){eA(J)}function X(){if(Q.postRun)for(\"function\"==typeof Q.postRun&&(Q.postRun=[Q.postRun]);Q.postRun.length;)W(Q.postRun.shift());eA(x)}function V(A){P.unshift(A)}function W(A){x.unshift(A)}R.push({func:function(){mA()}});var T=0,j=null,Z=null;function O(A){T++,Q.monitorRunDependencies&&Q.monitorRunDependencies(T)}function z(A){if(T--,Q.monitorRunDependencies&&Q.monitorRunDependencies(T),0==T&&(null!==j&&(clearInterval(j),j=null),Z)){var I=Z;Z=null,I()}}function $(A){throw Q.onAbort&&Q.onAbort(A),D(A+=\"\"),l=!0,A=\"abort(\"+A+\"). Build with -s ASSERTIONS=1 for more info.\",new WebAssembly.RuntimeError(A)}function AA(A,I){return String.prototype.startsWith?A.startsWith(I):0===A.indexOf(I)}Q.preloadedImages={},Q.preloadedAudios={};var IA=\"data:application/octet-stream;base64,\";function gA(A){return AA(A,IA)}var BA=\"file://\";function QA(A){return AA(A,BA)}var CA,EA,iA=\"data:application/octet-stream;base64,\";function nA(A){try{if(A==iA&&w)return new Uint8Array(w);var I=HA(A);if(I)return I;if(t)return t(A);throw\"both async and sync fetching of the wasm failed\"}catch(A){$(A)}}function aA(){if(!w&&(i||n)){if(\"function\"==typeof fetch&&!QA(iA))return fetch(iA,{credentials:\"same-origin\"}).then((function(A){if(!A.ok)throw\"failed to load wasm binary file at '\"+iA+\"'\";return A.arrayBuffer()})).catch((function(){return nA(iA)}));if(e)return new Promise((function(A,I){e(iA,(function(I){A(new Uint8Array(I))}),I)}))}return Promise.resolve().then((function(){return nA(iA)}))}function rA(){var A={a:bA};function I(A,I){var g=A.exports;Q.asm=g,M((h=Q.asm.g).buffer),d=Q.asm.h,z()}function g(A){I(A.instance)}function B(I){return aA().then((function(I){return WebAssembly.instantiate(I,A)})).then(I,(function(A){D(\"failed to asynchronously prepare wasm: \"+A),$(A)}))}if(O(),Q.instantiateWasm)try{return Q.instantiateWasm(A,I)}catch(A){return D(\"Module.instantiateWasm callback failed with error: \"+A),!1}return w||\"function\"!=typeof WebAssembly.instantiateStreaming||gA(iA)||QA(iA)||\"function\"!=typeof fetch?B(g):fetch(iA,{credentials:\"same-origin\"}).then((function(I){return WebAssembly.instantiateStreaming(I,A).then(g,(function(A){return D(\"wasm streaming compile failed: \"+A),D(\"falling back to ArrayBuffer instantiation\"),B(g)}))})),{}}gA(iA)||(iA=s(iA));var oA={1024:function(){return Q.getRandomValue()},1062:function(){if(void 0===Q.getRandomValue)try{var A=\"object\"==typeof window?window:self,I=void 0!==A.crypto?A.crypto:A.msCrypto,g=function(){var A=new Uint32Array(1);return I.getRandomValues(A),A[0]>>>0};g(),Q.getRandomValue=g}catch(A){try{var B=__webpack_require__(/*! crypto */ \"?5162\"),C=function(){var A=B.randomBytes(4);return(A[0]<<24|A[1]<<16|A[2]<<8|A[3])>>>0};C(),Q.getRandomValue=C}catch(A){throw\"No secure random number generator found\"}}}};function eA(A){for(;A.length>0;){var I=A.shift();if(\"function\"!=typeof I){var g=I.func;\"number\"==typeof g?void 0===I.arg?d.get(g)():d.get(g)(I.arg):g(void 0===I.arg?null:I.arg)}else I(Q)}}function tA(A,I,g,B){$(\"Assertion failed: \"+S(A)+\", at: \"+[I?S(I):\"unknown filename\",g,B?S(B):\"unknown function\"])}function fA(){$()}function cA(A,I,g){var B=lA(I,g);return oA[A].apply(null,B)}function yA(A,I,g){_.copyWithin(A,I,I+g)}function sA(){return _.length}function wA(A){try{return h.grow(A-G.byteLength+65535>>>16),M(h.buffer),1}catch(A){}}function hA(A){A>>>=0;var I=sA(),g=2147483648;if(A>g)return!1;for(var B=1;B<=4;B*=2){var Q=I*(1+.2/B);if(Q=Math.min(Q,A+100663296),wA(Math.min(g,N(Math.max(16777216,A,Q),65536))))return!0}return!1}function DA(A){return Y[vA()>>2]=A,A}function uA(A){switch(A){case 30:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return\"object\"==typeof navigator&&navigator.hardwareConcurrency||1}return DA(28),-1}var pA=[];function lA(A,I){var g;for(pA.length=0,I>>=2;g=_[A++];){var B=g<105;B&&1&I&&I++,pA.push(B?m[I++>>1]:Y[I]),++I}return pA}var FA=!1;function GA(A){for(var I=[],g=0;g<A.length;g++){var B=A[g];B>255&&(FA&&F(!1,\"Character code \"+B+\" (\"+String.fromCharCode(B)+\")  at offset \"+g+\" not in 0x00-0xFF.\"),B&=255),I.push(String.fromCharCode(B))}return I.join(\"\")}var kA=\"function\"==typeof atob?atob:function(A){var I,g,B,Q,C,E,i=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",n=\"\",a=0;A=A.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");do{I=i.indexOf(A.charAt(a++))<<2|(Q=i.indexOf(A.charAt(a++)))>>4,g=(15&Q)<<4|(C=i.indexOf(A.charAt(a++)))>>2,B=(3&C)<<6|(E=i.indexOf(A.charAt(a++))),n+=String.fromCharCode(I),64!==C&&(n+=String.fromCharCode(g)),64!==E&&(n+=String.fromCharCode(B))}while(a<A.length);return n};function _A(A){if(\"boolean\"==typeof a&&a){var I;try{I=Buffer.from(A,\"base64\")}catch(g){I=new Buffer(A,\"base64\")}return new Uint8Array(I.buffer,I.byteOffset,I.byteLength)}try{for(var g=kA(A),B=new Uint8Array(g.length),Q=0;Q<g.length;++Q)B[Q]=g.charCodeAt(Q);return B}catch(A){throw new Error(\"Converting base64 string to bytes failed.\")}}function HA(A){if(gA(A))return _A(A.slice(IA.length))}var YA,bA={a:tA,c:fA,b:cA,e:yA,f:hA,d:uA},mA=(rA(),Q.___wasm_call_ctors=function(){return(mA=Q.___wasm_call_ctors=Q.asm.i).apply(null,arguments)}),vA=(Q._crypto_aead_chacha20poly1305_encrypt_detached=function(){return(Q._crypto_aead_chacha20poly1305_encrypt_detached=Q.asm.j).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_encrypt=function(){return(Q._crypto_aead_chacha20poly1305_encrypt=Q.asm.k).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_encrypt_detached=function(){return(Q._crypto_aead_chacha20poly1305_ietf_encrypt_detached=Q.asm.l).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_encrypt=function(){return(Q._crypto_aead_chacha20poly1305_ietf_encrypt=Q.asm.m).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_decrypt_detached=function(){return(Q._crypto_aead_chacha20poly1305_decrypt_detached=Q.asm.n).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_decrypt=function(){return(Q._crypto_aead_chacha20poly1305_decrypt=Q.asm.o).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_decrypt_detached=function(){return(Q._crypto_aead_chacha20poly1305_ietf_decrypt_detached=Q.asm.p).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_decrypt=function(){return(Q._crypto_aead_chacha20poly1305_ietf_decrypt=Q.asm.q).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_keybytes=function(){return(Q._crypto_aead_chacha20poly1305_ietf_keybytes=Q.asm.r).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_npubbytes=function(){return(Q._crypto_aead_chacha20poly1305_ietf_npubbytes=Q.asm.s).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_nsecbytes=function(){return(Q._crypto_aead_chacha20poly1305_ietf_nsecbytes=Q.asm.t).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_abytes=function(){return(Q._crypto_aead_chacha20poly1305_ietf_abytes=Q.asm.u).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_messagebytes_max=function(){return(Q._crypto_aead_chacha20poly1305_ietf_messagebytes_max=Q.asm.v).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_ietf_keygen=function(){return(Q._crypto_aead_chacha20poly1305_ietf_keygen=Q.asm.w).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_keybytes=function(){return(Q._crypto_aead_chacha20poly1305_keybytes=Q.asm.x).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_npubbytes=function(){return(Q._crypto_aead_chacha20poly1305_npubbytes=Q.asm.y).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_nsecbytes=function(){return(Q._crypto_aead_chacha20poly1305_nsecbytes=Q.asm.z).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_abytes=function(){return(Q._crypto_aead_chacha20poly1305_abytes=Q.asm.A).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_messagebytes_max=function(){return(Q._crypto_aead_chacha20poly1305_messagebytes_max=Q.asm.B).apply(null,arguments)},Q._crypto_aead_chacha20poly1305_keygen=function(){return(Q._crypto_aead_chacha20poly1305_keygen=Q.asm.C).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_encrypt_detached=function(){return(Q._crypto_aead_xchacha20poly1305_ietf_encrypt_detached=Q.asm.D).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_encrypt=function(){return(Q._crypto_aead_xchacha20poly1305_ietf_encrypt=Q.asm.E).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_decrypt_detached=function(){return(Q._crypto_aead_xchacha20poly1305_ietf_decrypt_detached=Q.asm.F).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_decrypt=function(){return(Q._crypto_aead_xchacha20poly1305_ietf_decrypt=Q.asm.G).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_keybytes=function(){return(Q._crypto_aead_xchacha20poly1305_ietf_keybytes=Q.asm.H).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_npubbytes=function(){return(Q._crypto_aead_xchacha20poly1305_ietf_npubbytes=Q.asm.I).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_nsecbytes=function(){return(Q._crypto_aead_xchacha20poly1305_ietf_nsecbytes=Q.asm.J).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_abytes=function(){return(Q._crypto_aead_xchacha20poly1305_ietf_abytes=Q.asm.K).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_messagebytes_max=function(){return(Q._crypto_aead_xchacha20poly1305_ietf_messagebytes_max=Q.asm.L).apply(null,arguments)},Q._crypto_aead_xchacha20poly1305_ietf_keygen=function(){return(Q._crypto_aead_xchacha20poly1305_ietf_keygen=Q.asm.M).apply(null,arguments)},Q._crypto_auth_bytes=function(){return(Q._crypto_auth_bytes=Q.asm.N).apply(null,arguments)},Q._crypto_auth_keybytes=function(){return(Q._crypto_auth_keybytes=Q.asm.O).apply(null,arguments)},Q._crypto_auth=function(){return(Q._crypto_auth=Q.asm.P).apply(null,arguments)},Q._crypto_auth_verify=function(){return(Q._crypto_auth_verify=Q.asm.Q).apply(null,arguments)},Q._crypto_auth_keygen=function(){return(Q._crypto_auth_keygen=Q.asm.R).apply(null,arguments)},Q._crypto_box_seedbytes=function(){return(Q._crypto_box_seedbytes=Q.asm.S).apply(null,arguments)},Q._crypto_box_publickeybytes=function(){return(Q._crypto_box_publickeybytes=Q.asm.T).apply(null,arguments)},Q._crypto_box_secretkeybytes=function(){return(Q._crypto_box_secretkeybytes=Q.asm.U).apply(null,arguments)},Q._crypto_box_beforenmbytes=function(){return(Q._crypto_box_beforenmbytes=Q.asm.V).apply(null,arguments)},Q._crypto_box_noncebytes=function(){return(Q._crypto_box_noncebytes=Q.asm.W).apply(null,arguments)},Q._crypto_box_macbytes=function(){return(Q._crypto_box_macbytes=Q.asm.X).apply(null,arguments)},Q._crypto_box_messagebytes_max=function(){return(Q._crypto_box_messagebytes_max=Q.asm.Y).apply(null,arguments)},Q._crypto_box_seed_keypair=function(){return(Q._crypto_box_seed_keypair=Q.asm.Z).apply(null,arguments)},Q._crypto_box_keypair=function(){return(Q._crypto_box_keypair=Q.asm._).apply(null,arguments)},Q._crypto_box_beforenm=function(){return(Q._crypto_box_beforenm=Q.asm.$).apply(null,arguments)},Q._crypto_box_detached_afternm=function(){return(Q._crypto_box_detached_afternm=Q.asm.aa).apply(null,arguments)},Q._crypto_box_detached=function(){return(Q._crypto_box_detached=Q.asm.ba).apply(null,arguments)},Q._crypto_box_easy_afternm=function(){return(Q._crypto_box_easy_afternm=Q.asm.ca).apply(null,arguments)},Q._crypto_box_easy=function(){return(Q._crypto_box_easy=Q.asm.da).apply(null,arguments)},Q._crypto_box_open_detached_afternm=function(){return(Q._crypto_box_open_detached_afternm=Q.asm.ea).apply(null,arguments)},Q._crypto_box_open_detached=function(){return(Q._crypto_box_open_detached=Q.asm.fa).apply(null,arguments)},Q._crypto_box_open_easy_afternm=function(){return(Q._crypto_box_open_easy_afternm=Q.asm.ga).apply(null,arguments)},Q._crypto_box_open_easy=function(){return(Q._crypto_box_open_easy=Q.asm.ha).apply(null,arguments)},Q._crypto_box_seal=function(){return(Q._crypto_box_seal=Q.asm.ia).apply(null,arguments)},Q._crypto_box_seal_open=function(){return(Q._crypto_box_seal_open=Q.asm.ja).apply(null,arguments)},Q._crypto_box_sealbytes=function(){return(Q._crypto_box_sealbytes=Q.asm.ka).apply(null,arguments)},Q._crypto_generichash_bytes_min=function(){return(Q._crypto_generichash_bytes_min=Q.asm.la).apply(null,arguments)},Q._crypto_generichash_bytes_max=function(){return(Q._crypto_generichash_bytes_max=Q.asm.ma).apply(null,arguments)},Q._crypto_generichash_bytes=function(){return(Q._crypto_generichash_bytes=Q.asm.na).apply(null,arguments)},Q._crypto_generichash_keybytes_min=function(){return(Q._crypto_generichash_keybytes_min=Q.asm.oa).apply(null,arguments)},Q._crypto_generichash_keybytes_max=function(){return(Q._crypto_generichash_keybytes_max=Q.asm.pa).apply(null,arguments)},Q._crypto_generichash_keybytes=function(){return(Q._crypto_generichash_keybytes=Q.asm.qa).apply(null,arguments)},Q._crypto_generichash_statebytes=function(){return(Q._crypto_generichash_statebytes=Q.asm.ra).apply(null,arguments)},Q._crypto_generichash=function(){return(Q._crypto_generichash=Q.asm.sa).apply(null,arguments)},Q._crypto_generichash_init=function(){return(Q._crypto_generichash_init=Q.asm.ta).apply(null,arguments)},Q._crypto_generichash_update=function(){return(Q._crypto_generichash_update=Q.asm.ua).apply(null,arguments)},Q._crypto_generichash_final=function(){return(Q._crypto_generichash_final=Q.asm.va).apply(null,arguments)},Q._crypto_generichash_keygen=function(){return(Q._crypto_generichash_keygen=Q.asm.wa).apply(null,arguments)},Q._crypto_hash_bytes=function(){return(Q._crypto_hash_bytes=Q.asm.xa).apply(null,arguments)},Q._crypto_hash=function(){return(Q._crypto_hash=Q.asm.ya).apply(null,arguments)},Q._crypto_kdf_bytes_min=function(){return(Q._crypto_kdf_bytes_min=Q.asm.za).apply(null,arguments)},Q._crypto_kdf_bytes_max=function(){return(Q._crypto_kdf_bytes_max=Q.asm.Aa).apply(null,arguments)},Q._crypto_kdf_contextbytes=function(){return(Q._crypto_kdf_contextbytes=Q.asm.Ba).apply(null,arguments)},Q._crypto_kdf_keybytes=function(){return(Q._crypto_kdf_keybytes=Q.asm.Ca).apply(null,arguments)},Q._crypto_kdf_derive_from_key=function(){return(Q._crypto_kdf_derive_from_key=Q.asm.Da).apply(null,arguments)},Q._crypto_kdf_keygen=function(){return(Q._crypto_kdf_keygen=Q.asm.Ea).apply(null,arguments)},Q._crypto_kx_seed_keypair=function(){return(Q._crypto_kx_seed_keypair=Q.asm.Fa).apply(null,arguments)},Q._crypto_kx_keypair=function(){return(Q._crypto_kx_keypair=Q.asm.Ga).apply(null,arguments)},Q._crypto_kx_client_session_keys=function(){return(Q._crypto_kx_client_session_keys=Q.asm.Ha).apply(null,arguments)},Q._crypto_kx_server_session_keys=function(){return(Q._crypto_kx_server_session_keys=Q.asm.Ia).apply(null,arguments)},Q._crypto_kx_publickeybytes=function(){return(Q._crypto_kx_publickeybytes=Q.asm.Ja).apply(null,arguments)},Q._crypto_kx_secretkeybytes=function(){return(Q._crypto_kx_secretkeybytes=Q.asm.Ka).apply(null,arguments)},Q._crypto_kx_seedbytes=function(){return(Q._crypto_kx_seedbytes=Q.asm.La).apply(null,arguments)},Q._crypto_kx_sessionkeybytes=function(){return(Q._crypto_kx_sessionkeybytes=Q.asm.Ma).apply(null,arguments)},Q._crypto_pwhash_alg_argon2i13=function(){return(Q._crypto_pwhash_alg_argon2i13=Q.asm.Na).apply(null,arguments)},Q._crypto_pwhash_alg_argon2id13=function(){return(Q._crypto_pwhash_alg_argon2id13=Q.asm.Oa).apply(null,arguments)},Q._crypto_pwhash_alg_default=function(){return(Q._crypto_pwhash_alg_default=Q.asm.Pa).apply(null,arguments)},Q._crypto_pwhash_bytes_min=function(){return(Q._crypto_pwhash_bytes_min=Q.asm.Qa).apply(null,arguments)},Q._crypto_pwhash_bytes_max=function(){return(Q._crypto_pwhash_bytes_max=Q.asm.Ra).apply(null,arguments)},Q._crypto_pwhash_passwd_min=function(){return(Q._crypto_pwhash_passwd_min=Q.asm.Sa).apply(null,arguments)},Q._crypto_pwhash_passwd_max=function(){return(Q._crypto_pwhash_passwd_max=Q.asm.Ta).apply(null,arguments)},Q._crypto_pwhash_saltbytes=function(){return(Q._crypto_pwhash_saltbytes=Q.asm.Ua).apply(null,arguments)},Q._crypto_pwhash_strbytes=function(){return(Q._crypto_pwhash_strbytes=Q.asm.Va).apply(null,arguments)},Q._crypto_pwhash_strprefix=function(){return(Q._crypto_pwhash_strprefix=Q.asm.Wa).apply(null,arguments)},Q._crypto_pwhash_opslimit_min=function(){return(Q._crypto_pwhash_opslimit_min=Q.asm.Xa).apply(null,arguments)},Q._crypto_pwhash_opslimit_max=function(){return(Q._crypto_pwhash_opslimit_max=Q.asm.Ya).apply(null,arguments)},Q._crypto_pwhash_memlimit_min=function(){return(Q._crypto_pwhash_memlimit_min=Q.asm.Za).apply(null,arguments)},Q._crypto_pwhash_memlimit_max=function(){return(Q._crypto_pwhash_memlimit_max=Q.asm._a).apply(null,arguments)},Q._crypto_pwhash_opslimit_interactive=function(){return(Q._crypto_pwhash_opslimit_interactive=Q.asm.$a).apply(null,arguments)},Q._crypto_pwhash_memlimit_interactive=function(){return(Q._crypto_pwhash_memlimit_interactive=Q.asm.ab).apply(null,arguments)},Q._crypto_pwhash_opslimit_moderate=function(){return(Q._crypto_pwhash_opslimit_moderate=Q.asm.bb).apply(null,arguments)},Q._crypto_pwhash_memlimit_moderate=function(){return(Q._crypto_pwhash_memlimit_moderate=Q.asm.cb).apply(null,arguments)},Q._crypto_pwhash_opslimit_sensitive=function(){return(Q._crypto_pwhash_opslimit_sensitive=Q.asm.db).apply(null,arguments)},Q._crypto_pwhash_memlimit_sensitive=function(){return(Q._crypto_pwhash_memlimit_sensitive=Q.asm.eb).apply(null,arguments)},Q._crypto_pwhash=function(){return(Q._crypto_pwhash=Q.asm.fb).apply(null,arguments)},Q._crypto_pwhash_str=function(){return(Q._crypto_pwhash_str=Q.asm.gb).apply(null,arguments)},Q._crypto_pwhash_str_alg=function(){return(Q._crypto_pwhash_str_alg=Q.asm.hb).apply(null,arguments)},Q._crypto_pwhash_str_verify=function(){return(Q._crypto_pwhash_str_verify=Q.asm.ib).apply(null,arguments)},Q._crypto_pwhash_str_needs_rehash=function(){return(Q._crypto_pwhash_str_needs_rehash=Q.asm.jb).apply(null,arguments)},Q._crypto_scalarmult_base=function(){return(Q._crypto_scalarmult_base=Q.asm.kb).apply(null,arguments)},Q._crypto_scalarmult=function(){return(Q._crypto_scalarmult=Q.asm.lb).apply(null,arguments)},Q._crypto_scalarmult_bytes=function(){return(Q._crypto_scalarmult_bytes=Q.asm.mb).apply(null,arguments)},Q._crypto_scalarmult_scalarbytes=function(){return(Q._crypto_scalarmult_scalarbytes=Q.asm.nb).apply(null,arguments)},Q._crypto_secretbox_keybytes=function(){return(Q._crypto_secretbox_keybytes=Q.asm.ob).apply(null,arguments)},Q._crypto_secretbox_noncebytes=function(){return(Q._crypto_secretbox_noncebytes=Q.asm.pb).apply(null,arguments)},Q._crypto_secretbox_macbytes=function(){return(Q._crypto_secretbox_macbytes=Q.asm.qb).apply(null,arguments)},Q._crypto_secretbox_messagebytes_max=function(){return(Q._crypto_secretbox_messagebytes_max=Q.asm.rb).apply(null,arguments)},Q._crypto_secretbox_keygen=function(){return(Q._crypto_secretbox_keygen=Q.asm.sb).apply(null,arguments)},Q._crypto_secretbox_detached=function(){return(Q._crypto_secretbox_detached=Q.asm.tb).apply(null,arguments)},Q._crypto_secretbox_easy=function(){return(Q._crypto_secretbox_easy=Q.asm.ub).apply(null,arguments)},Q._crypto_secretbox_open_detached=function(){return(Q._crypto_secretbox_open_detached=Q.asm.vb).apply(null,arguments)},Q._crypto_secretbox_open_easy=function(){return(Q._crypto_secretbox_open_easy=Q.asm.wb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_keygen=function(){return(Q._crypto_secretstream_xchacha20poly1305_keygen=Q.asm.xb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_init_push=function(){return(Q._crypto_secretstream_xchacha20poly1305_init_push=Q.asm.yb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_init_pull=function(){return(Q._crypto_secretstream_xchacha20poly1305_init_pull=Q.asm.zb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_rekey=function(){return(Q._crypto_secretstream_xchacha20poly1305_rekey=Q.asm.Ab).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_push=function(){return(Q._crypto_secretstream_xchacha20poly1305_push=Q.asm.Bb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_pull=function(){return(Q._crypto_secretstream_xchacha20poly1305_pull=Q.asm.Cb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_statebytes=function(){return(Q._crypto_secretstream_xchacha20poly1305_statebytes=Q.asm.Db).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_abytes=function(){return(Q._crypto_secretstream_xchacha20poly1305_abytes=Q.asm.Eb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_headerbytes=function(){return(Q._crypto_secretstream_xchacha20poly1305_headerbytes=Q.asm.Fb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_keybytes=function(){return(Q._crypto_secretstream_xchacha20poly1305_keybytes=Q.asm.Gb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_messagebytes_max=function(){return(Q._crypto_secretstream_xchacha20poly1305_messagebytes_max=Q.asm.Hb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_tag_message=function(){return(Q._crypto_secretstream_xchacha20poly1305_tag_message=Q.asm.Ib).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_tag_push=function(){return(Q._crypto_secretstream_xchacha20poly1305_tag_push=Q.asm.Jb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_tag_rekey=function(){return(Q._crypto_secretstream_xchacha20poly1305_tag_rekey=Q.asm.Kb).apply(null,arguments)},Q._crypto_secretstream_xchacha20poly1305_tag_final=function(){return(Q._crypto_secretstream_xchacha20poly1305_tag_final=Q.asm.Lb).apply(null,arguments)},Q._crypto_shorthash_bytes=function(){return(Q._crypto_shorthash_bytes=Q.asm.Mb).apply(null,arguments)},Q._crypto_shorthash_keybytes=function(){return(Q._crypto_shorthash_keybytes=Q.asm.Nb).apply(null,arguments)},Q._crypto_shorthash=function(){return(Q._crypto_shorthash=Q.asm.Ob).apply(null,arguments)},Q._crypto_shorthash_keygen=function(){return(Q._crypto_shorthash_keygen=Q.asm.Pb).apply(null,arguments)},Q._crypto_sign_statebytes=function(){return(Q._crypto_sign_statebytes=Q.asm.Qb).apply(null,arguments)},Q._crypto_sign_bytes=function(){return(Q._crypto_sign_bytes=Q.asm.Rb).apply(null,arguments)},Q._crypto_sign_seedbytes=function(){return(Q._crypto_sign_seedbytes=Q.asm.Sb).apply(null,arguments)},Q._crypto_sign_publickeybytes=function(){return(Q._crypto_sign_publickeybytes=Q.asm.Tb).apply(null,arguments)},Q._crypto_sign_secretkeybytes=function(){return(Q._crypto_sign_secretkeybytes=Q.asm.Ub).apply(null,arguments)},Q._crypto_sign_messagebytes_max=function(){return(Q._crypto_sign_messagebytes_max=Q.asm.Vb).apply(null,arguments)},Q._crypto_sign_seed_keypair=function(){return(Q._crypto_sign_seed_keypair=Q.asm.Wb).apply(null,arguments)},Q._crypto_sign_keypair=function(){return(Q._crypto_sign_keypair=Q.asm.Xb).apply(null,arguments)},Q._crypto_sign=function(){return(Q._crypto_sign=Q.asm.Yb).apply(null,arguments)},Q._crypto_sign_open=function(){return(Q._crypto_sign_open=Q.asm.Zb).apply(null,arguments)},Q._crypto_sign_detached=function(){return(Q._crypto_sign_detached=Q.asm._b).apply(null,arguments)},Q._crypto_sign_verify_detached=function(){return(Q._crypto_sign_verify_detached=Q.asm.$b).apply(null,arguments)},Q._crypto_sign_init=function(){return(Q._crypto_sign_init=Q.asm.ac).apply(null,arguments)},Q._crypto_sign_update=function(){return(Q._crypto_sign_update=Q.asm.bc).apply(null,arguments)},Q._crypto_sign_final_create=function(){return(Q._crypto_sign_final_create=Q.asm.cc).apply(null,arguments)},Q._crypto_sign_final_verify=function(){return(Q._crypto_sign_final_verify=Q.asm.dc).apply(null,arguments)},Q._crypto_sign_ed25519_pk_to_curve25519=function(){return(Q._crypto_sign_ed25519_pk_to_curve25519=Q.asm.ec).apply(null,arguments)},Q._crypto_sign_ed25519_sk_to_curve25519=function(){return(Q._crypto_sign_ed25519_sk_to_curve25519=Q.asm.fc).apply(null,arguments)},Q._randombytes_random=function(){return(Q._randombytes_random=Q.asm.gc).apply(null,arguments)},Q._randombytes_stir=function(){return(Q._randombytes_stir=Q.asm.hc).apply(null,arguments)},Q._randombytes_uniform=function(){return(Q._randombytes_uniform=Q.asm.ic).apply(null,arguments)},Q._randombytes_buf=function(){return(Q._randombytes_buf=Q.asm.jc).apply(null,arguments)},Q._randombytes_buf_deterministic=function(){return(Q._randombytes_buf_deterministic=Q.asm.kc).apply(null,arguments)},Q._randombytes_seedbytes=function(){return(Q._randombytes_seedbytes=Q.asm.lc).apply(null,arguments)},Q._randombytes_close=function(){return(Q._randombytes_close=Q.asm.mc).apply(null,arguments)},Q._randombytes=function(){return(Q._randombytes=Q.asm.nc).apply(null,arguments)},Q._sodium_bin2hex=function(){return(Q._sodium_bin2hex=Q.asm.oc).apply(null,arguments)},Q._sodium_hex2bin=function(){return(Q._sodium_hex2bin=Q.asm.pc).apply(null,arguments)},Q._sodium_base64_encoded_len=function(){return(Q._sodium_base64_encoded_len=Q.asm.qc).apply(null,arguments)},Q._sodium_bin2base64=function(){return(Q._sodium_bin2base64=Q.asm.rc).apply(null,arguments)},Q._sodium_base642bin=function(){return(Q._sodium_base642bin=Q.asm.sc).apply(null,arguments)},Q._sodium_init=function(){return(Q._sodium_init=Q.asm.tc).apply(null,arguments)},Q._sodium_pad=function(){return(Q._sodium_pad=Q.asm.uc).apply(null,arguments)},Q._sodium_unpad=function(){return(Q._sodium_unpad=Q.asm.vc).apply(null,arguments)},Q._sodium_version_string=function(){return(Q._sodium_version_string=Q.asm.wc).apply(null,arguments)},Q._sodium_library_version_major=function(){return(Q._sodium_library_version_major=Q.asm.xc).apply(null,arguments)},Q._sodium_library_version_minor=function(){return(Q._sodium_library_version_minor=Q.asm.yc).apply(null,arguments)},Q._sodium_library_minimal=function(){return(Q._sodium_library_minimal=Q.asm.zc).apply(null,arguments)},Q.___errno_location=function(){return(vA=Q.___errno_location=Q.asm.Ac).apply(null,arguments)});function UA(A){function I(){YA||(YA=!0,Q.calledRun=!0,l||(K(),q(),Q.onRuntimeInitialized&&Q.onRuntimeInitialized(),X()))}A=A||E,T>0||(L(),T>0||(Q.setStatus?(Q.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){Q.setStatus(\"\")}),1),I()}),1)):I()))}if(Q._malloc=function(){return(Q._malloc=Q.asm.Bc).apply(null,arguments)},Q._free=function(){return(Q._free=Q.asm.Cc).apply(null,arguments)},Q.setValue=u,Q.getValue=p,Q.UTF8ToString=S,Z=function A(){YA||UA(),YA||(Z=A)},Q.run=UA,Q.preInit)for(\"function\"==typeof Q.preInit&&(Q.preInit=[Q.preInit]);Q.preInit.length>0;)Q.preInit.pop()();UA()})).catch((function(){return B.useBackupModule()})),I} true?!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (I),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):0}(this);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/libsodium/dist/modules/libsodium.js\n");

/***/ }),

/***/ "./node_modules/rfc4648/lib/index.js":
/*!*******************************************!*\
  !*** ./node_modules/rfc4648/lib/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/* eslint-disable @typescript-eslint/strict-boolean-expressions */\nfunction parse(string, encoding, opts) {\n  var _opts$out;\n\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  // Build the character lookup table:\n  if (!encoding.codes) {\n    encoding.codes = {};\n\n    for (var i = 0; i < encoding.chars.length; ++i) {\n      encoding.codes[encoding.chars[i]] = i;\n    }\n  } // The string must have a whole number of bytes:\n\n\n  if (!opts.loose && string.length * encoding.bits & 7) {\n    throw new SyntaxError('Invalid padding');\n  } // Count the padding bytes:\n\n\n  var end = string.length;\n\n  while (string[end - 1] === '=') {\n    --end; // If we get a whole number of bytes, there is too much padding:\n\n    if (!opts.loose && !((string.length - end) * encoding.bits & 7)) {\n      throw new SyntaxError('Invalid padding');\n    }\n  } // Allocate the output:\n\n\n  var out = new ((_opts$out = opts.out) != null ? _opts$out : Uint8Array)(end * encoding.bits / 8 | 0); // Parse the data:\n\n  var bits = 0; // Number of bits currently in the buffer\n\n  var buffer = 0; // Bits waiting to be written out, MSB first\n\n  var written = 0; // Next byte to write\n\n  for (var _i = 0; _i < end; ++_i) {\n    // Read one character from the string:\n    var value = encoding.codes[string[_i]];\n\n    if (value === undefined) {\n      throw new SyntaxError('Invalid character ' + string[_i]);\n    } // Append the bits to the buffer:\n\n\n    buffer = buffer << encoding.bits | value;\n    bits += encoding.bits; // Write out some bits if the buffer has a byte's worth:\n\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 0xff & buffer >> bits;\n    }\n  } // Verify that we have received just enough bits:\n\n\n  if (bits >= encoding.bits || 0xff & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n\n  return out;\n}\nfunction stringify(data, encoding, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  var _opts = opts,\n      _opts$pad = _opts.pad,\n      pad = _opts$pad === void 0 ? true : _opts$pad;\n  var mask = (1 << encoding.bits) - 1;\n  var out = '';\n  var bits = 0; // Number of bits currently in the buffer\n\n  var buffer = 0; // Bits waiting to be written out, MSB first\n\n  for (var i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = buffer << 8 | 0xff & data[i];\n    bits += 8; // Write out as much as we can:\n\n    while (bits > encoding.bits) {\n      bits -= encoding.bits;\n      out += encoding.chars[mask & buffer >> bits];\n    }\n  } // Partial character:\n\n\n  if (bits) {\n    out += encoding.chars[mask & buffer << encoding.bits - bits];\n  } // Add padding characters until we hit a byte boundary:\n\n\n  if (pad) {\n    while (out.length * encoding.bits & 7) {\n      out += '=';\n    }\n  }\n\n  return out;\n}\n\n/* eslint-disable @typescript-eslint/strict-boolean-expressions */\nvar base16Encoding = {\n  chars: '0123456789ABCDEF',\n  bits: 4\n};\nvar base32Encoding = {\n  chars: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bits: 5\n};\nvar base32HexEncoding = {\n  chars: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bits: 5\n};\nvar base64Encoding = {\n  chars: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bits: 6\n};\nvar base64UrlEncoding = {\n  chars: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bits: 6\n};\nvar base16 = {\n  parse: function parse$1(string, opts) {\n    return parse(string.toUpperCase(), base16Encoding, opts);\n  },\n  stringify: function stringify$1(data, opts) {\n    return stringify(data, base16Encoding, opts);\n  }\n};\nvar base32 = {\n  parse: function parse$1(string, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    return parse(opts.loose ? string.toUpperCase().replace(/0/g, 'O').replace(/1/g, 'L').replace(/8/g, 'B') : string, base32Encoding, opts);\n  },\n  stringify: function stringify$1(data, opts) {\n    return stringify(data, base32Encoding, opts);\n  }\n};\nvar base32hex = {\n  parse: function parse$1(string, opts) {\n    return parse(string, base32HexEncoding, opts);\n  },\n  stringify: function stringify$1(data, opts) {\n    return stringify(data, base32HexEncoding, opts);\n  }\n};\nvar base64 = {\n  parse: function parse$1(string, opts) {\n    return parse(string, base64Encoding, opts);\n  },\n  stringify: function stringify$1(data, opts) {\n    return stringify(data, base64Encoding, opts);\n  }\n};\nvar base64url = {\n  parse: function parse$1(string, opts) {\n    return parse(string, base64UrlEncoding, opts);\n  },\n  stringify: function stringify$1(data, opts) {\n    return stringify(data, base64UrlEncoding, opts);\n  }\n};\nvar codec = {\n  parse: parse,\n  stringify: stringify\n};\n\nexports.base16 = base16;\nexports.base32 = base32;\nexports.base32hex = base32hex;\nexports.base64 = base64;\nexports.base64url = base64url;\nexports.codec = codec;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/rfc4648/lib/index.js\n");

/***/ }),

/***/ "./node_modules/spark-md5/spark-md5.js":
/*!*********************************************!*\
  !*** ./node_modules/spark-md5/spark-md5.js ***!
  \*********************************************/
/***/ ((module) => {

eval("(function (factory) {\n    if (true) {\n        // Node/CommonJS\n        module.exports = factory();\n    } else { var glob; }\n}(function (undefined) {\n\n    'use strict';\n\n    /*\n     * Fastest md5 implementation around (JKM md5).\n     * Credits: Joseph Myers\n     *\n     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n     * @see http://jsperf.com/md5-shootout/7\n     */\n\n    /* this function is much faster,\n      so if possible we use it. Some IEs\n      are the only ones I know of that\n      need the idiotic second function,\n      generated by an if clause.  */\n    var add32 = function (a, b) {\n        return (a + b) & 0xFFFFFFFF;\n    },\n        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\n    function cmn(q, a, b, x, s, t) {\n        a = add32(add32(a, q), add32(x, t));\n        return add32((a << s) | (a >>> (32 - s)), b);\n    }\n\n    function md5cycle(x, k) {\n        var a = x[0],\n            b = x[1],\n            c = x[2],\n            d = x[3];\n\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n        b  = (b << 21 | b >>> 11) + c | 0;\n\n        x[0] = a + x[0] | 0;\n        x[1] = b + x[1] | 0;\n        x[2] = c + x[2] | 0;\n        x[3] = d + x[3] | 0;\n    }\n\n    function md5blk(s) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n    }\n\n    function md5blk_array(a) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n        }\n        return md5blks;\n    }\n\n    function md51(s) {\n        var n = s.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        length = s.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n        }\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n        return state;\n    }\n\n    function md51_array(a) {\n        var n = a.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n        }\n\n        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n        // containing the last element of the parent array if the sub array specified starts\n        // beyond the length of the parent array - weird.\n        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\n        length = a.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n        }\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n\n        return state;\n    }\n\n    function rhex(n) {\n        var s = '',\n            j;\n        for (j = 0; j < 4; j += 1) {\n            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    function hex(x) {\n        var i;\n        for (i = 0; i < x.length; i += 1) {\n            x[i] = rhex(x[i]);\n        }\n        return x.join('');\n    }\n\n    // In some cases the fast add32 function cannot be used..\n    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n        add32 = function (x, y) {\n            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n            return (msw << 16) | (lsw & 0xFFFF);\n        };\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * ArrayBuffer slice polyfill.\n     *\n     * @see https://github.com/ttaubert/node-arraybuffer-slice\n     */\n\n    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n        (function () {\n            function clamp(val, length) {\n                val = (val | 0) || 0;\n\n                if (val < 0) {\n                    return Math.max(val + length, 0);\n                }\n\n                return Math.min(val, length);\n            }\n\n            ArrayBuffer.prototype.slice = function (from, to) {\n                var length = this.byteLength,\n                    begin = clamp(from, length),\n                    end = length,\n                    num,\n                    target,\n                    targetArray,\n                    sourceArray;\n\n                if (to !== undefined) {\n                    end = clamp(to, length);\n                }\n\n                if (begin > end) {\n                    return new ArrayBuffer(0);\n                }\n\n                num = end - begin;\n                target = new ArrayBuffer(num);\n                targetArray = new Uint8Array(target);\n\n                sourceArray = new Uint8Array(this, begin, num);\n                targetArray.set(sourceArray);\n\n                return target;\n            };\n        })();\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * Helpers.\n     */\n\n    function toUtf8(str) {\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n            str = unescape(encodeURIComponent(str));\n        }\n\n        return str;\n    }\n\n    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n        var length = str.length,\n           buff = new ArrayBuffer(length),\n           arr = new Uint8Array(buff),\n           i;\n\n        for (i = 0; i < length; i += 1) {\n            arr[i] = str.charCodeAt(i);\n        }\n\n        return returnUInt8Array ? arr : buff;\n    }\n\n    function arrayBuffer2Utf8Str(buff) {\n        return String.fromCharCode.apply(null, new Uint8Array(buff));\n    }\n\n    function concatenateArrayBuffers(first, second, returnUInt8Array) {\n        var result = new Uint8Array(first.byteLength + second.byteLength);\n\n        result.set(new Uint8Array(first));\n        result.set(new Uint8Array(second), first.byteLength);\n\n        return returnUInt8Array ? result : result.buffer;\n    }\n\n    function hexToBinaryString(hex) {\n        var bytes = [],\n            length = hex.length,\n            x;\n\n        for (x = 0; x < length - 1; x += 2) {\n            bytes.push(parseInt(hex.substr(x, 2), 16));\n        }\n\n        return String.fromCharCode.apply(String, bytes);\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation.\n     *\n     * Use this class to perform an incremental md5, otherwise use the\n     * static methods instead.\n     */\n\n    function SparkMD5() {\n        // call reset to init the instance\n        this.reset();\n    }\n\n    /**\n     * Appends a string.\n     * A conversion will be applied if an utf8 string is detected.\n     *\n     * @param {String} str The string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.append = function (str) {\n        // Converts the string to utf8 bytes if necessary\n        // Then append as binary\n        this.appendBinary(toUtf8(str));\n\n        return this;\n    };\n\n    /**\n     * Appends a binary string.\n     *\n     * @param {String} contents The binary string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.appendBinary = function (contents) {\n        this._buff += contents;\n        this._length += contents.length;\n\n        var length = this._buff.length,\n            i;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n        }\n\n        this._buff = this._buff.substring(i - 64);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            i,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.reset = function () {\n        this._buff = '';\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.prototype.getState = function () {\n        return {\n            buff: this._buff,\n            length: this._length,\n            hash: this._hash.slice()\n        };\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.setState = function (state) {\n        this._buff = state.buff;\n        this._length = state.length;\n        this._hash = state.hash;\n\n        return this;\n    };\n\n    /**\n     * Releases memory used by the incremental buffer and other additional\n     * resources. If you plan to use the instance again, use reset instead.\n     */\n    SparkMD5.prototype.destroy = function () {\n        delete this._hash;\n        delete this._buff;\n        delete this._length;\n    };\n\n    /**\n     * Finish the final calculation based on the tail.\n     *\n     * @param {Array}  tail   The tail (will be modified)\n     * @param {Number} length The length of the remaining buffer\n     */\n    SparkMD5.prototype._finish = function (tail, length) {\n        var i = length,\n            tmp,\n            lo,\n            hi;\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(this._hash, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        tmp = this._length * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(this._hash, tail);\n    };\n\n    /**\n     * Performs the md5 hash on a string.\n     * A conversion will be applied if utf8 string is detected.\n     *\n     * @param {String}  str The string\n     * @param {Boolean} [raw] True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hash = function (str, raw) {\n        // Converts the string to utf8 bytes if necessary\n        // Then compute it using the binary function\n        return SparkMD5.hashBinary(toUtf8(str), raw);\n    };\n\n    /**\n     * Performs the md5 hash on a binary string.\n     *\n     * @param {String}  content The binary string\n     * @param {Boolean} [raw]     True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hashBinary = function (content, raw) {\n        var hash = md51(content),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation for array buffers.\n     *\n     * Use this class to perform an incremental md5 ONLY for array buffers.\n     */\n    SparkMD5.ArrayBuffer = function () {\n        // call reset to init the instance\n        this.reset();\n    };\n\n    /**\n     * Appends an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array to be appended\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n            length = buff.length,\n            i;\n\n        this._length += arr.byteLength;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n        }\n\n        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            i,\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.reset = function () {\n        this._buff = new Uint8Array(0);\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.ArrayBuffer.prototype.getState = function () {\n        var state = SparkMD5.prototype.getState.call(this);\n\n        // Convert buffer to a string\n        state.buff = arrayBuffer2Utf8Str(state.buff);\n\n        return state;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n        // Convert string to buffer\n        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n\n        return SparkMD5.prototype.setState.call(this, state);\n    };\n\n    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\n    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\n    /**\n     * Performs the md5 hash on an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array buffer\n     * @param {Boolean}     [raw] True to get the raw string, false to get the hex one\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n        var hash = md51_array(new Uint8Array(arr)),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    return SparkMD5;\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/spark-md5/spark-md5.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"v1\": () => (/* reexport safe */ _v1_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   \"v3\": () => (/* reexport safe */ _v3_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   \"v4\": () => (/* reexport safe */ _v4_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   \"v5\": () => (/* reexport safe */ _v5_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]),\n/* harmony export */   \"NIL\": () => (/* reexport safe */ _nil_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]),\n/* harmony export */   \"version\": () => (/* reexport safe */ _version_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]),\n/* harmony export */   \"validate\": () => (/* reexport safe */ _validate_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]),\n/* harmony export */   \"stringify\": () => (/* reexport safe */ _stringify_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]),\n/* harmony export */   \"parse\": () => (/* reexport safe */ _parse_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _v1_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v1.js */ \"./node_modules/uuid/dist/esm-browser/v1.js\");\n/* harmony import */ var _v3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./v3.js */ \"./node_modules/uuid/dist/esm-browser/v3.js\");\n/* harmony import */ var _v4_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./v4.js */ \"./node_modules/uuid/dist/esm-browser/v4.js\");\n/* harmony import */ var _v5_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./v5.js */ \"./node_modules/uuid/dist/esm-browser/v5.js\");\n/* harmony import */ var _nil_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./nil.js */ \"./node_modules/uuid/dist/esm-browser/nil.js\");\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./version.js */ \"./node_modules/uuid/dist/esm-browser/version.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./validate.js */ \"./node_modules/uuid/dist/esm-browser/validate.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/uuid/dist/esm-browser/stringify.js\");\n/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./parse.js */ \"./node_modules/uuid/dist/esm-browser/parse.js\");\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdG96bnlzZWN1cmUvc2RrLy4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci9pbmRleC5qcz9lMTQ0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGRlZmF1bHQgYXMgdjEgfSBmcm9tICcuL3YxLmpzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdjMgfSBmcm9tICcuL3YzLmpzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdjQgfSBmcm9tICcuL3Y0LmpzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdjUgfSBmcm9tICcuL3Y1LmpzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgTklMIH0gZnJvbSAnLi9uaWwuanMnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB2ZXJzaW9uIH0gZnJvbSAnLi92ZXJzaW9uLmpzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdmFsaWRhdGUgfSBmcm9tICcuL3ZhbGlkYXRlLmpzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgc3RyaW5naWZ5IH0gZnJvbSAnLi9zdHJpbmdpZnkuanMnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBwYXJzZSB9IGZyb20gJy4vcGFyc2UuanMnOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/index.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/md5.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/md5.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (md5);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/md5.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/nil.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/nil.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('00000000-0000-0000-0000-000000000000');//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL25pbC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdG96bnlzZWN1cmUvc2RrLy4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci9uaWwuanM/ZDRjZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCAnMDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwJzsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/nil.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/parse.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/parse.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"./node_modules/uuid/dist/esm-browser/validate.js\");\n\n\nfunction parse(uuid) {\n  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (parse);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3BhcnNlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B0b3pueXNlY3VyZS9zZGsvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3BhcnNlLmpzPzBkZWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHZhbGlkYXRlIGZyb20gJy4vdmFsaWRhdGUuanMnO1xuXG5mdW5jdGlvbiBwYXJzZSh1dWlkKSB7XG4gIGlmICghdmFsaWRhdGUodXVpZCkpIHtcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ0ludmFsaWQgVVVJRCcpO1xuICB9XG5cbiAgdmFyIHY7XG4gIHZhciBhcnIgPSBuZXcgVWludDhBcnJheSgxNik7IC8vIFBhcnNlICMjIyMjIyMjLS4uLi4tLi4uLi0uLi4uLS4uLi4uLi4uLi4uLlxuXG4gIGFyclswXSA9ICh2ID0gcGFyc2VJbnQodXVpZC5zbGljZSgwLCA4KSwgMTYpKSA+Pj4gMjQ7XG4gIGFyclsxXSA9IHYgPj4+IDE2ICYgMHhmZjtcbiAgYXJyWzJdID0gdiA+Pj4gOCAmIDB4ZmY7XG4gIGFyclszXSA9IHYgJiAweGZmOyAvLyBQYXJzZSAuLi4uLi4uLi0jIyMjLS4uLi4tLi4uLi0uLi4uLi4uLi4uLi5cblxuICBhcnJbNF0gPSAodiA9IHBhcnNlSW50KHV1aWQuc2xpY2UoOSwgMTMpLCAxNikpID4+PiA4O1xuICBhcnJbNV0gPSB2ICYgMHhmZjsgLy8gUGFyc2UgLi4uLi4uLi4tLi4uLi0jIyMjLS4uLi4tLi4uLi4uLi4uLi4uXG5cbiAgYXJyWzZdID0gKHYgPSBwYXJzZUludCh1dWlkLnNsaWNlKDE0LCAxOCksIDE2KSkgPj4+IDg7XG4gIGFycls3XSA9IHYgJiAweGZmOyAvLyBQYXJzZSAuLi4uLi4uLi0uLi4uLS4uLi4tIyMjIy0uLi4uLi4uLi4uLi5cblxuICBhcnJbOF0gPSAodiA9IHBhcnNlSW50KHV1aWQuc2xpY2UoMTksIDIzKSwgMTYpKSA+Pj4gODtcbiAgYXJyWzldID0gdiAmIDB4ZmY7IC8vIFBhcnNlIC4uLi4uLi4uLS4uLi4tLi4uLi0uLi4uLSMjIyMjIyMjIyMjI1xuICAvLyAoVXNlIFwiL1wiIHRvIGF2b2lkIDMyLWJpdCB0cnVuY2F0aW9uIHdoZW4gYml0LXNoaWZ0aW5nIGhpZ2gtb3JkZXIgYnl0ZXMpXG5cbiAgYXJyWzEwXSA9ICh2ID0gcGFyc2VJbnQodXVpZC5zbGljZSgyNCwgMzYpLCAxNikpIC8gMHgxMDAwMDAwMDAwMCAmIDB4ZmY7XG4gIGFyclsxMV0gPSB2IC8gMHgxMDAwMDAwMDAgJiAweGZmO1xuICBhcnJbMTJdID0gdiA+Pj4gMjQgJiAweGZmO1xuICBhcnJbMTNdID0gdiA+Pj4gMTYgJiAweGZmO1xuICBhcnJbMTRdID0gdiA+Pj4gOCAmIDB4ZmY7XG4gIGFyclsxNV0gPSB2ICYgMHhmZjtcbiAgcmV0dXJuIGFycjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgcGFyc2U7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/parse.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/regex.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/regex.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3JlZ2V4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B0b3pueXNlY3VyZS9zZGsvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3JlZ2V4LmpzPzQwZDYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgL14oPzpbMC05YS1mXXs4fS1bMC05YS1mXXs0fS1bMS01XVswLTlhLWZdezN9LVs4OWFiXVswLTlhLWZdezN9LVswLTlhLWZdezEyfXwwMDAwMDAwMC0wMDAwLTAwMDAtMDAwMC0wMDAwMDAwMDAwMDApJC9pOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/regex.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/rng.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/rng.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ rng)\n/* harmony export */ });\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3JuZy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdG96bnlzZWN1cmUvc2RrLy4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci9ybmcuanM/ZDhmOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBVbmlxdWUgSUQgY3JlYXRpb24gcmVxdWlyZXMgYSBoaWdoIHF1YWxpdHkgcmFuZG9tICMgZ2VuZXJhdG9yLiBJbiB0aGUgYnJvd3NlciB3ZSB0aGVyZWZvcmVcbi8vIHJlcXVpcmUgdGhlIGNyeXB0byBBUEkgYW5kIGRvIG5vdCBzdXBwb3J0IGJ1aWx0LWluIGZhbGxiYWNrIHRvIGxvd2VyIHF1YWxpdHkgcmFuZG9tIG51bWJlclxuLy8gZ2VuZXJhdG9ycyAobGlrZSBNYXRoLnJhbmRvbSgpKS5cbnZhciBnZXRSYW5kb21WYWx1ZXM7XG52YXIgcm5kczggPSBuZXcgVWludDhBcnJheSgxNik7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBybmcoKSB7XG4gIC8vIGxhenkgbG9hZCBzbyB0aGF0IGVudmlyb25tZW50cyB0aGF0IG5lZWQgdG8gcG9seWZpbGwgaGF2ZSBhIGNoYW5jZSB0byBkbyBzb1xuICBpZiAoIWdldFJhbmRvbVZhbHVlcykge1xuICAgIC8vIGdldFJhbmRvbVZhbHVlcyBuZWVkcyB0byBiZSBpbnZva2VkIGluIGEgY29udGV4dCB3aGVyZSBcInRoaXNcIiBpcyBhIENyeXB0byBpbXBsZW1lbnRhdGlvbi4gQWxzbyxcbiAgICAvLyBmaW5kIHRoZSBjb21wbGV0ZSBpbXBsZW1lbnRhdGlvbiBvZiBjcnlwdG8gKG1zQ3J5cHRvKSBvbiBJRTExLlxuICAgIGdldFJhbmRvbVZhbHVlcyA9IHR5cGVvZiBjcnlwdG8gIT09ICd1bmRlZmluZWQnICYmIGNyeXB0by5nZXRSYW5kb21WYWx1ZXMgJiYgY3J5cHRvLmdldFJhbmRvbVZhbHVlcy5iaW5kKGNyeXB0bykgfHwgdHlwZW9mIG1zQ3J5cHRvICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgbXNDcnlwdG8uZ2V0UmFuZG9tVmFsdWVzID09PSAnZnVuY3Rpb24nICYmIG1zQ3J5cHRvLmdldFJhbmRvbVZhbHVlcy5iaW5kKG1zQ3J5cHRvKTtcblxuICAgIGlmICghZ2V0UmFuZG9tVmFsdWVzKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2NyeXB0by5nZXRSYW5kb21WYWx1ZXMoKSBub3Qgc3VwcG9ydGVkLiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3V1aWRqcy91dWlkI2dldHJhbmRvbXZhbHVlcy1ub3Qtc3VwcG9ydGVkJyk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGdldFJhbmRvbVZhbHVlcyhybmRzOCk7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/rng.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/sha1.js":
/*!****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/sha1.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (sha1);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3NoYTEuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B0b3pueXNlY3VyZS9zZGsvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3NoYTEuanM/Yjc1ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBZGFwdGVkIGZyb20gQ2hyaXMgVmVuZXNzJyBTSEExIGNvZGUgYXRcbi8vIGh0dHA6Ly93d3cubW92YWJsZS10eXBlLmNvLnVrL3NjcmlwdHMvc2hhMS5odG1sXG5mdW5jdGlvbiBmKHMsIHgsIHksIHopIHtcbiAgc3dpdGNoIChzKSB7XG4gICAgY2FzZSAwOlxuICAgICAgcmV0dXJuIHggJiB5IF4gfnggJiB6O1xuXG4gICAgY2FzZSAxOlxuICAgICAgcmV0dXJuIHggXiB5IF4gejtcblxuICAgIGNhc2UgMjpcbiAgICAgIHJldHVybiB4ICYgeSBeIHggJiB6IF4geSAmIHo7XG5cbiAgICBjYXNlIDM6XG4gICAgICByZXR1cm4geCBeIHkgXiB6O1xuICB9XG59XG5cbmZ1bmN0aW9uIFJPVEwoeCwgbikge1xuICByZXR1cm4geCA8PCBuIHwgeCA+Pj4gMzIgLSBuO1xufVxuXG5mdW5jdGlvbiBzaGExKGJ5dGVzKSB7XG4gIHZhciBLID0gWzB4NWE4Mjc5OTksIDB4NmVkOWViYTEsIDB4OGYxYmJjZGMsIDB4Y2E2MmMxZDZdO1xuICB2YXIgSCA9IFsweDY3NDUyMzAxLCAweGVmY2RhYjg5LCAweDk4YmFkY2ZlLCAweDEwMzI1NDc2LCAweGMzZDJlMWYwXTtcblxuICBpZiAodHlwZW9mIGJ5dGVzID09PSAnc3RyaW5nJykge1xuICAgIHZhciBtc2cgPSB1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoYnl0ZXMpKTsgLy8gVVRGOCBlc2NhcGVcblxuICAgIGJ5dGVzID0gW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG1zZy5sZW5ndGg7ICsraSkge1xuICAgICAgYnl0ZXMucHVzaChtc2cuY2hhckNvZGVBdChpKSk7XG4gICAgfVxuICB9IGVsc2UgaWYgKCFBcnJheS5pc0FycmF5KGJ5dGVzKSkge1xuICAgIC8vIENvbnZlcnQgQXJyYXktbGlrZSB0byBBcnJheVxuICAgIGJ5dGVzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYnl0ZXMpO1xuICB9XG5cbiAgYnl0ZXMucHVzaCgweDgwKTtcbiAgdmFyIGwgPSBieXRlcy5sZW5ndGggLyA0ICsgMjtcbiAgdmFyIE4gPSBNYXRoLmNlaWwobCAvIDE2KTtcbiAgdmFyIE0gPSBuZXcgQXJyYXkoTik7XG5cbiAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IE47ICsrX2kpIHtcbiAgICB2YXIgYXJyID0gbmV3IFVpbnQzMkFycmF5KDE2KTtcblxuICAgIGZvciAodmFyIGogPSAwOyBqIDwgMTY7ICsraikge1xuICAgICAgYXJyW2pdID0gYnl0ZXNbX2kgKiA2NCArIGogKiA0XSA8PCAyNCB8IGJ5dGVzW19pICogNjQgKyBqICogNCArIDFdIDw8IDE2IHwgYnl0ZXNbX2kgKiA2NCArIGogKiA0ICsgMl0gPDwgOCB8IGJ5dGVzW19pICogNjQgKyBqICogNCArIDNdO1xuICAgIH1cblxuICAgIE1bX2ldID0gYXJyO1xuICB9XG5cbiAgTVtOIC0gMV1bMTRdID0gKGJ5dGVzLmxlbmd0aCAtIDEpICogOCAvIE1hdGgucG93KDIsIDMyKTtcbiAgTVtOIC0gMV1bMTRdID0gTWF0aC5mbG9vcihNW04gLSAxXVsxNF0pO1xuICBNW04gLSAxXVsxNV0gPSAoYnl0ZXMubGVuZ3RoIC0gMSkgKiA4ICYgMHhmZmZmZmZmZjtcblxuICBmb3IgKHZhciBfaTIgPSAwOyBfaTIgPCBOOyArK19pMikge1xuICAgIHZhciBXID0gbmV3IFVpbnQzMkFycmF5KDgwKTtcblxuICAgIGZvciAodmFyIHQgPSAwOyB0IDwgMTY7ICsrdCkge1xuICAgICAgV1t0XSA9IE1bX2kyXVt0XTtcbiAgICB9XG5cbiAgICBmb3IgKHZhciBfdCA9IDE2OyBfdCA8IDgwOyArK190KSB7XG4gICAgICBXW190XSA9IFJPVEwoV1tfdCAtIDNdIF4gV1tfdCAtIDhdIF4gV1tfdCAtIDE0XSBeIFdbX3QgLSAxNl0sIDEpO1xuICAgIH1cblxuICAgIHZhciBhID0gSFswXTtcbiAgICB2YXIgYiA9IEhbMV07XG4gICAgdmFyIGMgPSBIWzJdO1xuICAgIHZhciBkID0gSFszXTtcbiAgICB2YXIgZSA9IEhbNF07XG5cbiAgICBmb3IgKHZhciBfdDIgPSAwOyBfdDIgPCA4MDsgKytfdDIpIHtcbiAgICAgIHZhciBzID0gTWF0aC5mbG9vcihfdDIgLyAyMCk7XG4gICAgICB2YXIgVCA9IFJPVEwoYSwgNSkgKyBmKHMsIGIsIGMsIGQpICsgZSArIEtbc10gKyBXW190Ml0gPj4+IDA7XG4gICAgICBlID0gZDtcbiAgICAgIGQgPSBjO1xuICAgICAgYyA9IFJPVEwoYiwgMzApID4+PiAwO1xuICAgICAgYiA9IGE7XG4gICAgICBhID0gVDtcbiAgICB9XG5cbiAgICBIWzBdID0gSFswXSArIGEgPj4+IDA7XG4gICAgSFsxXSA9IEhbMV0gKyBiID4+PiAwO1xuICAgIEhbMl0gPSBIWzJdICsgYyA+Pj4gMDtcbiAgICBIWzNdID0gSFszXSArIGQgPj4+IDA7XG4gICAgSFs0XSA9IEhbNF0gKyBlID4+PiAwO1xuICB9XG5cbiAgcmV0dXJuIFtIWzBdID4+IDI0ICYgMHhmZiwgSFswXSA+PiAxNiAmIDB4ZmYsIEhbMF0gPj4gOCAmIDB4ZmYsIEhbMF0gJiAweGZmLCBIWzFdID4+IDI0ICYgMHhmZiwgSFsxXSA+PiAxNiAmIDB4ZmYsIEhbMV0gPj4gOCAmIDB4ZmYsIEhbMV0gJiAweGZmLCBIWzJdID4+IDI0ICYgMHhmZiwgSFsyXSA+PiAxNiAmIDB4ZmYsIEhbMl0gPj4gOCAmIDB4ZmYsIEhbMl0gJiAweGZmLCBIWzNdID4+IDI0ICYgMHhmZiwgSFszXSA+PiAxNiAmIDB4ZmYsIEhbM10gPj4gOCAmIDB4ZmYsIEhbM10gJiAweGZmLCBIWzRdID4+IDI0ICYgMHhmZiwgSFs0XSA+PiAxNiAmIDB4ZmYsIEhbNF0gPj4gOCAmIDB4ZmYsIEhbNF0gJiAweGZmXTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgc2hhMTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/sha1.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/stringify.js":
/*!*********************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/stringify.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"./node_modules/uuid/dist/esm-browser/validate.js\");\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stringify);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3N0cmluZ2lmeS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B0b3pueXNlY3VyZS9zZGsvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3N0cmluZ2lmeS5qcz81OGNmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB2YWxpZGF0ZSBmcm9tICcuL3ZhbGlkYXRlLmpzJztcbi8qKlxuICogQ29udmVydCBhcnJheSBvZiAxNiBieXRlIHZhbHVlcyB0byBVVUlEIHN0cmluZyBmb3JtYXQgb2YgdGhlIGZvcm06XG4gKiBYWFhYWFhYWC1YWFhYLVhYWFgtWFhYWC1YWFhYWFhYWFhYWFhcbiAqL1xuXG52YXIgYnl0ZVRvSGV4ID0gW107XG5cbmZvciAodmFyIGkgPSAwOyBpIDwgMjU2OyArK2kpIHtcbiAgYnl0ZVRvSGV4LnB1c2goKGkgKyAweDEwMCkudG9TdHJpbmcoMTYpLnN1YnN0cigxKSk7XG59XG5cbmZ1bmN0aW9uIHN0cmluZ2lmeShhcnIpIHtcbiAgdmFyIG9mZnNldCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogMDtcbiAgLy8gTm90ZTogQmUgY2FyZWZ1bCBlZGl0aW5nIHRoaXMgY29kZSEgIEl0J3MgYmVlbiB0dW5lZCBmb3IgcGVyZm9ybWFuY2VcbiAgLy8gYW5kIHdvcmtzIGluIHdheXMgeW91IG1heSBub3QgZXhwZWN0LiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3V1aWRqcy91dWlkL3B1bGwvNDM0XG4gIHZhciB1dWlkID0gKGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDJdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgM11dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA0XV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDVdXSArICctJyArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgNl1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA3XV0gKyAnLScgKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDhdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgOV1dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxMF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxMV1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxMl1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxM11dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxNF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxNV1dKS50b0xvd2VyQ2FzZSgpOyAvLyBDb25zaXN0ZW5jeSBjaGVjayBmb3IgdmFsaWQgVVVJRC4gIElmIHRoaXMgdGhyb3dzLCBpdCdzIGxpa2VseSBkdWUgdG8gb25lXG4gIC8vIG9mIHRoZSBmb2xsb3dpbmc6XG4gIC8vIC0gT25lIG9yIG1vcmUgaW5wdXQgYXJyYXkgdmFsdWVzIGRvbid0IG1hcCB0byBhIGhleCBvY3RldCAobGVhZGluZyB0b1xuICAvLyBcInVuZGVmaW5lZFwiIGluIHRoZSB1dWlkKVxuICAvLyAtIEludmFsaWQgaW5wdXQgdmFsdWVzIGZvciB0aGUgUkZDIGB2ZXJzaW9uYCBvciBgdmFyaWFudGAgZmllbGRzXG5cbiAgaWYgKCF2YWxpZGF0ZSh1dWlkKSkge1xuICAgIHRocm93IFR5cGVFcnJvcignU3RyaW5naWZpZWQgVVVJRCBpcyBpbnZhbGlkJyk7XG4gIH1cblxuICByZXR1cm4gdXVpZDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgc3RyaW5naWZ5OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/stringify.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v1.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v1.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ \"./node_modules/uuid/dist/esm-browser/rng.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/uuid/dist/esm-browser/stringify.js\");\n\n // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(b);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v1);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3YxLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdG96bnlzZWN1cmUvc2RrLy4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci92MS5qcz9jNTBhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBybmcgZnJvbSAnLi9ybmcuanMnO1xuaW1wb3J0IHN0cmluZ2lmeSBmcm9tICcuL3N0cmluZ2lmeS5qcyc7IC8vICoqYHYxKClgIC0gR2VuZXJhdGUgdGltZS1iYXNlZCBVVUlEKipcbi8vXG4vLyBJbnNwaXJlZCBieSBodHRwczovL2dpdGh1Yi5jb20vTGlvc0svVVVJRC5qc1xuLy8gYW5kIGh0dHA6Ly9kb2NzLnB5dGhvbi5vcmcvbGlicmFyeS91dWlkLmh0bWxcblxudmFyIF9ub2RlSWQ7XG5cbnZhciBfY2xvY2tzZXE7IC8vIFByZXZpb3VzIHV1aWQgY3JlYXRpb24gdGltZVxuXG5cbnZhciBfbGFzdE1TZWNzID0gMDtcbnZhciBfbGFzdE5TZWNzID0gMDsgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS91dWlkanMvdXVpZCBmb3IgQVBJIGRldGFpbHNcblxuZnVuY3Rpb24gdjEob3B0aW9ucywgYnVmLCBvZmZzZXQpIHtcbiAgdmFyIGkgPSBidWYgJiYgb2Zmc2V0IHx8IDA7XG4gIHZhciBiID0gYnVmIHx8IG5ldyBBcnJheSgxNik7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICB2YXIgbm9kZSA9IG9wdGlvbnMubm9kZSB8fCBfbm9kZUlkO1xuICB2YXIgY2xvY2tzZXEgPSBvcHRpb25zLmNsb2Nrc2VxICE9PSB1bmRlZmluZWQgPyBvcHRpb25zLmNsb2Nrc2VxIDogX2Nsb2Nrc2VxOyAvLyBub2RlIGFuZCBjbG9ja3NlcSBuZWVkIHRvIGJlIGluaXRpYWxpemVkIHRvIHJhbmRvbSB2YWx1ZXMgaWYgdGhleSdyZSBub3RcbiAgLy8gc3BlY2lmaWVkLiAgV2UgZG8gdGhpcyBsYXppbHkgdG8gbWluaW1pemUgaXNzdWVzIHJlbGF0ZWQgdG8gaW5zdWZmaWNpZW50XG4gIC8vIHN5c3RlbSBlbnRyb3B5LiAgU2VlICMxODlcblxuICBpZiAobm9kZSA9PSBudWxsIHx8IGNsb2Nrc2VxID09IG51bGwpIHtcbiAgICB2YXIgc2VlZEJ5dGVzID0gb3B0aW9ucy5yYW5kb20gfHwgKG9wdGlvbnMucm5nIHx8IHJuZykoKTtcblxuICAgIGlmIChub2RlID09IG51bGwpIHtcbiAgICAgIC8vIFBlciA0LjUsIGNyZWF0ZSBhbmQgNDgtYml0IG5vZGUgaWQsICg0NyByYW5kb20gYml0cyArIG11bHRpY2FzdCBiaXQgPSAxKVxuICAgICAgbm9kZSA9IF9ub2RlSWQgPSBbc2VlZEJ5dGVzWzBdIHwgMHgwMSwgc2VlZEJ5dGVzWzFdLCBzZWVkQnl0ZXNbMl0sIHNlZWRCeXRlc1szXSwgc2VlZEJ5dGVzWzRdLCBzZWVkQnl0ZXNbNV1dO1xuICAgIH1cblxuICAgIGlmIChjbG9ja3NlcSA9PSBudWxsKSB7XG4gICAgICAvLyBQZXIgNC4yLjIsIHJhbmRvbWl6ZSAoMTQgYml0KSBjbG9ja3NlcVxuICAgICAgY2xvY2tzZXEgPSBfY2xvY2tzZXEgPSAoc2VlZEJ5dGVzWzZdIDw8IDggfCBzZWVkQnl0ZXNbN10pICYgMHgzZmZmO1xuICAgIH1cbiAgfSAvLyBVVUlEIHRpbWVzdGFtcHMgYXJlIDEwMCBuYW5vLXNlY29uZCB1bml0cyBzaW5jZSB0aGUgR3JlZ29yaWFuIGVwb2NoLFxuICAvLyAoMTU4Mi0xMC0xNSAwMDowMCkuICBKU051bWJlcnMgYXJlbid0IHByZWNpc2UgZW5vdWdoIGZvciB0aGlzLCBzb1xuICAvLyB0aW1lIGlzIGhhbmRsZWQgaW50ZXJuYWxseSBhcyAnbXNlY3MnIChpbnRlZ2VyIG1pbGxpc2Vjb25kcykgYW5kICduc2VjcydcbiAgLy8gKDEwMC1uYW5vc2Vjb25kcyBvZmZzZXQgZnJvbSBtc2Vjcykgc2luY2UgdW5peCBlcG9jaCwgMTk3MC0wMS0wMSAwMDowMC5cblxuXG4gIHZhciBtc2VjcyA9IG9wdGlvbnMubXNlY3MgIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMubXNlY3MgOiBEYXRlLm5vdygpOyAvLyBQZXIgNC4yLjEuMiwgdXNlIGNvdW50IG9mIHV1aWQncyBnZW5lcmF0ZWQgZHVyaW5nIHRoZSBjdXJyZW50IGNsb2NrXG4gIC8vIGN5Y2xlIHRvIHNpbXVsYXRlIGhpZ2hlciByZXNvbHV0aW9uIGNsb2NrXG5cbiAgdmFyIG5zZWNzID0gb3B0aW9ucy5uc2VjcyAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5uc2VjcyA6IF9sYXN0TlNlY3MgKyAxOyAvLyBUaW1lIHNpbmNlIGxhc3QgdXVpZCBjcmVhdGlvbiAoaW4gbXNlY3MpXG5cbiAgdmFyIGR0ID0gbXNlY3MgLSBfbGFzdE1TZWNzICsgKG5zZWNzIC0gX2xhc3ROU2VjcykgLyAxMDAwMDsgLy8gUGVyIDQuMi4xLjIsIEJ1bXAgY2xvY2tzZXEgb24gY2xvY2sgcmVncmVzc2lvblxuXG4gIGlmIChkdCA8IDAgJiYgb3B0aW9ucy5jbG9ja3NlcSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgY2xvY2tzZXEgPSBjbG9ja3NlcSArIDEgJiAweDNmZmY7XG4gIH0gLy8gUmVzZXQgbnNlY3MgaWYgY2xvY2sgcmVncmVzc2VzIChuZXcgY2xvY2tzZXEpIG9yIHdlJ3ZlIG1vdmVkIG9udG8gYSBuZXdcbiAgLy8gdGltZSBpbnRlcnZhbFxuXG5cbiAgaWYgKChkdCA8IDAgfHwgbXNlY3MgPiBfbGFzdE1TZWNzKSAmJiBvcHRpb25zLm5zZWNzID09PSB1bmRlZmluZWQpIHtcbiAgICBuc2VjcyA9IDA7XG4gIH0gLy8gUGVyIDQuMi4xLjIgVGhyb3cgZXJyb3IgaWYgdG9vIG1hbnkgdXVpZHMgYXJlIHJlcXVlc3RlZFxuXG5cbiAgaWYgKG5zZWNzID49IDEwMDAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwidXVpZC52MSgpOiBDYW4ndCBjcmVhdGUgbW9yZSB0aGFuIDEwTSB1dWlkcy9zZWNcIik7XG4gIH1cblxuICBfbGFzdE1TZWNzID0gbXNlY3M7XG4gIF9sYXN0TlNlY3MgPSBuc2VjcztcbiAgX2Nsb2Nrc2VxID0gY2xvY2tzZXE7IC8vIFBlciA0LjEuNCAtIENvbnZlcnQgZnJvbSB1bml4IGVwb2NoIHRvIEdyZWdvcmlhbiBlcG9jaFxuXG4gIG1zZWNzICs9IDEyMjE5MjkyODAwMDAwOyAvLyBgdGltZV9sb3dgXG5cbiAgdmFyIHRsID0gKChtc2VjcyAmIDB4ZmZmZmZmZikgKiAxMDAwMCArIG5zZWNzKSAlIDB4MTAwMDAwMDAwO1xuICBiW2krK10gPSB0bCA+Pj4gMjQgJiAweGZmO1xuICBiW2krK10gPSB0bCA+Pj4gMTYgJiAweGZmO1xuICBiW2krK10gPSB0bCA+Pj4gOCAmIDB4ZmY7XG4gIGJbaSsrXSA9IHRsICYgMHhmZjsgLy8gYHRpbWVfbWlkYFxuXG4gIHZhciB0bWggPSBtc2VjcyAvIDB4MTAwMDAwMDAwICogMTAwMDAgJiAweGZmZmZmZmY7XG4gIGJbaSsrXSA9IHRtaCA+Pj4gOCAmIDB4ZmY7XG4gIGJbaSsrXSA9IHRtaCAmIDB4ZmY7IC8vIGB0aW1lX2hpZ2hfYW5kX3ZlcnNpb25gXG5cbiAgYltpKytdID0gdG1oID4+PiAyNCAmIDB4ZiB8IDB4MTA7IC8vIGluY2x1ZGUgdmVyc2lvblxuXG4gIGJbaSsrXSA9IHRtaCA+Pj4gMTYgJiAweGZmOyAvLyBgY2xvY2tfc2VxX2hpX2FuZF9yZXNlcnZlZGAgKFBlciA0LjIuMiAtIGluY2x1ZGUgdmFyaWFudClcblxuICBiW2krK10gPSBjbG9ja3NlcSA+Pj4gOCB8IDB4ODA7IC8vIGBjbG9ja19zZXFfbG93YFxuXG4gIGJbaSsrXSA9IGNsb2Nrc2VxICYgMHhmZjsgLy8gYG5vZGVgXG5cbiAgZm9yICh2YXIgbiA9IDA7IG4gPCA2OyArK24pIHtcbiAgICBiW2kgKyBuXSA9IG5vZGVbbl07XG4gIH1cblxuICByZXR1cm4gYnVmIHx8IHN0cmluZ2lmeShiKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdjE7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/v1.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v3.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v3.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v35.js */ \"./node_modules/uuid/dist/esm-browser/v35.js\");\n/* harmony import */ var _md5_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./md5.js */ \"./node_modules/uuid/dist/esm-browser/md5.js\");\n\n\nvar v3 = (0,_v35_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('v3', 0x30, _md5_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v3);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3YzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHRvem55c2VjdXJlL3Nkay8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvdjMuanM/NTRhYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdjM1IGZyb20gJy4vdjM1LmpzJztcbmltcG9ydCBtZDUgZnJvbSAnLi9tZDUuanMnO1xudmFyIHYzID0gdjM1KCd2MycsIDB4MzAsIG1kNSk7XG5leHBvcnQgZGVmYXVsdCB2MzsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/v3.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v35.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v35.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DNS\": () => (/* binding */ DNS),\n/* harmony export */   \"URL\": () => (/* binding */ URL),\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/uuid/dist/esm-browser/stringify.js\");\n/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse.js */ \"./node_modules/uuid/dist/esm-browser/parse.js\");\n\n\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nvar DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nvar URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = (0,_parse_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3YzNS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHRvem55c2VjdXJlL3Nkay8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvdjM1LmpzP2ZmYzYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0cmluZ2lmeSBmcm9tICcuL3N0cmluZ2lmeS5qcyc7XG5pbXBvcnQgcGFyc2UgZnJvbSAnLi9wYXJzZS5qcyc7XG5cbmZ1bmN0aW9uIHN0cmluZ1RvQnl0ZXMoc3RyKSB7XG4gIHN0ciA9IHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChzdHIpKTsgLy8gVVRGOCBlc2NhcGVcblxuICB2YXIgYnl0ZXMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0ci5sZW5ndGg7ICsraSkge1xuICAgIGJ5dGVzLnB1c2goc3RyLmNoYXJDb2RlQXQoaSkpO1xuICB9XG5cbiAgcmV0dXJuIGJ5dGVzO1xufVxuXG5leHBvcnQgdmFyIEROUyA9ICc2YmE3YjgxMC05ZGFkLTExZDEtODBiNC0wMGMwNGZkNDMwYzgnO1xuZXhwb3J0IHZhciBVUkwgPSAnNmJhN2I4MTEtOWRhZC0xMWQxLTgwYjQtMDBjMDRmZDQzMGM4JztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIChuYW1lLCB2ZXJzaW9uLCBoYXNoZnVuYykge1xuICBmdW5jdGlvbiBnZW5lcmF0ZVVVSUQodmFsdWUsIG5hbWVzcGFjZSwgYnVmLCBvZmZzZXQpIHtcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgdmFsdWUgPSBzdHJpbmdUb0J5dGVzKHZhbHVlKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIG5hbWVzcGFjZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIG5hbWVzcGFjZSA9IHBhcnNlKG5hbWVzcGFjZSk7XG4gICAgfVxuXG4gICAgaWYgKG5hbWVzcGFjZS5sZW5ndGggIT09IDE2KSB7XG4gICAgICB0aHJvdyBUeXBlRXJyb3IoJ05hbWVzcGFjZSBtdXN0IGJlIGFycmF5LWxpa2UgKDE2IGl0ZXJhYmxlIGludGVnZXIgdmFsdWVzLCAwLTI1NSknKTtcbiAgICB9IC8vIENvbXB1dGUgaGFzaCBvZiBuYW1lc3BhY2UgYW5kIHZhbHVlLCBQZXIgNC4zXG4gICAgLy8gRnV0dXJlOiBVc2Ugc3ByZWFkIHN5bnRheCB3aGVuIHN1cHBvcnRlZCBvbiBhbGwgcGxhdGZvcm1zLCBlLmcuIGBieXRlcyA9XG4gICAgLy8gaGFzaGZ1bmMoWy4uLm5hbWVzcGFjZSwgLi4uIHZhbHVlXSlgXG5cblxuICAgIHZhciBieXRlcyA9IG5ldyBVaW50OEFycmF5KDE2ICsgdmFsdWUubGVuZ3RoKTtcbiAgICBieXRlcy5zZXQobmFtZXNwYWNlKTtcbiAgICBieXRlcy5zZXQodmFsdWUsIG5hbWVzcGFjZS5sZW5ndGgpO1xuICAgIGJ5dGVzID0gaGFzaGZ1bmMoYnl0ZXMpO1xuICAgIGJ5dGVzWzZdID0gYnl0ZXNbNl0gJiAweDBmIHwgdmVyc2lvbjtcbiAgICBieXRlc1s4XSA9IGJ5dGVzWzhdICYgMHgzZiB8IDB4ODA7XG5cbiAgICBpZiAoYnVmKSB7XG4gICAgICBvZmZzZXQgPSBvZmZzZXQgfHwgMDtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAxNjsgKytpKSB7XG4gICAgICAgIGJ1ZltvZmZzZXQgKyBpXSA9IGJ5dGVzW2ldO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gYnVmO1xuICAgIH1cblxuICAgIHJldHVybiBzdHJpbmdpZnkoYnl0ZXMpO1xuICB9IC8vIEZ1bmN0aW9uI25hbWUgaXMgbm90IHNldHRhYmxlIG9uIHNvbWUgcGxhdGZvcm1zICgjMjcwKVxuXG5cbiAgdHJ5IHtcbiAgICBnZW5lcmF0ZVVVSUQubmFtZSA9IG5hbWU7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1lbXB0eVxuICB9IGNhdGNoIChlcnIpIHt9IC8vIEZvciBDb21tb25KUyBkZWZhdWx0IGV4cG9ydCBzdXBwb3J0XG5cblxuICBnZW5lcmF0ZVVVSUQuRE5TID0gRE5TO1xuICBnZW5lcmF0ZVVVSUQuVVJMID0gVVJMO1xuICByZXR1cm4gZ2VuZXJhdGVVVUlEO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/v35.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v4.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v4.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ \"./node_modules/uuid/dist/esm-browser/rng.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/uuid/dist/esm-browser/stringify.js\");\n\n\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(rnds);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v4);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3Y0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B0b3pueXNlY3VyZS9zZGsvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3Y0LmpzP2VjMjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHJuZyBmcm9tICcuL3JuZy5qcyc7XG5pbXBvcnQgc3RyaW5naWZ5IGZyb20gJy4vc3RyaW5naWZ5LmpzJztcblxuZnVuY3Rpb24gdjQob3B0aW9ucywgYnVmLCBvZmZzZXQpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIHZhciBybmRzID0gb3B0aW9ucy5yYW5kb20gfHwgKG9wdGlvbnMucm5nIHx8IHJuZykoKTsgLy8gUGVyIDQuNCwgc2V0IGJpdHMgZm9yIHZlcnNpb24gYW5kIGBjbG9ja19zZXFfaGlfYW5kX3Jlc2VydmVkYFxuXG4gIHJuZHNbNl0gPSBybmRzWzZdICYgMHgwZiB8IDB4NDA7XG4gIHJuZHNbOF0gPSBybmRzWzhdICYgMHgzZiB8IDB4ODA7IC8vIENvcHkgYnl0ZXMgdG8gYnVmZmVyLCBpZiBwcm92aWRlZFxuXG4gIGlmIChidWYpIHtcbiAgICBvZmZzZXQgPSBvZmZzZXQgfHwgMDtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMTY7ICsraSkge1xuICAgICAgYnVmW29mZnNldCArIGldID0gcm5kc1tpXTtcbiAgICB9XG5cbiAgICByZXR1cm4gYnVmO1xuICB9XG5cbiAgcmV0dXJuIHN0cmluZ2lmeShybmRzKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdjQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/v4.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v5.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v5.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v35.js */ \"./node_modules/uuid/dist/esm-browser/v35.js\");\n/* harmony import */ var _sha1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sha1.js */ \"./node_modules/uuid/dist/esm-browser/sha1.js\");\n\n\nvar v5 = (0,_v35_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('v5', 0x50, _sha1_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v5);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3Y1LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHRvem55c2VjdXJlL3Nkay8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvdjUuanM/MjZiZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdjM1IGZyb20gJy4vdjM1LmpzJztcbmltcG9ydCBzaGExIGZyb20gJy4vc2hhMS5qcyc7XG52YXIgdjUgPSB2MzUoJ3Y1JywgMHg1MCwgc2hhMSk7XG5leHBvcnQgZGVmYXVsdCB2NTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/v5.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/validate.js":
/*!********************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/validate.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./regex.js */ \"./node_modules/uuid/dist/esm-browser/regex.js\");\n\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].test(uuid);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (validate);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3ZhbGlkYXRlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdG96bnlzZWN1cmUvc2RrLy4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci92YWxpZGF0ZS5qcz8wNmU0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSRUdFWCBmcm9tICcuL3JlZ2V4LmpzJztcblxuZnVuY3Rpb24gdmFsaWRhdGUodXVpZCkge1xuICByZXR1cm4gdHlwZW9mIHV1aWQgPT09ICdzdHJpbmcnICYmIFJFR0VYLnRlc3QodXVpZCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHZhbGlkYXRlOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/validate.js\n");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/version.js":
/*!*******************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/version.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"./node_modules/uuid/dist/esm-browser/validate.js\");\n\n\nfunction version(uuid) {\n  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (version);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1icm93c2VyL3ZlcnNpb24uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHRvem55c2VjdXJlL3Nkay8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvdmVyc2lvbi5qcz83NmU4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB2YWxpZGF0ZSBmcm9tICcuL3ZhbGlkYXRlLmpzJztcblxuZnVuY3Rpb24gdmVyc2lvbih1dWlkKSB7XG4gIGlmICghdmFsaWRhdGUodXVpZCkpIHtcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ0ludmFsaWQgVVVJRCcpO1xuICB9XG5cbiAgcmV0dXJuIHBhcnNlSW50KHV1aWQuc3Vic3RyKDE0LCAxKSwgMTYpO1xufVxuXG5leHBvcnQgZGVmYXVsdCB2ZXJzaW9uOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/uuid/dist/esm-browser/version.js\n");

/***/ }),

/***/ "./types/accessRequest.js":
/*!********************************!*\
  !*** ./types/accessRequest.js ***!
  \********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Serializable = __webpack_require__(/*! ./serializable */ \"./types/serializable.js\")\r\n\r\nclass AccessRequest extends Serializable {\r\n  constructor(reason, requestorId, realmName, groups, accessDurationSeconds) {\r\n    super()\r\n    this.reason = reason\r\n    this.requestorId = requestorId\r\n    this.realmName = realmName\r\n    this.groups = groups\r\n    this.accessDurationSeconds = accessDurationSeconds\r\n    this.id = null\r\n    this.state = null\r\n    this.createdAt = null\r\n    this.autoExpiresAt = null\r\n    this.requestor = null\r\n    this.requiredApprovalsCount = null\r\n    this.actions = []\r\n  }\r\n\r\n  serializable() {\r\n    let toSerialize = {\r\n      reason: this.reason,\r\n      requestor_id: this.requestorId,\r\n      realm_name: this.realmName,\r\n      ttl: this.accessDurationSeconds,\r\n      groups: [],\r\n      id: this.id,\r\n      state: this.state,\r\n      created_at: this.createdAt,\r\n      auto_expires_at: this.autoExpiresAt,\r\n    }\r\n    let rawGroups = []\r\n    for (const group of this.groups) {\r\n      rawGroups.push({ group_id: group.id })\r\n    }\r\n    toSerialize.groups = rawGroups\r\n    const serializedKeys = Object.keys(toSerialize)\r\n    for (const key of serializedKeys) {\r\n      if (toSerialize[key] === null) {\r\n        delete toSerialize[key]\r\n      }\r\n    }\r\n    return toSerialize\r\n  }\r\n  static decode(json) {\r\n    const reason = json.reason || null\r\n    const requestorId = json.requestor_id || json.requestorId || null\r\n    const realmName = json.realm_name || json.realmName || null\r\n    const accessDurationSeconds = json.ttl || json.accessDurationSeconds || null\r\n    const rawGroups = json.groups || []\r\n    // decode groups\r\n    const groups = rawGroups.map((group) => ({\r\n      id: group.group_id || group.id || null,\r\n      groupName: group.group_name || group.groupName || null,\r\n    }))\r\n\r\n    const accessRequest = new AccessRequest(\r\n      reason,\r\n      requestorId,\r\n      realmName,\r\n      groups,\r\n      accessDurationSeconds\r\n    )\r\n\r\n    // server defined values\r\n    Object.assign(accessRequest, {\r\n      id: json.id || null,\r\n      state: json.state || null,\r\n      createdAt: json.created_at || null,\r\n      autoExpiresAt: json.auto_expires_at || null,\r\n      requiredApprovalsCount: json.required_approval_count,\r\n      requestor: AccessRequest._decodeUserDetails(json.requestor_details || {}),\r\n      actions: (json.actions || []).map((action) => ({\r\n        user: AccessRequest._decodeUserDetails(action.user_details || {}),\r\n        takenAt: action.taken_at || null,\r\n        action: action.action || null,\r\n        comment: action.comment || '',\r\n      })),\r\n    })\r\n\r\n    return accessRequest\r\n  }\r\n\r\n  static _decodeUserDetails(details) {\r\n    return {\r\n      toznyId: details.tozny_id,\r\n      username: details.username,\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = AccessRequest\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9hY2Nlc3NSZXF1ZXN0LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdG96bnlzZWN1cmUvc2RrLy4vdHlwZXMvYWNjZXNzUmVxdWVzdC5qcz9jZWVmIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlcmlhbGl6YWJsZSA9IHJlcXVpcmUoJy4vc2VyaWFsaXphYmxlJylcclxuXHJcbmNsYXNzIEFjY2Vzc1JlcXVlc3QgZXh0ZW5kcyBTZXJpYWxpemFibGUge1xyXG4gIGNvbnN0cnVjdG9yKHJlYXNvbiwgcmVxdWVzdG9ySWQsIHJlYWxtTmFtZSwgZ3JvdXBzLCBhY2Nlc3NEdXJhdGlvblNlY29uZHMpIHtcclxuICAgIHN1cGVyKClcclxuICAgIHRoaXMucmVhc29uID0gcmVhc29uXHJcbiAgICB0aGlzLnJlcXVlc3RvcklkID0gcmVxdWVzdG9ySWRcclxuICAgIHRoaXMucmVhbG1OYW1lID0gcmVhbG1OYW1lXHJcbiAgICB0aGlzLmdyb3VwcyA9IGdyb3Vwc1xyXG4gICAgdGhpcy5hY2Nlc3NEdXJhdGlvblNlY29uZHMgPSBhY2Nlc3NEdXJhdGlvblNlY29uZHNcclxuICAgIHRoaXMuaWQgPSBudWxsXHJcbiAgICB0aGlzLnN0YXRlID0gbnVsbFxyXG4gICAgdGhpcy5jcmVhdGVkQXQgPSBudWxsXHJcbiAgICB0aGlzLmF1dG9FeHBpcmVzQXQgPSBudWxsXHJcbiAgICB0aGlzLnJlcXVlc3RvciA9IG51bGxcclxuICAgIHRoaXMucmVxdWlyZWRBcHByb3ZhbHNDb3VudCA9IG51bGxcclxuICAgIHRoaXMuYWN0aW9ucyA9IFtdXHJcbiAgfVxyXG5cclxuICBzZXJpYWxpemFibGUoKSB7XHJcbiAgICBsZXQgdG9TZXJpYWxpemUgPSB7XHJcbiAgICAgIHJlYXNvbjogdGhpcy5yZWFzb24sXHJcbiAgICAgIHJlcXVlc3Rvcl9pZDogdGhpcy5yZXF1ZXN0b3JJZCxcclxuICAgICAgcmVhbG1fbmFtZTogdGhpcy5yZWFsbU5hbWUsXHJcbiAgICAgIHR0bDogdGhpcy5hY2Nlc3NEdXJhdGlvblNlY29uZHMsXHJcbiAgICAgIGdyb3VwczogW10sXHJcbiAgICAgIGlkOiB0aGlzLmlkLFxyXG4gICAgICBzdGF0ZTogdGhpcy5zdGF0ZSxcclxuICAgICAgY3JlYXRlZF9hdDogdGhpcy5jcmVhdGVkQXQsXHJcbiAgICAgIGF1dG9fZXhwaXJlc19hdDogdGhpcy5hdXRvRXhwaXJlc0F0LFxyXG4gICAgfVxyXG4gICAgbGV0IHJhd0dyb3VwcyA9IFtdXHJcbiAgICBmb3IgKGNvbnN0IGdyb3VwIG9mIHRoaXMuZ3JvdXBzKSB7XHJcbiAgICAgIHJhd0dyb3Vwcy5wdXNoKHsgZ3JvdXBfaWQ6IGdyb3VwLmlkIH0pXHJcbiAgICB9XHJcbiAgICB0b1NlcmlhbGl6ZS5ncm91cHMgPSByYXdHcm91cHNcclxuICAgIGNvbnN0IHNlcmlhbGl6ZWRLZXlzID0gT2JqZWN0LmtleXModG9TZXJpYWxpemUpXHJcbiAgICBmb3IgKGNvbnN0IGtleSBvZiBzZXJpYWxpemVkS2V5cykge1xyXG4gICAgICBpZiAodG9TZXJpYWxpemVba2V5XSA9PT0gbnVsbCkge1xyXG4gICAgICAgIGRlbGV0ZSB0b1NlcmlhbGl6ZVtrZXldXHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiB0b1NlcmlhbGl6ZVxyXG4gIH1cclxuICBzdGF0aWMgZGVjb2RlKGpzb24pIHtcclxuICAgIGNvbnN0IHJlYXNvbiA9IGpzb24ucmVhc29uIHx8IG51bGxcclxuICAgIGNvbnN0IHJlcXVlc3RvcklkID0ganNvbi5yZXF1ZXN0b3JfaWQgfHwganNvbi5yZXF1ZXN0b3JJZCB8fCBudWxsXHJcbiAgICBjb25zdCByZWFsbU5hbWUgPSBqc29uLnJlYWxtX25hbWUgfHwganNvbi5yZWFsbU5hbWUgfHwgbnVsbFxyXG4gICAgY29uc3QgYWNjZXNzRHVyYXRpb25TZWNvbmRzID0ganNvbi50dGwgfHwganNvbi5hY2Nlc3NEdXJhdGlvblNlY29uZHMgfHwgbnVsbFxyXG4gICAgY29uc3QgcmF3R3JvdXBzID0ganNvbi5ncm91cHMgfHwgW11cclxuICAgIC8vIGRlY29kZSBncm91cHNcclxuICAgIGNvbnN0IGdyb3VwcyA9IHJhd0dyb3Vwcy5tYXAoKGdyb3VwKSA9PiAoe1xyXG4gICAgICBpZDogZ3JvdXAuZ3JvdXBfaWQgfHwgZ3JvdXAuaWQgfHwgbnVsbCxcclxuICAgICAgZ3JvdXBOYW1lOiBncm91cC5ncm91cF9uYW1lIHx8IGdyb3VwLmdyb3VwTmFtZSB8fCBudWxsLFxyXG4gICAgfSkpXHJcblxyXG4gICAgY29uc3QgYWNjZXNzUmVxdWVzdCA9IG5ldyBBY2Nlc3NSZXF1ZXN0KFxyXG4gICAgICByZWFzb24sXHJcbiAgICAgIHJlcXVlc3RvcklkLFxyXG4gICAgICByZWFsbU5hbWUsXHJcbiAgICAgIGdyb3VwcyxcclxuICAgICAgYWNjZXNzRHVyYXRpb25TZWNvbmRzXHJcbiAgICApXHJcblxyXG4gICAgLy8gc2VydmVyIGRlZmluZWQgdmFsdWVzXHJcbiAgICBPYmplY3QuYXNzaWduKGFjY2Vzc1JlcXVlc3QsIHtcclxuICAgICAgaWQ6IGpzb24uaWQgfHwgbnVsbCxcclxuICAgICAgc3RhdGU6IGpzb24uc3RhdGUgfHwgbnVsbCxcclxuICAgICAgY3JlYXRlZEF0OiBqc29uLmNyZWF0ZWRfYXQgfHwgbnVsbCxcclxuICAgICAgYXV0b0V4cGlyZXNBdDoganNvbi5hdXRvX2V4cGlyZXNfYXQgfHwgbnVsbCxcclxuICAgICAgcmVxdWlyZWRBcHByb3ZhbHNDb3VudDoganNvbi5yZXF1aXJlZF9hcHByb3ZhbF9jb3VudCxcclxuICAgICAgcmVxdWVzdG9yOiBBY2Nlc3NSZXF1ZXN0Ll9kZWNvZGVVc2VyRGV0YWlscyhqc29uLnJlcXVlc3Rvcl9kZXRhaWxzIHx8IHt9KSxcclxuICAgICAgYWN0aW9uczogKGpzb24uYWN0aW9ucyB8fCBbXSkubWFwKChhY3Rpb24pID0+ICh7XHJcbiAgICAgICAgdXNlcjogQWNjZXNzUmVxdWVzdC5fZGVjb2RlVXNlckRldGFpbHMoYWN0aW9uLnVzZXJfZGV0YWlscyB8fCB7fSksXHJcbiAgICAgICAgdGFrZW5BdDogYWN0aW9uLnRha2VuX2F0IHx8IG51bGwsXHJcbiAgICAgICAgYWN0aW9uOiBhY3Rpb24uYWN0aW9uIHx8IG51bGwsXHJcbiAgICAgICAgY29tbWVudDogYWN0aW9uLmNvbW1lbnQgfHwgJycsXHJcbiAgICAgIH0pKSxcclxuICAgIH0pXHJcblxyXG4gICAgcmV0dXJuIGFjY2Vzc1JlcXVlc3RcclxuICB9XHJcblxyXG4gIHN0YXRpYyBfZGVjb2RlVXNlckRldGFpbHMoZGV0YWlscykge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgdG96bnlJZDogZGV0YWlscy50b3pueV9pZCxcclxuICAgICAgdXNlcm5hbWU6IGRldGFpbHMudXNlcm5hbWUsXHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IEFjY2Vzc1JlcXVlc3RcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./types/accessRequest.js\n");

/***/ }),

/***/ "./types/accessRequestSearchResponse.js":
/*!**********************************************!*\
  !*** ./types/accessRequestSearchResponse.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const AccessRequest = __webpack_require__(/*! ./accessRequest */ \"./types/accessRequest.js\")\r\nconst Serializable = __webpack_require__(/*! ./serializable */ \"./types/serializable.js\")\r\n\r\nclass AccessRequestSearchResponse extends Serializable {\r\n  constructor(accessRequests, nextToken) {\r\n    super()\r\n    this.accessRequests = accessRequests\r\n    this.nextToken = nextToken\r\n  }\r\n\r\n  serializable() {\r\n    const serializedAccessRequests = this.accessRequests.map((ar) =>\r\n      ar.serializable()\r\n    )\r\n    let toSerialize = {\r\n      access_requests: serializedAccessRequests,\r\n      next_token: this.nextToken,\r\n    }\r\n    const serializedKeys = Object.keys(toSerialize)\r\n    for (const key of serializedKeys) {\r\n      if (toSerialize[key] === null) {\r\n        delete toSerialize[key]\r\n      }\r\n    }\r\n    return toSerialize\r\n  }\r\n  static decode(json) {\r\n    const rawAccessRequests = json.access_requests || []\r\n    const accessRequests = rawAccessRequests.map(AccessRequest.decode)\r\n    const nextToken = json.next_token || 0\r\n\r\n    const accessRequestSearchResponse = new AccessRequestSearchResponse(\r\n      accessRequests,\r\n      nextToken\r\n    )\r\n\r\n    return accessRequestSearchResponse\r\n  }\r\n}\r\n\r\nmodule.exports = AccessRequestSearchResponse\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9hY2Nlc3NSZXF1ZXN0U2VhcmNoUmVzcG9uc2UuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B0b3pueXNlY3VyZS9zZGsvLi90eXBlcy9hY2Nlc3NSZXF1ZXN0U2VhcmNoUmVzcG9uc2UuanM/NWIwOSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBBY2Nlc3NSZXF1ZXN0ID0gcmVxdWlyZSgnLi9hY2Nlc3NSZXF1ZXN0JylcclxuY29uc3QgU2VyaWFsaXphYmxlID0gcmVxdWlyZSgnLi9zZXJpYWxpemFibGUnKVxyXG5cclxuY2xhc3MgQWNjZXNzUmVxdWVzdFNlYXJjaFJlc3BvbnNlIGV4dGVuZHMgU2VyaWFsaXphYmxlIHtcclxuICBjb25zdHJ1Y3RvcihhY2Nlc3NSZXF1ZXN0cywgbmV4dFRva2VuKSB7XHJcbiAgICBzdXBlcigpXHJcbiAgICB0aGlzLmFjY2Vzc1JlcXVlc3RzID0gYWNjZXNzUmVxdWVzdHNcclxuICAgIHRoaXMubmV4dFRva2VuID0gbmV4dFRva2VuXHJcbiAgfVxyXG5cclxuICBzZXJpYWxpemFibGUoKSB7XHJcbiAgICBjb25zdCBzZXJpYWxpemVkQWNjZXNzUmVxdWVzdHMgPSB0aGlzLmFjY2Vzc1JlcXVlc3RzLm1hcCgoYXIpID0+XHJcbiAgICAgIGFyLnNlcmlhbGl6YWJsZSgpXHJcbiAgICApXHJcbiAgICBsZXQgdG9TZXJpYWxpemUgPSB7XHJcbiAgICAgIGFjY2Vzc19yZXF1ZXN0czogc2VyaWFsaXplZEFjY2Vzc1JlcXVlc3RzLFxyXG4gICAgICBuZXh0X3Rva2VuOiB0aGlzLm5leHRUb2tlbixcclxuICAgIH1cclxuICAgIGNvbnN0IHNlcmlhbGl6ZWRLZXlzID0gT2JqZWN0LmtleXModG9TZXJpYWxpemUpXHJcbiAgICBmb3IgKGNvbnN0IGtleSBvZiBzZXJpYWxpemVkS2V5cykge1xyXG4gICAgICBpZiAodG9TZXJpYWxpemVba2V5XSA9PT0gbnVsbCkge1xyXG4gICAgICAgIGRlbGV0ZSB0b1NlcmlhbGl6ZVtrZXldXHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiB0b1NlcmlhbGl6ZVxyXG4gIH1cclxuICBzdGF0aWMgZGVjb2RlKGpzb24pIHtcclxuICAgIGNvbnN0IHJhd0FjY2Vzc1JlcXVlc3RzID0ganNvbi5hY2Nlc3NfcmVxdWVzdHMgfHwgW11cclxuICAgIGNvbnN0IGFjY2Vzc1JlcXVlc3RzID0gcmF3QWNjZXNzUmVxdWVzdHMubWFwKEFjY2Vzc1JlcXVlc3QuZGVjb2RlKVxyXG4gICAgY29uc3QgbmV4dFRva2VuID0ganNvbi5uZXh0X3Rva2VuIHx8IDBcclxuXHJcbiAgICBjb25zdCBhY2Nlc3NSZXF1ZXN0U2VhcmNoUmVzcG9uc2UgPSBuZXcgQWNjZXNzUmVxdWVzdFNlYXJjaFJlc3BvbnNlKFxyXG4gICAgICBhY2Nlc3NSZXF1ZXN0cyxcclxuICAgICAgbmV4dFRva2VuXHJcbiAgICApXHJcblxyXG4gICAgcmV0dXJuIGFjY2Vzc1JlcXVlc3RTZWFyY2hSZXNwb25zZVxyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBBY2Nlc3NSZXF1ZXN0U2VhcmNoUmVzcG9uc2VcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./types/accessRequestSearchResponse.js\n");

/***/ }),

/***/ "./types/authorizerPolicy.js":
/*!***********************************!*\
  !*** ./types/authorizerPolicy.js ***!
  \***********************************/
/***/ ((module) => {

eval("/**\r\n * Information an authorizer policy written to TozStore\r\n *\r\n * @property {string} authorizerId The Client ID controlled by the policy\r\n * @property {string} writerId The client ID that wrote the data controlled by the policy\r\n * @property {string} userId The client ID the data controlled by the policy is about\r\n * @property {string} recordType The record type controlled by the policy\r\n * @property {string} authorizedBy The Client ID that wrote the policy\r\n */\r\nclass AuthorizerPolicy {\r\n  constructor(authorizerId, writerId, userId, recordType, authorizedBy) {\r\n    this.authorizerId = authorizerId\r\n    this.writerId = writerId\r\n    this.userId = userId\r\n    this.recordType = recordType\r\n    this.authorizedBy = authorizedBy\r\n  }\r\n\r\n  /**\r\n   * Specify how an already unserialized JSON array should be marshaled into\r\n   * an object representation.\r\n   *\r\n   * @param {object} json\r\n   *\r\n   * @return {AuthorizerPolicy}\r\n   */\r\n  static decode(json) {\r\n    return new AuthorizerPolicy(\r\n      json.authorizer_id,\r\n      json.writer_id,\r\n      json.user_id,\r\n      json.record_type,\r\n      json.authorized_by\r\n    )\r\n  }\r\n}\r\n\r\nmodule.exports = AuthorizerPolicy\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9hdXRob3JpemVyUG9saWN5LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdG96bnlzZWN1cmUvc2RrLy4vdHlwZXMvYXV0aG9yaXplclBvbGljeS5qcz85ZTJmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBJbmZvcm1hdGlvbiBhbiBhdXRob3JpemVyIHBvbGljeSB3cml0dGVuIHRvIFRvelN0b3JlXHJcbiAqXHJcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBhdXRob3JpemVySWQgVGhlIENsaWVudCBJRCBjb250cm9sbGVkIGJ5IHRoZSBwb2xpY3lcclxuICogQHByb3BlcnR5IHtzdHJpbmd9IHdyaXRlcklkIFRoZSBjbGllbnQgSUQgdGhhdCB3cm90ZSB0aGUgZGF0YSBjb250cm9sbGVkIGJ5IHRoZSBwb2xpY3lcclxuICogQHByb3BlcnR5IHtzdHJpbmd9IHVzZXJJZCBUaGUgY2xpZW50IElEIHRoZSBkYXRhIGNvbnRyb2xsZWQgYnkgdGhlIHBvbGljeSBpcyBhYm91dFxyXG4gKiBAcHJvcGVydHkge3N0cmluZ30gcmVjb3JkVHlwZSBUaGUgcmVjb3JkIHR5cGUgY29udHJvbGxlZCBieSB0aGUgcG9saWN5XHJcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBhdXRob3JpemVkQnkgVGhlIENsaWVudCBJRCB0aGF0IHdyb3RlIHRoZSBwb2xpY3lcclxuICovXHJcbmNsYXNzIEF1dGhvcml6ZXJQb2xpY3kge1xyXG4gIGNvbnN0cnVjdG9yKGF1dGhvcml6ZXJJZCwgd3JpdGVySWQsIHVzZXJJZCwgcmVjb3JkVHlwZSwgYXV0aG9yaXplZEJ5KSB7XHJcbiAgICB0aGlzLmF1dGhvcml6ZXJJZCA9IGF1dGhvcml6ZXJJZFxyXG4gICAgdGhpcy53cml0ZXJJZCA9IHdyaXRlcklkXHJcbiAgICB0aGlzLnVzZXJJZCA9IHVzZXJJZFxyXG4gICAgdGhpcy5yZWNvcmRUeXBlID0gcmVjb3JkVHlwZVxyXG4gICAgdGhpcy5hdXRob3JpemVkQnkgPSBhdXRob3JpemVkQnlcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFNwZWNpZnkgaG93IGFuIGFscmVhZHkgdW5zZXJpYWxpemVkIEpTT04gYXJyYXkgc2hvdWxkIGJlIG1hcnNoYWxlZCBpbnRvXHJcbiAgICogYW4gb2JqZWN0IHJlcHJlc2VudGF0aW9uLlxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtvYmplY3R9IGpzb25cclxuICAgKlxyXG4gICAqIEByZXR1cm4ge0F1dGhvcml6ZXJQb2xpY3l9XHJcbiAgICovXHJcbiAgc3RhdGljIGRlY29kZShqc29uKSB7XHJcbiAgICByZXR1cm4gbmV3IEF1dGhvcml6ZXJQb2xpY3koXHJcbiAgICAgIGpzb24uYXV0aG9yaXplcl9pZCxcclxuICAgICAganNvbi53cml0ZXJfaWQsXHJcbiAgICAgIGpzb24udXNlcl9pZCxcclxuICAgICAganNvbi5yZWNvcmRfdHlwZSxcclxuICAgICAganNvbi5hdXRob3JpemVkX2J5XHJcbiAgICApXHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IEF1dGhvcml6ZXJQb2xpY3lcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./types/authorizerPolicy.js\n");

/***/ }),

/***/ "./types/capabilities.js":
/*!*******************************!*\
  !*** ./types/capabilities.js ***!
  \*******************************/
/***/ ((module) => {

eval("class Capabilities {\r\n  constructor(capabilities) {\r\n    this.manage = true\r\n    this.share = capabilities['share']\r\n    this.read = capabilities['read']\r\n  }\r\n  static toArray(capabilityBool) {\r\n    let capabilities = []\r\n    if (capabilityBool.share === true) {\r\n      capabilities.push('SHARE_CONTENT')\r\n    }\r\n    if (capabilityBool.manage === true) {\r\n      capabilities.push('MANAGE_MEMBERSHIP')\r\n    }\r\n    if (capabilityBool.read === true) {\r\n      capabilities.push('READ_CONTENT')\r\n    }\r\n    return capabilities\r\n  }\r\n\r\n  static toObject(capabilityArray) {\r\n    let capabilities = { manage: true }\r\n    capabilityArray.forEach((capability) => {\r\n      if (capability === 'SHARE_CONTENT') {\r\n        capabilities['share'] = true\r\n      }\r\n      if (capability === 'READ_CONTENT') {\r\n        capabilities['read'] = true\r\n      }\r\n    })\r\n    return capabilities\r\n  }\r\n}\r\n\r\nmodule.exports = Capabilities\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9jYXBhYmlsaXRpZXMuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B0b3pueXNlY3VyZS9zZGsvLi90eXBlcy9jYXBhYmlsaXRpZXMuanM/NDRiZSJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBDYXBhYmlsaXRpZXMge1xyXG4gIGNvbnN0cnVjdG9yKGNhcGFiaWxpdGllcykge1xyXG4gICAgdGhpcy5tYW5hZ2UgPSB0cnVlXHJcbiAgICB0aGlzLnNoYXJlID0gY2FwYWJpbGl0aWVzWydzaGFyZSddXHJcbiAgICB0aGlzLnJlYWQgPSBjYXBhYmlsaXRpZXNbJ3JlYWQnXVxyXG4gIH1cclxuICBzdGF0aWMgdG9BcnJheShjYXBhYmlsaXR5Qm9vbCkge1xyXG4gICAgbGV0IGNhcGFiaWxpdGllcyA9IFtdXHJcbiAgICBpZiAoY2FwYWJpbGl0eUJvb2wuc2hhcmUgPT09IHRydWUpIHtcclxuICAgICAgY2FwYWJpbGl0aWVzLnB1c2goJ1NIQVJFX0NPTlRFTlQnKVxyXG4gICAgfVxyXG4gICAgaWYgKGNhcGFiaWxpdHlCb29sLm1hbmFnZSA9PT0gdHJ1ZSkge1xyXG4gICAgICBjYXBhYmlsaXRpZXMucHVzaCgnTUFOQUdFX01FTUJFUlNISVAnKVxyXG4gICAgfVxyXG4gICAgaWYgKGNhcGFiaWxpdHlCb29sLnJlYWQgPT09IHRydWUpIHtcclxuICAgICAgY2FwYWJpbGl0aWVzLnB1c2goJ1JFQURfQ09OVEVOVCcpXHJcbiAgICB9XHJcbiAgICByZXR1cm4gY2FwYWJpbGl0aWVzXHJcbiAgfVxyXG5cclxuICBzdGF0aWMgdG9PYmplY3QoY2FwYWJpbGl0eUFycmF5KSB7XHJcbiAgICBsZXQgY2FwYWJpbGl0aWVzID0geyBtYW5hZ2U6IHRydWUgfVxyXG4gICAgY2FwYWJpbGl0eUFycmF5LmZvckVhY2goKGNhcGFiaWxpdHkpID0+IHtcclxuICAgICAgaWYgKGNhcGFiaWxpdHkgPT09ICdTSEFSRV9DT05URU5UJykge1xyXG4gICAgICAgIGNhcGFiaWxpdGllc1snc2hhcmUnXSA9IHRydWVcclxuICAgICAgfVxyXG4gICAgICBpZiAoY2FwYWJpbGl0eSA9PT0gJ1JFQURfQ09OVEVOVCcpIHtcclxuICAgICAgICBjYXBhYmlsaXRpZXNbJ3JlYWQnXSA9IHRydWVcclxuICAgICAgfVxyXG4gICAgfSlcclxuICAgIHJldHVybiBjYXBhYmlsaXRpZXNcclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gQ2FwYWJpbGl0aWVzXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./types/capabilities.js\n");

/***/ }),

/***/ "./types/clientDetails.js":
/*!********************************!*\
  !*** ./types/clientDetails.js ***!
  \********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const PublicKey = __webpack_require__(/*! ./publicKey */ \"./types/publicKey.js\")\r\nconst SigningKey = __webpack_require__(/*! ./signingKey */ \"./types/signingKey.js\")\r\n\r\n/**\r\n * Full information about a specific E3DB client, including the client's\r\n * public/private keys for cryptographic operations and API credentials.\r\n *\r\n * @property {string}     clientId   UUID representing the client.\r\n * @property {string}     apiKeyId   API key to be used when authenticating with e3db\r\n * @property {string}     apiSecret  API password to be used when authenticating with e3db\r\n * @property {PublicKey}  publicKey  Curve25519 public key for the client.\r\n * @property {string}     name       Description of the client\r\n * @property {SigningKey} signingKey Ed25519 public key for the client.\r\n */\r\nclass ClientDetails {\r\n  constructor(\r\n    clientId,\r\n    apiKeyId,\r\n    apiSecret,\r\n    publicKey,\r\n    name,\r\n    signingKey = null\r\n  ) {\r\n    this.clientId = clientId\r\n    this.apiKeyId = apiKeyId\r\n    this.apiSecret = apiSecret\r\n    this.publicKey = publicKey\r\n    this.name = name\r\n\r\n    if (signingKey === null) {\r\n      signingKey = new SigningKey(null)\r\n    }\r\n\r\n    this.signingKey = signingKey\r\n  }\r\n\r\n  /**\r\n   * Specify how an already unserialized JSON array should be marshaled into\r\n   * an object representation.\r\n   *\r\n   * Client information contains the ID of the client, API credentials for interacting\r\n   * with the e3db server, a Curve25519 public key component, and a description of the\r\n   * client as specified during creation.\r\n   *\r\n   * <code>\r\n   * info = ClientDetails::decode({\r\n   *   client_id: '',\r\n   *   api_key_id: '',\r\n   *   api_secret: '',\r\n   *   public_key: {\r\n   *     curve25519: ''\r\n   *   },\r\n   *   signing_key: {\r\n   *     ed25519: ''\r\n   *   },\r\n   *   name: ''\r\n   * })\r\n   * <code>\r\n   *\r\n   * @param {object} json\r\n   *\r\n   * @return {Promise<ClientDetails>}\r\n   */\r\n  static async decode(json) {\r\n    let publicKey = await PublicKey.decode(json.public_key)\r\n\r\n    let signingKey = new SigningKey(null)\r\n    // eslint-disable-next-line no-prototype-builtins\r\n    if (json.hasOwnProperty('signing_key')) {\r\n      signingKey = await SigningKey.decode(json.signing_key)\r\n    }\r\n\r\n    return Promise.resolve(\r\n      new ClientDetails(\r\n        json.client_id,\r\n        json.api_key_id,\r\n        json.api_secret,\r\n        publicKey,\r\n        json.name,\r\n        signingKey\r\n      )\r\n    )\r\n  }\r\n}\r\n\r\nmodule.exports = ClientDetails\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9jbGllbnREZXRhaWxzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdG96bnlzZWN1cmUvc2RrLy4vdHlwZXMvY2xpZW50RGV0YWlscy5qcz85M2MxIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFB1YmxpY0tleSA9IHJlcXVpcmUoJy4vcHVibGljS2V5JylcclxuY29uc3QgU2lnbmluZ0tleSA9IHJlcXVpcmUoJy4vc2lnbmluZ0tleScpXHJcblxyXG4vKipcclxuICogRnVsbCBpbmZvcm1hdGlvbiBhYm91dCBhIHNwZWNpZmljIEUzREIgY2xpZW50LCBpbmNsdWRpbmcgdGhlIGNsaWVudCdzXHJcbiAqIHB1YmxpYy9wcml2YXRlIGtleXMgZm9yIGNyeXB0b2dyYXBoaWMgb3BlcmF0aW9ucyBhbmQgQVBJIGNyZWRlbnRpYWxzLlxyXG4gKlxyXG4gKiBAcHJvcGVydHkge3N0cmluZ30gICAgIGNsaWVudElkICAgVVVJRCByZXByZXNlbnRpbmcgdGhlIGNsaWVudC5cclxuICogQHByb3BlcnR5IHtzdHJpbmd9ICAgICBhcGlLZXlJZCAgIEFQSSBrZXkgdG8gYmUgdXNlZCB3aGVuIGF1dGhlbnRpY2F0aW5nIHdpdGggZTNkYlxyXG4gKiBAcHJvcGVydHkge3N0cmluZ30gICAgIGFwaVNlY3JldCAgQVBJIHBhc3N3b3JkIHRvIGJlIHVzZWQgd2hlbiBhdXRoZW50aWNhdGluZyB3aXRoIGUzZGJcclxuICogQHByb3BlcnR5IHtQdWJsaWNLZXl9ICBwdWJsaWNLZXkgIEN1cnZlMjU1MTkgcHVibGljIGtleSBmb3IgdGhlIGNsaWVudC5cclxuICogQHByb3BlcnR5IHtzdHJpbmd9ICAgICBuYW1lICAgICAgIERlc2NyaXB0aW9uIG9mIHRoZSBjbGllbnRcclxuICogQHByb3BlcnR5IHtTaWduaW5nS2V5fSBzaWduaW5nS2V5IEVkMjU1MTkgcHVibGljIGtleSBmb3IgdGhlIGNsaWVudC5cclxuICovXHJcbmNsYXNzIENsaWVudERldGFpbHMge1xyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgY2xpZW50SWQsXHJcbiAgICBhcGlLZXlJZCxcclxuICAgIGFwaVNlY3JldCxcclxuICAgIHB1YmxpY0tleSxcclxuICAgIG5hbWUsXHJcbiAgICBzaWduaW5nS2V5ID0gbnVsbFxyXG4gICkge1xyXG4gICAgdGhpcy5jbGllbnRJZCA9IGNsaWVudElkXHJcbiAgICB0aGlzLmFwaUtleUlkID0gYXBpS2V5SWRcclxuICAgIHRoaXMuYXBpU2VjcmV0ID0gYXBpU2VjcmV0XHJcbiAgICB0aGlzLnB1YmxpY0tleSA9IHB1YmxpY0tleVxyXG4gICAgdGhpcy5uYW1lID0gbmFtZVxyXG5cclxuICAgIGlmIChzaWduaW5nS2V5ID09PSBudWxsKSB7XHJcbiAgICAgIHNpZ25pbmdLZXkgPSBuZXcgU2lnbmluZ0tleShudWxsKVxyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuc2lnbmluZ0tleSA9IHNpZ25pbmdLZXlcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFNwZWNpZnkgaG93IGFuIGFscmVhZHkgdW5zZXJpYWxpemVkIEpTT04gYXJyYXkgc2hvdWxkIGJlIG1hcnNoYWxlZCBpbnRvXHJcbiAgICogYW4gb2JqZWN0IHJlcHJlc2VudGF0aW9uLlxyXG4gICAqXHJcbiAgICogQ2xpZW50IGluZm9ybWF0aW9uIGNvbnRhaW5zIHRoZSBJRCBvZiB0aGUgY2xpZW50LCBBUEkgY3JlZGVudGlhbHMgZm9yIGludGVyYWN0aW5nXHJcbiAgICogd2l0aCB0aGUgZTNkYiBzZXJ2ZXIsIGEgQ3VydmUyNTUxOSBwdWJsaWMga2V5IGNvbXBvbmVudCwgYW5kIGEgZGVzY3JpcHRpb24gb2YgdGhlXHJcbiAgICogY2xpZW50IGFzIHNwZWNpZmllZCBkdXJpbmcgY3JlYXRpb24uXHJcbiAgICpcclxuICAgKiA8Y29kZT5cclxuICAgKiBpbmZvID0gQ2xpZW50RGV0YWlsczo6ZGVjb2RlKHtcclxuICAgKiAgIGNsaWVudF9pZDogJycsXHJcbiAgICogICBhcGlfa2V5X2lkOiAnJyxcclxuICAgKiAgIGFwaV9zZWNyZXQ6ICcnLFxyXG4gICAqICAgcHVibGljX2tleToge1xyXG4gICAqICAgICBjdXJ2ZTI1NTE5OiAnJ1xyXG4gICAqICAgfSxcclxuICAgKiAgIHNpZ25pbmdfa2V5OiB7XHJcbiAgICogICAgIGVkMjU1MTk6ICcnXHJcbiAgICogICB9LFxyXG4gICAqICAgbmFtZTogJydcclxuICAgKiB9KVxyXG4gICAqIDxjb2RlPlxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtvYmplY3R9IGpzb25cclxuICAgKlxyXG4gICAqIEByZXR1cm4ge1Byb21pc2U8Q2xpZW50RGV0YWlscz59XHJcbiAgICovXHJcbiAgc3RhdGljIGFzeW5jIGRlY29kZShqc29uKSB7XHJcbiAgICBsZXQgcHVibGljS2V5ID0gYXdhaXQgUHVibGljS2V5LmRlY29kZShqc29uLnB1YmxpY19rZXkpXHJcblxyXG4gICAgbGV0IHNpZ25pbmdLZXkgPSBuZXcgU2lnbmluZ0tleShudWxsKVxyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXByb3RvdHlwZS1idWlsdGluc1xyXG4gICAgaWYgKGpzb24uaGFzT3duUHJvcGVydHkoJ3NpZ25pbmdfa2V5JykpIHtcclxuICAgICAgc2lnbmluZ0tleSA9IGF3YWl0IFNpZ25pbmdLZXkuZGVjb2RlKGpzb24uc2lnbmluZ19rZXkpXHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShcclxuICAgICAgbmV3IENsaWVudERldGFpbHMoXHJcbiAgICAgICAganNvbi5jbGllbnRfaWQsXHJcbiAgICAgICAganNvbi5hcGlfa2V5X2lkLFxyXG4gICAgICAgIGpzb24uYXBpX3NlY3JldCxcclxuICAgICAgICBwdWJsaWNLZXksXHJcbiAgICAgICAganNvbi5uYW1lLFxyXG4gICAgICAgIHNpZ25pbmdLZXlcclxuICAgICAgKVxyXG4gICAgKVxyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBDbGllbnREZXRhaWxzXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./types/clientDetails.js\n");

/***/ }),

/***/ "./types/clientInfo.js":
/*!*****************************!*\
  !*** ./types/clientInfo.js ***!
  \*****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const PublicKey = __webpack_require__(/*! ./publicKey */ \"./types/publicKey.js\")\r\nconst SigningKey = __webpack_require__(/*! ./signingKey */ \"./types/signingKey.js\")\r\n\r\n/**\r\n * Information about a specific E3DB client, including the client's\r\n * public key to be used for cryptographic operations.\r\n *\r\n * @property {string}     clientId   UUID representing the client.\r\n * @property {PublicKey}  publicKey  Curve25519 public key for the client.\r\n * @property {bool}       validated  Flag whether or not the client has been validated.\r\n * @property {SigningKey} signingKey Ed25519 public key for the client.\r\n */\r\nclass ClientInfo {\r\n  constructor(clientId, publicKey, validated, signingKey) {\r\n    this.clientId = clientId\r\n    this.publicKey = publicKey\r\n    this.validated = validated\r\n\r\n    if (signingKey === null) {\r\n      signingKey = new SigningKey(null)\r\n    }\r\n\r\n    this.signingKey = signingKey\r\n  }\r\n\r\n  /**\r\n   * Specify how an already unserialized JSON array should be marshaled into\r\n   * an object representation.\r\n   *\r\n   * Client information contains the ID of the client, a Curve25519 public key\r\n   * component, and a flag describing whether or not the client has been validated.\r\n   *\r\n   * <code>\r\n   * info = ClientInfo::decode({\r\n   *   client_id: '',\r\n   *   public_key: {\r\n   *     curve25519: ''\r\n   *   },\r\n   *   signing_key: {\r\n   *     ed25519: ''\r\n   *   },\r\n   *   validated: true\r\n   * })\r\n   * <code>\r\n   *\r\n   * @param {object} json\r\n   *\r\n   * @return {Promise<ClientInfo>}\r\n   */\r\n  static async decode(json) {\r\n    let publicKey = await PublicKey.decode(json.public_key)\r\n\r\n    let signingKey = new SigningKey(null)\r\n    // eslint-disable-next-line no-prototype-builtins\r\n    if (json.hasOwnProperty('signing_key') && json.signing_key !== null) {\r\n      signingKey = await SigningKey.decode(json.signing_key)\r\n    }\r\n\r\n    return Promise.resolve(\r\n      new ClientInfo(json.client_id, publicKey, json.validated, signingKey)\r\n    )\r\n  }\r\n}\r\n\r\nmodule.exports = ClientInfo\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9jbGllbnRJbmZvLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdG96bnlzZWN1cmUvc2RrLy4vdHlwZXMvY2xpZW50SW5mby5qcz81ZGQ4Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFB1YmxpY0tleSA9IHJlcXVpcmUoJy4vcHVibGljS2V5JylcclxuY29uc3QgU2lnbmluZ0tleSA9IHJlcXVpcmUoJy4vc2lnbmluZ0tleScpXHJcblxyXG4vKipcclxuICogSW5mb3JtYXRpb24gYWJvdXQgYSBzcGVjaWZpYyBFM0RCIGNsaWVudCwgaW5jbHVkaW5nIHRoZSBjbGllbnQnc1xyXG4gKiBwdWJsaWMga2V5IHRvIGJlIHVzZWQgZm9yIGNyeXB0b2dyYXBoaWMgb3BlcmF0aW9ucy5cclxuICpcclxuICogQHByb3BlcnR5IHtzdHJpbmd9ICAgICBjbGllbnRJZCAgIFVVSUQgcmVwcmVzZW50aW5nIHRoZSBjbGllbnQuXHJcbiAqIEBwcm9wZXJ0eSB7UHVibGljS2V5fSAgcHVibGljS2V5ICBDdXJ2ZTI1NTE5IHB1YmxpYyBrZXkgZm9yIHRoZSBjbGllbnQuXHJcbiAqIEBwcm9wZXJ0eSB7Ym9vbH0gICAgICAgdmFsaWRhdGVkICBGbGFnIHdoZXRoZXIgb3Igbm90IHRoZSBjbGllbnQgaGFzIGJlZW4gdmFsaWRhdGVkLlxyXG4gKiBAcHJvcGVydHkge1NpZ25pbmdLZXl9IHNpZ25pbmdLZXkgRWQyNTUxOSBwdWJsaWMga2V5IGZvciB0aGUgY2xpZW50LlxyXG4gKi9cclxuY2xhc3MgQ2xpZW50SW5mbyB7XHJcbiAgY29uc3RydWN0b3IoY2xpZW50SWQsIHB1YmxpY0tleSwgdmFsaWRhdGVkLCBzaWduaW5nS2V5KSB7XHJcbiAgICB0aGlzLmNsaWVudElkID0gY2xpZW50SWRcclxuICAgIHRoaXMucHVibGljS2V5ID0gcHVibGljS2V5XHJcbiAgICB0aGlzLnZhbGlkYXRlZCA9IHZhbGlkYXRlZFxyXG5cclxuICAgIGlmIChzaWduaW5nS2V5ID09PSBudWxsKSB7XHJcbiAgICAgIHNpZ25pbmdLZXkgPSBuZXcgU2lnbmluZ0tleShudWxsKVxyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuc2lnbmluZ0tleSA9IHNpZ25pbmdLZXlcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFNwZWNpZnkgaG93IGFuIGFscmVhZHkgdW5zZXJpYWxpemVkIEpTT04gYXJyYXkgc2hvdWxkIGJlIG1hcnNoYWxlZCBpbnRvXHJcbiAgICogYW4gb2JqZWN0IHJlcHJlc2VudGF0aW9uLlxyXG4gICAqXHJcbiAgICogQ2xpZW50IGluZm9ybWF0aW9uIGNvbnRhaW5zIHRoZSBJRCBvZiB0aGUgY2xpZW50LCBhIEN1cnZlMjU1MTkgcHVibGljIGtleVxyXG4gICAqIGNvbXBvbmVudCwgYW5kIGEgZmxhZyBkZXNjcmliaW5nIHdoZXRoZXIgb3Igbm90IHRoZSBjbGllbnQgaGFzIGJlZW4gdmFsaWRhdGVkLlxyXG4gICAqXHJcbiAgICogPGNvZGU+XHJcbiAgICogaW5mbyA9IENsaWVudEluZm86OmRlY29kZSh7XHJcbiAgICogICBjbGllbnRfaWQ6ICcnLFxyXG4gICAqICAgcHVibGljX2tleToge1xyXG4gICAqICAgICBjdXJ2ZTI1NTE5OiAnJ1xyXG4gICAqICAgfSxcclxuICAgKiAgIHNpZ25pbmdfa2V5OiB7XHJcbiAgICogICAgIGVkMjU1MTk6ICcnXHJcbiAgICogICB9LFxyXG4gICAqICAgdmFsaWRhdGVkOiB0cnVlXHJcbiAgICogfSlcclxuICAgKiA8Y29kZT5cclxuICAgKlxyXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBqc29uXHJcbiAgICpcclxuICAgKiBAcmV0dXJuIHtQcm9taXNlPENsaWVudEluZm8+fVxyXG4gICAqL1xyXG4gIHN0YXRpYyBhc3luYyBkZWNvZGUoanNvbikge1xyXG4gICAgbGV0IHB1YmxpY0tleSA9IGF3YWl0IFB1YmxpY0tleS5kZWNvZGUoanNvbi5wdWJsaWNfa2V5KVxyXG5cclxuICAgIGxldCBzaWduaW5nS2V5ID0gbmV3IFNpZ25pbmdLZXkobnVsbClcclxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wcm90b3R5cGUtYnVpbHRpbnNcclxuICAgIGlmIChqc29uLmhhc093blByb3BlcnR5KCdzaWduaW5nX2tleScpICYmIGpzb24uc2lnbmluZ19rZXkgIT09IG51bGwpIHtcclxuICAgICAgc2lnbmluZ0tleSA9IGF3YWl0IFNpZ25pbmdLZXkuZGVjb2RlKGpzb24uc2lnbmluZ19rZXkpXHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShcclxuICAgICAgbmV3IENsaWVudEluZm8oanNvbi5jbGllbnRfaWQsIHB1YmxpY0tleSwganNvbi52YWxpZGF0ZWQsIHNpZ25pbmdLZXkpXHJcbiAgICApXHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IENsaWVudEluZm9cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./types/clientInfo.js\n");

/***/ }),

/***/ "./types/eacp.js":
/*!***********************!*\
  !*** ./types/eacp.js ***!
  \***********************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Serializable = __webpack_require__(/*! ./serializable */ \"./types/serializable.js\")\r\nconst EmailEACP = __webpack_require__(/*! ./emailEACP */ \"./types/emailEACP.js\")\r\nconst LastAccessEACP = __webpack_require__(/*! ./lastAccessEACP */ \"./types/lastAccessEACP.js\")\r\nconst TozIdEACP = __webpack_require__(/*! ./tozIdEACP */ \"./types/tozIdEACP.js\")\r\nconst ToznyOTPEACP = __webpack_require__(/*! ./toznyOTPEACP */ \"./types/toznyOTPEACP.js\")\r\n\r\n/**\r\n * EACP defines the various extended access control policies on data object.\r\n *\r\n * The EACP types are hard coded, and each data object can have one of each\r\n * kind. These are defined in sub objects. The EACP object is to mix all of the\r\n * various kinds together so they can be sent to the server to apply the policy.\r\n */\r\nclass EACP extends Serializable {\r\n  /**\r\n   * Create an EACP instance to organize extended access control policies for data objects.\r\n   *\r\n   * @param {EmailEACP} emailEACP An Email EACP configuration to associate with the data object.\r\n   * @param {LastAccessEACP} noteAccessEACP A Last Access EACP configuration to associate with the object.\r\n   * @param {TozIdEACP} tozIdEACP A EACP which requires a special identity JWT to complete.\r\n   * @param {ToznyOTPEACP} toznyOTPEACP A Tozny OTP EACP configuration to associate with the object.\r\n   */\r\n  constructor(emailEACP, noteAccessEACP, tozIdEACP, toznyOTPEACP) {\r\n    super()\r\n\r\n    if (emailEACP instanceof EmailEACP) {\r\n      this.emailEACP = emailEACP\r\n    }\r\n    if (noteAccessEACP instanceof LastAccessEACP) {\r\n      this.noteAccessEACP = noteAccessEACP\r\n    }\r\n    if (tozIdEACP instanceof TozIdEACP) {\r\n      this.tozIdEACP = tozIdEACP\r\n    }\r\n    if (toznyOTPEACP instanceof ToznyOTPEACP) {\r\n      this.toznyOTPEACP = toznyOTPEACP\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a plain object representation of the EACP. Used for JSON serialization.\r\n   *\r\n   * @return {Object} A plain JS object representing the EACP.\r\n   */\r\n  serializable() {\r\n    let toSerialize = {}\r\n    // Ensure that plainMeta is always an object, even it it's set to null\r\n    for (let eacp in this) {\r\n      // eslint-disable-next-line no-prototype-builtins\r\n      if (!this.hasOwnProperty(eacp)) {\r\n        continue\r\n      }\r\n      toSerialize[this[eacp].constructor.jsonKey] = this[eacp].serializable()\r\n    }\r\n    return toSerialize\r\n  }\r\n\r\n  /**\r\n   * Create a new EACP instance from a Javascript object.\r\n   *\r\n   * @param {Object} json A plain JS object containing the needed EACP fields.\r\n   *\r\n   * @return {EACP} The constructed EACP object based on the passed JS object.\r\n   */\r\n  static decode(json) {\r\n    let emailEACP\r\n    let noteAccessEACP\r\n    let tozIdEACP\r\n    let toznyOTPEACP\r\n    if (typeof json[EmailEACP.jsonKey] === 'object') {\r\n      emailEACP = EmailEACP.decode(json[EmailEACP.jsonKey])\r\n    }\r\n    if (typeof json[LastAccessEACP.jsonKey] === 'object') {\r\n      noteAccessEACP = LastAccessEACP.decode(json[LastAccessEACP.jsonKey])\r\n    }\r\n    if (typeof json[TozIdEACP.jsonKey] === 'object') {\r\n      tozIdEACP = TozIdEACP.decode(json[TozIdEACP.jsonKey])\r\n    }\r\n    if (typeof json[ToznyOTPEACP.jsonKey] === 'object') {\r\n      toznyOTPEACP = ToznyOTPEACP.decode(json[ToznyOTPEACP.jsonKey])\r\n    }\r\n    return new EACP(emailEACP, noteAccessEACP, tozIdEACP, toznyOTPEACP)\r\n  }\r\n}\r\n\r\nmodule.exports = EACP\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9lYWNwLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdG96bnlzZWN1cmUvc2RrLy4vdHlwZXMvZWFjcC5qcz85NTJiIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlcmlhbGl6YWJsZSA9IHJlcXVpcmUoJy4vc2VyaWFsaXphYmxlJylcclxuY29uc3QgRW1haWxFQUNQID0gcmVxdWlyZSgnLi9lbWFpbEVBQ1AnKVxyXG5jb25zdCBMYXN0QWNjZXNzRUFDUCA9IHJlcXVpcmUoJy4vbGFzdEFjY2Vzc0VBQ1AnKVxyXG5jb25zdCBUb3pJZEVBQ1AgPSByZXF1aXJlKCcuL3RveklkRUFDUCcpXHJcbmNvbnN0IFRvem55T1RQRUFDUCA9IHJlcXVpcmUoJy4vdG96bnlPVFBFQUNQJylcclxuXHJcbi8qKlxyXG4gKiBFQUNQIGRlZmluZXMgdGhlIHZhcmlvdXMgZXh0ZW5kZWQgYWNjZXNzIGNvbnRyb2wgcG9saWNpZXMgb24gZGF0YSBvYmplY3QuXHJcbiAqXHJcbiAqIFRoZSBFQUNQIHR5cGVzIGFyZSBoYXJkIGNvZGVkLCBhbmQgZWFjaCBkYXRhIG9iamVjdCBjYW4gaGF2ZSBvbmUgb2YgZWFjaFxyXG4gKiBraW5kLiBUaGVzZSBhcmUgZGVmaW5lZCBpbiBzdWIgb2JqZWN0cy4gVGhlIEVBQ1Agb2JqZWN0IGlzIHRvIG1peCBhbGwgb2YgdGhlXHJcbiAqIHZhcmlvdXMga2luZHMgdG9nZXRoZXIgc28gdGhleSBjYW4gYmUgc2VudCB0byB0aGUgc2VydmVyIHRvIGFwcGx5IHRoZSBwb2xpY3kuXHJcbiAqL1xyXG5jbGFzcyBFQUNQIGV4dGVuZHMgU2VyaWFsaXphYmxlIHtcclxuICAvKipcclxuICAgKiBDcmVhdGUgYW4gRUFDUCBpbnN0YW5jZSB0byBvcmdhbml6ZSBleHRlbmRlZCBhY2Nlc3MgY29udHJvbCBwb2xpY2llcyBmb3IgZGF0YSBvYmplY3RzLlxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtFbWFpbEVBQ1B9IGVtYWlsRUFDUCBBbiBFbWFpbCBFQUNQIGNvbmZpZ3VyYXRpb24gdG8gYXNzb2NpYXRlIHdpdGggdGhlIGRhdGEgb2JqZWN0LlxyXG4gICAqIEBwYXJhbSB7TGFzdEFjY2Vzc0VBQ1B9IG5vdGVBY2Nlc3NFQUNQIEEgTGFzdCBBY2Nlc3MgRUFDUCBjb25maWd1cmF0aW9uIHRvIGFzc29jaWF0ZSB3aXRoIHRoZSBvYmplY3QuXHJcbiAgICogQHBhcmFtIHtUb3pJZEVBQ1B9IHRveklkRUFDUCBBIEVBQ1Agd2hpY2ggcmVxdWlyZXMgYSBzcGVjaWFsIGlkZW50aXR5IEpXVCB0byBjb21wbGV0ZS5cclxuICAgKiBAcGFyYW0ge1Rvem55T1RQRUFDUH0gdG96bnlPVFBFQUNQIEEgVG96bnkgT1RQIEVBQ1AgY29uZmlndXJhdGlvbiB0byBhc3NvY2lhdGUgd2l0aCB0aGUgb2JqZWN0LlxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKGVtYWlsRUFDUCwgbm90ZUFjY2Vzc0VBQ1AsIHRveklkRUFDUCwgdG96bnlPVFBFQUNQKSB7XHJcbiAgICBzdXBlcigpXHJcblxyXG4gICAgaWYgKGVtYWlsRUFDUCBpbnN0YW5jZW9mIEVtYWlsRUFDUCkge1xyXG4gICAgICB0aGlzLmVtYWlsRUFDUCA9IGVtYWlsRUFDUFxyXG4gICAgfVxyXG4gICAgaWYgKG5vdGVBY2Nlc3NFQUNQIGluc3RhbmNlb2YgTGFzdEFjY2Vzc0VBQ1ApIHtcclxuICAgICAgdGhpcy5ub3RlQWNjZXNzRUFDUCA9IG5vdGVBY2Nlc3NFQUNQXHJcbiAgICB9XHJcbiAgICBpZiAodG96SWRFQUNQIGluc3RhbmNlb2YgVG96SWRFQUNQKSB7XHJcbiAgICAgIHRoaXMudG96SWRFQUNQID0gdG96SWRFQUNQXHJcbiAgICB9XHJcbiAgICBpZiAodG96bnlPVFBFQUNQIGluc3RhbmNlb2YgVG96bnlPVFBFQUNQKSB7XHJcbiAgICAgIHRoaXMudG96bnlPVFBFQUNQID0gdG96bnlPVFBFQUNQXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBDcmVhdGUgYSBwbGFpbiBvYmplY3QgcmVwcmVzZW50YXRpb24gb2YgdGhlIEVBQ1AuIFVzZWQgZm9yIEpTT04gc2VyaWFsaXphdGlvbi5cclxuICAgKlxyXG4gICAqIEByZXR1cm4ge09iamVjdH0gQSBwbGFpbiBKUyBvYmplY3QgcmVwcmVzZW50aW5nIHRoZSBFQUNQLlxyXG4gICAqL1xyXG4gIHNlcmlhbGl6YWJsZSgpIHtcclxuICAgIGxldCB0b1NlcmlhbGl6ZSA9IHt9XHJcbiAgICAvLyBFbnN1cmUgdGhhdCBwbGFpbk1ldGEgaXMgYWx3YXlzIGFuIG9iamVjdCwgZXZlbiBpdCBpdCdzIHNldCB0byBudWxsXHJcbiAgICBmb3IgKGxldCBlYWNwIGluIHRoaXMpIHtcclxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXByb3RvdHlwZS1idWlsdGluc1xyXG4gICAgICBpZiAoIXRoaXMuaGFzT3duUHJvcGVydHkoZWFjcCkpIHtcclxuICAgICAgICBjb250aW51ZVxyXG4gICAgICB9XHJcbiAgICAgIHRvU2VyaWFsaXplW3RoaXNbZWFjcF0uY29uc3RydWN0b3IuanNvbktleV0gPSB0aGlzW2VhY3BdLnNlcmlhbGl6YWJsZSgpXHJcbiAgICB9XHJcbiAgICByZXR1cm4gdG9TZXJpYWxpemVcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIENyZWF0ZSBhIG5ldyBFQUNQIGluc3RhbmNlIGZyb20gYSBKYXZhc2NyaXB0IG9iamVjdC5cclxuICAgKlxyXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBqc29uIEEgcGxhaW4gSlMgb2JqZWN0IGNvbnRhaW5pbmcgdGhlIG5lZWRlZCBFQUNQIGZpZWxkcy5cclxuICAgKlxyXG4gICAqIEByZXR1cm4ge0VBQ1B9IFRoZSBjb25zdHJ1Y3RlZCBFQUNQIG9iamVjdCBiYXNlZCBvbiB0aGUgcGFzc2VkIEpTIG9iamVjdC5cclxuICAgKi9cclxuICBzdGF0aWMgZGVjb2RlKGpzb24pIHtcclxuICAgIGxldCBlbWFpbEVBQ1BcclxuICAgIGxldCBub3RlQWNjZXNzRUFDUFxyXG4gICAgbGV0IHRveklkRUFDUFxyXG4gICAgbGV0IHRvem55T1RQRUFDUFxyXG4gICAgaWYgKHR5cGVvZiBqc29uW0VtYWlsRUFDUC5qc29uS2V5XSA9PT0gJ29iamVjdCcpIHtcclxuICAgICAgZW1haWxFQUNQID0gRW1haWxFQUNQLmRlY29kZShqc29uW0VtYWlsRUFDUC5qc29uS2V5XSlcclxuICAgIH1cclxuICAgIGlmICh0eXBlb2YganNvbltMYXN0QWNjZXNzRUFDUC5qc29uS2V5XSA9PT0gJ29iamVjdCcpIHtcclxuICAgICAgbm90ZUFjY2Vzc0VBQ1AgPSBMYXN0QWNjZXNzRUFDUC5kZWNvZGUoanNvbltMYXN0QWNjZXNzRUFDUC5qc29uS2V5XSlcclxuICAgIH1cclxuICAgIGlmICh0eXBlb2YganNvbltUb3pJZEVBQ1AuanNvbktleV0gPT09ICdvYmplY3QnKSB7XHJcbiAgICAgIHRveklkRUFDUCA9IFRveklkRUFDUC5kZWNvZGUoanNvbltUb3pJZEVBQ1AuanNvbktleV0pXHJcbiAgICB9XHJcbiAgICBpZiAodHlwZW9mIGpzb25bVG96bnlPVFBFQUNQLmpzb25LZXldID09PSAnb2JqZWN0Jykge1xyXG4gICAgICB0b3pueU9UUEVBQ1AgPSBUb3pueU9UUEVBQ1AuZGVjb2RlKGpzb25bVG96bnlPVFBFQUNQLmpzb25LZXldKVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIG5ldyBFQUNQKGVtYWlsRUFDUCwgbm90ZUFjY2Vzc0VBQ1AsIHRveklkRUFDUCwgdG96bnlPVFBFQUNQKVxyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBFQUNQXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./types/eacp.js\n");

/***/ }),

/***/ "./types/eakInfo.js":
/*!**************************!*\
  !*** ./types/eakInfo.js ***!
  \**************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const PublicKey = __webpack_require__(/*! ./publicKey */ \"./types/publicKey.js\")\r\nconst Serializable = __webpack_require__(/*! ../types/serializable */ \"./types/serializable.js\")\r\nconst SigningKey = __webpack_require__(/*! ./signingKey */ \"./types/signingKey.js\")\r\n\r\n/**\r\n * Representation of a cached, encrypted access key\r\n *\r\n * @property {string} eak\r\n * @property {string} authorizerID\r\n * @property {string} authorizerPublicKey\r\n * @property {string} signerId\r\n * @property {string} signerSigningKey\r\n */\r\nclass EAKInfo extends Serializable {\r\n  constructor(\r\n    eak,\r\n    authorizerID,\r\n    authorizerPublicKey,\r\n    signerId,\r\n    signerSigningKey\r\n  ) {\r\n    super()\r\n\r\n    this.eak = eak\r\n    this.authorizerID = authorizerID\r\n    this.authorizerPublicKey = new PublicKey(authorizerPublicKey)\r\n    this.signerId = signerId\r\n    this.signerSigningKey = new SigningKey(signerSigningKey)\r\n  }\r\n\r\n  /* eslint-disable camelcase */\r\n\r\n  /**\r\n   * Generate a JSON.stringify-friendly version of the object\r\n   * automatically omitting any `null` fields.\r\n   *\r\n   * @returns {object}\r\n   */\r\n  serializable() {\r\n    let toSerialize = {\r\n      eak: this.eak,\r\n      authorizer_id: this.authorizerID,\r\n      authorizer_public_key: this.authorizerPublicKey,\r\n      signer_id: this.signerId,\r\n      signer_signing_key: this.signerSigningKey,\r\n    }\r\n\r\n    for (let key in toSerialize) {\r\n      // eslint-disable-next-line no-prototype-builtins\r\n      if (toSerialize.hasOwnProperty(key)) {\r\n        if (toSerialize[key] === null) {\r\n          delete toSerialize[key]\r\n        }\r\n      }\r\n    }\r\n\r\n    return toSerialize\r\n  }\r\n\r\n  /* eslint-enable */\r\n\r\n  /**\r\n   * Specify how an already unserialized JSON array should be marshaled into\r\n   * an object representation.\r\n   *\r\n   * The array expected for deserializing back into an object requires:\r\n   *\r\n   * <code>\r\n   * $eakInfo = EAKInfo::decode({\r\n   *   'eak'                   => '',\r\n   *   'authorizer_id'         => '',\r\n   *   'authorizer_public_key' => '',\r\n   *   'signer_id'             => '',\r\n   *   'signer_signing_key'    => ''\r\n   * });\r\n   * </code>\r\n   *\r\n   * @param {object} json\r\n   *\r\n   * @return {Promise<EAKInfo>}\r\n   */\r\n  static async decode(json) {\r\n    let signerId = null\r\n    let signingKey = null\r\n    // eslint-disable-next-line no-prototype-builtins\r\n    if (json.hasOwnProperty('signer_id')) {\r\n      signerId = json.signer_id\r\n    }\r\n    if (\r\n      // eslint-disable-next-line no-prototype-builtins\r\n      json.hasOwnProperty('signer_signing_key') &&\r\n      json.signer_signing_key !== null &&\r\n      // eslint-disable-next-line no-prototype-builtins\r\n      json.signer_signing_key.hasOwnProperty('ed25519')\r\n    ) {\r\n      signingKey = json.signer_signing_key.ed25519\r\n    }\r\n\r\n    return Promise.resolve(\r\n      new EAKInfo(\r\n        json.eak,\r\n        json.authorizer_id,\r\n        json.authorizer_public_key.curve25519,\r\n        signerId,\r\n        signingKey\r\n      )\r\n    )\r\n  }\r\n}\r\n\r\nmodule.exports = EAKInfo\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9lYWtJbmZvLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B0b3pueXNlY3VyZS9zZGsvLi90eXBlcy9lYWtJbmZvLmpzPzAzYjYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUHVibGljS2V5ID0gcmVxdWlyZSgnLi9wdWJsaWNLZXknKVxyXG5jb25zdCBTZXJpYWxpemFibGUgPSByZXF1aXJlKCcuLi90eXBlcy9zZXJpYWxpemFibGUnKVxyXG5jb25zdCBTaWduaW5nS2V5ID0gcmVxdWlyZSgnLi9zaWduaW5nS2V5JylcclxuXHJcbi8qKlxyXG4gKiBSZXByZXNlbnRhdGlvbiBvZiBhIGNhY2hlZCwgZW5jcnlwdGVkIGFjY2VzcyBrZXlcclxuICpcclxuICogQHByb3BlcnR5IHtzdHJpbmd9IGVha1xyXG4gKiBAcHJvcGVydHkge3N0cmluZ30gYXV0aG9yaXplcklEXHJcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBhdXRob3JpemVyUHVibGljS2V5XHJcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBzaWduZXJJZFxyXG4gKiBAcHJvcGVydHkge3N0cmluZ30gc2lnbmVyU2lnbmluZ0tleVxyXG4gKi9cclxuY2xhc3MgRUFLSW5mbyBleHRlbmRzIFNlcmlhbGl6YWJsZSB7XHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBlYWssXHJcbiAgICBhdXRob3JpemVySUQsXHJcbiAgICBhdXRob3JpemVyUHVibGljS2V5LFxyXG4gICAgc2lnbmVySWQsXHJcbiAgICBzaWduZXJTaWduaW5nS2V5XHJcbiAgKSB7XHJcbiAgICBzdXBlcigpXHJcblxyXG4gICAgdGhpcy5lYWsgPSBlYWtcclxuICAgIHRoaXMuYXV0aG9yaXplcklEID0gYXV0aG9yaXplcklEXHJcbiAgICB0aGlzLmF1dGhvcml6ZXJQdWJsaWNLZXkgPSBuZXcgUHVibGljS2V5KGF1dGhvcml6ZXJQdWJsaWNLZXkpXHJcbiAgICB0aGlzLnNpZ25lcklkID0gc2lnbmVySWRcclxuICAgIHRoaXMuc2lnbmVyU2lnbmluZ0tleSA9IG5ldyBTaWduaW5nS2V5KHNpZ25lclNpZ25pbmdLZXkpXHJcbiAgfVxyXG5cclxuICAvKiBlc2xpbnQtZGlzYWJsZSBjYW1lbGNhc2UgKi9cclxuXHJcbiAgLyoqXHJcbiAgICogR2VuZXJhdGUgYSBKU09OLnN0cmluZ2lmeS1mcmllbmRseSB2ZXJzaW9uIG9mIHRoZSBvYmplY3RcclxuICAgKiBhdXRvbWF0aWNhbGx5IG9taXR0aW5nIGFueSBgbnVsbGAgZmllbGRzLlxyXG4gICAqXHJcbiAgICogQHJldHVybnMge29iamVjdH1cclxuICAgKi9cclxuICBzZXJpYWxpemFibGUoKSB7XHJcbiAgICBsZXQgdG9TZXJpYWxpemUgPSB7XHJcbiAgICAgIGVhazogdGhpcy5lYWssXHJcbiAgICAgIGF1dGhvcml6ZXJfaWQ6IHRoaXMuYXV0aG9yaXplcklELFxyXG4gICAgICBhdXRob3JpemVyX3B1YmxpY19rZXk6IHRoaXMuYXV0aG9yaXplclB1YmxpY0tleSxcclxuICAgICAgc2lnbmVyX2lkOiB0aGlzLnNpZ25lcklkLFxyXG4gICAgICBzaWduZXJfc2lnbmluZ19rZXk6IHRoaXMuc2lnbmVyU2lnbmluZ0tleSxcclxuICAgIH1cclxuXHJcbiAgICBmb3IgKGxldCBrZXkgaW4gdG9TZXJpYWxpemUpIHtcclxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXByb3RvdHlwZS1idWlsdGluc1xyXG4gICAgICBpZiAodG9TZXJpYWxpemUuaGFzT3duUHJvcGVydHkoa2V5KSkge1xyXG4gICAgICAgIGlmICh0b1NlcmlhbGl6ZVtrZXldID09PSBudWxsKSB7XHJcbiAgICAgICAgICBkZWxldGUgdG9TZXJpYWxpemVba2V5XVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB0b1NlcmlhbGl6ZVxyXG4gIH1cclxuXHJcbiAgLyogZXNsaW50LWVuYWJsZSAqL1xyXG5cclxuICAvKipcclxuICAgKiBTcGVjaWZ5IGhvdyBhbiBhbHJlYWR5IHVuc2VyaWFsaXplZCBKU09OIGFycmF5IHNob3VsZCBiZSBtYXJzaGFsZWQgaW50b1xyXG4gICAqIGFuIG9iamVjdCByZXByZXNlbnRhdGlvbi5cclxuICAgKlxyXG4gICAqIFRoZSBhcnJheSBleHBlY3RlZCBmb3IgZGVzZXJpYWxpemluZyBiYWNrIGludG8gYW4gb2JqZWN0IHJlcXVpcmVzOlxyXG4gICAqXHJcbiAgICogPGNvZGU+XHJcbiAgICogJGVha0luZm8gPSBFQUtJbmZvOjpkZWNvZGUoe1xyXG4gICAqICAgJ2VhaycgICAgICAgICAgICAgICAgICAgPT4gJycsXHJcbiAgICogICAnYXV0aG9yaXplcl9pZCcgICAgICAgICA9PiAnJyxcclxuICAgKiAgICdhdXRob3JpemVyX3B1YmxpY19rZXknID0+ICcnLFxyXG4gICAqICAgJ3NpZ25lcl9pZCcgICAgICAgICAgICAgPT4gJycsXHJcbiAgICogICAnc2lnbmVyX3NpZ25pbmdfa2V5JyAgICA9PiAnJ1xyXG4gICAqIH0pO1xyXG4gICAqIDwvY29kZT5cclxuICAgKlxyXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBqc29uXHJcbiAgICpcclxuICAgKiBAcmV0dXJuIHtQcm9taXNlPEVBS0luZm8+fVxyXG4gICAqL1xyXG4gIHN0YXRpYyBhc3luYyBkZWNvZGUoanNvbikge1xyXG4gICAgbGV0IHNpZ25lcklkID0gbnVsbFxyXG4gICAgbGV0IHNpZ25pbmdLZXkgPSBudWxsXHJcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcHJvdG90eXBlLWJ1aWx0aW5zXHJcbiAgICBpZiAoanNvbi5oYXNPd25Qcm9wZXJ0eSgnc2lnbmVyX2lkJykpIHtcclxuICAgICAgc2lnbmVySWQgPSBqc29uLnNpZ25lcl9pZFxyXG4gICAgfVxyXG4gICAgaWYgKFxyXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcHJvdG90eXBlLWJ1aWx0aW5zXHJcbiAgICAgIGpzb24uaGFzT3duUHJvcGVydHkoJ3NpZ25lcl9zaWduaW5nX2tleScpICYmXHJcbiAgICAgIGpzb24uc2lnbmVyX3NpZ25pbmdfa2V5ICE9PSBudWxsICYmXHJcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wcm90b3R5cGUtYnVpbHRpbnNcclxuICAgICAganNvbi5zaWduZXJfc2lnbmluZ19rZXkuaGFzT3duUHJvcGVydHkoJ2VkMjU1MTknKVxyXG4gICAgKSB7XHJcbiAgICAgIHNpZ25pbmdLZXkgPSBqc29uLnNpZ25lcl9zaWduaW5nX2tleS5lZDI1NTE5XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShcclxuICAgICAgbmV3IEVBS0luZm8oXHJcbiAgICAgICAganNvbi5lYWssXHJcbiAgICAgICAganNvbi5hdXRob3JpemVyX2lkLFxyXG4gICAgICAgIGpzb24uYXV0aG9yaXplcl9wdWJsaWNfa2V5LmN1cnZlMjU1MTksXHJcbiAgICAgICAgc2lnbmVySWQsXHJcbiAgICAgICAgc2lnbmluZ0tleVxyXG4gICAgICApXHJcbiAgICApXHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IEVBS0luZm9cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./types/eakInfo.js\n");

/***/ }),

/***/ "./types/emailEACP.js":
/*!****************************!*\
  !*** ./types/emailEACP.js ***!
  \****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Serializable = __webpack_require__(/*! ./serializable */ \"./types/serializable.js\")\r\n\r\n/**\r\n * Configuration for an email based extended access control policy.\r\n */\r\nclass EmailEACP extends Serializable {\r\n  /**\r\n   * The key used to identify this EACP in a JSON object.\r\n   *\r\n   * @return {String} the EACP key.\r\n   */\r\n  static get jsonKey() {\r\n    return 'email_eacp'\r\n  }\r\n\r\n  /**\r\n   * Configuration for an email based OTP EACP.\r\n   *\r\n   * @param {string} email The email address to send the otp challenge to.\r\n   * @param {string} template The notification service email template to use when sending the challenge.\r\n   * @param {string} providerLink The URL of the endpoint that will handle the challenge when linked to in the email.\r\n   * @param {object} templateFields Caller provided key values for substitution in emails sent as part of the EACP.\r\n   * @param {int}    defaultExpirationMinutes The number of minutes EACP challenges should be valid for.\r\n   */\r\n  constructor(\r\n    email,\r\n    template,\r\n    providerLink,\r\n    templateFields,\r\n    defaultExpirationMinutes\r\n  ) {\r\n    super()\r\n    this.emailAddress = email\r\n    this.template = template\r\n    this.provideLink = providerLink\r\n    this.templateFields = templateFields\r\n    this.defaultExpirationMinutes = defaultExpirationMinutes\r\n  }\r\n\r\n  /**\r\n   * Create a plain object representation of the email EACP. Used for JSON serialization.\r\n   *\r\n   * @return {Object} A plain JS object representing the email EACP configuration.\r\n   */\r\n  serializable() {\r\n    /* eslint-disable camelcase */\r\n    let toSerialize = {\r\n      email_address: this.emailAddress,\r\n      template: this.template,\r\n      provider_link: this.provideLink,\r\n      template_fields: this.templateFields,\r\n      default_expiration_minutes: this.defaultExpirationMinutes,\r\n    }\r\n    /* eslint-enable */\r\n    return toSerialize\r\n  }\r\n\r\n  /**\r\n   * Create a new EmailEACP instance from a Javascript object.\r\n   *\r\n   * @param {Object} json A plain JS object containing the needed EmailEACP configuration.\r\n   *\r\n   * @return {EmailEACP} The constructed EmailEACP object based on the passed JS object.\r\n   */\r\n  static decode(json) {\r\n    return new EmailEACP(\r\n      json.email_address,\r\n      json.template,\r\n      json.provider_link,\r\n      json.template_fields,\r\n      json.default_expiration_minutes\r\n    )\r\n  }\r\n}\r\n\r\nmodule.exports = EmailEACP\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9lbWFpbEVBQ1AuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdG96bnlzZWN1cmUvc2RrLy4vdHlwZXMvZW1haWxFQUNQLmpzPzRlZGEiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VyaWFsaXphYmxlID0gcmVxdWlyZSgnLi9zZXJpYWxpemFibGUnKVxyXG5cclxuLyoqXHJcbiAqIENvbmZpZ3VyYXRpb24gZm9yIGFuIGVtYWlsIGJhc2VkIGV4dGVuZGVkIGFjY2VzcyBjb250cm9sIHBvbGljeS5cclxuICovXHJcbmNsYXNzIEVtYWlsRUFDUCBleHRlbmRzIFNlcmlhbGl6YWJsZSB7XHJcbiAgLyoqXHJcbiAgICogVGhlIGtleSB1c2VkIHRvIGlkZW50aWZ5IHRoaXMgRUFDUCBpbiBhIEpTT04gb2JqZWN0LlxyXG4gICAqXHJcbiAgICogQHJldHVybiB7U3RyaW5nfSB0aGUgRUFDUCBrZXkuXHJcbiAgICovXHJcbiAgc3RhdGljIGdldCBqc29uS2V5KCkge1xyXG4gICAgcmV0dXJuICdlbWFpbF9lYWNwJ1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ29uZmlndXJhdGlvbiBmb3IgYW4gZW1haWwgYmFzZWQgT1RQIEVBQ1AuXHJcbiAgICpcclxuICAgKiBAcGFyYW0ge3N0cmluZ30gZW1haWwgVGhlIGVtYWlsIGFkZHJlc3MgdG8gc2VuZCB0aGUgb3RwIGNoYWxsZW5nZSB0by5cclxuICAgKiBAcGFyYW0ge3N0cmluZ30gdGVtcGxhdGUgVGhlIG5vdGlmaWNhdGlvbiBzZXJ2aWNlIGVtYWlsIHRlbXBsYXRlIHRvIHVzZSB3aGVuIHNlbmRpbmcgdGhlIGNoYWxsZW5nZS5cclxuICAgKiBAcGFyYW0ge3N0cmluZ30gcHJvdmlkZXJMaW5rIFRoZSBVUkwgb2YgdGhlIGVuZHBvaW50IHRoYXQgd2lsbCBoYW5kbGUgdGhlIGNoYWxsZW5nZSB3aGVuIGxpbmtlZCB0byBpbiB0aGUgZW1haWwuXHJcbiAgICogQHBhcmFtIHtvYmplY3R9IHRlbXBsYXRlRmllbGRzIENhbGxlciBwcm92aWRlZCBrZXkgdmFsdWVzIGZvciBzdWJzdGl0dXRpb24gaW4gZW1haWxzIHNlbnQgYXMgcGFydCBvZiB0aGUgRUFDUC5cclxuICAgKiBAcGFyYW0ge2ludH0gICAgZGVmYXVsdEV4cGlyYXRpb25NaW51dGVzIFRoZSBudW1iZXIgb2YgbWludXRlcyBFQUNQIGNoYWxsZW5nZXMgc2hvdWxkIGJlIHZhbGlkIGZvci5cclxuICAgKi9cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIGVtYWlsLFxyXG4gICAgdGVtcGxhdGUsXHJcbiAgICBwcm92aWRlckxpbmssXHJcbiAgICB0ZW1wbGF0ZUZpZWxkcyxcclxuICAgIGRlZmF1bHRFeHBpcmF0aW9uTWludXRlc1xyXG4gICkge1xyXG4gICAgc3VwZXIoKVxyXG4gICAgdGhpcy5lbWFpbEFkZHJlc3MgPSBlbWFpbFxyXG4gICAgdGhpcy50ZW1wbGF0ZSA9IHRlbXBsYXRlXHJcbiAgICB0aGlzLnByb3ZpZGVMaW5rID0gcHJvdmlkZXJMaW5rXHJcbiAgICB0aGlzLnRlbXBsYXRlRmllbGRzID0gdGVtcGxhdGVGaWVsZHNcclxuICAgIHRoaXMuZGVmYXVsdEV4cGlyYXRpb25NaW51dGVzID0gZGVmYXVsdEV4cGlyYXRpb25NaW51dGVzXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBDcmVhdGUgYSBwbGFpbiBvYmplY3QgcmVwcmVzZW50YXRpb24gb2YgdGhlIGVtYWlsIEVBQ1AuIFVzZWQgZm9yIEpTT04gc2VyaWFsaXphdGlvbi5cclxuICAgKlxyXG4gICAqIEByZXR1cm4ge09iamVjdH0gQSBwbGFpbiBKUyBvYmplY3QgcmVwcmVzZW50aW5nIHRoZSBlbWFpbCBFQUNQIGNvbmZpZ3VyYXRpb24uXHJcbiAgICovXHJcbiAgc2VyaWFsaXphYmxlKCkge1xyXG4gICAgLyogZXNsaW50LWRpc2FibGUgY2FtZWxjYXNlICovXHJcbiAgICBsZXQgdG9TZXJpYWxpemUgPSB7XHJcbiAgICAgIGVtYWlsX2FkZHJlc3M6IHRoaXMuZW1haWxBZGRyZXNzLFxyXG4gICAgICB0ZW1wbGF0ZTogdGhpcy50ZW1wbGF0ZSxcclxuICAgICAgcHJvdmlkZXJfbGluazogdGhpcy5wcm92aWRlTGluayxcclxuICAgICAgdGVtcGxhdGVfZmllbGRzOiB0aGlzLnRlbXBsYXRlRmllbGRzLFxyXG4gICAgICBkZWZhdWx0X2V4cGlyYXRpb25fbWludXRlczogdGhpcy5kZWZhdWx0RXhwaXJhdGlvbk1pbnV0ZXMsXHJcbiAgICB9XHJcbiAgICAvKiBlc2xpbnQtZW5hYmxlICovXHJcbiAgICByZXR1cm4gdG9TZXJpYWxpemVcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIENyZWF0ZSBhIG5ldyBFbWFpbEVBQ1AgaW5zdGFuY2UgZnJvbSBhIEphdmFzY3JpcHQgb2JqZWN0LlxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtPYmplY3R9IGpzb24gQSBwbGFpbiBKUyBvYmplY3QgY29udGFpbmluZyB0aGUgbmVlZGVkIEVtYWlsRUFDUCBjb25maWd1cmF0aW9uLlxyXG4gICAqXHJcbiAgICogQHJldHVybiB7RW1haWxFQUNQfSBUaGUgY29uc3RydWN0ZWQgRW1haWxFQUNQIG9iamVjdCBiYXNlZCBvbiB0aGUgcGFzc2VkIEpTIG9iamVjdC5cclxuICAgKi9cclxuICBzdGF0aWMgZGVjb2RlKGpzb24pIHtcclxuICAgIHJldHVybiBuZXcgRW1haWxFQUNQKFxyXG4gICAgICBqc29uLmVtYWlsX2FkZHJlc3MsXHJcbiAgICAgIGpzb24udGVtcGxhdGUsXHJcbiAgICAgIGpzb24ucHJvdmlkZXJfbGluayxcclxuICAgICAganNvbi50ZW1wbGF0ZV9maWVsZHMsXHJcbiAgICAgIGpzb24uZGVmYXVsdF9leHBpcmF0aW9uX21pbnV0ZXNcclxuICAgIClcclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gRW1haWxFQUNQXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./types/emailEACP.js\n");

/***/ }),

/***/ "./types/errors/general.js":
/*!*********************************!*\
  !*** ./types/errors/general.js ***!
  \*********************************/
/***/ ((module) => {

eval("/**\r\n * Makes sure stack traces remain consistent in Chrome.\r\n */\r\nclass GeneralError extends Error {\r\n  constructor(...params) {\r\n    super(...params)\r\n\r\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\r\n    if (Error.captureStackTrace) {\r\n      Error.captureStackTrace(this, this.constructor)\r\n    }\r\n\r\n    this.name = 'GeneralError'\r\n  }\r\n}\r\n\r\nclass RequestError extends GeneralError {\r\n  constructor(response, ...params) {\r\n    super(...params)\r\n\r\n    this.name = 'RequestError'\r\n    this.response = response\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  GeneralError,\r\n  RequestError,\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9lcnJvcnMvZ2VuZXJhbC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHRvem55c2VjdXJlL3Nkay8uL3R5cGVzL2Vycm9ycy9nZW5lcmFsLmpzP2FiYjEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIE1ha2VzIHN1cmUgc3RhY2sgdHJhY2VzIHJlbWFpbiBjb25zaXN0ZW50IGluIENocm9tZS5cclxuICovXHJcbmNsYXNzIEdlbmVyYWxFcnJvciBleHRlbmRzIEVycm9yIHtcclxuICBjb25zdHJ1Y3RvciguLi5wYXJhbXMpIHtcclxuICAgIHN1cGVyKC4uLnBhcmFtcylcclxuXHJcbiAgICAvLyBNYWludGFpbnMgcHJvcGVyIHN0YWNrIHRyYWNlIGZvciB3aGVyZSBvdXIgZXJyb3Igd2FzIHRocm93biAob25seSBhdmFpbGFibGUgb24gVjgpXHJcbiAgICBpZiAoRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UpIHtcclxuICAgICAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcywgdGhpcy5jb25zdHJ1Y3RvcilcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLm5hbWUgPSAnR2VuZXJhbEVycm9yJ1xyXG4gIH1cclxufVxyXG5cclxuY2xhc3MgUmVxdWVzdEVycm9yIGV4dGVuZHMgR2VuZXJhbEVycm9yIHtcclxuICBjb25zdHJ1Y3RvcihyZXNwb25zZSwgLi4ucGFyYW1zKSB7XHJcbiAgICBzdXBlciguLi5wYXJhbXMpXHJcblxyXG4gICAgdGhpcy5uYW1lID0gJ1JlcXVlc3RFcnJvcidcclxuICAgIHRoaXMucmVzcG9uc2UgPSByZXNwb25zZVxyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgR2VuZXJhbEVycm9yLFxyXG4gIFJlcXVlc3RFcnJvcixcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./types/errors/general.js\n");

/***/ }),

/***/ "./types/errors/identity.js":
/*!**********************************!*\
  !*** ./types/errors/identity.js ***!
  \**********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { RequestError, GeneralError } = __webpack_require__(/*! ./general */ \"./types/errors/general.js\")\r\n\r\n/**\r\n * Indicates that the identity is locked\r\n */\r\nclass IdentityLockedError extends RequestError {\r\n  constructor(...params) {\r\n    super(...params)\r\n\r\n    this.name = 'IdentityLockedError'\r\n  }\r\n}\r\n\r\n/**\r\n * Indicates the provided credentials were invalid\r\n */\r\nclass InvalidCredentials extends RequestError {\r\n  constructor(...params) {\r\n    super(...params)\r\n\r\n    this.name = 'InvalidCredentials'\r\n  }\r\n}\r\n\r\n/**\r\n * Surrounding requests worked, but the credential note was not fetched.\r\n */\r\nclass CredentialNoteError extends RequestError {\r\n  constructor(...params) {\r\n    super(...params)\r\n\r\n    this.name = 'CredentialNoteError'\r\n  }\r\n}\r\n\r\n/**\r\n * Wraps an error in decoding serialized identity data stored in a note\r\n */\r\nclass CredentialDataError extends GeneralError {\r\n  constructor(...params) {\r\n    super(...params)\r\n\r\n    this.name = 'CredentialDataError'\r\n  }\r\n}\r\n\r\n/**\r\n * Indicates an error in realm configuration is present\r\n */\r\nclass RealmConfigurationError extends GeneralError {\r\n  constructor(...params) {\r\n    super(...params)\r\n\r\n    this.name = 'RealmConfigurationError'\r\n  }\r\n}\r\n\r\n/**\r\n * Indicates the current session is expired and a new one must be established\r\n */\r\nclass SessionExpiredError extends GeneralError {\r\n  constructor(...params) {\r\n    super(...params)\r\n\r\n    this.name = 'SessionExpiredError'\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  IdentityLockedError,\r\n  InvalidCredentials,\r\n  CredentialNoteError,\r\n  CredentialDataError,\r\n  RealmConfigurationError,\r\n  SessionExpiredError,\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9lcnJvcnMvaWRlbnRpdHkuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdG96bnlzZWN1cmUvc2RrLy4vdHlwZXMvZXJyb3JzL2lkZW50aXR5LmpzPzg1MzEiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBSZXF1ZXN0RXJyb3IsIEdlbmVyYWxFcnJvciB9ID0gcmVxdWlyZSgnLi9nZW5lcmFsJylcclxuXHJcbi8qKlxyXG4gKiBJbmRpY2F0ZXMgdGhhdCB0aGUgaWRlbnRpdHkgaXMgbG9ja2VkXHJcbiAqL1xyXG5jbGFzcyBJZGVudGl0eUxvY2tlZEVycm9yIGV4dGVuZHMgUmVxdWVzdEVycm9yIHtcclxuICBjb25zdHJ1Y3RvciguLi5wYXJhbXMpIHtcclxuICAgIHN1cGVyKC4uLnBhcmFtcylcclxuXHJcbiAgICB0aGlzLm5hbWUgPSAnSWRlbnRpdHlMb2NrZWRFcnJvcidcclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBJbmRpY2F0ZXMgdGhlIHByb3ZpZGVkIGNyZWRlbnRpYWxzIHdlcmUgaW52YWxpZFxyXG4gKi9cclxuY2xhc3MgSW52YWxpZENyZWRlbnRpYWxzIGV4dGVuZHMgUmVxdWVzdEVycm9yIHtcclxuICBjb25zdHJ1Y3RvciguLi5wYXJhbXMpIHtcclxuICAgIHN1cGVyKC4uLnBhcmFtcylcclxuXHJcbiAgICB0aGlzLm5hbWUgPSAnSW52YWxpZENyZWRlbnRpYWxzJ1xyXG4gIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIFN1cnJvdW5kaW5nIHJlcXVlc3RzIHdvcmtlZCwgYnV0IHRoZSBjcmVkZW50aWFsIG5vdGUgd2FzIG5vdCBmZXRjaGVkLlxyXG4gKi9cclxuY2xhc3MgQ3JlZGVudGlhbE5vdGVFcnJvciBleHRlbmRzIFJlcXVlc3RFcnJvciB7XHJcbiAgY29uc3RydWN0b3IoLi4ucGFyYW1zKSB7XHJcbiAgICBzdXBlciguLi5wYXJhbXMpXHJcblxyXG4gICAgdGhpcy5uYW1lID0gJ0NyZWRlbnRpYWxOb3RlRXJyb3InXHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogV3JhcHMgYW4gZXJyb3IgaW4gZGVjb2Rpbmcgc2VyaWFsaXplZCBpZGVudGl0eSBkYXRhIHN0b3JlZCBpbiBhIG5vdGVcclxuICovXHJcbmNsYXNzIENyZWRlbnRpYWxEYXRhRXJyb3IgZXh0ZW5kcyBHZW5lcmFsRXJyb3Ige1xyXG4gIGNvbnN0cnVjdG9yKC4uLnBhcmFtcykge1xyXG4gICAgc3VwZXIoLi4ucGFyYW1zKVxyXG5cclxuICAgIHRoaXMubmFtZSA9ICdDcmVkZW50aWFsRGF0YUVycm9yJ1xyXG4gIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIEluZGljYXRlcyBhbiBlcnJvciBpbiByZWFsbSBjb25maWd1cmF0aW9uIGlzIHByZXNlbnRcclxuICovXHJcbmNsYXNzIFJlYWxtQ29uZmlndXJhdGlvbkVycm9yIGV4dGVuZHMgR2VuZXJhbEVycm9yIHtcclxuICBjb25zdHJ1Y3RvciguLi5wYXJhbXMpIHtcclxuICAgIHN1cGVyKC4uLnBhcmFtcylcclxuXHJcbiAgICB0aGlzLm5hbWUgPSAnUmVhbG1Db25maWd1cmF0aW9uRXJyb3InXHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogSW5kaWNhdGVzIHRoZSBjdXJyZW50IHNlc3Npb24gaXMgZXhwaXJlZCBhbmQgYSBuZXcgb25lIG11c3QgYmUgZXN0YWJsaXNoZWRcclxuICovXHJcbmNsYXNzIFNlc3Npb25FeHBpcmVkRXJyb3IgZXh0ZW5kcyBHZW5lcmFsRXJyb3Ige1xyXG4gIGNvbnN0cnVjdG9yKC4uLnBhcmFtcykge1xyXG4gICAgc3VwZXIoLi4ucGFyYW1zKVxyXG5cclxuICAgIHRoaXMubmFtZSA9ICdTZXNzaW9uRXhwaXJlZEVycm9yJ1xyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgSWRlbnRpdHlMb2NrZWRFcnJvcixcclxuICBJbnZhbGlkQ3JlZGVudGlhbHMsXHJcbiAgQ3JlZGVudGlhbE5vdGVFcnJvcixcclxuICBDcmVkZW50aWFsRGF0YUVycm9yLFxyXG4gIFJlYWxtQ29uZmlndXJhdGlvbkVycm9yLFxyXG4gIFNlc3Npb25FeHBpcmVkRXJyb3IsXHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./types/errors/identity.js\n");

/***/ }),

/***/ "./types/errors/index.js":
/*!*******************************!*\
  !*** ./types/errors/index.js ***!
  \*******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const general = __webpack_require__(/*! ./general */ \"./types/errors/general.js\")\r\nconst identity = __webpack_require__(/*! ./identity */ \"./types/errors/identity.js\")\r\n\r\nmodule.exports = {\r\n  general,\r\n  identity,\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9lcnJvcnMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdG96bnlzZWN1cmUvc2RrLy4vdHlwZXMvZXJyb3JzL2luZGV4LmpzPzhlNDYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZ2VuZXJhbCA9IHJlcXVpcmUoJy4vZ2VuZXJhbCcpXHJcbmNvbnN0IGlkZW50aXR5ID0gcmVxdWlyZSgnLi9pZGVudGl0eScpXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICBnZW5lcmFsLFxyXG4gIGlkZW50aXR5LFxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./types/errors/index.js\n");

/***/ }),

/***/ "./types/fileMeta.js":
/*!***************************!*\
  !*** ./types/fileMeta.js ***!
  \***************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Serializable = __webpack_require__(/*! ./serializable */ \"./types/serializable.js\")\r\n\r\nconst keyMap = {\r\n  fileUrl: 'file_url',\r\n  fileName: 'file_name',\r\n  checksum: 'checksum',\r\n  compression: 'compression',\r\n  size: 'size',\r\n}\r\n\r\n/**\r\n * Describe the meta information associated with a file attached to a Record.\r\n *\r\n * @property {string} fileUrl     The signed URL where the file can be downloaded\r\n * @property {string} fileName    The stored object name on the server (UUID)\r\n * @property {string} checksum    The MD5 checksum of the encrypted file\r\n * @property {string} compression The compression used on the file\r\n * @property {int}    size        The size in bytes of the encrypted file\r\n */\r\nclass FileMeta extends Serializable {\r\n  constructor() {\r\n    super()\r\n\r\n    this.fileUrl = null\r\n    this.fileName = null\r\n    this.checksum = null\r\n    this.compression = null\r\n    this.size = null\r\n  }\r\n\r\n  /**\r\n   * Generate a JSON.stringify-friendly version of the object\r\n   * automatically omitting any `null` fields.\r\n   *\r\n   * @returns {object}\r\n   */\r\n  serializable() {\r\n    const toSerialize = {}\r\n    for (let key in keyMap) {\r\n      if (this[key] !== null && this[key] !== undefined) {\r\n        toSerialize[keyMap[key]] = this[key]\r\n      }\r\n    }\r\n\r\n    return toSerialize\r\n  }\r\n\r\n  /**\r\n   * Specify how an already unserialized JSON array should be marshaled into\r\n   * an object representation.\r\n   *\r\n   * FileMeta object contain information about the written encrypted file. This\r\n   * includes the file name (a UUID), a checksum, size, etc. In addition, when\r\n   * the file is read, this includes a pre-signed URL that can be used to\r\n   * download the encrypted file, which is good for 5 minutes.\r\n   *\r\n   * <code>\r\n   * const fileMeta = FileMeta.decode({\r\n   *   file_url: '',\r\n   *   file_name: '',\r\n   *   checksum: '',\r\n   *   compression: '',\r\n   *   'size': 0,\r\n   * });\r\n   * </code>\r\n   *\r\n   * @param {object} obj The JS object containing file meta\r\n   *\r\n   * @return {FileMeta} The constructed FileMeta object\r\n   */\r\n  static decode(obj) {\r\n    const meta = new FileMeta()\r\n    if (obj) {\r\n      for (let key in keyMap) {\r\n        if (obj[keyMap[key]] !== undefined) {\r\n          meta[key] = obj[keyMap[key]]\r\n        }\r\n      }\r\n    }\r\n\r\n    return meta\r\n  }\r\n}\r\n\r\nmodule.exports = FileMeta\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9maWxlTWV0YS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B0b3pueXNlY3VyZS9zZGsvLi90eXBlcy9maWxlTWV0YS5qcz85MGQyIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlcmlhbGl6YWJsZSA9IHJlcXVpcmUoJy4vc2VyaWFsaXphYmxlJylcclxuXHJcbmNvbnN0IGtleU1hcCA9IHtcclxuICBmaWxlVXJsOiAnZmlsZV91cmwnLFxyXG4gIGZpbGVOYW1lOiAnZmlsZV9uYW1lJyxcclxuICBjaGVja3N1bTogJ2NoZWNrc3VtJyxcclxuICBjb21wcmVzc2lvbjogJ2NvbXByZXNzaW9uJyxcclxuICBzaXplOiAnc2l6ZScsXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBEZXNjcmliZSB0aGUgbWV0YSBpbmZvcm1hdGlvbiBhc3NvY2lhdGVkIHdpdGggYSBmaWxlIGF0dGFjaGVkIHRvIGEgUmVjb3JkLlxyXG4gKlxyXG4gKiBAcHJvcGVydHkge3N0cmluZ30gZmlsZVVybCAgICAgVGhlIHNpZ25lZCBVUkwgd2hlcmUgdGhlIGZpbGUgY2FuIGJlIGRvd25sb2FkZWRcclxuICogQHByb3BlcnR5IHtzdHJpbmd9IGZpbGVOYW1lICAgIFRoZSBzdG9yZWQgb2JqZWN0IG5hbWUgb24gdGhlIHNlcnZlciAoVVVJRClcclxuICogQHByb3BlcnR5IHtzdHJpbmd9IGNoZWNrc3VtICAgIFRoZSBNRDUgY2hlY2tzdW0gb2YgdGhlIGVuY3J5cHRlZCBmaWxlXHJcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBjb21wcmVzc2lvbiBUaGUgY29tcHJlc3Npb24gdXNlZCBvbiB0aGUgZmlsZVxyXG4gKiBAcHJvcGVydHkge2ludH0gICAgc2l6ZSAgICAgICAgVGhlIHNpemUgaW4gYnl0ZXMgb2YgdGhlIGVuY3J5cHRlZCBmaWxlXHJcbiAqL1xyXG5jbGFzcyBGaWxlTWV0YSBleHRlbmRzIFNlcmlhbGl6YWJsZSB7XHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICBzdXBlcigpXHJcblxyXG4gICAgdGhpcy5maWxlVXJsID0gbnVsbFxyXG4gICAgdGhpcy5maWxlTmFtZSA9IG51bGxcclxuICAgIHRoaXMuY2hlY2tzdW0gPSBudWxsXHJcbiAgICB0aGlzLmNvbXByZXNzaW9uID0gbnVsbFxyXG4gICAgdGhpcy5zaXplID0gbnVsbFxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogR2VuZXJhdGUgYSBKU09OLnN0cmluZ2lmeS1mcmllbmRseSB2ZXJzaW9uIG9mIHRoZSBvYmplY3RcclxuICAgKiBhdXRvbWF0aWNhbGx5IG9taXR0aW5nIGFueSBgbnVsbGAgZmllbGRzLlxyXG4gICAqXHJcbiAgICogQHJldHVybnMge29iamVjdH1cclxuICAgKi9cclxuICBzZXJpYWxpemFibGUoKSB7XHJcbiAgICBjb25zdCB0b1NlcmlhbGl6ZSA9IHt9XHJcbiAgICBmb3IgKGxldCBrZXkgaW4ga2V5TWFwKSB7XHJcbiAgICAgIGlmICh0aGlzW2tleV0gIT09IG51bGwgJiYgdGhpc1trZXldICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICB0b1NlcmlhbGl6ZVtrZXlNYXBba2V5XV0gPSB0aGlzW2tleV1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB0b1NlcmlhbGl6ZVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU3BlY2lmeSBob3cgYW4gYWxyZWFkeSB1bnNlcmlhbGl6ZWQgSlNPTiBhcnJheSBzaG91bGQgYmUgbWFyc2hhbGVkIGludG9cclxuICAgKiBhbiBvYmplY3QgcmVwcmVzZW50YXRpb24uXHJcbiAgICpcclxuICAgKiBGaWxlTWV0YSBvYmplY3QgY29udGFpbiBpbmZvcm1hdGlvbiBhYm91dCB0aGUgd3JpdHRlbiBlbmNyeXB0ZWQgZmlsZS4gVGhpc1xyXG4gICAqIGluY2x1ZGVzIHRoZSBmaWxlIG5hbWUgKGEgVVVJRCksIGEgY2hlY2tzdW0sIHNpemUsIGV0Yy4gSW4gYWRkaXRpb24sIHdoZW5cclxuICAgKiB0aGUgZmlsZSBpcyByZWFkLCB0aGlzIGluY2x1ZGVzIGEgcHJlLXNpZ25lZCBVUkwgdGhhdCBjYW4gYmUgdXNlZCB0b1xyXG4gICAqIGRvd25sb2FkIHRoZSBlbmNyeXB0ZWQgZmlsZSwgd2hpY2ggaXMgZ29vZCBmb3IgNSBtaW51dGVzLlxyXG4gICAqXHJcbiAgICogPGNvZGU+XHJcbiAgICogY29uc3QgZmlsZU1ldGEgPSBGaWxlTWV0YS5kZWNvZGUoe1xyXG4gICAqICAgZmlsZV91cmw6ICcnLFxyXG4gICAqICAgZmlsZV9uYW1lOiAnJyxcclxuICAgKiAgIGNoZWNrc3VtOiAnJyxcclxuICAgKiAgIGNvbXByZXNzaW9uOiAnJyxcclxuICAgKiAgICdzaXplJzogMCxcclxuICAgKiB9KTtcclxuICAgKiA8L2NvZGU+XHJcbiAgICpcclxuICAgKiBAcGFyYW0ge29iamVjdH0gb2JqIFRoZSBKUyBvYmplY3QgY29udGFpbmluZyBmaWxlIG1ldGFcclxuICAgKlxyXG4gICAqIEByZXR1cm4ge0ZpbGVNZXRhfSBUaGUgY29uc3RydWN0ZWQgRmlsZU1ldGEgb2JqZWN0XHJcbiAgICovXHJcbiAgc3RhdGljIGRlY29kZShvYmopIHtcclxuICAgIGNvbnN0IG1ldGEgPSBuZXcgRmlsZU1ldGEoKVxyXG4gICAgaWYgKG9iaikge1xyXG4gICAgICBmb3IgKGxldCBrZXkgaW4ga2V5TWFwKSB7XHJcbiAgICAgICAgaWYgKG9ialtrZXlNYXBba2V5XV0gIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgbWV0YVtrZXldID0gb2JqW2tleU1hcFtrZXldXVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBtZXRhXHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IEZpbGVNZXRhXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./types/fileMeta.js\n");

/***/ }),

/***/ "./types/group.js":
/*!************************!*\
  !*** ./types/group.js ***!
  \************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Serializable = __webpack_require__(/*! ./serializable */ \"./types/serializable.js\")\r\n\r\nclass Group extends Serializable {\r\n  constructor(groupName, publicKey, description) {\r\n    super()\r\n    this.groupName = groupName\r\n    this.publicKey = publicKey\r\n    this.description = description\r\n    this.createdAt = null\r\n    this.lastModified = null\r\n    this.groupID = null\r\n    this.accountID = null\r\n    this.memberCount = null\r\n  }\r\n\r\n  serializable() {\r\n    let toSerialize = {\r\n      group_name: this.groupName,\r\n      public_key: this.publicKey,\r\n      description: this.description,\r\n      memberCount: this.memberCount,\r\n      group_id: this.groupID,\r\n      account_id: this.accountID,\r\n      created_at: this.createdAt,\r\n      last_modified: this.lastModified,\r\n    }\r\n    const serializedKeys = Object.keys(toSerialize)\r\n    for (const key of serializedKeys) {\r\n      if (toSerialize[key] === null) {\r\n        delete toSerialize[key]\r\n      }\r\n    }\r\n    return toSerialize\r\n  }\r\n  static decode(json) {\r\n    let groupName = json.group_name === undefined ? null : json.group_name\r\n    let publicKey = json.public_key === undefined ? null : json.public_key\r\n    let description = json.description === undefined ? null : json.description\r\n    var group = new Group(groupName, publicKey, description)\r\n\r\n    // server defined values\r\n    let createdAt = json.created_at === null ? null : json.created_at\r\n    let lastModified = json.last_modified === null ? null : json.last_modified\r\n    let groupID = json.group_id === null ? null : json.group_id\r\n    let accountID = json.account_id === null ? null : json.account_id\r\n    let memberCount = json.member_count === null ? null : json.member_count\r\n    group.createdAt = createdAt\r\n    group.lastModified = lastModified\r\n    group.groupID = groupID\r\n    group.accountID = accountID\r\n    group.memberCount = memberCount\r\n    return group\r\n  }\r\n}\r\n\r\nmodule.exports = Group\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9ncm91cC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHRvem55c2VjdXJlL3Nkay8uL3R5cGVzL2dyb3VwLmpzPzNlYjQiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VyaWFsaXphYmxlID0gcmVxdWlyZSgnLi9zZXJpYWxpemFibGUnKVxyXG5cclxuY2xhc3MgR3JvdXAgZXh0ZW5kcyBTZXJpYWxpemFibGUge1xyXG4gIGNvbnN0cnVjdG9yKGdyb3VwTmFtZSwgcHVibGljS2V5LCBkZXNjcmlwdGlvbikge1xyXG4gICAgc3VwZXIoKVxyXG4gICAgdGhpcy5ncm91cE5hbWUgPSBncm91cE5hbWVcclxuICAgIHRoaXMucHVibGljS2V5ID0gcHVibGljS2V5XHJcbiAgICB0aGlzLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb25cclxuICAgIHRoaXMuY3JlYXRlZEF0ID0gbnVsbFxyXG4gICAgdGhpcy5sYXN0TW9kaWZpZWQgPSBudWxsXHJcbiAgICB0aGlzLmdyb3VwSUQgPSBudWxsXHJcbiAgICB0aGlzLmFjY291bnRJRCA9IG51bGxcclxuICAgIHRoaXMubWVtYmVyQ291bnQgPSBudWxsXHJcbiAgfVxyXG5cclxuICBzZXJpYWxpemFibGUoKSB7XHJcbiAgICBsZXQgdG9TZXJpYWxpemUgPSB7XHJcbiAgICAgIGdyb3VwX25hbWU6IHRoaXMuZ3JvdXBOYW1lLFxyXG4gICAgICBwdWJsaWNfa2V5OiB0aGlzLnB1YmxpY0tleSxcclxuICAgICAgZGVzY3JpcHRpb246IHRoaXMuZGVzY3JpcHRpb24sXHJcbiAgICAgIG1lbWJlckNvdW50OiB0aGlzLm1lbWJlckNvdW50LFxyXG4gICAgICBncm91cF9pZDogdGhpcy5ncm91cElELFxyXG4gICAgICBhY2NvdW50X2lkOiB0aGlzLmFjY291bnRJRCxcclxuICAgICAgY3JlYXRlZF9hdDogdGhpcy5jcmVhdGVkQXQsXHJcbiAgICAgIGxhc3RfbW9kaWZpZWQ6IHRoaXMubGFzdE1vZGlmaWVkLFxyXG4gICAgfVxyXG4gICAgY29uc3Qgc2VyaWFsaXplZEtleXMgPSBPYmplY3Qua2V5cyh0b1NlcmlhbGl6ZSlcclxuICAgIGZvciAoY29uc3Qga2V5IG9mIHNlcmlhbGl6ZWRLZXlzKSB7XHJcbiAgICAgIGlmICh0b1NlcmlhbGl6ZVtrZXldID09PSBudWxsKSB7XHJcbiAgICAgICAgZGVsZXRlIHRvU2VyaWFsaXplW2tleV1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRvU2VyaWFsaXplXHJcbiAgfVxyXG4gIHN0YXRpYyBkZWNvZGUoanNvbikge1xyXG4gICAgbGV0IGdyb3VwTmFtZSA9IGpzb24uZ3JvdXBfbmFtZSA9PT0gdW5kZWZpbmVkID8gbnVsbCA6IGpzb24uZ3JvdXBfbmFtZVxyXG4gICAgbGV0IHB1YmxpY0tleSA9IGpzb24ucHVibGljX2tleSA9PT0gdW5kZWZpbmVkID8gbnVsbCA6IGpzb24ucHVibGljX2tleVxyXG4gICAgbGV0IGRlc2NyaXB0aW9uID0ganNvbi5kZXNjcmlwdGlvbiA9PT0gdW5kZWZpbmVkID8gbnVsbCA6IGpzb24uZGVzY3JpcHRpb25cclxuICAgIHZhciBncm91cCA9IG5ldyBHcm91cChncm91cE5hbWUsIHB1YmxpY0tleSwgZGVzY3JpcHRpb24pXHJcblxyXG4gICAgLy8gc2VydmVyIGRlZmluZWQgdmFsdWVzXHJcbiAgICBsZXQgY3JlYXRlZEF0ID0ganNvbi5jcmVhdGVkX2F0ID09PSBudWxsID8gbnVsbCA6IGpzb24uY3JlYXRlZF9hdFxyXG4gICAgbGV0IGxhc3RNb2RpZmllZCA9IGpzb24ubGFzdF9tb2RpZmllZCA9PT0gbnVsbCA/IG51bGwgOiBqc29uLmxhc3RfbW9kaWZpZWRcclxuICAgIGxldCBncm91cElEID0ganNvbi5ncm91cF9pZCA9PT0gbnVsbCA/IG51bGwgOiBqc29uLmdyb3VwX2lkXHJcbiAgICBsZXQgYWNjb3VudElEID0ganNvbi5hY2NvdW50X2lkID09PSBudWxsID8gbnVsbCA6IGpzb24uYWNjb3VudF9pZFxyXG4gICAgbGV0IG1lbWJlckNvdW50ID0ganNvbi5tZW1iZXJfY291bnQgPT09IG51bGwgPyBudWxsIDoganNvbi5tZW1iZXJfY291bnRcclxuICAgIGdyb3VwLmNyZWF0ZWRBdCA9IGNyZWF0ZWRBdFxyXG4gICAgZ3JvdXAubGFzdE1vZGlmaWVkID0gbGFzdE1vZGlmaWVkXHJcbiAgICBncm91cC5ncm91cElEID0gZ3JvdXBJRFxyXG4gICAgZ3JvdXAuYWNjb3VudElEID0gYWNjb3VudElEXHJcbiAgICBncm91cC5tZW1iZXJDb3VudCA9IG1lbWJlckNvdW50XHJcbiAgICByZXR1cm4gZ3JvdXBcclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gR3JvdXBcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./types/group.js\n");

/***/ }),

/***/ "./types/groupMember.js":
/*!******************************!*\
  !*** ./types/groupMember.js ***!
  \******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Capabilities = __webpack_require__(/*! ./capabilities */ \"./types/capabilities.js\")\r\nconst Serializable = __webpack_require__(/*! ./serializable */ \"./types/serializable.js\")\r\n\r\nclass GroupMember extends Serializable {\r\n  constructor(clientID, capabilities) {\r\n    super()\r\n    this.clientID = clientID\r\n    this.membershipKey = null\r\n    this.capabilities = Capabilities.toArray(capabilities)\r\n  }\r\n  serializable() {\r\n    let toSerialize = {\r\n      client_id: this.clientID,\r\n      membership_key: this.membershipKey,\r\n      capabilities: this.capabilities,\r\n    }\r\n    const serializedKeys = Object.keys(toSerialize)\r\n    for (const key of serializedKeys) {\r\n      if (toSerialize[key] === null) {\r\n        delete toSerialize[key]\r\n      }\r\n    }\r\n    return toSerialize\r\n  }\r\n  static decode(json) {\r\n    let clientID = json.client_id === undefined ? null : json.client_id\r\n    let capabilities = Capabilities.toArray(json.capabilities)\r\n    var member = new GroupMember(clientID, capabilities)\r\n\r\n    // server defined\r\n    let membershipKeyDefined =\r\n      json.membership_key === undefined ? null : json.membership_key\r\n\r\n    member.membershipKey = membershipKeyDefined\r\n    return member\r\n  }\r\n}\r\nmodule.exports = GroupMember\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9ncm91cE1lbWJlci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHRvem55c2VjdXJlL3Nkay8uL3R5cGVzL2dyb3VwTWVtYmVyLmpzPzJhZTgiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQ2FwYWJpbGl0aWVzID0gcmVxdWlyZSgnLi9jYXBhYmlsaXRpZXMnKVxyXG5jb25zdCBTZXJpYWxpemFibGUgPSByZXF1aXJlKCcuL3NlcmlhbGl6YWJsZScpXHJcblxyXG5jbGFzcyBHcm91cE1lbWJlciBleHRlbmRzIFNlcmlhbGl6YWJsZSB7XHJcbiAgY29uc3RydWN0b3IoY2xpZW50SUQsIGNhcGFiaWxpdGllcykge1xyXG4gICAgc3VwZXIoKVxyXG4gICAgdGhpcy5jbGllbnRJRCA9IGNsaWVudElEXHJcbiAgICB0aGlzLm1lbWJlcnNoaXBLZXkgPSBudWxsXHJcbiAgICB0aGlzLmNhcGFiaWxpdGllcyA9IENhcGFiaWxpdGllcy50b0FycmF5KGNhcGFiaWxpdGllcylcclxuICB9XHJcbiAgc2VyaWFsaXphYmxlKCkge1xyXG4gICAgbGV0IHRvU2VyaWFsaXplID0ge1xyXG4gICAgICBjbGllbnRfaWQ6IHRoaXMuY2xpZW50SUQsXHJcbiAgICAgIG1lbWJlcnNoaXBfa2V5OiB0aGlzLm1lbWJlcnNoaXBLZXksXHJcbiAgICAgIGNhcGFiaWxpdGllczogdGhpcy5jYXBhYmlsaXRpZXMsXHJcbiAgICB9XHJcbiAgICBjb25zdCBzZXJpYWxpemVkS2V5cyA9IE9iamVjdC5rZXlzKHRvU2VyaWFsaXplKVxyXG4gICAgZm9yIChjb25zdCBrZXkgb2Ygc2VyaWFsaXplZEtleXMpIHtcclxuICAgICAgaWYgKHRvU2VyaWFsaXplW2tleV0gPT09IG51bGwpIHtcclxuICAgICAgICBkZWxldGUgdG9TZXJpYWxpemVba2V5XVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdG9TZXJpYWxpemVcclxuICB9XHJcbiAgc3RhdGljIGRlY29kZShqc29uKSB7XHJcbiAgICBsZXQgY2xpZW50SUQgPSBqc29uLmNsaWVudF9pZCA9PT0gdW5kZWZpbmVkID8gbnVsbCA6IGpzb24uY2xpZW50X2lkXHJcbiAgICBsZXQgY2FwYWJpbGl0aWVzID0gQ2FwYWJpbGl0aWVzLnRvQXJyYXkoanNvbi5jYXBhYmlsaXRpZXMpXHJcbiAgICB2YXIgbWVtYmVyID0gbmV3IEdyb3VwTWVtYmVyKGNsaWVudElELCBjYXBhYmlsaXRpZXMpXHJcblxyXG4gICAgLy8gc2VydmVyIGRlZmluZWRcclxuICAgIGxldCBtZW1iZXJzaGlwS2V5RGVmaW5lZCA9XHJcbiAgICAgIGpzb24ubWVtYmVyc2hpcF9rZXkgPT09IHVuZGVmaW5lZCA/IG51bGwgOiBqc29uLm1lbWJlcnNoaXBfa2V5XHJcblxyXG4gICAgbWVtYmVyLm1lbWJlcnNoaXBLZXkgPSBtZW1iZXJzaGlwS2V5RGVmaW5lZFxyXG4gICAgcmV0dXJuIG1lbWJlclxyXG4gIH1cclxufVxyXG5tb2R1bGUuZXhwb3J0cyA9IEdyb3VwTWVtYmVyXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./types/groupMember.js\n");

/***/ }),

/***/ "./types/groupMembership.js":
/*!**********************************!*\
  !*** ./types/groupMembership.js ***!
  \**********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Capabilities = __webpack_require__(/*! ./capabilities */ \"./types/capabilities.js\")\r\nconst Group = __webpack_require__(/*! ./group */ \"./types/group.js\")\r\nconst Serializable = __webpack_require__(/*! ./serializable */ \"./types/serializable.js\")\r\n\r\nclass GroupMembership extends Serializable {\r\n  constructor(clientID, group, capabilities) {\r\n    super()\r\n    this.clientID = clientID\r\n    this.group = group\r\n    this.capabilities = Capabilities.toObject(capabilities)\r\n  }\r\n  serializable() {\r\n    let toSerialize = {\r\n      client_id: this.clientID,\r\n      group: this.group.stringify(),\r\n      capabilities: this.capabilities,\r\n    }\r\n    const serializedKeys = Object.keys(toSerialize)\r\n    for (const key of serializedKeys) {\r\n      if (toSerialize[key] === null) {\r\n        delete toSerialize[key]\r\n      }\r\n    }\r\n    return toSerialize\r\n  }\r\n  static decode(json) {\r\n    let clientID = json.client_id === undefined ? null : json.client_id\r\n    let capabilities = Capabilities.toArray(json.capabilities)\r\n    let group = Group.decode(json.group)\r\n    return new GroupMembership(clientID, group, capabilities)\r\n  }\r\n}\r\n\r\nmodule.exports = GroupMembership\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9ncm91cE1lbWJlcnNoaXAuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdG96bnlzZWN1cmUvc2RrLy4vdHlwZXMvZ3JvdXBNZW1iZXJzaGlwLmpzPzJkYWUiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQ2FwYWJpbGl0aWVzID0gcmVxdWlyZSgnLi9jYXBhYmlsaXRpZXMnKVxyXG5jb25zdCBHcm91cCA9IHJlcXVpcmUoJy4vZ3JvdXAnKVxyXG5jb25zdCBTZXJpYWxpemFibGUgPSByZXF1aXJlKCcuL3NlcmlhbGl6YWJsZScpXHJcblxyXG5jbGFzcyBHcm91cE1lbWJlcnNoaXAgZXh0ZW5kcyBTZXJpYWxpemFibGUge1xyXG4gIGNvbnN0cnVjdG9yKGNsaWVudElELCBncm91cCwgY2FwYWJpbGl0aWVzKSB7XHJcbiAgICBzdXBlcigpXHJcbiAgICB0aGlzLmNsaWVudElEID0gY2xpZW50SURcclxuICAgIHRoaXMuZ3JvdXAgPSBncm91cFxyXG4gICAgdGhpcy5jYXBhYmlsaXRpZXMgPSBDYXBhYmlsaXRpZXMudG9PYmplY3QoY2FwYWJpbGl0aWVzKVxyXG4gIH1cclxuICBzZXJpYWxpemFibGUoKSB7XHJcbiAgICBsZXQgdG9TZXJpYWxpemUgPSB7XHJcbiAgICAgIGNsaWVudF9pZDogdGhpcy5jbGllbnRJRCxcclxuICAgICAgZ3JvdXA6IHRoaXMuZ3JvdXAuc3RyaW5naWZ5KCksXHJcbiAgICAgIGNhcGFiaWxpdGllczogdGhpcy5jYXBhYmlsaXRpZXMsXHJcbiAgICB9XHJcbiAgICBjb25zdCBzZXJpYWxpemVkS2V5cyA9IE9iamVjdC5rZXlzKHRvU2VyaWFsaXplKVxyXG4gICAgZm9yIChjb25zdCBrZXkgb2Ygc2VyaWFsaXplZEtleXMpIHtcclxuICAgICAgaWYgKHRvU2VyaWFsaXplW2tleV0gPT09IG51bGwpIHtcclxuICAgICAgICBkZWxldGUgdG9TZXJpYWxpemVba2V5XVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdG9TZXJpYWxpemVcclxuICB9XHJcbiAgc3RhdGljIGRlY29kZShqc29uKSB7XHJcbiAgICBsZXQgY2xpZW50SUQgPSBqc29uLmNsaWVudF9pZCA9PT0gdW5kZWZpbmVkID8gbnVsbCA6IGpzb24uY2xpZW50X2lkXHJcbiAgICBsZXQgY2FwYWJpbGl0aWVzID0gQ2FwYWJpbGl0aWVzLnRvQXJyYXkoanNvbi5jYXBhYmlsaXRpZXMpXHJcbiAgICBsZXQgZ3JvdXAgPSBHcm91cC5kZWNvZGUoanNvbi5ncm91cClcclxuICAgIHJldHVybiBuZXcgR3JvdXBNZW1iZXJzaGlwKGNsaWVudElELCBncm91cCwgY2FwYWJpbGl0aWVzKVxyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBHcm91cE1lbWJlcnNoaXBcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./types/groupMembership.js\n");

/***/ }),

/***/ "./types/groupMembershipKeys.js":
/*!**************************************!*\
  !*** ./types/groupMembershipKeys.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Serializable = __webpack_require__(/*! ./serializable */ \"./types/serializable.js\")\r\n\r\nclass GroupMembershipKeys extends Serializable {\r\n  constructor(keyMaterial, authorizerPublicKey, authorizerID) {\r\n    super()\r\n    this.keyMaterial = keyMaterial\r\n    this.authorizerPublicKey = authorizerPublicKey\r\n    this.authorizerID = authorizerID\r\n  }\r\n  serializable() {\r\n    let toSerialize = {\r\n      key_material: this.keyMaterial,\r\n      authorizer_public_key: this.authorizerPublicKey,\r\n      authorizer_id: this.authorizerID,\r\n    }\r\n    const serializedKeys = Object.keys(toSerialize)\r\n    for (const key of serializedKeys) {\r\n      if (toSerialize[key] === null) {\r\n        delete toSerialize[key]\r\n      }\r\n    }\r\n    return toSerialize\r\n  }\r\n  static decode(json) {\r\n    let keyMaterial = json.key_material === undefined ? null : json.key_material\r\n    let authorizerPublicKey =\r\n      json.authorizer_public_key === undefined\r\n        ? null\r\n        : json.authorizer_public_key\r\n    let authorizerID =\r\n      json.authorizer_id === undefined ? null : json.authorizer_id\r\n    return new GroupMembershipKeys(\r\n      keyMaterial,\r\n      authorizerPublicKey,\r\n      authorizerID\r\n    )\r\n  }\r\n}\r\n\r\nmodule.exports = GroupMembershipKeys\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9ncm91cE1lbWJlcnNoaXBLZXlzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHRvem55c2VjdXJlL3Nkay8uL3R5cGVzL2dyb3VwTWVtYmVyc2hpcEtleXMuanM/Njg3MyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTZXJpYWxpemFibGUgPSByZXF1aXJlKCcuL3NlcmlhbGl6YWJsZScpXHJcblxyXG5jbGFzcyBHcm91cE1lbWJlcnNoaXBLZXlzIGV4dGVuZHMgU2VyaWFsaXphYmxlIHtcclxuICBjb25zdHJ1Y3RvcihrZXlNYXRlcmlhbCwgYXV0aG9yaXplclB1YmxpY0tleSwgYXV0aG9yaXplcklEKSB7XHJcbiAgICBzdXBlcigpXHJcbiAgICB0aGlzLmtleU1hdGVyaWFsID0ga2V5TWF0ZXJpYWxcclxuICAgIHRoaXMuYXV0aG9yaXplclB1YmxpY0tleSA9IGF1dGhvcml6ZXJQdWJsaWNLZXlcclxuICAgIHRoaXMuYXV0aG9yaXplcklEID0gYXV0aG9yaXplcklEXHJcbiAgfVxyXG4gIHNlcmlhbGl6YWJsZSgpIHtcclxuICAgIGxldCB0b1NlcmlhbGl6ZSA9IHtcclxuICAgICAga2V5X21hdGVyaWFsOiB0aGlzLmtleU1hdGVyaWFsLFxyXG4gICAgICBhdXRob3JpemVyX3B1YmxpY19rZXk6IHRoaXMuYXV0aG9yaXplclB1YmxpY0tleSxcclxuICAgICAgYXV0aG9yaXplcl9pZDogdGhpcy5hdXRob3JpemVySUQsXHJcbiAgICB9XHJcbiAgICBjb25zdCBzZXJpYWxpemVkS2V5cyA9IE9iamVjdC5rZXlzKHRvU2VyaWFsaXplKVxyXG4gICAgZm9yIChjb25zdCBrZXkgb2Ygc2VyaWFsaXplZEtleXMpIHtcclxuICAgICAgaWYgKHRvU2VyaWFsaXplW2tleV0gPT09IG51bGwpIHtcclxuICAgICAgICBkZWxldGUgdG9TZXJpYWxpemVba2V5XVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdG9TZXJpYWxpemVcclxuICB9XHJcbiAgc3RhdGljIGRlY29kZShqc29uKSB7XHJcbiAgICBsZXQga2V5TWF0ZXJpYWwgPSBqc29uLmtleV9tYXRlcmlhbCA9PT0gdW5kZWZpbmVkID8gbnVsbCA6IGpzb24ua2V5X21hdGVyaWFsXHJcbiAgICBsZXQgYXV0aG9yaXplclB1YmxpY0tleSA9XHJcbiAgICAgIGpzb24uYXV0aG9yaXplcl9wdWJsaWNfa2V5ID09PSB1bmRlZmluZWRcclxuICAgICAgICA/IG51bGxcclxuICAgICAgICA6IGpzb24uYXV0aG9yaXplcl9wdWJsaWNfa2V5XHJcbiAgICBsZXQgYXV0aG9yaXplcklEID1cclxuICAgICAganNvbi5hdXRob3JpemVyX2lkID09PSB1bmRlZmluZWQgPyBudWxsIDoganNvbi5hdXRob3JpemVyX2lkXHJcbiAgICByZXR1cm4gbmV3IEdyb3VwTWVtYmVyc2hpcEtleXMoXHJcbiAgICAgIGtleU1hdGVyaWFsLFxyXG4gICAgICBhdXRob3JpemVyUHVibGljS2V5LFxyXG4gICAgICBhdXRob3JpemVySURcclxuICAgIClcclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gR3JvdXBNZW1iZXJzaGlwS2V5c1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./types/groupMembershipKeys.js\n");

/***/ }),

/***/ "./types/identityMFADevices.js":
/*!*************************************!*\
  !*** ./types/identityMFADevices.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Serializable = __webpack_require__(/*! ./serializable */ \"./types/serializable.js\")\r\n\r\n/**\r\n * @typedef MFADevice\r\n * @type {object}\r\n * @property {string} id id of the MFA device\r\n * @property {string} type they type of MFA device (\"totp\" or \"webauthn\")\r\n * @property {string} userLabel the user-friendly name given to the device\r\n * @property {string} createdAt a string representation of the creation time of the MFA device.\r\n */\r\n\r\n/**\r\n * @typedef MFADevices\r\n * @type {object}\r\n * @property {MFADevice[]} totp The timed one-time password device(s) registered to the identity.\r\n * @property {MFADevice[]} webauthn The WebAuthn/FIDO2 devices registered to the identity.\r\n */\r\n\r\nclass IdentityMFADevices extends Serializable {\r\n  /**\r\n   * @param {string} toznyId The identity's Tozny storage client ID\r\n   * @param {string} userId The identity's user ID\r\n   * @param {MFADevices} mfaDevices An object containing the different types of MFA devices the of the user.\r\n   */\r\n  constructor(toznyId, userId, mfaDevices) {\r\n    super()\r\n    /** @type {string} The identity's Tozny storage client ID */\r\n    this.toznyId = toznyId\r\n    /** @type {string} The identity's user ID */\r\n    this.userId = userId\r\n    /** @type {MFADevices} An object containing the different types of MFA devices the of the user. */\r\n    this.mfaDevices = mfaDevices\r\n  }\r\n\r\n  serializable() {\r\n    return {\r\n      tozny_id: this.toznyId,\r\n      user_id: this.userId,\r\n      totp_devices: this.mfaDevices.totp.map(\r\n        IdentityMFADevices._serializeMFADevice\r\n      ),\r\n      webauthn_devices: this.mfaDevices.webauthn.map(\r\n        IdentityMFADevices._serializeMFADevice\r\n      ),\r\n    }\r\n  }\r\n\r\n  /** @returns {IdentityMFADevices} */\r\n  static decode(json) {\r\n    const mfaDevices = {\r\n      totp: (json.totp_devices || []).map(IdentityMFADevices._decodeMFADevice),\r\n      webauthn: (json.webauthn_devices || []).map(\r\n        IdentityMFADevices._decodeMFADevice\r\n      ),\r\n    }\r\n    return new IdentityMFADevices(json.tozny_id, json.user_id, mfaDevices)\r\n  }\r\n\r\n  /**\r\n   * serializes our sdk's `MFADevice` object to the API representation\r\n   * @param {MFADevice} data\r\n   * @private\r\n   */\r\n  static _serializeMFADevice(data) {\r\n    return {\r\n      id: data.id,\r\n      type: data.type,\r\n      user_label: data.userLabel,\r\n      created_at: data.createdAt,\r\n    }\r\n  }\r\n\r\n  /**\r\n   * converts API MFADevice object to our sdk's `MFADevice` structure\r\n   * @returns {MFADevice}\r\n   * @private\r\n   */\r\n  static _decodeMFADevice(json) {\r\n    return {\r\n      id: json.id,\r\n      type: json.type,\r\n      userLabel: json.user_label,\r\n      createdAt: json.created_at,\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = IdentityMFADevices\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9pZGVudGl0eU1GQURldmljZXMuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdG96bnlzZWN1cmUvc2RrLy4vdHlwZXMvaWRlbnRpdHlNRkFEZXZpY2VzLmpzPzZiMzIiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VyaWFsaXphYmxlID0gcmVxdWlyZSgnLi9zZXJpYWxpemFibGUnKVxyXG5cclxuLyoqXHJcbiAqIEB0eXBlZGVmIE1GQURldmljZVxyXG4gKiBAdHlwZSB7b2JqZWN0fVxyXG4gKiBAcHJvcGVydHkge3N0cmluZ30gaWQgaWQgb2YgdGhlIE1GQSBkZXZpY2VcclxuICogQHByb3BlcnR5IHtzdHJpbmd9IHR5cGUgdGhleSB0eXBlIG9mIE1GQSBkZXZpY2UgKFwidG90cFwiIG9yIFwid2ViYXV0aG5cIilcclxuICogQHByb3BlcnR5IHtzdHJpbmd9IHVzZXJMYWJlbCB0aGUgdXNlci1mcmllbmRseSBuYW1lIGdpdmVuIHRvIHRoZSBkZXZpY2VcclxuICogQHByb3BlcnR5IHtzdHJpbmd9IGNyZWF0ZWRBdCBhIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUgY3JlYXRpb24gdGltZSBvZiB0aGUgTUZBIGRldmljZS5cclxuICovXHJcblxyXG4vKipcclxuICogQHR5cGVkZWYgTUZBRGV2aWNlc1xyXG4gKiBAdHlwZSB7b2JqZWN0fVxyXG4gKiBAcHJvcGVydHkge01GQURldmljZVtdfSB0b3RwIFRoZSB0aW1lZCBvbmUtdGltZSBwYXNzd29yZCBkZXZpY2UocykgcmVnaXN0ZXJlZCB0byB0aGUgaWRlbnRpdHkuXHJcbiAqIEBwcm9wZXJ0eSB7TUZBRGV2aWNlW119IHdlYmF1dGhuIFRoZSBXZWJBdXRobi9GSURPMiBkZXZpY2VzIHJlZ2lzdGVyZWQgdG8gdGhlIGlkZW50aXR5LlxyXG4gKi9cclxuXHJcbmNsYXNzIElkZW50aXR5TUZBRGV2aWNlcyBleHRlbmRzIFNlcmlhbGl6YWJsZSB7XHJcbiAgLyoqXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IHRvem55SWQgVGhlIGlkZW50aXR5J3MgVG96bnkgc3RvcmFnZSBjbGllbnQgSURcclxuICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlcklkIFRoZSBpZGVudGl0eSdzIHVzZXIgSURcclxuICAgKiBAcGFyYW0ge01GQURldmljZXN9IG1mYURldmljZXMgQW4gb2JqZWN0IGNvbnRhaW5pbmcgdGhlIGRpZmZlcmVudCB0eXBlcyBvZiBNRkEgZGV2aWNlcyB0aGUgb2YgdGhlIHVzZXIuXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IodG96bnlJZCwgdXNlcklkLCBtZmFEZXZpY2VzKSB7XHJcbiAgICBzdXBlcigpXHJcbiAgICAvKiogQHR5cGUge3N0cmluZ30gVGhlIGlkZW50aXR5J3MgVG96bnkgc3RvcmFnZSBjbGllbnQgSUQgKi9cclxuICAgIHRoaXMudG96bnlJZCA9IHRvem55SWRcclxuICAgIC8qKiBAdHlwZSB7c3RyaW5nfSBUaGUgaWRlbnRpdHkncyB1c2VyIElEICovXHJcbiAgICB0aGlzLnVzZXJJZCA9IHVzZXJJZFxyXG4gICAgLyoqIEB0eXBlIHtNRkFEZXZpY2VzfSBBbiBvYmplY3QgY29udGFpbmluZyB0aGUgZGlmZmVyZW50IHR5cGVzIG9mIE1GQSBkZXZpY2VzIHRoZSBvZiB0aGUgdXNlci4gKi9cclxuICAgIHRoaXMubWZhRGV2aWNlcyA9IG1mYURldmljZXNcclxuICB9XHJcblxyXG4gIHNlcmlhbGl6YWJsZSgpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHRvem55X2lkOiB0aGlzLnRvem55SWQsXHJcbiAgICAgIHVzZXJfaWQ6IHRoaXMudXNlcklkLFxyXG4gICAgICB0b3RwX2RldmljZXM6IHRoaXMubWZhRGV2aWNlcy50b3RwLm1hcChcclxuICAgICAgICBJZGVudGl0eU1GQURldmljZXMuX3NlcmlhbGl6ZU1GQURldmljZVxyXG4gICAgICApLFxyXG4gICAgICB3ZWJhdXRobl9kZXZpY2VzOiB0aGlzLm1mYURldmljZXMud2ViYXV0aG4ubWFwKFxyXG4gICAgICAgIElkZW50aXR5TUZBRGV2aWNlcy5fc2VyaWFsaXplTUZBRGV2aWNlXHJcbiAgICAgICksXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKiogQHJldHVybnMge0lkZW50aXR5TUZBRGV2aWNlc30gKi9cclxuICBzdGF0aWMgZGVjb2RlKGpzb24pIHtcclxuICAgIGNvbnN0IG1mYURldmljZXMgPSB7XHJcbiAgICAgIHRvdHA6IChqc29uLnRvdHBfZGV2aWNlcyB8fCBbXSkubWFwKElkZW50aXR5TUZBRGV2aWNlcy5fZGVjb2RlTUZBRGV2aWNlKSxcclxuICAgICAgd2ViYXV0aG46IChqc29uLndlYmF1dGhuX2RldmljZXMgfHwgW10pLm1hcChcclxuICAgICAgICBJZGVudGl0eU1GQURldmljZXMuX2RlY29kZU1GQURldmljZVxyXG4gICAgICApLFxyXG4gICAgfVxyXG4gICAgcmV0dXJuIG5ldyBJZGVudGl0eU1GQURldmljZXMoanNvbi50b3pueV9pZCwganNvbi51c2VyX2lkLCBtZmFEZXZpY2VzKVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogc2VyaWFsaXplcyBvdXIgc2RrJ3MgYE1GQURldmljZWAgb2JqZWN0IHRvIHRoZSBBUEkgcmVwcmVzZW50YXRpb25cclxuICAgKiBAcGFyYW0ge01GQURldmljZX0gZGF0YVxyXG4gICAqIEBwcml2YXRlXHJcbiAgICovXHJcbiAgc3RhdGljIF9zZXJpYWxpemVNRkFEZXZpY2UoZGF0YSkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgaWQ6IGRhdGEuaWQsXHJcbiAgICAgIHR5cGU6IGRhdGEudHlwZSxcclxuICAgICAgdXNlcl9sYWJlbDogZGF0YS51c2VyTGFiZWwsXHJcbiAgICAgIGNyZWF0ZWRfYXQ6IGRhdGEuY3JlYXRlZEF0LFxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogY29udmVydHMgQVBJIE1GQURldmljZSBvYmplY3QgdG8gb3VyIHNkaydzIGBNRkFEZXZpY2VgIHN0cnVjdHVyZVxyXG4gICAqIEByZXR1cm5zIHtNRkFEZXZpY2V9XHJcbiAgICogQHByaXZhdGVcclxuICAgKi9cclxuICBzdGF0aWMgX2RlY29kZU1GQURldmljZShqc29uKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBpZDoganNvbi5pZCxcclxuICAgICAgdHlwZToganNvbi50eXBlLFxyXG4gICAgICB1c2VyTGFiZWw6IGpzb24udXNlcl9sYWJlbCxcclxuICAgICAgY3JlYXRlZEF0OiBqc29uLmNyZWF0ZWRfYXQsXHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IElkZW50aXR5TUZBRGV2aWNlc1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./types/identityMFADevices.js\n");

/***/ }),

/***/ "./types/incomingSharingPolicy.js":
/*!****************************************!*\
  !*** ./types/incomingSharingPolicy.js ***!
  \****************************************/
/***/ ((module) => {

eval("/**\r\n * Information about a specific E3DB client, including the client's\r\n * public key to be used for cryptographic operations.\r\n *\r\n * @property {string} writerId      Unique ID of the writer that shared with this client\r\n * @property {string} recordType    Type of record shared with this client\r\n * @property {string} [writerName]  Display name of the writer, if available\r\n */\r\nclass IncomingSharingPolicy {\r\n  constructor(writerId, recordType, writerName = null) {\r\n    this.writerId = writerId\r\n    this.recordType = recordType\r\n    this.writerName = writerName\r\n  }\r\n\r\n  /**\r\n   * Specify how an already unserialized JSON array should be marshaled into\r\n   * an object representation.\r\n   *\r\n   * Client information contains the ID of the client, a Curve25519 public key\r\n   * component, and a flag describing whether or not the client has been validated.\r\n   *\r\n   * <code>\r\n   * isp = IncomingSharingPolicy::decode({\r\n   *   writer_id: '',\r\n   *   record_type: '',\r\n   *   writer_name: ''\r\n   * })\r\n   * <code>\r\n   *\r\n   * @param {object} json\r\n   *\r\n   * @return {Promise<IncomingSharingPolicy>}\r\n   */\r\n  static async decode(json) {\r\n    return Promise.resolve(\r\n      new IncomingSharingPolicy(\r\n        json.writer_id,\r\n        json.record_type,\r\n        json.writer_name\r\n      )\r\n    )\r\n  }\r\n}\r\n\r\nmodule.exports = IncomingSharingPolicy\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9pbmNvbWluZ1NoYXJpbmdQb2xpY3kuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdG96bnlzZWN1cmUvc2RrLy4vdHlwZXMvaW5jb21pbmdTaGFyaW5nUG9saWN5LmpzP2U5NmQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEluZm9ybWF0aW9uIGFib3V0IGEgc3BlY2lmaWMgRTNEQiBjbGllbnQsIGluY2x1ZGluZyB0aGUgY2xpZW50J3NcclxuICogcHVibGljIGtleSB0byBiZSB1c2VkIGZvciBjcnlwdG9ncmFwaGljIG9wZXJhdGlvbnMuXHJcbiAqXHJcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSB3cml0ZXJJZCAgICAgIFVuaXF1ZSBJRCBvZiB0aGUgd3JpdGVyIHRoYXQgc2hhcmVkIHdpdGggdGhpcyBjbGllbnRcclxuICogQHByb3BlcnR5IHtzdHJpbmd9IHJlY29yZFR5cGUgICAgVHlwZSBvZiByZWNvcmQgc2hhcmVkIHdpdGggdGhpcyBjbGllbnRcclxuICogQHByb3BlcnR5IHtzdHJpbmd9IFt3cml0ZXJOYW1lXSAgRGlzcGxheSBuYW1lIG9mIHRoZSB3cml0ZXIsIGlmIGF2YWlsYWJsZVxyXG4gKi9cclxuY2xhc3MgSW5jb21pbmdTaGFyaW5nUG9saWN5IHtcclxuICBjb25zdHJ1Y3Rvcih3cml0ZXJJZCwgcmVjb3JkVHlwZSwgd3JpdGVyTmFtZSA9IG51bGwpIHtcclxuICAgIHRoaXMud3JpdGVySWQgPSB3cml0ZXJJZFxyXG4gICAgdGhpcy5yZWNvcmRUeXBlID0gcmVjb3JkVHlwZVxyXG4gICAgdGhpcy53cml0ZXJOYW1lID0gd3JpdGVyTmFtZVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU3BlY2lmeSBob3cgYW4gYWxyZWFkeSB1bnNlcmlhbGl6ZWQgSlNPTiBhcnJheSBzaG91bGQgYmUgbWFyc2hhbGVkIGludG9cclxuICAgKiBhbiBvYmplY3QgcmVwcmVzZW50YXRpb24uXHJcbiAgICpcclxuICAgKiBDbGllbnQgaW5mb3JtYXRpb24gY29udGFpbnMgdGhlIElEIG9mIHRoZSBjbGllbnQsIGEgQ3VydmUyNTUxOSBwdWJsaWMga2V5XHJcbiAgICogY29tcG9uZW50LCBhbmQgYSBmbGFnIGRlc2NyaWJpbmcgd2hldGhlciBvciBub3QgdGhlIGNsaWVudCBoYXMgYmVlbiB2YWxpZGF0ZWQuXHJcbiAgICpcclxuICAgKiA8Y29kZT5cclxuICAgKiBpc3AgPSBJbmNvbWluZ1NoYXJpbmdQb2xpY3k6OmRlY29kZSh7XHJcbiAgICogICB3cml0ZXJfaWQ6ICcnLFxyXG4gICAqICAgcmVjb3JkX3R5cGU6ICcnLFxyXG4gICAqICAgd3JpdGVyX25hbWU6ICcnXHJcbiAgICogfSlcclxuICAgKiA8Y29kZT5cclxuICAgKlxyXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBqc29uXHJcbiAgICpcclxuICAgKiBAcmV0dXJuIHtQcm9taXNlPEluY29taW5nU2hhcmluZ1BvbGljeT59XHJcbiAgICovXHJcbiAgc3RhdGljIGFzeW5jIGRlY29kZShqc29uKSB7XHJcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKFxyXG4gICAgICBuZXcgSW5jb21pbmdTaGFyaW5nUG9saWN5KFxyXG4gICAgICAgIGpzb24ud3JpdGVyX2lkLFxyXG4gICAgICAgIGpzb24ucmVjb3JkX3R5cGUsXHJcbiAgICAgICAganNvbi53cml0ZXJfbmFtZVxyXG4gICAgICApXHJcbiAgICApXHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IEluY29taW5nU2hhcmluZ1BvbGljeVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./types/incomingSharingPolicy.js\n");

/***/ }),

/***/ "./types/index.js":
/*!************************!*\
  !*** ./types/index.js ***!
  \************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const AccessRequest = __webpack_require__(/*! ./accessRequest */ \"./types/accessRequest.js\")\r\nconst AccessRequestSearchResponse = __webpack_require__(/*! ./accessRequestSearchResponse */ \"./types/accessRequestSearchResponse.js\")\r\nconst AuthorizerPolicy = __webpack_require__(/*! ./authorizerPolicy */ \"./types/authorizerPolicy.js\")\r\nconst Capabilities = __webpack_require__(/*! ./capabilities */ \"./types/capabilities.js\")\r\nconst ClientDetails = __webpack_require__(/*! ./clientDetails */ \"./types/clientDetails.js\")\r\nconst ClientInfo = __webpack_require__(/*! ./clientInfo */ \"./types/clientInfo.js\")\r\nconst EAKInfo = __webpack_require__(/*! ./eakInfo */ \"./types/eakInfo.js\")\r\nconst FileMeta = __webpack_require__(/*! ./fileMeta */ \"./types/fileMeta.js\")\r\nconst Group = __webpack_require__(/*! ./group */ \"./types/group.js\")\r\nconst GroupMember = __webpack_require__(/*! ./groupMember */ \"./types/groupMember.js\")\r\nconst GroupMembership = __webpack_require__(/*! ./groupMembership */ \"./types/groupMembership.js\")\r\nconst GroupMembershipKeys = __webpack_require__(/*! ./groupMembershipKeys */ \"./types/groupMembershipKeys.js\")\r\nconst IdentityMFADevices = __webpack_require__(/*! ./identityMFADevices */ \"./types/identityMFADevices.js\")\r\nconst IncomingSharingPolicy = __webpack_require__(/*! ./incomingSharingPolicy */ \"./types/incomingSharingPolicy.js\")\r\nconst InitiateWebAuthnChallengeData = __webpack_require__(/*! ./initiateWebAuthnChallengeData */ \"./types/initiateWebAuthnChallengeData.js\")\r\nconst KeyPair = __webpack_require__(/*! ./keyPair */ \"./types/keyPair.js\")\r\nconst Meta = __webpack_require__(/*! ./meta */ \"./types/meta.js\")\r\nconst Note = __webpack_require__(/*! ./note */ \"./types/note.js\")\r\nconst NoteData = __webpack_require__(/*! ./noteData */ \"./types/noteData.js\")\r\nconst NoteKeys = __webpack_require__(/*! ./noteKeys */ \"./types/noteKeys.js\")\r\nconst NoteInfo = __webpack_require__(/*! ./noteInfo */ \"./types/noteInfo.js\")\r\nconst NoteOptions = __webpack_require__(/*! ./noteOptions */ \"./types/noteOptions.js\")\r\nconst OutgoingSharingPolicy = __webpack_require__(/*! ./outgoingSharingPolicy */ \"./types/outgoingSharingPolicy.js\")\r\nconst PublicKey = __webpack_require__(/*! ./publicKey */ \"./types/publicKey.js\")\r\nconst Query = __webpack_require__(/*! ./query */ \"./types/query.js\")\r\nconst QueryResult = __webpack_require__(/*! ./queryResult */ \"./types/queryResult.js\")\r\nconst Record = __webpack_require__(/*! ./record */ \"./types/record.js\")\r\nconst RecordData = __webpack_require__(/*! ./recordData */ \"./types/recordData.js\")\r\nconst RecordInfo = __webpack_require__(/*! ./recordInfo */ \"./types/recordInfo.js\")\r\nconst Search = __webpack_require__(/*! ./search */ \"./types/search.js\")\r\nconst SearchParam = __webpack_require__(/*! ./searchParam */ \"./types/searchParam.js\")\r\nconst SearchRange = __webpack_require__(/*! ./searchRange */ \"./types/searchRange.js\")\r\nconst SearchResult = __webpack_require__(/*! ./searchResult */ \"./types/searchResult.js\")\r\nconst Serializable = __webpack_require__(/*! ./serializable */ \"./types/serializable.js\")\r\nconst Signable = __webpack_require__(/*! ./signable */ \"./types/signable.js\")\r\nconst SignedDocument = __webpack_require__(/*! ./signedDocument */ \"./types/signedDocument.js\")\r\nconst SignedString = __webpack_require__(/*! ./signedString */ \"./types/signedString.js\")\r\nconst SigningKey = __webpack_require__(/*! ./signingKey */ \"./types/signingKey.js\")\r\nconst TozIdEACP = __webpack_require__(/*! ./tozIdEACP */ \"./types/tozIdEACP.js\")\r\nconst ToznyOTPEACP = __webpack_require__(/*! ./toznyOTPEACP */ \"./types/toznyOTPEACP.js\")\r\nconst errors = __webpack_require__(/*! ./errors */ \"./types/errors/index.js\")\r\n\r\nmodule.exports = {\r\n  AccessRequest,\r\n  AccessRequestSearchResponse,\r\n  AuthorizerPolicy,\r\n  Capabilities,\r\n  ClientDetails,\r\n  ClientInfo,\r\n  EAKInfo,\r\n  FileMeta,\r\n  Group,\r\n  GroupMember,\r\n  GroupMembership,\r\n  GroupMembershipKeys,\r\n  IdentityMFADevices,\r\n  IncomingSharingPolicy,\r\n  InitiateWebAuthnChallengeData,\r\n  KeyPair,\r\n  Meta,\r\n  Note,\r\n  NoteData,\r\n  NoteKeys,\r\n  NoteInfo,\r\n  NoteOptions,\r\n  OutgoingSharingPolicy,\r\n  PublicKey,\r\n  Query,\r\n  QueryResult,\r\n  Record,\r\n  RecordData,\r\n  RecordInfo,\r\n  Search,\r\n  SearchParam,\r\n  SearchRange,\r\n  SearchResult,\r\n  Serializable,\r\n  Signable,\r\n  SignedDocument,\r\n  SignedString,\r\n  SigningKey,\r\n  TozIdEACP,\r\n  ToznyOTPEACP,\r\n  errors,\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B0b3pueXNlY3VyZS9zZGsvLi90eXBlcy9pbmRleC5qcz83ZWNkIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEFjY2Vzc1JlcXVlc3QgPSByZXF1aXJlKCcuL2FjY2Vzc1JlcXVlc3QnKVxyXG5jb25zdCBBY2Nlc3NSZXF1ZXN0U2VhcmNoUmVzcG9uc2UgPSByZXF1aXJlKCcuL2FjY2Vzc1JlcXVlc3RTZWFyY2hSZXNwb25zZScpXHJcbmNvbnN0IEF1dGhvcml6ZXJQb2xpY3kgPSByZXF1aXJlKCcuL2F1dGhvcml6ZXJQb2xpY3knKVxyXG5jb25zdCBDYXBhYmlsaXRpZXMgPSByZXF1aXJlKCcuL2NhcGFiaWxpdGllcycpXHJcbmNvbnN0IENsaWVudERldGFpbHMgPSByZXF1aXJlKCcuL2NsaWVudERldGFpbHMnKVxyXG5jb25zdCBDbGllbnRJbmZvID0gcmVxdWlyZSgnLi9jbGllbnRJbmZvJylcclxuY29uc3QgRUFLSW5mbyA9IHJlcXVpcmUoJy4vZWFrSW5mbycpXHJcbmNvbnN0IEZpbGVNZXRhID0gcmVxdWlyZSgnLi9maWxlTWV0YScpXHJcbmNvbnN0IEdyb3VwID0gcmVxdWlyZSgnLi9ncm91cCcpXHJcbmNvbnN0IEdyb3VwTWVtYmVyID0gcmVxdWlyZSgnLi9ncm91cE1lbWJlcicpXHJcbmNvbnN0IEdyb3VwTWVtYmVyc2hpcCA9IHJlcXVpcmUoJy4vZ3JvdXBNZW1iZXJzaGlwJylcclxuY29uc3QgR3JvdXBNZW1iZXJzaGlwS2V5cyA9IHJlcXVpcmUoJy4vZ3JvdXBNZW1iZXJzaGlwS2V5cycpXHJcbmNvbnN0IElkZW50aXR5TUZBRGV2aWNlcyA9IHJlcXVpcmUoJy4vaWRlbnRpdHlNRkFEZXZpY2VzJylcclxuY29uc3QgSW5jb21pbmdTaGFyaW5nUG9saWN5ID0gcmVxdWlyZSgnLi9pbmNvbWluZ1NoYXJpbmdQb2xpY3knKVxyXG5jb25zdCBJbml0aWF0ZVdlYkF1dGhuQ2hhbGxlbmdlRGF0YSA9IHJlcXVpcmUoJy4vaW5pdGlhdGVXZWJBdXRobkNoYWxsZW5nZURhdGEnKVxyXG5jb25zdCBLZXlQYWlyID0gcmVxdWlyZSgnLi9rZXlQYWlyJylcclxuY29uc3QgTWV0YSA9IHJlcXVpcmUoJy4vbWV0YScpXHJcbmNvbnN0IE5vdGUgPSByZXF1aXJlKCcuL25vdGUnKVxyXG5jb25zdCBOb3RlRGF0YSA9IHJlcXVpcmUoJy4vbm90ZURhdGEnKVxyXG5jb25zdCBOb3RlS2V5cyA9IHJlcXVpcmUoJy4vbm90ZUtleXMnKVxyXG5jb25zdCBOb3RlSW5mbyA9IHJlcXVpcmUoJy4vbm90ZUluZm8nKVxyXG5jb25zdCBOb3RlT3B0aW9ucyA9IHJlcXVpcmUoJy4vbm90ZU9wdGlvbnMnKVxyXG5jb25zdCBPdXRnb2luZ1NoYXJpbmdQb2xpY3kgPSByZXF1aXJlKCcuL291dGdvaW5nU2hhcmluZ1BvbGljeScpXHJcbmNvbnN0IFB1YmxpY0tleSA9IHJlcXVpcmUoJy4vcHVibGljS2V5JylcclxuY29uc3QgUXVlcnkgPSByZXF1aXJlKCcuL3F1ZXJ5JylcclxuY29uc3QgUXVlcnlSZXN1bHQgPSByZXF1aXJlKCcuL3F1ZXJ5UmVzdWx0JylcclxuY29uc3QgUmVjb3JkID0gcmVxdWlyZSgnLi9yZWNvcmQnKVxyXG5jb25zdCBSZWNvcmREYXRhID0gcmVxdWlyZSgnLi9yZWNvcmREYXRhJylcclxuY29uc3QgUmVjb3JkSW5mbyA9IHJlcXVpcmUoJy4vcmVjb3JkSW5mbycpXHJcbmNvbnN0IFNlYXJjaCA9IHJlcXVpcmUoJy4vc2VhcmNoJylcclxuY29uc3QgU2VhcmNoUGFyYW0gPSByZXF1aXJlKCcuL3NlYXJjaFBhcmFtJylcclxuY29uc3QgU2VhcmNoUmFuZ2UgPSByZXF1aXJlKCcuL3NlYXJjaFJhbmdlJylcclxuY29uc3QgU2VhcmNoUmVzdWx0ID0gcmVxdWlyZSgnLi9zZWFyY2hSZXN1bHQnKVxyXG5jb25zdCBTZXJpYWxpemFibGUgPSByZXF1aXJlKCcuL3NlcmlhbGl6YWJsZScpXHJcbmNvbnN0IFNpZ25hYmxlID0gcmVxdWlyZSgnLi9zaWduYWJsZScpXHJcbmNvbnN0IFNpZ25lZERvY3VtZW50ID0gcmVxdWlyZSgnLi9zaWduZWREb2N1bWVudCcpXHJcbmNvbnN0IFNpZ25lZFN0cmluZyA9IHJlcXVpcmUoJy4vc2lnbmVkU3RyaW5nJylcclxuY29uc3QgU2lnbmluZ0tleSA9IHJlcXVpcmUoJy4vc2lnbmluZ0tleScpXHJcbmNvbnN0IFRveklkRUFDUCA9IHJlcXVpcmUoJy4vdG96SWRFQUNQJylcclxuY29uc3QgVG96bnlPVFBFQUNQID0gcmVxdWlyZSgnLi90b3pueU9UUEVBQ1AnKVxyXG5jb25zdCBlcnJvcnMgPSByZXF1aXJlKCcuL2Vycm9ycycpXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICBBY2Nlc3NSZXF1ZXN0LFxyXG4gIEFjY2Vzc1JlcXVlc3RTZWFyY2hSZXNwb25zZSxcclxuICBBdXRob3JpemVyUG9saWN5LFxyXG4gIENhcGFiaWxpdGllcyxcclxuICBDbGllbnREZXRhaWxzLFxyXG4gIENsaWVudEluZm8sXHJcbiAgRUFLSW5mbyxcclxuICBGaWxlTWV0YSxcclxuICBHcm91cCxcclxuICBHcm91cE1lbWJlcixcclxuICBHcm91cE1lbWJlcnNoaXAsXHJcbiAgR3JvdXBNZW1iZXJzaGlwS2V5cyxcclxuICBJZGVudGl0eU1GQURldmljZXMsXHJcbiAgSW5jb21pbmdTaGFyaW5nUG9saWN5LFxyXG4gIEluaXRpYXRlV2ViQXV0aG5DaGFsbGVuZ2VEYXRhLFxyXG4gIEtleVBhaXIsXHJcbiAgTWV0YSxcclxuICBOb3RlLFxyXG4gIE5vdGVEYXRhLFxyXG4gIE5vdGVLZXlzLFxyXG4gIE5vdGVJbmZvLFxyXG4gIE5vdGVPcHRpb25zLFxyXG4gIE91dGdvaW5nU2hhcmluZ1BvbGljeSxcclxuICBQdWJsaWNLZXksXHJcbiAgUXVlcnksXHJcbiAgUXVlcnlSZXN1bHQsXHJcbiAgUmVjb3JkLFxyXG4gIFJlY29yZERhdGEsXHJcbiAgUmVjb3JkSW5mbyxcclxuICBTZWFyY2gsXHJcbiAgU2VhcmNoUGFyYW0sXHJcbiAgU2VhcmNoUmFuZ2UsXHJcbiAgU2VhcmNoUmVzdWx0LFxyXG4gIFNlcmlhbGl6YWJsZSxcclxuICBTaWduYWJsZSxcclxuICBTaWduZWREb2N1bWVudCxcclxuICBTaWduZWRTdHJpbmcsXHJcbiAgU2lnbmluZ0tleSxcclxuICBUb3pJZEVBQ1AsXHJcbiAgVG96bnlPVFBFQUNQLFxyXG4gIGVycm9ycyxcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./types/index.js\n");

/***/ }),

/***/ "./types/initiateWebAuthnChallengeData.js":
/*!************************************************!*\
  !*** ./types/initiateWebAuthnChallengeData.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { base64url } = __webpack_require__(/*! rfc4648 */ \"./node_modules/rfc4648/lib/index.js\")\r\nconst Serializable = __webpack_require__(/*! ./serializable */ \"./types/serializable.js\")\r\n\r\nclass InitiateWebAuthnChallengeData extends Serializable {\r\n  /**\r\n   * @param {string} tabId a tab id string from the server that corresponds to the session that initiated the challenge\r\n   * @param {object} challengeData the challenge data\r\n   * @param {string} challengeData.challenge\r\n   * @param {string} challengeData.rpId\r\n   * @param {string} challengeData.rpEntityName\r\n   * @param {string} challengeData.signatureAlgorithms\r\n   * @param {string} challengeData.userid\r\n   * @param {string} challengeData.username\r\n   * @param {string} challengeData.attestationConveyancePreference\r\n   * @param {string} challengeData.authenticatorAttachment\r\n   * @param {string} challengeData.requireResidentKey\r\n   * @param {string} challengeData.userVerificationRequirement\r\n   * @param {number} challengeData.createTimeout\r\n   * @param {string} challengeData.excludeCredentialIds\r\n   */\r\n  constructor(tabId, challengeData) {\r\n    super()\r\n    this.tabId = tabId\r\n    this.challengeData = challengeData\r\n  }\r\n\r\n  serializable() {\r\n    let login_context = {\r\n      challenge: this.login_context.challenge,\r\n      username: this.login_context.username,\r\n      user_id: this.login_context.userid,\r\n      attestation_conveyance_preference:\r\n        this.login_context.attestationConveyancePreference,\r\n      authenticator_attachment: this.login_context.authenticatorAttachment,\r\n      exclude_credential_ids: this.login_context.excludeCredentialIds,\r\n      require_resident_key: this.login_context.requireResidentKey,\r\n      signature_algorithms: this.login_context.signatureAlgorithms,\r\n      relying_party_id: this.login_context.rpId,\r\n      relying_party_name: this.login_context.rpEntityName,\r\n      user_verification_requirement:\r\n        this.login_context.userVerificationRequirement,\r\n      create_timeout: this.login_context.createTimeout,\r\n    }\r\n\r\n    return { tab_id: this.tab_id, login_context }\r\n  }\r\n\r\n  /**\r\n   * example json:\r\n   * {\r\n   *   \"tab_id\": \"suXnLMlUbNc\",\r\n   *   \"login_context\": {\r\n   *     \"challenge\": \"P0yk9VBLR6u7ZzpMM6nczg\",\r\n   *     \"username\": \"test-emails-group+webauth-init-test@tozny.com\",\r\n   *     \"user_id\": \"OTgxNDY0NWMtZDIwMS00MmRiLWFkYzItZjU4Y2EzZTU0MGEy\",\r\n   *     \"attestation_conveyance_preference\": \"not specified\",\r\n   *     \"authenticator_attachment\": \"not specified\",\r\n   *     \"exclude_credential_ids\": \"\",\r\n   *     \"require_resident_key\": \"not specified\",\r\n   *     \"signature_algorithms\": \"-7\",\r\n   *     \"relying_party_id\": \"id.tozny.com\",\r\n   *     \"relying_party_name\": \"tozny\",\r\n   *     \"user_verification_requirement\": \"not specified\",\r\n   *     \"create_timeout\": 0\r\n   *   }\r\n   * }\r\n   */\r\n  static decode(json) {\r\n    const challengeData = {\r\n      challenge: json.login_context.challenge,\r\n      username: json.login_context.username,\r\n      userid: json.login_context.user_id,\r\n      attestationConveyancePreference:\r\n        json.login_context.attestation_conveyance_preference,\r\n      authenticatorAttachment: json.login_context.authenticator_attachment,\r\n      excludeCredentialIds: json.login_context.exclude_credential_ids,\r\n      requireResidentKey: json.login_context.require_resident_key,\r\n      signatureAlgorithms: json.login_context.signature_algorithms,\r\n      rpId: json.login_context.relying_party_id,\r\n      rpEntityName: json.login_context.relying_party_name,\r\n      userVerificationRequirement:\r\n        json.login_context.user_verification_requirement,\r\n      createTimeout: json.login_context.create_timeout,\r\n    }\r\n\r\n    // default to \"discouraged\" for better cross-platform UX\r\n    if (challengeData.userVerificationRequirement === 'not specified') {\r\n      challengeData.userVerificationRequirement = 'discouraged'\r\n    }\r\n\r\n    return new InitiateWebAuthnChallengeData(json.tab_id, challengeData)\r\n  }\r\n\r\n  /**\r\n   * converts the challenge data into the object passed to `navigator.credentials.create` API\r\n   * inspired by https://github.com/keycloak/keycloak/blob/e23969/themes/src/main/resources/theme/base/login/webauthn-register.ftl#L24\r\n   * @returns {PublicKeyCredentialCreationOptions} the public key credential creation options to pass to navigator api\r\n   */\r\n  toPublicKeyCredentialCreationOptions() {\r\n    const {\r\n      challenge,\r\n      rpEntityName,\r\n      rpId,\r\n      signatureAlgorithms,\r\n      userid,\r\n      username,\r\n      // optional parameters\r\n      attestationConveyancePreference,\r\n      authenticatorAttachment,\r\n      requireResidentKey,\r\n      userVerificationRequirement,\r\n      createTimeout,\r\n      excludeCredentialIds,\r\n    } = this.challengeData\r\n\r\n    const publicKey = {\r\n      challenge: base64url.parse(challenge, { loose: true }),\r\n      rp: { id: rpId, name: rpEntityName },\r\n      user: {\r\n        id: base64url.parse(userid, { loose: true }),\r\n        name: username,\r\n        displayName: username,\r\n      },\r\n      pubKeyCredParams: getPubKeyCredParams(signatureAlgorithms),\r\n    }\r\n\r\n    // handle optional parameters for future-proofing webauthn policy changes\r\n    if (attestationConveyancePreference !== 'not specified')\r\n      publicKey.attestation = attestationConveyancePreference\r\n\r\n    let authenticatorSelection = {}\r\n    let isAuthenticatorSelectionSpecified = false\r\n\r\n    if (authenticatorAttachment !== 'not specified') {\r\n      authenticatorSelection.authenticatorAttachment = authenticatorAttachment\r\n      isAuthenticatorSelectionSpecified = true\r\n    }\r\n\r\n    if (requireResidentKey !== 'not specified') {\r\n      if (requireResidentKey === 'Yes')\r\n        authenticatorSelection.requireResidentKey = true\r\n      else authenticatorSelection.requireResidentKey = false\r\n      isAuthenticatorSelectionSpecified = true\r\n    }\r\n\r\n    if (userVerificationRequirement !== 'not specified') {\r\n      authenticatorSelection.userVerification = userVerificationRequirement\r\n      isAuthenticatorSelectionSpecified = true\r\n    }\r\n\r\n    if (isAuthenticatorSelectionSpecified)\r\n      publicKey.authenticatorSelection = authenticatorSelection\r\n\r\n    if (createTimeout != 0) publicKey.timeout = createTimeout * 1000\r\n\r\n    const excludeCredentials = getExcludeCredentials(excludeCredentialIds)\r\n    if (excludeCredentials.length > 0)\r\n      publicKey.excludeCredentials = excludeCredentials\r\n\r\n    return publicKey\r\n  }\r\n\r\n  /**\r\n   * This helper function is used to convert the registration data from a hardware security key into\r\n   * the structure & encoding used by Tozny's WebAuthn registration API.\r\n   * @param {PublicKeyCredential} publicKeyCredential this is the response from a call to `navigator.credentials.create`\r\n   * @param {string} deviceName a name for this device.\r\n   */\r\n  static convertPublicKeyCredentialToRegistrationData(\r\n    publicKeyCredential,\r\n    deviceName\r\n  ) {\r\n    return {\r\n      client_data_json: b64urlEncode(\r\n        publicKeyCredential.response.clientDataJSON\r\n      ),\r\n      attestation_object: b64urlEncode(\r\n        publicKeyCredential.response.attestationObject\r\n      ),\r\n      public_key_credential_id: b64urlEncode(publicKeyCredential.rawId),\r\n      authenticator_label: deviceName,\r\n    }\r\n  }\r\n}\r\n\r\n// https://github.com/keycloak/keycloak/blob/e23969/themes/src/main/resources/theme/base/login/webauthn-register.ftl#L113\r\nfunction getPubKeyCredParams(signatureAlgorithms) {\r\n  const pubKeyCredParams = []\r\n  if (signatureAlgorithms === '') {\r\n    pubKeyCredParams.push({ type: 'public-key', alg: -7 })\r\n    return pubKeyCredParams\r\n  }\r\n  const signatureAlgorithmsList = signatureAlgorithms.split(',')\r\n\r\n  for (let i = 0; i < signatureAlgorithmsList.length; i++) {\r\n    pubKeyCredParams.push({\r\n      type: 'public-key',\r\n      alg: signatureAlgorithmsList[i],\r\n    })\r\n  }\r\n  return pubKeyCredParams\r\n}\r\n\r\n// https://github.com/keycloak/keycloak/blob/e23969/themes/src/main/resources/theme/base/login/webauthn-register.ftl#L130\r\nfunction getExcludeCredentials(excludeCredentialIds) {\r\n  let excludeCredentials = []\r\n  if (excludeCredentialIds === '') return excludeCredentials\r\n\r\n  let excludeCredentialIdsList = excludeCredentialIds.split(',')\r\n\r\n  for (let i = 0; i < excludeCredentialIdsList.length; i++) {\r\n    excludeCredentials.push({\r\n      type: 'public-key',\r\n      id: Buffer.from(excludeCredentialIdsList[i], 'base64'),\r\n    })\r\n  }\r\n  return excludeCredentials\r\n}\r\n\r\n/**\r\n * converts a string to a base64url encoded string of the byte array\r\n * a helper func for webauthn registration data construction.\r\n */\r\nfunction b64urlEncode(str) {\r\n  const bytes = new Uint8Array(str)\r\n  return base64url.stringify(bytes)\r\n}\r\n\r\nmodule.exports = InitiateWebAuthnChallengeData\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./types/initiateWebAuthnChallengeData.js\n");

/***/ }),

/***/ "./types/keyPair.js":
/*!**************************!*\
  !*** ./types/keyPair.js ***!
  \**************************/
/***/ ((module) => {

eval("/**\r\n * Base64URL encoded representation of a public/private keypair\r\n *\r\n * @property {string} publicKey  Base64URL encoded public key component\r\n * @property {string} privateKey Base64URL encoded private key component\r\n */\r\nclass KeyPair {\r\n  constructor(publicKey, privateKey) {\r\n    this.publicKey = publicKey\r\n    this.privateKey = privateKey\r\n  }\r\n}\r\n\r\nmodule.exports = KeyPair\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9rZXlQYWlyLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdG96bnlzZWN1cmUvc2RrLy4vdHlwZXMva2V5UGFpci5qcz84YmQzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBCYXNlNjRVUkwgZW5jb2RlZCByZXByZXNlbnRhdGlvbiBvZiBhIHB1YmxpYy9wcml2YXRlIGtleXBhaXJcclxuICpcclxuICogQHByb3BlcnR5IHtzdHJpbmd9IHB1YmxpY0tleSAgQmFzZTY0VVJMIGVuY29kZWQgcHVibGljIGtleSBjb21wb25lbnRcclxuICogQHByb3BlcnR5IHtzdHJpbmd9IHByaXZhdGVLZXkgQmFzZTY0VVJMIGVuY29kZWQgcHJpdmF0ZSBrZXkgY29tcG9uZW50XHJcbiAqL1xyXG5jbGFzcyBLZXlQYWlyIHtcclxuICBjb25zdHJ1Y3RvcihwdWJsaWNLZXksIHByaXZhdGVLZXkpIHtcclxuICAgIHRoaXMucHVibGljS2V5ID0gcHVibGljS2V5XHJcbiAgICB0aGlzLnByaXZhdGVLZXkgPSBwcml2YXRlS2V5XHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IEtleVBhaXJcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./types/keyPair.js\n");

/***/ }),

/***/ "./types/lastAccessEACP.js":
/*!*********************************!*\
  !*** ./types/lastAccessEACP.js ***!
  \*********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Serializable = __webpack_require__(/*! ./serializable */ \"./types/serializable.js\")\r\n\r\n/**\r\n * Configuration for an extended access control policy based on the last access time of another note.\r\n */\r\nclass LastAccessEACP extends Serializable {\r\n  /**\r\n   * The key used to identify this EACP in a JSON object.\r\n   *\r\n   * @return {String} the EACP key.\r\n   */\r\n  static get jsonKey() {\r\n    return 'last_access_eacp'\r\n  }\r\n\r\n  /**\r\n   * Configuration for an email based OTP EACP.\r\n   *\r\n   * @param {string} lastReadNoteId The ID of the note which must be accessed\r\n   *                                before allowing access to the protected data object.\r\n   */\r\n  constructor(lastReadNoteId) {\r\n    super()\r\n    this.lastReadNoteId = lastReadNoteId\r\n  }\r\n\r\n  /**\r\n   * Create a plain object representation of the last access EACP. Used for JSON serialization.\r\n   *\r\n   * @return {Object} A plain JS object representing the last access EACP configuration.\r\n   */\r\n  serializable() {\r\n    /* eslint-disable camelcase */\r\n    let toSerialize = {\r\n      last_read_note_id: this.lastReadNoteId,\r\n    }\r\n    /* eslint-enable */\r\n    return toSerialize\r\n  }\r\n\r\n  /**\r\n   * Create a new LastAccessEACP instance from a Javascript object.\r\n   *\r\n   * @param {Object} json A plain JS object containing the needed LastAccessEACP configuration.\r\n   *\r\n   * @return {LastAccessEACP} The constructed LastAccessEACP object based on the passed JS object.\r\n   */\r\n  static decode(json) {\r\n    return new LastAccessEACP(json.last_read_note_id)\r\n  }\r\n}\r\n\r\nmodule.exports = LastAccessEACP\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9sYXN0QWNjZXNzRUFDUC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHRvem55c2VjdXJlL3Nkay8uL3R5cGVzL2xhc3RBY2Nlc3NFQUNQLmpzP2RkYTkiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VyaWFsaXphYmxlID0gcmVxdWlyZSgnLi9zZXJpYWxpemFibGUnKVxyXG5cclxuLyoqXHJcbiAqIENvbmZpZ3VyYXRpb24gZm9yIGFuIGV4dGVuZGVkIGFjY2VzcyBjb250cm9sIHBvbGljeSBiYXNlZCBvbiB0aGUgbGFzdCBhY2Nlc3MgdGltZSBvZiBhbm90aGVyIG5vdGUuXHJcbiAqL1xyXG5jbGFzcyBMYXN0QWNjZXNzRUFDUCBleHRlbmRzIFNlcmlhbGl6YWJsZSB7XHJcbiAgLyoqXHJcbiAgICogVGhlIGtleSB1c2VkIHRvIGlkZW50aWZ5IHRoaXMgRUFDUCBpbiBhIEpTT04gb2JqZWN0LlxyXG4gICAqXHJcbiAgICogQHJldHVybiB7U3RyaW5nfSB0aGUgRUFDUCBrZXkuXHJcbiAgICovXHJcbiAgc3RhdGljIGdldCBqc29uS2V5KCkge1xyXG4gICAgcmV0dXJuICdsYXN0X2FjY2Vzc19lYWNwJ1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ29uZmlndXJhdGlvbiBmb3IgYW4gZW1haWwgYmFzZWQgT1RQIEVBQ1AuXHJcbiAgICpcclxuICAgKiBAcGFyYW0ge3N0cmluZ30gbGFzdFJlYWROb3RlSWQgVGhlIElEIG9mIHRoZSBub3RlIHdoaWNoIG11c3QgYmUgYWNjZXNzZWRcclxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmVmb3JlIGFsbG93aW5nIGFjY2VzcyB0byB0aGUgcHJvdGVjdGVkIGRhdGEgb2JqZWN0LlxyXG4gICAqL1xyXG4gIGNvbnN0cnVjdG9yKGxhc3RSZWFkTm90ZUlkKSB7XHJcbiAgICBzdXBlcigpXHJcbiAgICB0aGlzLmxhc3RSZWFkTm90ZUlkID0gbGFzdFJlYWROb3RlSWRcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIENyZWF0ZSBhIHBsYWluIG9iamVjdCByZXByZXNlbnRhdGlvbiBvZiB0aGUgbGFzdCBhY2Nlc3MgRUFDUC4gVXNlZCBmb3IgSlNPTiBzZXJpYWxpemF0aW9uLlxyXG4gICAqXHJcbiAgICogQHJldHVybiB7T2JqZWN0fSBBIHBsYWluIEpTIG9iamVjdCByZXByZXNlbnRpbmcgdGhlIGxhc3QgYWNjZXNzIEVBQ1AgY29uZmlndXJhdGlvbi5cclxuICAgKi9cclxuICBzZXJpYWxpemFibGUoKSB7XHJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSBjYW1lbGNhc2UgKi9cclxuICAgIGxldCB0b1NlcmlhbGl6ZSA9IHtcclxuICAgICAgbGFzdF9yZWFkX25vdGVfaWQ6IHRoaXMubGFzdFJlYWROb3RlSWQsXHJcbiAgICB9XHJcbiAgICAvKiBlc2xpbnQtZW5hYmxlICovXHJcbiAgICByZXR1cm4gdG9TZXJpYWxpemVcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIENyZWF0ZSBhIG5ldyBMYXN0QWNjZXNzRUFDUCBpbnN0YW5jZSBmcm9tIGEgSmF2YXNjcmlwdCBvYmplY3QuXHJcbiAgICpcclxuICAgKiBAcGFyYW0ge09iamVjdH0ganNvbiBBIHBsYWluIEpTIG9iamVjdCBjb250YWluaW5nIHRoZSBuZWVkZWQgTGFzdEFjY2Vzc0VBQ1AgY29uZmlndXJhdGlvbi5cclxuICAgKlxyXG4gICAqIEByZXR1cm4ge0xhc3RBY2Nlc3NFQUNQfSBUaGUgY29uc3RydWN0ZWQgTGFzdEFjY2Vzc0VBQ1Agb2JqZWN0IGJhc2VkIG9uIHRoZSBwYXNzZWQgSlMgb2JqZWN0LlxyXG4gICAqL1xyXG4gIHN0YXRpYyBkZWNvZGUoanNvbikge1xyXG4gICAgcmV0dXJuIG5ldyBMYXN0QWNjZXNzRUFDUChqc29uLmxhc3RfcmVhZF9ub3RlX2lkKVxyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBMYXN0QWNjZXNzRUFDUFxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./types/lastAccessEACP.js\n");

/***/ }),

/***/ "./types/meta.js":
/*!***********************!*\
  !*** ./types/meta.js ***!
  \***********************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Serializable = __webpack_require__(/*! ./serializable */ \"./types/serializable.js\")\r\nconst FileMeta = __webpack_require__(/*! ./fileMeta */ \"./types/fileMeta.js\")\r\n\r\n/**\r\n * Describe the meta information attributed to a specific encrypted record.\r\n *\r\n * @property {string} recordId     Unique ID of the record, or `null` if not yet written\r\n * @property {string} writerId     Unique ID of the writer of the record\r\n * @property {string} userId       Unique ID of the subject/user the record is about\r\n * @property {string} type         Free-form description of thr record content type\r\n * @property {object} plain        Map of String->String values describing the record's plaintext meta\r\n * @property {Date}   created      When this record was created, or `null` if unavailable.\r\n * @property {Date}   lastModified When this record last changed, or `null` if unavailable.\r\n * @property {string} version      Opaque version identifier created by the server on changes.\r\n */\r\nclass Meta extends Serializable {\r\n  constructor(writerId, userId, type, plain) {\r\n    super()\r\n\r\n    this.recordId = null\r\n    this.writerId = writerId\r\n    this.userId = userId\r\n    this.type = type\r\n    this.plain = plain\r\n    this.created = null\r\n    this.lastModified = null\r\n    this.version = null\r\n    this.fileMeta = null\r\n  }\r\n\r\n  /* eslint-disable camelcase */\r\n\r\n  /**\r\n   * Generate a JSON.stringify-friendly version of the object\r\n   * automatically omitting any `null` fields.\r\n   *\r\n   * @returns {object}\r\n   */\r\n  serializable() {\r\n    let toSerialize = {\r\n      record_id: this.recordId,\r\n      writer_id: this.writerId,\r\n      user_id: this.userId,\r\n      type: this.type,\r\n      created: this.created,\r\n      last_modified: this.lastModified,\r\n      version: this.version,\r\n    }\r\n\r\n    // Ensure that plain is always an object, even it it's set to null\r\n    if (this.plain === null) {\r\n      toSerialize.plain = {}\r\n    } else {\r\n      toSerialize.plain = this.plain\r\n    }\r\n\r\n    // If file meta is present, serialize it\r\n    if (this.fileMeta instanceof FileMeta) {\r\n      toSerialize.file_meta = this.fileMeta.serializable()\r\n    }\r\n\r\n    for (let key in toSerialize) {\r\n      // eslint-disable-next-line no-prototype-builtins\r\n      if (toSerialize.hasOwnProperty(key)) {\r\n        if (toSerialize[key] === null) {\r\n          delete toSerialize[key]\r\n        }\r\n      }\r\n    }\r\n\r\n    return toSerialize\r\n  }\r\n\r\n  /* eslint-enable */\r\n\r\n  /**\r\n   * Specify how an already unserialized JSON array should be marshaled into\r\n   * an object representation.\r\n   *\r\n   * Meta objects consist of both mutable and immutable information describing\r\n   * the record to which they're attached. Ownership, type, and datetime information\r\n   * is fixed and only updated by the server, but the plaintext fields attributed\r\n   * to a record can be controlled by the user. This mutable field is a map of\r\n   * strings to strings (a JSON object) and is stored in plaintext on the\r\n   * server. The array expected for deserializing back into an object requires:\r\n   *\r\n   * <code>\r\n   * const meta = Meta.decode({\r\n   *   writer_id: '',\r\n   *   record_id: '',\r\n   *   user_id: '',\r\n   *   type: '',\r\n   *   plain: {},\r\n   *   created: '',\r\n   *   last_modified: '',\r\n   *   version: '',\r\n   *   file_meta: {} // or null/undefined\r\n   * });\r\n   * </code>\r\n   *\r\n   * @param {object} json\r\n   *\r\n   * @return {Promise<Meta>}\r\n   */\r\n  static decode(json) {\r\n    let meta = new Meta(json.writer_id, json.user_id, json.type, json.plain)\r\n\r\n    if (json.created === undefined || json.created === null) {\r\n      meta.created = null\r\n    } else {\r\n      meta.created = new Date(json.created)\r\n    }\r\n    if (json.last_modified === undefined || json.last_modified === null) {\r\n      meta.lastModified = null\r\n    } else {\r\n      meta.lastModified = new Date(json.last_modified)\r\n    }\r\n\r\n    if (typeof json.file_meta !== 'object') {\r\n      meta.fileMeta = null\r\n    } else {\r\n      meta.fileMeta = FileMeta.decode(json.file_meta)\r\n    }\r\n\r\n    meta.recordId = json.record_id || null\r\n    meta.version = json.version || null\r\n\r\n    return Promise.resolve(meta)\r\n  }\r\n}\r\n\r\nmodule.exports = Meta\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9tZXRhLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B0b3pueXNlY3VyZS9zZGsvLi90eXBlcy9tZXRhLmpzP2Y2YWYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VyaWFsaXphYmxlID0gcmVxdWlyZSgnLi9zZXJpYWxpemFibGUnKVxyXG5jb25zdCBGaWxlTWV0YSA9IHJlcXVpcmUoJy4vZmlsZU1ldGEnKVxyXG5cclxuLyoqXHJcbiAqIERlc2NyaWJlIHRoZSBtZXRhIGluZm9ybWF0aW9uIGF0dHJpYnV0ZWQgdG8gYSBzcGVjaWZpYyBlbmNyeXB0ZWQgcmVjb3JkLlxyXG4gKlxyXG4gKiBAcHJvcGVydHkge3N0cmluZ30gcmVjb3JkSWQgICAgIFVuaXF1ZSBJRCBvZiB0aGUgcmVjb3JkLCBvciBgbnVsbGAgaWYgbm90IHlldCB3cml0dGVuXHJcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSB3cml0ZXJJZCAgICAgVW5pcXVlIElEIG9mIHRoZSB3cml0ZXIgb2YgdGhlIHJlY29yZFxyXG4gKiBAcHJvcGVydHkge3N0cmluZ30gdXNlcklkICAgICAgIFVuaXF1ZSBJRCBvZiB0aGUgc3ViamVjdC91c2VyIHRoZSByZWNvcmQgaXMgYWJvdXRcclxuICogQHByb3BlcnR5IHtzdHJpbmd9IHR5cGUgICAgICAgICBGcmVlLWZvcm0gZGVzY3JpcHRpb24gb2YgdGhyIHJlY29yZCBjb250ZW50IHR5cGVcclxuICogQHByb3BlcnR5IHtvYmplY3R9IHBsYWluICAgICAgICBNYXAgb2YgU3RyaW5nLT5TdHJpbmcgdmFsdWVzIGRlc2NyaWJpbmcgdGhlIHJlY29yZCdzIHBsYWludGV4dCBtZXRhXHJcbiAqIEBwcm9wZXJ0eSB7RGF0ZX0gICBjcmVhdGVkICAgICAgV2hlbiB0aGlzIHJlY29yZCB3YXMgY3JlYXRlZCwgb3IgYG51bGxgIGlmIHVuYXZhaWxhYmxlLlxyXG4gKiBAcHJvcGVydHkge0RhdGV9ICAgbGFzdE1vZGlmaWVkIFdoZW4gdGhpcyByZWNvcmQgbGFzdCBjaGFuZ2VkLCBvciBgbnVsbGAgaWYgdW5hdmFpbGFibGUuXHJcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSB2ZXJzaW9uICAgICAgT3BhcXVlIHZlcnNpb24gaWRlbnRpZmllciBjcmVhdGVkIGJ5IHRoZSBzZXJ2ZXIgb24gY2hhbmdlcy5cclxuICovXHJcbmNsYXNzIE1ldGEgZXh0ZW5kcyBTZXJpYWxpemFibGUge1xyXG4gIGNvbnN0cnVjdG9yKHdyaXRlcklkLCB1c2VySWQsIHR5cGUsIHBsYWluKSB7XHJcbiAgICBzdXBlcigpXHJcblxyXG4gICAgdGhpcy5yZWNvcmRJZCA9IG51bGxcclxuICAgIHRoaXMud3JpdGVySWQgPSB3cml0ZXJJZFxyXG4gICAgdGhpcy51c2VySWQgPSB1c2VySWRcclxuICAgIHRoaXMudHlwZSA9IHR5cGVcclxuICAgIHRoaXMucGxhaW4gPSBwbGFpblxyXG4gICAgdGhpcy5jcmVhdGVkID0gbnVsbFxyXG4gICAgdGhpcy5sYXN0TW9kaWZpZWQgPSBudWxsXHJcbiAgICB0aGlzLnZlcnNpb24gPSBudWxsXHJcbiAgICB0aGlzLmZpbGVNZXRhID0gbnVsbFxyXG4gIH1cclxuXHJcbiAgLyogZXNsaW50LWRpc2FibGUgY2FtZWxjYXNlICovXHJcblxyXG4gIC8qKlxyXG4gICAqIEdlbmVyYXRlIGEgSlNPTi5zdHJpbmdpZnktZnJpZW5kbHkgdmVyc2lvbiBvZiB0aGUgb2JqZWN0XHJcbiAgICogYXV0b21hdGljYWxseSBvbWl0dGluZyBhbnkgYG51bGxgIGZpZWxkcy5cclxuICAgKlxyXG4gICAqIEByZXR1cm5zIHtvYmplY3R9XHJcbiAgICovXHJcbiAgc2VyaWFsaXphYmxlKCkge1xyXG4gICAgbGV0IHRvU2VyaWFsaXplID0ge1xyXG4gICAgICByZWNvcmRfaWQ6IHRoaXMucmVjb3JkSWQsXHJcbiAgICAgIHdyaXRlcl9pZDogdGhpcy53cml0ZXJJZCxcclxuICAgICAgdXNlcl9pZDogdGhpcy51c2VySWQsXHJcbiAgICAgIHR5cGU6IHRoaXMudHlwZSxcclxuICAgICAgY3JlYXRlZDogdGhpcy5jcmVhdGVkLFxyXG4gICAgICBsYXN0X21vZGlmaWVkOiB0aGlzLmxhc3RNb2RpZmllZCxcclxuICAgICAgdmVyc2lvbjogdGhpcy52ZXJzaW9uLFxyXG4gICAgfVxyXG5cclxuICAgIC8vIEVuc3VyZSB0aGF0IHBsYWluIGlzIGFsd2F5cyBhbiBvYmplY3QsIGV2ZW4gaXQgaXQncyBzZXQgdG8gbnVsbFxyXG4gICAgaWYgKHRoaXMucGxhaW4gPT09IG51bGwpIHtcclxuICAgICAgdG9TZXJpYWxpemUucGxhaW4gPSB7fVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdG9TZXJpYWxpemUucGxhaW4gPSB0aGlzLnBsYWluXHJcbiAgICB9XHJcblxyXG4gICAgLy8gSWYgZmlsZSBtZXRhIGlzIHByZXNlbnQsIHNlcmlhbGl6ZSBpdFxyXG4gICAgaWYgKHRoaXMuZmlsZU1ldGEgaW5zdGFuY2VvZiBGaWxlTWV0YSkge1xyXG4gICAgICB0b1NlcmlhbGl6ZS5maWxlX21ldGEgPSB0aGlzLmZpbGVNZXRhLnNlcmlhbGl6YWJsZSgpXHJcbiAgICB9XHJcblxyXG4gICAgZm9yIChsZXQga2V5IGluIHRvU2VyaWFsaXplKSB7XHJcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wcm90b3R5cGUtYnVpbHRpbnNcclxuICAgICAgaWYgKHRvU2VyaWFsaXplLmhhc093blByb3BlcnR5KGtleSkpIHtcclxuICAgICAgICBpZiAodG9TZXJpYWxpemVba2V5XSA9PT0gbnVsbCkge1xyXG4gICAgICAgICAgZGVsZXRlIHRvU2VyaWFsaXplW2tleV1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gdG9TZXJpYWxpemVcclxuICB9XHJcblxyXG4gIC8qIGVzbGludC1lbmFibGUgKi9cclxuXHJcbiAgLyoqXHJcbiAgICogU3BlY2lmeSBob3cgYW4gYWxyZWFkeSB1bnNlcmlhbGl6ZWQgSlNPTiBhcnJheSBzaG91bGQgYmUgbWFyc2hhbGVkIGludG9cclxuICAgKiBhbiBvYmplY3QgcmVwcmVzZW50YXRpb24uXHJcbiAgICpcclxuICAgKiBNZXRhIG9iamVjdHMgY29uc2lzdCBvZiBib3RoIG11dGFibGUgYW5kIGltbXV0YWJsZSBpbmZvcm1hdGlvbiBkZXNjcmliaW5nXHJcbiAgICogdGhlIHJlY29yZCB0byB3aGljaCB0aGV5J3JlIGF0dGFjaGVkLiBPd25lcnNoaXAsIHR5cGUsIGFuZCBkYXRldGltZSBpbmZvcm1hdGlvblxyXG4gICAqIGlzIGZpeGVkIGFuZCBvbmx5IHVwZGF0ZWQgYnkgdGhlIHNlcnZlciwgYnV0IHRoZSBwbGFpbnRleHQgZmllbGRzIGF0dHJpYnV0ZWRcclxuICAgKiB0byBhIHJlY29yZCBjYW4gYmUgY29udHJvbGxlZCBieSB0aGUgdXNlci4gVGhpcyBtdXRhYmxlIGZpZWxkIGlzIGEgbWFwIG9mXHJcbiAgICogc3RyaW5ncyB0byBzdHJpbmdzIChhIEpTT04gb2JqZWN0KSBhbmQgaXMgc3RvcmVkIGluIHBsYWludGV4dCBvbiB0aGVcclxuICAgKiBzZXJ2ZXIuIFRoZSBhcnJheSBleHBlY3RlZCBmb3IgZGVzZXJpYWxpemluZyBiYWNrIGludG8gYW4gb2JqZWN0IHJlcXVpcmVzOlxyXG4gICAqXHJcbiAgICogPGNvZGU+XHJcbiAgICogY29uc3QgbWV0YSA9IE1ldGEuZGVjb2RlKHtcclxuICAgKiAgIHdyaXRlcl9pZDogJycsXHJcbiAgICogICByZWNvcmRfaWQ6ICcnLFxyXG4gICAqICAgdXNlcl9pZDogJycsXHJcbiAgICogICB0eXBlOiAnJyxcclxuICAgKiAgIHBsYWluOiB7fSxcclxuICAgKiAgIGNyZWF0ZWQ6ICcnLFxyXG4gICAqICAgbGFzdF9tb2RpZmllZDogJycsXHJcbiAgICogICB2ZXJzaW9uOiAnJyxcclxuICAgKiAgIGZpbGVfbWV0YToge30gLy8gb3IgbnVsbC91bmRlZmluZWRcclxuICAgKiB9KTtcclxuICAgKiA8L2NvZGU+XHJcbiAgICpcclxuICAgKiBAcGFyYW0ge29iamVjdH0ganNvblxyXG4gICAqXHJcbiAgICogQHJldHVybiB7UHJvbWlzZTxNZXRhPn1cclxuICAgKi9cclxuICBzdGF0aWMgZGVjb2RlKGpzb24pIHtcclxuICAgIGxldCBtZXRhID0gbmV3IE1ldGEoanNvbi53cml0ZXJfaWQsIGpzb24udXNlcl9pZCwganNvbi50eXBlLCBqc29uLnBsYWluKVxyXG5cclxuICAgIGlmIChqc29uLmNyZWF0ZWQgPT09IHVuZGVmaW5lZCB8fCBqc29uLmNyZWF0ZWQgPT09IG51bGwpIHtcclxuICAgICAgbWV0YS5jcmVhdGVkID0gbnVsbFxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgbWV0YS5jcmVhdGVkID0gbmV3IERhdGUoanNvbi5jcmVhdGVkKVxyXG4gICAgfVxyXG4gICAgaWYgKGpzb24ubGFzdF9tb2RpZmllZCA9PT0gdW5kZWZpbmVkIHx8IGpzb24ubGFzdF9tb2RpZmllZCA9PT0gbnVsbCkge1xyXG4gICAgICBtZXRhLmxhc3RNb2RpZmllZCA9IG51bGxcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIG1ldGEubGFzdE1vZGlmaWVkID0gbmV3IERhdGUoanNvbi5sYXN0X21vZGlmaWVkKVxyXG4gICAgfVxyXG5cclxuICAgIGlmICh0eXBlb2YganNvbi5maWxlX21ldGEgIT09ICdvYmplY3QnKSB7XHJcbiAgICAgIG1ldGEuZmlsZU1ldGEgPSBudWxsXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBtZXRhLmZpbGVNZXRhID0gRmlsZU1ldGEuZGVjb2RlKGpzb24uZmlsZV9tZXRhKVxyXG4gICAgfVxyXG5cclxuICAgIG1ldGEucmVjb3JkSWQgPSBqc29uLnJlY29yZF9pZCB8fCBudWxsXHJcbiAgICBtZXRhLnZlcnNpb24gPSBqc29uLnZlcnNpb24gfHwgbnVsbFxyXG5cclxuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUobWV0YSlcclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gTWV0YVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./types/meta.js\n");

/***/ }),

/***/ "./types/note.js":
/*!***********************!*\
  !*** ./types/note.js ***!
  \***********************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const NoteKeys = __webpack_require__(/*! ./noteKeys */ \"./types/noteKeys.js\")\r\nconst NoteOptions = __webpack_require__(/*! ./noteOptions */ \"./types/noteOptions.js\")\r\nconst EACP = __webpack_require__(/*! ./eacp */ \"./types/eacp.js\")\r\nconst Serializable = __webpack_require__(/*! ./serializable */ \"./types/serializable.js\")\r\n\r\nclass Note extends Serializable {\r\n  constructor(data, noteKeys, signature, options) {\r\n    super()\r\n    // Required values\r\n    this.data = data\r\n    // Key values\r\n    this.mode = noteKeys.mode\r\n    this.recipientSigningKey = noteKeys.recipientSigningKey\r\n    this.writerEncryptionKey = noteKeys.writerEncryptionKey\r\n    this.writerSigningKey = noteKeys.writerSigningKey\r\n    this.encryptedAccessKey = noteKeys.encryptedAccessKey\r\n    // Verification signature\r\n    this.signature = signature\r\n    // Optional values\r\n    this.options = options\r\n    this.createdAt = null // Server defined value, not available until creation.\r\n    this.noteId = null\r\n  }\r\n\r\n  serializable() {\r\n    /* eslint-disable camelcase */\r\n    let toSerialize = {\r\n      data: this.data,\r\n      mode: this.mode,\r\n      recipient_signing_key: this.recipientSigningKey,\r\n      writer_signing_key: this.writerSigningKey,\r\n      writer_encryption_key: this.writerEncryptionKey,\r\n      encrypted_access_key: this.encryptedAccessKey,\r\n      signature: this.signature,\r\n      type: this.options.type,\r\n      plain: this.options.plain,\r\n      file_meta: this.options.fileMeta,\r\n      max_views: this.options.maxViews,\r\n      client_id: this.options.clientId,\r\n      id_string: this.options.idString,\r\n      expiration: this.options.expiration,\r\n      expires: this.options.expires,\r\n      eacp: this.options.eacp,\r\n      created_at: this.createdAt,\r\n      note_id: this.noteId,\r\n    }\r\n    // Ensure that fileMeta is always an object, even it it's set to null\r\n    if (this.options.fileMeta === null) {\r\n      toSerialize.file_meta = {}\r\n    } else {\r\n      toSerialize.file_meta = this.options.fileMeta\r\n    }\r\n    /* eslint-enable */\r\n    // Ensure that plain is always an object, even it it's set to null\r\n    if (this.options.plain === null) {\r\n      toSerialize.plain = {}\r\n    } else {\r\n      toSerialize.plain = this.options.plain\r\n    }\r\n\r\n    if (this.options.eacp instanceof EACP) {\r\n      toSerialize.eacp = this.options.eacp.serializable()\r\n    }\r\n    const serializedKeys = Object.keys(toSerialize)\r\n    for (const key of serializedKeys) {\r\n      if (toSerialize[key] === null) {\r\n        delete toSerialize[key]\r\n      }\r\n    }\r\n    return toSerialize\r\n  }\r\n\r\n  static decode(json) {\r\n    let data = json.data === undefined ? null : json.data\r\n    let options = NoteOptions.decode(json)\r\n    let noteKeys = NoteKeys.decode(json)\r\n    let signature = json.signature === undefined ? null : json.signature\r\n    var note = new Note(data, noteKeys, signature, options)\r\n\r\n    // Server defined values\r\n    let createdAt = json.created_at === null ? null : json.created_at\r\n    let noteId = json.note_id === null ? null : json.note_id\r\n    note.createdAt = createdAt\r\n    note.noteId = noteId\r\n    return note\r\n  }\r\n\r\n  static clone(note) {\r\n    let jsonNote = note.serializable()\r\n    let cloneNote = Note.decode(jsonNote)\r\n    return cloneNote\r\n  }\r\n}\r\n\r\nmodule.exports = Note\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9ub3RlLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdG96bnlzZWN1cmUvc2RrLy4vdHlwZXMvbm90ZS5qcz9lM2ZmIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IE5vdGVLZXlzID0gcmVxdWlyZSgnLi9ub3RlS2V5cycpXHJcbmNvbnN0IE5vdGVPcHRpb25zID0gcmVxdWlyZSgnLi9ub3RlT3B0aW9ucycpXHJcbmNvbnN0IEVBQ1AgPSByZXF1aXJlKCcuL2VhY3AnKVxyXG5jb25zdCBTZXJpYWxpemFibGUgPSByZXF1aXJlKCcuL3NlcmlhbGl6YWJsZScpXHJcblxyXG5jbGFzcyBOb3RlIGV4dGVuZHMgU2VyaWFsaXphYmxlIHtcclxuICBjb25zdHJ1Y3RvcihkYXRhLCBub3RlS2V5cywgc2lnbmF0dXJlLCBvcHRpb25zKSB7XHJcbiAgICBzdXBlcigpXHJcbiAgICAvLyBSZXF1aXJlZCB2YWx1ZXNcclxuICAgIHRoaXMuZGF0YSA9IGRhdGFcclxuICAgIC8vIEtleSB2YWx1ZXNcclxuICAgIHRoaXMubW9kZSA9IG5vdGVLZXlzLm1vZGVcclxuICAgIHRoaXMucmVjaXBpZW50U2lnbmluZ0tleSA9IG5vdGVLZXlzLnJlY2lwaWVudFNpZ25pbmdLZXlcclxuICAgIHRoaXMud3JpdGVyRW5jcnlwdGlvbktleSA9IG5vdGVLZXlzLndyaXRlckVuY3J5cHRpb25LZXlcclxuICAgIHRoaXMud3JpdGVyU2lnbmluZ0tleSA9IG5vdGVLZXlzLndyaXRlclNpZ25pbmdLZXlcclxuICAgIHRoaXMuZW5jcnlwdGVkQWNjZXNzS2V5ID0gbm90ZUtleXMuZW5jcnlwdGVkQWNjZXNzS2V5XHJcbiAgICAvLyBWZXJpZmljYXRpb24gc2lnbmF0dXJlXHJcbiAgICB0aGlzLnNpZ25hdHVyZSA9IHNpZ25hdHVyZVxyXG4gICAgLy8gT3B0aW9uYWwgdmFsdWVzXHJcbiAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zXHJcbiAgICB0aGlzLmNyZWF0ZWRBdCA9IG51bGwgLy8gU2VydmVyIGRlZmluZWQgdmFsdWUsIG5vdCBhdmFpbGFibGUgdW50aWwgY3JlYXRpb24uXHJcbiAgICB0aGlzLm5vdGVJZCA9IG51bGxcclxuICB9XHJcblxyXG4gIHNlcmlhbGl6YWJsZSgpIHtcclxuICAgIC8qIGVzbGludC1kaXNhYmxlIGNhbWVsY2FzZSAqL1xyXG4gICAgbGV0IHRvU2VyaWFsaXplID0ge1xyXG4gICAgICBkYXRhOiB0aGlzLmRhdGEsXHJcbiAgICAgIG1vZGU6IHRoaXMubW9kZSxcclxuICAgICAgcmVjaXBpZW50X3NpZ25pbmdfa2V5OiB0aGlzLnJlY2lwaWVudFNpZ25pbmdLZXksXHJcbiAgICAgIHdyaXRlcl9zaWduaW5nX2tleTogdGhpcy53cml0ZXJTaWduaW5nS2V5LFxyXG4gICAgICB3cml0ZXJfZW5jcnlwdGlvbl9rZXk6IHRoaXMud3JpdGVyRW5jcnlwdGlvbktleSxcclxuICAgICAgZW5jcnlwdGVkX2FjY2Vzc19rZXk6IHRoaXMuZW5jcnlwdGVkQWNjZXNzS2V5LFxyXG4gICAgICBzaWduYXR1cmU6IHRoaXMuc2lnbmF0dXJlLFxyXG4gICAgICB0eXBlOiB0aGlzLm9wdGlvbnMudHlwZSxcclxuICAgICAgcGxhaW46IHRoaXMub3B0aW9ucy5wbGFpbixcclxuICAgICAgZmlsZV9tZXRhOiB0aGlzLm9wdGlvbnMuZmlsZU1ldGEsXHJcbiAgICAgIG1heF92aWV3czogdGhpcy5vcHRpb25zLm1heFZpZXdzLFxyXG4gICAgICBjbGllbnRfaWQ6IHRoaXMub3B0aW9ucy5jbGllbnRJZCxcclxuICAgICAgaWRfc3RyaW5nOiB0aGlzLm9wdGlvbnMuaWRTdHJpbmcsXHJcbiAgICAgIGV4cGlyYXRpb246IHRoaXMub3B0aW9ucy5leHBpcmF0aW9uLFxyXG4gICAgICBleHBpcmVzOiB0aGlzLm9wdGlvbnMuZXhwaXJlcyxcclxuICAgICAgZWFjcDogdGhpcy5vcHRpb25zLmVhY3AsXHJcbiAgICAgIGNyZWF0ZWRfYXQ6IHRoaXMuY3JlYXRlZEF0LFxyXG4gICAgICBub3RlX2lkOiB0aGlzLm5vdGVJZCxcclxuICAgIH1cclxuICAgIC8vIEVuc3VyZSB0aGF0IGZpbGVNZXRhIGlzIGFsd2F5cyBhbiBvYmplY3QsIGV2ZW4gaXQgaXQncyBzZXQgdG8gbnVsbFxyXG4gICAgaWYgKHRoaXMub3B0aW9ucy5maWxlTWV0YSA9PT0gbnVsbCkge1xyXG4gICAgICB0b1NlcmlhbGl6ZS5maWxlX21ldGEgPSB7fVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdG9TZXJpYWxpemUuZmlsZV9tZXRhID0gdGhpcy5vcHRpb25zLmZpbGVNZXRhXHJcbiAgICB9XHJcbiAgICAvKiBlc2xpbnQtZW5hYmxlICovXHJcbiAgICAvLyBFbnN1cmUgdGhhdCBwbGFpbiBpcyBhbHdheXMgYW4gb2JqZWN0LCBldmVuIGl0IGl0J3Mgc2V0IHRvIG51bGxcclxuICAgIGlmICh0aGlzLm9wdGlvbnMucGxhaW4gPT09IG51bGwpIHtcclxuICAgICAgdG9TZXJpYWxpemUucGxhaW4gPSB7fVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdG9TZXJpYWxpemUucGxhaW4gPSB0aGlzLm9wdGlvbnMucGxhaW5cclxuICAgIH1cclxuXHJcbiAgICBpZiAodGhpcy5vcHRpb25zLmVhY3AgaW5zdGFuY2VvZiBFQUNQKSB7XHJcbiAgICAgIHRvU2VyaWFsaXplLmVhY3AgPSB0aGlzLm9wdGlvbnMuZWFjcC5zZXJpYWxpemFibGUoKVxyXG4gICAgfVxyXG4gICAgY29uc3Qgc2VyaWFsaXplZEtleXMgPSBPYmplY3Qua2V5cyh0b1NlcmlhbGl6ZSlcclxuICAgIGZvciAoY29uc3Qga2V5IG9mIHNlcmlhbGl6ZWRLZXlzKSB7XHJcbiAgICAgIGlmICh0b1NlcmlhbGl6ZVtrZXldID09PSBudWxsKSB7XHJcbiAgICAgICAgZGVsZXRlIHRvU2VyaWFsaXplW2tleV1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRvU2VyaWFsaXplXHJcbiAgfVxyXG5cclxuICBzdGF0aWMgZGVjb2RlKGpzb24pIHtcclxuICAgIGxldCBkYXRhID0ganNvbi5kYXRhID09PSB1bmRlZmluZWQgPyBudWxsIDoganNvbi5kYXRhXHJcbiAgICBsZXQgb3B0aW9ucyA9IE5vdGVPcHRpb25zLmRlY29kZShqc29uKVxyXG4gICAgbGV0IG5vdGVLZXlzID0gTm90ZUtleXMuZGVjb2RlKGpzb24pXHJcbiAgICBsZXQgc2lnbmF0dXJlID0ganNvbi5zaWduYXR1cmUgPT09IHVuZGVmaW5lZCA/IG51bGwgOiBqc29uLnNpZ25hdHVyZVxyXG4gICAgdmFyIG5vdGUgPSBuZXcgTm90ZShkYXRhLCBub3RlS2V5cywgc2lnbmF0dXJlLCBvcHRpb25zKVxyXG5cclxuICAgIC8vIFNlcnZlciBkZWZpbmVkIHZhbHVlc1xyXG4gICAgbGV0IGNyZWF0ZWRBdCA9IGpzb24uY3JlYXRlZF9hdCA9PT0gbnVsbCA/IG51bGwgOiBqc29uLmNyZWF0ZWRfYXRcclxuICAgIGxldCBub3RlSWQgPSBqc29uLm5vdGVfaWQgPT09IG51bGwgPyBudWxsIDoganNvbi5ub3RlX2lkXHJcbiAgICBub3RlLmNyZWF0ZWRBdCA9IGNyZWF0ZWRBdFxyXG4gICAgbm90ZS5ub3RlSWQgPSBub3RlSWRcclxuICAgIHJldHVybiBub3RlXHJcbiAgfVxyXG5cclxuICBzdGF0aWMgY2xvbmUobm90ZSkge1xyXG4gICAgbGV0IGpzb25Ob3RlID0gbm90ZS5zZXJpYWxpemFibGUoKVxyXG4gICAgbGV0IGNsb25lTm90ZSA9IE5vdGUuZGVjb2RlKGpzb25Ob3RlKVxyXG4gICAgcmV0dXJuIGNsb25lTm90ZVxyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBOb3RlXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./types/note.js\n");

/***/ }),

/***/ "./types/noteData.js":
/*!***************************!*\
  !*** ./types/noteData.js ***!
  \***************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Signable = __webpack_require__(/*! ./signable */ \"./types/signable.js\")\r\n\r\n/**\r\n * Representation of either plaintext or encrypted data encapsulated in a note.\r\n */\r\nclass NoteData extends Signable {\r\n  constructor(data) {\r\n    super()\r\n\r\n    for (let key in data) {\r\n      // eslint-disable-next-line no-prototype-builtins\r\n      if (data.hasOwnProperty(key)) {\r\n        this[key] = data[key]\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = NoteData\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9ub3RlRGF0YS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B0b3pueXNlY3VyZS9zZGsvLi90eXBlcy9ub3RlRGF0YS5qcz9hM2JkIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNpZ25hYmxlID0gcmVxdWlyZSgnLi9zaWduYWJsZScpXHJcblxyXG4vKipcclxuICogUmVwcmVzZW50YXRpb24gb2YgZWl0aGVyIHBsYWludGV4dCBvciBlbmNyeXB0ZWQgZGF0YSBlbmNhcHN1bGF0ZWQgaW4gYSBub3RlLlxyXG4gKi9cclxuY2xhc3MgTm90ZURhdGEgZXh0ZW5kcyBTaWduYWJsZSB7XHJcbiAgY29uc3RydWN0b3IoZGF0YSkge1xyXG4gICAgc3VwZXIoKVxyXG5cclxuICAgIGZvciAobGV0IGtleSBpbiBkYXRhKSB7XHJcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wcm90b3R5cGUtYnVpbHRpbnNcclxuICAgICAgaWYgKGRhdGEuaGFzT3duUHJvcGVydHkoa2V5KSkge1xyXG4gICAgICAgIHRoaXNba2V5XSA9IGRhdGFba2V5XVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IE5vdGVEYXRhXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./types/noteData.js\n");

/***/ }),

/***/ "./types/noteInfo.js":
/*!***************************!*\
  !*** ./types/noteInfo.js ***!
  \***************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Signable = __webpack_require__(/*! ./signable */ \"./types/signable.js\")\r\nconst NoteKeys = __webpack_require__(/*! ./noteKeys */ \"./types/noteKeys.js\")\r\nconst NoteData = __webpack_require__(/*! ./noteData */ \"./types/noteData.js\")\r\n\r\n/*\r\n * NoteInfo represents required note information that is signed before encrypting\r\n */\r\nclass NoteInfo extends Signable {\r\n  constructor(data, noteKeys) {\r\n    super()\r\n    this.data = data\r\n    this.noteKeys = noteKeys\r\n  }\r\n\r\n  serializable() {\r\n    /* eslint-disable camelcase */\r\n    let toSerialize = {\r\n      data: this.data,\r\n      note_keys: this.noteKeys.serializable(),\r\n    }\r\n    /* eslint-enable */\r\n\r\n    const serializedKeys = Object.keys(toSerialize)\r\n    for (const key of serializedKeys) {\r\n      if (toSerialize[key] === null) {\r\n        delete toSerialize[key]\r\n      }\r\n    }\r\n    return toSerialize\r\n  }\r\n\r\n  static decode(json) {\r\n    let data = new NoteData(json.data)\r\n    let noteKeys = NoteKeys.decode(json)\r\n    var signableNote = new NoteInfo(data, noteKeys)\r\n    return signableNote\r\n  }\r\n\r\n  /**\r\n   * SignableSubsetFromNote creates extracts static note fields into a noteInfo\r\n   * that will create the same signature if valid.\r\n   */\r\n  static signableSubsetFromNote(note) {\r\n    return NoteInfo.decode(note.serializable())\r\n  }\r\n}\r\n\r\nmodule.exports = NoteInfo\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9ub3RlSW5mby5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdG96bnlzZWN1cmUvc2RrLy4vdHlwZXMvbm90ZUluZm8uanM/MTUxZSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTaWduYWJsZSA9IHJlcXVpcmUoJy4vc2lnbmFibGUnKVxyXG5jb25zdCBOb3RlS2V5cyA9IHJlcXVpcmUoJy4vbm90ZUtleXMnKVxyXG5jb25zdCBOb3RlRGF0YSA9IHJlcXVpcmUoJy4vbm90ZURhdGEnKVxyXG5cclxuLypcclxuICogTm90ZUluZm8gcmVwcmVzZW50cyByZXF1aXJlZCBub3RlIGluZm9ybWF0aW9uIHRoYXQgaXMgc2lnbmVkIGJlZm9yZSBlbmNyeXB0aW5nXHJcbiAqL1xyXG5jbGFzcyBOb3RlSW5mbyBleHRlbmRzIFNpZ25hYmxlIHtcclxuICBjb25zdHJ1Y3RvcihkYXRhLCBub3RlS2V5cykge1xyXG4gICAgc3VwZXIoKVxyXG4gICAgdGhpcy5kYXRhID0gZGF0YVxyXG4gICAgdGhpcy5ub3RlS2V5cyA9IG5vdGVLZXlzXHJcbiAgfVxyXG5cclxuICBzZXJpYWxpemFibGUoKSB7XHJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSBjYW1lbGNhc2UgKi9cclxuICAgIGxldCB0b1NlcmlhbGl6ZSA9IHtcclxuICAgICAgZGF0YTogdGhpcy5kYXRhLFxyXG4gICAgICBub3RlX2tleXM6IHRoaXMubm90ZUtleXMuc2VyaWFsaXphYmxlKCksXHJcbiAgICB9XHJcbiAgICAvKiBlc2xpbnQtZW5hYmxlICovXHJcblxyXG4gICAgY29uc3Qgc2VyaWFsaXplZEtleXMgPSBPYmplY3Qua2V5cyh0b1NlcmlhbGl6ZSlcclxuICAgIGZvciAoY29uc3Qga2V5IG9mIHNlcmlhbGl6ZWRLZXlzKSB7XHJcbiAgICAgIGlmICh0b1NlcmlhbGl6ZVtrZXldID09PSBudWxsKSB7XHJcbiAgICAgICAgZGVsZXRlIHRvU2VyaWFsaXplW2tleV1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRvU2VyaWFsaXplXHJcbiAgfVxyXG5cclxuICBzdGF0aWMgZGVjb2RlKGpzb24pIHtcclxuICAgIGxldCBkYXRhID0gbmV3IE5vdGVEYXRhKGpzb24uZGF0YSlcclxuICAgIGxldCBub3RlS2V5cyA9IE5vdGVLZXlzLmRlY29kZShqc29uKVxyXG4gICAgdmFyIHNpZ25hYmxlTm90ZSA9IG5ldyBOb3RlSW5mbyhkYXRhLCBub3RlS2V5cylcclxuICAgIHJldHVybiBzaWduYWJsZU5vdGVcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFNpZ25hYmxlU3Vic2V0RnJvbU5vdGUgY3JlYXRlcyBleHRyYWN0cyBzdGF0aWMgbm90ZSBmaWVsZHMgaW50byBhIG5vdGVJbmZvXHJcbiAgICogdGhhdCB3aWxsIGNyZWF0ZSB0aGUgc2FtZSBzaWduYXR1cmUgaWYgdmFsaWQuXHJcbiAgICovXHJcbiAgc3RhdGljIHNpZ25hYmxlU3Vic2V0RnJvbU5vdGUobm90ZSkge1xyXG4gICAgcmV0dXJuIE5vdGVJbmZvLmRlY29kZShub3RlLnNlcmlhbGl6YWJsZSgpKVxyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBOb3RlSW5mb1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./types/noteInfo.js\n");

/***/ }),

/***/ "./types/noteKeys.js":
/*!***************************!*\
  !*** ./types/noteKeys.js ***!
  \***************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Serializable = __webpack_require__(/*! ./serializable */ \"./types/serializable.js\")\r\n\r\nclass NoteKeys extends Serializable {\r\n  constructor(\r\n    mode,\r\n    recipientSigningKey,\r\n    writerSigningKey,\r\n    writerEncryptionKey,\r\n    encryptedAccessKey\r\n  ) {\r\n    super()\r\n    this.mode = mode\r\n    this.recipientSigningKey = recipientSigningKey\r\n    this.writerSigningKey = writerSigningKey\r\n    this.writerEncryptionKey = writerEncryptionKey\r\n    this.encryptedAccessKey = encryptedAccessKey\r\n  }\r\n\r\n  serializable() {\r\n    /* eslint-disable camelcase */\r\n    let toSerialize = {\r\n      mode: this.mode,\r\n      recipient_signing_key: this.recipientSigningKey,\r\n      writer_signing_key: this.writerSigningKey,\r\n      writer_encryption_key: this.writerEncryptionKey,\r\n      encrypted_access_key: this.encryptedAccessKey,\r\n    }\r\n    /* eslint-enabled */\r\n\r\n    const serializedKeys = Object.keys(toSerialize)\r\n    for (const key of serializedKeys) {\r\n      if (toSerialize[key] === null) {\r\n        delete toSerialize[key]\r\n      }\r\n    }\r\n    return toSerialize\r\n  }\r\n\r\n  static decode(json) {\r\n    let mode = json.mode === undefined ? null : json.mode\r\n    let recipientSigningKey =\r\n      json.recipient_signing_key === undefined\r\n        ? null\r\n        : json.recipient_signing_key\r\n    let writerSigningKey =\r\n      json.writer_signing_key === undefined ? null : json.writer_signing_key\r\n    let writerEncryptionKey =\r\n      json.writer_encryption_key === undefined\r\n        ? null\r\n        : json.writer_encryption_key\r\n    let encryptedAccessKey =\r\n      json.encrypted_access_key === undefined ? null : json.encrypted_access_key\r\n    return new NoteKeys(\r\n      mode,\r\n      recipientSigningKey,\r\n      writerSigningKey,\r\n      writerEncryptionKey,\r\n      encryptedAccessKey\r\n    )\r\n  }\r\n}\r\n\r\nmodule.exports = NoteKeys\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9ub3RlS2V5cy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdG96bnlzZWN1cmUvc2RrLy4vdHlwZXMvbm90ZUtleXMuanM/NzJiMyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTZXJpYWxpemFibGUgPSByZXF1aXJlKCcuL3NlcmlhbGl6YWJsZScpXHJcblxyXG5jbGFzcyBOb3RlS2V5cyBleHRlbmRzIFNlcmlhbGl6YWJsZSB7XHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBtb2RlLFxyXG4gICAgcmVjaXBpZW50U2lnbmluZ0tleSxcclxuICAgIHdyaXRlclNpZ25pbmdLZXksXHJcbiAgICB3cml0ZXJFbmNyeXB0aW9uS2V5LFxyXG4gICAgZW5jcnlwdGVkQWNjZXNzS2V5XHJcbiAgKSB7XHJcbiAgICBzdXBlcigpXHJcbiAgICB0aGlzLm1vZGUgPSBtb2RlXHJcbiAgICB0aGlzLnJlY2lwaWVudFNpZ25pbmdLZXkgPSByZWNpcGllbnRTaWduaW5nS2V5XHJcbiAgICB0aGlzLndyaXRlclNpZ25pbmdLZXkgPSB3cml0ZXJTaWduaW5nS2V5XHJcbiAgICB0aGlzLndyaXRlckVuY3J5cHRpb25LZXkgPSB3cml0ZXJFbmNyeXB0aW9uS2V5XHJcbiAgICB0aGlzLmVuY3J5cHRlZEFjY2Vzc0tleSA9IGVuY3J5cHRlZEFjY2Vzc0tleVxyXG4gIH1cclxuXHJcbiAgc2VyaWFsaXphYmxlKCkge1xyXG4gICAgLyogZXNsaW50LWRpc2FibGUgY2FtZWxjYXNlICovXHJcbiAgICBsZXQgdG9TZXJpYWxpemUgPSB7XHJcbiAgICAgIG1vZGU6IHRoaXMubW9kZSxcclxuICAgICAgcmVjaXBpZW50X3NpZ25pbmdfa2V5OiB0aGlzLnJlY2lwaWVudFNpZ25pbmdLZXksXHJcbiAgICAgIHdyaXRlcl9zaWduaW5nX2tleTogdGhpcy53cml0ZXJTaWduaW5nS2V5LFxyXG4gICAgICB3cml0ZXJfZW5jcnlwdGlvbl9rZXk6IHRoaXMud3JpdGVyRW5jcnlwdGlvbktleSxcclxuICAgICAgZW5jcnlwdGVkX2FjY2Vzc19rZXk6IHRoaXMuZW5jcnlwdGVkQWNjZXNzS2V5LFxyXG4gICAgfVxyXG4gICAgLyogZXNsaW50LWVuYWJsZWQgKi9cclxuXHJcbiAgICBjb25zdCBzZXJpYWxpemVkS2V5cyA9IE9iamVjdC5rZXlzKHRvU2VyaWFsaXplKVxyXG4gICAgZm9yIChjb25zdCBrZXkgb2Ygc2VyaWFsaXplZEtleXMpIHtcclxuICAgICAgaWYgKHRvU2VyaWFsaXplW2tleV0gPT09IG51bGwpIHtcclxuICAgICAgICBkZWxldGUgdG9TZXJpYWxpemVba2V5XVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdG9TZXJpYWxpemVcclxuICB9XHJcblxyXG4gIHN0YXRpYyBkZWNvZGUoanNvbikge1xyXG4gICAgbGV0IG1vZGUgPSBqc29uLm1vZGUgPT09IHVuZGVmaW5lZCA/IG51bGwgOiBqc29uLm1vZGVcclxuICAgIGxldCByZWNpcGllbnRTaWduaW5nS2V5ID1cclxuICAgICAganNvbi5yZWNpcGllbnRfc2lnbmluZ19rZXkgPT09IHVuZGVmaW5lZFxyXG4gICAgICAgID8gbnVsbFxyXG4gICAgICAgIDoganNvbi5yZWNpcGllbnRfc2lnbmluZ19rZXlcclxuICAgIGxldCB3cml0ZXJTaWduaW5nS2V5ID1cclxuICAgICAganNvbi53cml0ZXJfc2lnbmluZ19rZXkgPT09IHVuZGVmaW5lZCA/IG51bGwgOiBqc29uLndyaXRlcl9zaWduaW5nX2tleVxyXG4gICAgbGV0IHdyaXRlckVuY3J5cHRpb25LZXkgPVxyXG4gICAgICBqc29uLndyaXRlcl9lbmNyeXB0aW9uX2tleSA9PT0gdW5kZWZpbmVkXHJcbiAgICAgICAgPyBudWxsXHJcbiAgICAgICAgOiBqc29uLndyaXRlcl9lbmNyeXB0aW9uX2tleVxyXG4gICAgbGV0IGVuY3J5cHRlZEFjY2Vzc0tleSA9XHJcbiAgICAgIGpzb24uZW5jcnlwdGVkX2FjY2Vzc19rZXkgPT09IHVuZGVmaW5lZCA/IG51bGwgOiBqc29uLmVuY3J5cHRlZF9hY2Nlc3Nfa2V5XHJcbiAgICByZXR1cm4gbmV3IE5vdGVLZXlzKFxyXG4gICAgICBtb2RlLFxyXG4gICAgICByZWNpcGllbnRTaWduaW5nS2V5LFxyXG4gICAgICB3cml0ZXJTaWduaW5nS2V5LFxyXG4gICAgICB3cml0ZXJFbmNyeXB0aW9uS2V5LFxyXG4gICAgICBlbmNyeXB0ZWRBY2Nlc3NLZXlcclxuICAgIClcclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gTm90ZUtleXNcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./types/noteKeys.js\n");

/***/ }),

/***/ "./types/noteOptions.js":
/*!******************************!*\
  !*** ./types/noteOptions.js ***!
  \******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Serializable = __webpack_require__(/*! ./serializable */ \"./types/serializable.js\")\r\nconst EACP = __webpack_require__(/*! ./eacp */ \"./types/eacp.js\")\r\n\r\n/**\r\n * NoteOptions represents optional values that are not required for creating a note,\r\n * but provide additional functionality. Some features are premium and require a TozStore client to work.\r\n */\r\nclass NoteOptions extends Serializable {\r\n  constructor(\r\n    clientId,\r\n    maxViews,\r\n    idString,\r\n    expiration,\r\n    expires,\r\n    type,\r\n    plain,\r\n    fileMeta,\r\n    eacp\r\n  ) {\r\n    super()\r\n\r\n    // Premium features\r\n    this.clientId = clientId\r\n    this.maxViews = maxViews\r\n    this.idString = idString // User defined id (id_string) available as part of premium features.\r\n    this.expiration = expiration\r\n    this.expires = expires\r\n    this.eacp = eacp\r\n\r\n    // Non-premium\r\n    this.type = type\r\n    this.plain = plain\r\n    this.fileMeta = fileMeta\r\n  }\r\n\r\n  serializable() {\r\n    /* eslint-disable camelcase */\r\n    let toSerialize = {\r\n      client_id: this.clientId,\r\n      max_views: this.maxViews,\r\n      id_string: this.idString,\r\n      expiration: this.expiration,\r\n      expires: this.expires,\r\n      type: this.type,\r\n    }\r\n    // Ensure that plainMeta is always an object, even it it's set to null\r\n    if (this.plain === null) {\r\n      toSerialize.plain = {}\r\n    } else {\r\n      toSerialize.plain = this.plain\r\n    }\r\n\r\n    // Ensure that fileMeta is always an object, even it it's set to null\r\n    if (this.fileMeta === null) {\r\n      toSerialize.file_meta = {}\r\n    } else {\r\n      toSerialize.file_meta = this.fileMeta\r\n    }\r\n    /* eslint-enabled */\r\n\r\n    if (this.eacp instanceof EACP) {\r\n      toSerialize.eacp = this.eacp.serializable()\r\n    }\r\n\r\n    const serializedKeys = Object.keys(toSerialize)\r\n    for (const key of serializedKeys) {\r\n      if (toSerialize[key] === null) {\r\n        delete toSerialize[key]\r\n      }\r\n    }\r\n    return toSerialize\r\n  }\r\n\r\n  static decode(json) {\r\n    let type = json.type === undefined ? null : json.type\r\n    let plain = json.plain === undefined ? {} : json.plain\r\n    let fileMeta = json.file_meta === undefined ? {} : json.file_meta\r\n    let clientId = json.client_id === undefined ? undefined : json.client_id\r\n    let maxViews = json.max_views === undefined ? null : json.max_views\r\n    let idString = json.id_string === undefined ? null : json.id_string\r\n    let expiration = json.expiration === undefined ? null : json.expiration\r\n    let expires = json.expires === undefined ? null : json.expires\r\n    let eacp = json.eacp === undefined ? null : EACP.decode(json.eacp)\r\n    return new NoteOptions(\r\n      clientId,\r\n      maxViews,\r\n      idString,\r\n      expiration,\r\n      expires,\r\n      type,\r\n      plain,\r\n      fileMeta,\r\n      eacp\r\n    )\r\n  }\r\n}\r\n\r\nmodule.exports = NoteOptions\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9ub3RlT3B0aW9ucy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHRvem55c2VjdXJlL3Nkay8uL3R5cGVzL25vdGVPcHRpb25zLmpzP2NmZDEiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VyaWFsaXphYmxlID0gcmVxdWlyZSgnLi9zZXJpYWxpemFibGUnKVxyXG5jb25zdCBFQUNQID0gcmVxdWlyZSgnLi9lYWNwJylcclxuXHJcbi8qKlxyXG4gKiBOb3RlT3B0aW9ucyByZXByZXNlbnRzIG9wdGlvbmFsIHZhbHVlcyB0aGF0IGFyZSBub3QgcmVxdWlyZWQgZm9yIGNyZWF0aW5nIGEgbm90ZSxcclxuICogYnV0IHByb3ZpZGUgYWRkaXRpb25hbCBmdW5jdGlvbmFsaXR5LiBTb21lIGZlYXR1cmVzIGFyZSBwcmVtaXVtIGFuZCByZXF1aXJlIGEgVG96U3RvcmUgY2xpZW50IHRvIHdvcmsuXHJcbiAqL1xyXG5jbGFzcyBOb3RlT3B0aW9ucyBleHRlbmRzIFNlcmlhbGl6YWJsZSB7XHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBjbGllbnRJZCxcclxuICAgIG1heFZpZXdzLFxyXG4gICAgaWRTdHJpbmcsXHJcbiAgICBleHBpcmF0aW9uLFxyXG4gICAgZXhwaXJlcyxcclxuICAgIHR5cGUsXHJcbiAgICBwbGFpbixcclxuICAgIGZpbGVNZXRhLFxyXG4gICAgZWFjcFxyXG4gICkge1xyXG4gICAgc3VwZXIoKVxyXG5cclxuICAgIC8vIFByZW1pdW0gZmVhdHVyZXNcclxuICAgIHRoaXMuY2xpZW50SWQgPSBjbGllbnRJZFxyXG4gICAgdGhpcy5tYXhWaWV3cyA9IG1heFZpZXdzXHJcbiAgICB0aGlzLmlkU3RyaW5nID0gaWRTdHJpbmcgLy8gVXNlciBkZWZpbmVkIGlkIChpZF9zdHJpbmcpIGF2YWlsYWJsZSBhcyBwYXJ0IG9mIHByZW1pdW0gZmVhdHVyZXMuXHJcbiAgICB0aGlzLmV4cGlyYXRpb24gPSBleHBpcmF0aW9uXHJcbiAgICB0aGlzLmV4cGlyZXMgPSBleHBpcmVzXHJcbiAgICB0aGlzLmVhY3AgPSBlYWNwXHJcblxyXG4gICAgLy8gTm9uLXByZW1pdW1cclxuICAgIHRoaXMudHlwZSA9IHR5cGVcclxuICAgIHRoaXMucGxhaW4gPSBwbGFpblxyXG4gICAgdGhpcy5maWxlTWV0YSA9IGZpbGVNZXRhXHJcbiAgfVxyXG5cclxuICBzZXJpYWxpemFibGUoKSB7XHJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSBjYW1lbGNhc2UgKi9cclxuICAgIGxldCB0b1NlcmlhbGl6ZSA9IHtcclxuICAgICAgY2xpZW50X2lkOiB0aGlzLmNsaWVudElkLFxyXG4gICAgICBtYXhfdmlld3M6IHRoaXMubWF4Vmlld3MsXHJcbiAgICAgIGlkX3N0cmluZzogdGhpcy5pZFN0cmluZyxcclxuICAgICAgZXhwaXJhdGlvbjogdGhpcy5leHBpcmF0aW9uLFxyXG4gICAgICBleHBpcmVzOiB0aGlzLmV4cGlyZXMsXHJcbiAgICAgIHR5cGU6IHRoaXMudHlwZSxcclxuICAgIH1cclxuICAgIC8vIEVuc3VyZSB0aGF0IHBsYWluTWV0YSBpcyBhbHdheXMgYW4gb2JqZWN0LCBldmVuIGl0IGl0J3Mgc2V0IHRvIG51bGxcclxuICAgIGlmICh0aGlzLnBsYWluID09PSBudWxsKSB7XHJcbiAgICAgIHRvU2VyaWFsaXplLnBsYWluID0ge31cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRvU2VyaWFsaXplLnBsYWluID0gdGhpcy5wbGFpblxyXG4gICAgfVxyXG5cclxuICAgIC8vIEVuc3VyZSB0aGF0IGZpbGVNZXRhIGlzIGFsd2F5cyBhbiBvYmplY3QsIGV2ZW4gaXQgaXQncyBzZXQgdG8gbnVsbFxyXG4gICAgaWYgKHRoaXMuZmlsZU1ldGEgPT09IG51bGwpIHtcclxuICAgICAgdG9TZXJpYWxpemUuZmlsZV9tZXRhID0ge31cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRvU2VyaWFsaXplLmZpbGVfbWV0YSA9IHRoaXMuZmlsZU1ldGFcclxuICAgIH1cclxuICAgIC8qIGVzbGludC1lbmFibGVkICovXHJcblxyXG4gICAgaWYgKHRoaXMuZWFjcCBpbnN0YW5jZW9mIEVBQ1ApIHtcclxuICAgICAgdG9TZXJpYWxpemUuZWFjcCA9IHRoaXMuZWFjcC5zZXJpYWxpemFibGUoKVxyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHNlcmlhbGl6ZWRLZXlzID0gT2JqZWN0LmtleXModG9TZXJpYWxpemUpXHJcbiAgICBmb3IgKGNvbnN0IGtleSBvZiBzZXJpYWxpemVkS2V5cykge1xyXG4gICAgICBpZiAodG9TZXJpYWxpemVba2V5XSA9PT0gbnVsbCkge1xyXG4gICAgICAgIGRlbGV0ZSB0b1NlcmlhbGl6ZVtrZXldXHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiB0b1NlcmlhbGl6ZVxyXG4gIH1cclxuXHJcbiAgc3RhdGljIGRlY29kZShqc29uKSB7XHJcbiAgICBsZXQgdHlwZSA9IGpzb24udHlwZSA9PT0gdW5kZWZpbmVkID8gbnVsbCA6IGpzb24udHlwZVxyXG4gICAgbGV0IHBsYWluID0ganNvbi5wbGFpbiA9PT0gdW5kZWZpbmVkID8ge30gOiBqc29uLnBsYWluXHJcbiAgICBsZXQgZmlsZU1ldGEgPSBqc29uLmZpbGVfbWV0YSA9PT0gdW5kZWZpbmVkID8ge30gOiBqc29uLmZpbGVfbWV0YVxyXG4gICAgbGV0IGNsaWVudElkID0ganNvbi5jbGllbnRfaWQgPT09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IGpzb24uY2xpZW50X2lkXHJcbiAgICBsZXQgbWF4Vmlld3MgPSBqc29uLm1heF92aWV3cyA9PT0gdW5kZWZpbmVkID8gbnVsbCA6IGpzb24ubWF4X3ZpZXdzXHJcbiAgICBsZXQgaWRTdHJpbmcgPSBqc29uLmlkX3N0cmluZyA9PT0gdW5kZWZpbmVkID8gbnVsbCA6IGpzb24uaWRfc3RyaW5nXHJcbiAgICBsZXQgZXhwaXJhdGlvbiA9IGpzb24uZXhwaXJhdGlvbiA9PT0gdW5kZWZpbmVkID8gbnVsbCA6IGpzb24uZXhwaXJhdGlvblxyXG4gICAgbGV0IGV4cGlyZXMgPSBqc29uLmV4cGlyZXMgPT09IHVuZGVmaW5lZCA/IG51bGwgOiBqc29uLmV4cGlyZXNcclxuICAgIGxldCBlYWNwID0ganNvbi5lYWNwID09PSB1bmRlZmluZWQgPyBudWxsIDogRUFDUC5kZWNvZGUoanNvbi5lYWNwKVxyXG4gICAgcmV0dXJuIG5ldyBOb3RlT3B0aW9ucyhcclxuICAgICAgY2xpZW50SWQsXHJcbiAgICAgIG1heFZpZXdzLFxyXG4gICAgICBpZFN0cmluZyxcclxuICAgICAgZXhwaXJhdGlvbixcclxuICAgICAgZXhwaXJlcyxcclxuICAgICAgdHlwZSxcclxuICAgICAgcGxhaW4sXHJcbiAgICAgIGZpbGVNZXRhLFxyXG4gICAgICBlYWNwXHJcbiAgICApXHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IE5vdGVPcHRpb25zXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./types/noteOptions.js\n");

/***/ }),

/***/ "./types/outgoingSharingPolicy.js":
/*!****************************************!*\
  !*** ./types/outgoingSharingPolicy.js ***!
  \****************************************/
/***/ ((module) => {

eval("/**\r\n * Information about a specific E3DB client, including the client's\r\n * public key to be used for cryptographic operations.\r\n *\r\n * @property {string} readerId      Unique ID of the writer that shared with this client\r\n * @property {string} recordType    Type of record shared with this client\r\n * @property {string} [readerName]  Display name of the writer, if available\r\n */\r\nclass OutgoingSharingPolicy {\r\n  constructor(readerId, recordType, readerName = null) {\r\n    this.readerId = readerId\r\n    this.recordType = recordType\r\n    this.readerName = readerName\r\n  }\r\n\r\n  /**\r\n   * Specify how an already unserialized JSON array should be marshaled into\r\n   * an object representation.\r\n   *\r\n   * Client information contains the ID of the client, a Curve25519 public key\r\n   * component, and a flag describing whether or not the client has been validated.\r\n   *\r\n   * <code>\r\n   * isp = OutgoingSharingPolicy::decode({\r\n   *   reader_id: '',\r\n   *   record_type: '',\r\n   *   reader_name: ''\r\n   * })\r\n   * <code>\r\n   *\r\n   * @param {object} json\r\n   *\r\n   * @return {Promise<OutgoingSharingPolicy>}\r\n   */\r\n  static async decode(json) {\r\n    return Promise.resolve(\r\n      new OutgoingSharingPolicy(\r\n        json.reader_id,\r\n        json.record_type,\r\n        json.reader_name\r\n      )\r\n    )\r\n  }\r\n}\r\n\r\nmodule.exports = OutgoingSharingPolicy\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9vdXRnb2luZ1NoYXJpbmdQb2xpY3kuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdG96bnlzZWN1cmUvc2RrLy4vdHlwZXMvb3V0Z29pbmdTaGFyaW5nUG9saWN5LmpzPzgzMDgiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEluZm9ybWF0aW9uIGFib3V0IGEgc3BlY2lmaWMgRTNEQiBjbGllbnQsIGluY2x1ZGluZyB0aGUgY2xpZW50J3NcclxuICogcHVibGljIGtleSB0byBiZSB1c2VkIGZvciBjcnlwdG9ncmFwaGljIG9wZXJhdGlvbnMuXHJcbiAqXHJcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSByZWFkZXJJZCAgICAgIFVuaXF1ZSBJRCBvZiB0aGUgd3JpdGVyIHRoYXQgc2hhcmVkIHdpdGggdGhpcyBjbGllbnRcclxuICogQHByb3BlcnR5IHtzdHJpbmd9IHJlY29yZFR5cGUgICAgVHlwZSBvZiByZWNvcmQgc2hhcmVkIHdpdGggdGhpcyBjbGllbnRcclxuICogQHByb3BlcnR5IHtzdHJpbmd9IFtyZWFkZXJOYW1lXSAgRGlzcGxheSBuYW1lIG9mIHRoZSB3cml0ZXIsIGlmIGF2YWlsYWJsZVxyXG4gKi9cclxuY2xhc3MgT3V0Z29pbmdTaGFyaW5nUG9saWN5IHtcclxuICBjb25zdHJ1Y3RvcihyZWFkZXJJZCwgcmVjb3JkVHlwZSwgcmVhZGVyTmFtZSA9IG51bGwpIHtcclxuICAgIHRoaXMucmVhZGVySWQgPSByZWFkZXJJZFxyXG4gICAgdGhpcy5yZWNvcmRUeXBlID0gcmVjb3JkVHlwZVxyXG4gICAgdGhpcy5yZWFkZXJOYW1lID0gcmVhZGVyTmFtZVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU3BlY2lmeSBob3cgYW4gYWxyZWFkeSB1bnNlcmlhbGl6ZWQgSlNPTiBhcnJheSBzaG91bGQgYmUgbWFyc2hhbGVkIGludG9cclxuICAgKiBhbiBvYmplY3QgcmVwcmVzZW50YXRpb24uXHJcbiAgICpcclxuICAgKiBDbGllbnQgaW5mb3JtYXRpb24gY29udGFpbnMgdGhlIElEIG9mIHRoZSBjbGllbnQsIGEgQ3VydmUyNTUxOSBwdWJsaWMga2V5XHJcbiAgICogY29tcG9uZW50LCBhbmQgYSBmbGFnIGRlc2NyaWJpbmcgd2hldGhlciBvciBub3QgdGhlIGNsaWVudCBoYXMgYmVlbiB2YWxpZGF0ZWQuXHJcbiAgICpcclxuICAgKiA8Y29kZT5cclxuICAgKiBpc3AgPSBPdXRnb2luZ1NoYXJpbmdQb2xpY3k6OmRlY29kZSh7XHJcbiAgICogICByZWFkZXJfaWQ6ICcnLFxyXG4gICAqICAgcmVjb3JkX3R5cGU6ICcnLFxyXG4gICAqICAgcmVhZGVyX25hbWU6ICcnXHJcbiAgICogfSlcclxuICAgKiA8Y29kZT5cclxuICAgKlxyXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBqc29uXHJcbiAgICpcclxuICAgKiBAcmV0dXJuIHtQcm9taXNlPE91dGdvaW5nU2hhcmluZ1BvbGljeT59XHJcbiAgICovXHJcbiAgc3RhdGljIGFzeW5jIGRlY29kZShqc29uKSB7XHJcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKFxyXG4gICAgICBuZXcgT3V0Z29pbmdTaGFyaW5nUG9saWN5KFxyXG4gICAgICAgIGpzb24ucmVhZGVyX2lkLFxyXG4gICAgICAgIGpzb24ucmVjb3JkX3R5cGUsXHJcbiAgICAgICAganNvbi5yZWFkZXJfbmFtZVxyXG4gICAgICApXHJcbiAgICApXHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IE91dGdvaW5nU2hhcmluZ1BvbGljeVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./types/outgoingSharingPolicy.js\n");

/***/ }),

/***/ "./types/publicKey.js":
/*!****************************!*\
  !*** ./types/publicKey.js ***!
  \****************************/
/***/ ((module) => {

eval("/**\r\n * Describe a Curve25519 public key for use in Sodium-powered cryptographic\r\n * operations.\r\n *\r\n * @property {string} curve25519 Public component of the Curve25519 key.\r\n */\r\nclass PublicKey {\r\n  constructor(curve25519) {\r\n    this.curve25519 = curve25519\r\n  }\r\n\r\n  /**\r\n   * Specify how an already unserialized JSON array should be marshaled into\r\n   * an object representation.\r\n   *\r\n   * The public key component of a Curve25519 key alone is serialized for transmission between\r\n   * various parties.\r\n   *\r\n   * <code>\r\n   * key = PublicKey::decode({\r\n   *   curve25519: ''\r\n   * })\r\n   * </code>\r\n   *\r\n   * @param {object} json\r\n   *\r\n   * @return {Promise<PublicKey>}\r\n   */\r\n  static decode(json) {\r\n    let key = new PublicKey(json.curve25519)\r\n\r\n    return Promise.resolve(key)\r\n  }\r\n}\r\n\r\nmodule.exports = PublicKey\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9wdWJsaWNLZXkuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHRvem55c2VjdXJlL3Nkay8uL3R5cGVzL3B1YmxpY0tleS5qcz83NjQxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBEZXNjcmliZSBhIEN1cnZlMjU1MTkgcHVibGljIGtleSBmb3IgdXNlIGluIFNvZGl1bS1wb3dlcmVkIGNyeXB0b2dyYXBoaWNcclxuICogb3BlcmF0aW9ucy5cclxuICpcclxuICogQHByb3BlcnR5IHtzdHJpbmd9IGN1cnZlMjU1MTkgUHVibGljIGNvbXBvbmVudCBvZiB0aGUgQ3VydmUyNTUxOSBrZXkuXHJcbiAqL1xyXG5jbGFzcyBQdWJsaWNLZXkge1xyXG4gIGNvbnN0cnVjdG9yKGN1cnZlMjU1MTkpIHtcclxuICAgIHRoaXMuY3VydmUyNTUxOSA9IGN1cnZlMjU1MTlcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFNwZWNpZnkgaG93IGFuIGFscmVhZHkgdW5zZXJpYWxpemVkIEpTT04gYXJyYXkgc2hvdWxkIGJlIG1hcnNoYWxlZCBpbnRvXHJcbiAgICogYW4gb2JqZWN0IHJlcHJlc2VudGF0aW9uLlxyXG4gICAqXHJcbiAgICogVGhlIHB1YmxpYyBrZXkgY29tcG9uZW50IG9mIGEgQ3VydmUyNTUxOSBrZXkgYWxvbmUgaXMgc2VyaWFsaXplZCBmb3IgdHJhbnNtaXNzaW9uIGJldHdlZW5cclxuICAgKiB2YXJpb3VzIHBhcnRpZXMuXHJcbiAgICpcclxuICAgKiA8Y29kZT5cclxuICAgKiBrZXkgPSBQdWJsaWNLZXk6OmRlY29kZSh7XHJcbiAgICogICBjdXJ2ZTI1NTE5OiAnJ1xyXG4gICAqIH0pXHJcbiAgICogPC9jb2RlPlxyXG4gICAqXHJcbiAgICogQHBhcmFtIHtvYmplY3R9IGpzb25cclxuICAgKlxyXG4gICAqIEByZXR1cm4ge1Byb21pc2U8UHVibGljS2V5Pn1cclxuICAgKi9cclxuICBzdGF0aWMgZGVjb2RlKGpzb24pIHtcclxuICAgIGxldCBrZXkgPSBuZXcgUHVibGljS2V5KGpzb24uY3VydmUyNTUxOSlcclxuXHJcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGtleSlcclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gUHVibGljS2V5XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./types/publicKey.js\n");

/***/ }),

/***/ "./types/query.js":
/*!************************!*\
  !*** ./types/query.js ***!
  \************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Serializable = __webpack_require__(/*! ./serializable */ \"./types/serializable.js\")\r\nconst { DEFAULT_QUERY_COUNT } = __webpack_require__(/*! ../lib/utils/constants */ \"./lib/utils/constants.js\")\r\n\r\n/**\r\n * Describe a query request against the E3DB API.\r\n */\r\nclass Query extends Serializable {\r\n  constructor(\r\n    afterIndex = 0,\r\n    includeData = false,\r\n    writerIds = null,\r\n    recordIds = null,\r\n    contentTypes = null,\r\n    plain = null,\r\n    userIds = null,\r\n    count = DEFAULT_QUERY_COUNT,\r\n    includeAllWriters = false\r\n  ) {\r\n    super()\r\n\r\n    this.afterIndex = afterIndex\r\n    this.includeData = includeData\r\n    this.writerIds = writerIds\r\n    this.recordIds = recordIds\r\n    this.contentTypes = contentTypes\r\n    this.userIds = userIds\r\n    this.count = count\r\n    this.includeAllWriters = includeAllWriters\r\n\r\n    if (writerIds instanceof Array) {\r\n      this.writerIds = writerIds\r\n    } else if (writerIds !== null) {\r\n      this.writerIds = [writerIds]\r\n    }\r\n\r\n    if (recordIds instanceof Array) {\r\n      this.recordIds = recordIds\r\n    } else if (recordIds !== null) {\r\n      this.recordIds = [recordIds]\r\n    }\r\n\r\n    if (contentTypes instanceof Array) {\r\n      this.contentTypes = contentTypes\r\n    } else if (contentTypes !== null) {\r\n      this.contentTypes = [contentTypes]\r\n    }\r\n\r\n    if (userIds instanceof Array) {\r\n      this.userIds = userIds\r\n    } else if (userIds !== null) {\r\n      this.userIds = [userIds]\r\n    }\r\n\r\n    if (typeof plain === 'object') {\r\n      this.plain = plain\r\n    } else {\r\n      this.plain = null\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generate a JSON.stringify-friendly version of the object\r\n   * automatically omitting any `null` fields.\r\n   *\r\n   * @returns {object}\r\n   */\r\n  serializable() {\r\n    let toSerialize = {}\r\n\r\n    if (this.count !== null) {\r\n      toSerialize.count = this.count\r\n    }\r\n    if (this.includeData !== null) {\r\n      toSerialize.include_data = Boolean(this.includeData)\r\n    }\r\n    if (this.writerIds !== null && this.writerIds.length > 0) {\r\n      toSerialize.writer_ids = this.writerIds\r\n    }\r\n    if (this.userIds !== null && this.userIds.length > 0) {\r\n      toSerialize.user_ids = this.userIds\r\n    }\r\n    if (this.recordIds !== null && this.recordIds.length > 0) {\r\n      toSerialize.record_ids = this.recordIds\r\n    }\r\n    if (this.contentTypes !== null && this.contentTypes.length > 0) {\r\n      toSerialize.content_types = this.contentTypes\r\n    }\r\n    if (this.plain !== null) {\r\n      toSerialize.plain = this.plain\r\n    }\r\n    if (this.afterIndex !== null) {\r\n      toSerialize.after_index = this.afterIndex\r\n    }\r\n    if (this.includeAllWriters !== null) {\r\n      toSerialize.include_all_writers = Boolean(this.includeAllWriters)\r\n    }\r\n\r\n    for (let key in toSerialize) {\r\n      // eslint-disable-next-line no-prototype-builtins\r\n      if (toSerialize.hasOwnProperty(key)) {\r\n        if (toSerialize[key] === null) {\r\n          delete toSerialize[key]\r\n        }\r\n      }\r\n    }\r\n\r\n    return toSerialize\r\n  }\r\n}\r\n\r\nmodule.exports = Query\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9xdWVyeS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdG96bnlzZWN1cmUvc2RrLy4vdHlwZXMvcXVlcnkuanM/NjU0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTZXJpYWxpemFibGUgPSByZXF1aXJlKCcuL3NlcmlhbGl6YWJsZScpXHJcbmNvbnN0IHsgREVGQVVMVF9RVUVSWV9DT1VOVCB9ID0gcmVxdWlyZSgnLi4vbGliL3V0aWxzL2NvbnN0YW50cycpXHJcblxyXG4vKipcclxuICogRGVzY3JpYmUgYSBxdWVyeSByZXF1ZXN0IGFnYWluc3QgdGhlIEUzREIgQVBJLlxyXG4gKi9cclxuY2xhc3MgUXVlcnkgZXh0ZW5kcyBTZXJpYWxpemFibGUge1xyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgYWZ0ZXJJbmRleCA9IDAsXHJcbiAgICBpbmNsdWRlRGF0YSA9IGZhbHNlLFxyXG4gICAgd3JpdGVySWRzID0gbnVsbCxcclxuICAgIHJlY29yZElkcyA9IG51bGwsXHJcbiAgICBjb250ZW50VHlwZXMgPSBudWxsLFxyXG4gICAgcGxhaW4gPSBudWxsLFxyXG4gICAgdXNlcklkcyA9IG51bGwsXHJcbiAgICBjb3VudCA9IERFRkFVTFRfUVVFUllfQ09VTlQsXHJcbiAgICBpbmNsdWRlQWxsV3JpdGVycyA9IGZhbHNlXHJcbiAgKSB7XHJcbiAgICBzdXBlcigpXHJcblxyXG4gICAgdGhpcy5hZnRlckluZGV4ID0gYWZ0ZXJJbmRleFxyXG4gICAgdGhpcy5pbmNsdWRlRGF0YSA9IGluY2x1ZGVEYXRhXHJcbiAgICB0aGlzLndyaXRlcklkcyA9IHdyaXRlcklkc1xyXG4gICAgdGhpcy5yZWNvcmRJZHMgPSByZWNvcmRJZHNcclxuICAgIHRoaXMuY29udGVudFR5cGVzID0gY29udGVudFR5cGVzXHJcbiAgICB0aGlzLnVzZXJJZHMgPSB1c2VySWRzXHJcbiAgICB0aGlzLmNvdW50ID0gY291bnRcclxuICAgIHRoaXMuaW5jbHVkZUFsbFdyaXRlcnMgPSBpbmNsdWRlQWxsV3JpdGVyc1xyXG5cclxuICAgIGlmICh3cml0ZXJJZHMgaW5zdGFuY2VvZiBBcnJheSkge1xyXG4gICAgICB0aGlzLndyaXRlcklkcyA9IHdyaXRlcklkc1xyXG4gICAgfSBlbHNlIGlmICh3cml0ZXJJZHMgIT09IG51bGwpIHtcclxuICAgICAgdGhpcy53cml0ZXJJZHMgPSBbd3JpdGVySWRzXVxyXG4gICAgfVxyXG5cclxuICAgIGlmIChyZWNvcmRJZHMgaW5zdGFuY2VvZiBBcnJheSkge1xyXG4gICAgICB0aGlzLnJlY29yZElkcyA9IHJlY29yZElkc1xyXG4gICAgfSBlbHNlIGlmIChyZWNvcmRJZHMgIT09IG51bGwpIHtcclxuICAgICAgdGhpcy5yZWNvcmRJZHMgPSBbcmVjb3JkSWRzXVxyXG4gICAgfVxyXG5cclxuICAgIGlmIChjb250ZW50VHlwZXMgaW5zdGFuY2VvZiBBcnJheSkge1xyXG4gICAgICB0aGlzLmNvbnRlbnRUeXBlcyA9IGNvbnRlbnRUeXBlc1xyXG4gICAgfSBlbHNlIGlmIChjb250ZW50VHlwZXMgIT09IG51bGwpIHtcclxuICAgICAgdGhpcy5jb250ZW50VHlwZXMgPSBbY29udGVudFR5cGVzXVxyXG4gICAgfVxyXG5cclxuICAgIGlmICh1c2VySWRzIGluc3RhbmNlb2YgQXJyYXkpIHtcclxuICAgICAgdGhpcy51c2VySWRzID0gdXNlcklkc1xyXG4gICAgfSBlbHNlIGlmICh1c2VySWRzICE9PSBudWxsKSB7XHJcbiAgICAgIHRoaXMudXNlcklkcyA9IFt1c2VySWRzXVxyXG4gICAgfVxyXG5cclxuICAgIGlmICh0eXBlb2YgcGxhaW4gPT09ICdvYmplY3QnKSB7XHJcbiAgICAgIHRoaXMucGxhaW4gPSBwbGFpblxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5wbGFpbiA9IG51bGxcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEdlbmVyYXRlIGEgSlNPTi5zdHJpbmdpZnktZnJpZW5kbHkgdmVyc2lvbiBvZiB0aGUgb2JqZWN0XHJcbiAgICogYXV0b21hdGljYWxseSBvbWl0dGluZyBhbnkgYG51bGxgIGZpZWxkcy5cclxuICAgKlxyXG4gICAqIEByZXR1cm5zIHtvYmplY3R9XHJcbiAgICovXHJcbiAgc2VyaWFsaXphYmxlKCkge1xyXG4gICAgbGV0IHRvU2VyaWFsaXplID0ge31cclxuXHJcbiAgICBpZiAodGhpcy5jb3VudCAhPT0gbnVsbCkge1xyXG4gICAgICB0b1NlcmlhbGl6ZS5jb3VudCA9IHRoaXMuY291bnRcclxuICAgIH1cclxuICAgIGlmICh0aGlzLmluY2x1ZGVEYXRhICE9PSBudWxsKSB7XHJcbiAgICAgIHRvU2VyaWFsaXplLmluY2x1ZGVfZGF0YSA9IEJvb2xlYW4odGhpcy5pbmNsdWRlRGF0YSlcclxuICAgIH1cclxuICAgIGlmICh0aGlzLndyaXRlcklkcyAhPT0gbnVsbCAmJiB0aGlzLndyaXRlcklkcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgIHRvU2VyaWFsaXplLndyaXRlcl9pZHMgPSB0aGlzLndyaXRlcklkc1xyXG4gICAgfVxyXG4gICAgaWYgKHRoaXMudXNlcklkcyAhPT0gbnVsbCAmJiB0aGlzLnVzZXJJZHMubGVuZ3RoID4gMCkge1xyXG4gICAgICB0b1NlcmlhbGl6ZS51c2VyX2lkcyA9IHRoaXMudXNlcklkc1xyXG4gICAgfVxyXG4gICAgaWYgKHRoaXMucmVjb3JkSWRzICE9PSBudWxsICYmIHRoaXMucmVjb3JkSWRzLmxlbmd0aCA+IDApIHtcclxuICAgICAgdG9TZXJpYWxpemUucmVjb3JkX2lkcyA9IHRoaXMucmVjb3JkSWRzXHJcbiAgICB9XHJcbiAgICBpZiAodGhpcy5jb250ZW50VHlwZXMgIT09IG51bGwgJiYgdGhpcy5jb250ZW50VHlwZXMubGVuZ3RoID4gMCkge1xyXG4gICAgICB0b1NlcmlhbGl6ZS5jb250ZW50X3R5cGVzID0gdGhpcy5jb250ZW50VHlwZXNcclxuICAgIH1cclxuICAgIGlmICh0aGlzLnBsYWluICE9PSBudWxsKSB7XHJcbiAgICAgIHRvU2VyaWFsaXplLnBsYWluID0gdGhpcy5wbGFpblxyXG4gICAgfVxyXG4gICAgaWYgKHRoaXMuYWZ0ZXJJbmRleCAhPT0gbnVsbCkge1xyXG4gICAgICB0b1NlcmlhbGl6ZS5hZnRlcl9pbmRleCA9IHRoaXMuYWZ0ZXJJbmRleFxyXG4gICAgfVxyXG4gICAgaWYgKHRoaXMuaW5jbHVkZUFsbFdyaXRlcnMgIT09IG51bGwpIHtcclxuICAgICAgdG9TZXJpYWxpemUuaW5jbHVkZV9hbGxfd3JpdGVycyA9IEJvb2xlYW4odGhpcy5pbmNsdWRlQWxsV3JpdGVycylcclxuICAgIH1cclxuXHJcbiAgICBmb3IgKGxldCBrZXkgaW4gdG9TZXJpYWxpemUpIHtcclxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXByb3RvdHlwZS1idWlsdGluc1xyXG4gICAgICBpZiAodG9TZXJpYWxpemUuaGFzT3duUHJvcGVydHkoa2V5KSkge1xyXG4gICAgICAgIGlmICh0b1NlcmlhbGl6ZVtrZXldID09PSBudWxsKSB7XHJcbiAgICAgICAgICBkZWxldGUgdG9TZXJpYWxpemVba2V5XVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB0b1NlcmlhbGl6ZVxyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBRdWVyeVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./types/query.js\n");

/***/ }),

/***/ "./types/queryResult.js":
/*!******************************!*\
  !*** ./types/queryResult.js ***!
  \******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const EAKInfo = __webpack_require__(/*! ./eakInfo */ \"./types/eakInfo.js\")\r\nconst Meta = __webpack_require__(/*! ./meta */ \"./types/meta.js\")\r\nconst Record = __webpack_require__(/*! ./record */ \"./types/record.js\")\r\n\r\n/**\r\n * Describe a query result returned from E3DB API.\r\n */\r\nclass QueryResult {\r\n  constructor(client, query) {\r\n    this.afterIndex = 0\r\n    this.client = client\r\n    this.query = query\r\n    this.done = false\r\n  }\r\n\r\n  /**\r\n   * Get the next page of results from the current query\r\n   *\r\n   * @returns {Promise<array>}\r\n   */\r\n  async next() {\r\n    // Finished iteration, exit early\r\n    if (this.done) {\r\n      return Promise.resolve([])\r\n    }\r\n\r\n    let query = this.query\r\n    query.afterIndex = this.afterIndex\r\n\r\n    let response = await this.client._query(query)\r\n    // If we've reached the last page, keep track and exit\r\n    if (response.results.length === 0) {\r\n      this.done = true\r\n      return Promise.resolve([])\r\n    }\r\n\r\n    /* eslint-disable */\r\n    let records = await Promise.all(\r\n      response.results.map(async (result) => {\r\n        let meta = await Meta.decode(result.meta)\r\n        let record = new Record(meta, result.record_data)\r\n        if (query.includeData && result.access_key !== null) {\r\n          let eak = await EAKInfo.decode(result.access_key)\r\n          let ak = await this.client.crypto.decryptEak(\r\n            this.client.config.privateKey,\r\n            eak\r\n          )\r\n          return this.client.crypto.decryptRecord(record, ak)\r\n        }\r\n\r\n        return Promise.resolve(record)\r\n      })\r\n    )\r\n    /* eslint-enable */\r\n\r\n    this.afterIndex = response.last_index\r\n\r\n    return Promise.resolve(records)\r\n  }\r\n}\r\n\r\nmodule.exports = QueryResult\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9xdWVyeVJlc3VsdC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHRvem55c2VjdXJlL3Nkay8uL3R5cGVzL3F1ZXJ5UmVzdWx0LmpzPzI1Y2MiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgRUFLSW5mbyA9IHJlcXVpcmUoJy4vZWFrSW5mbycpXHJcbmNvbnN0IE1ldGEgPSByZXF1aXJlKCcuL21ldGEnKVxyXG5jb25zdCBSZWNvcmQgPSByZXF1aXJlKCcuL3JlY29yZCcpXHJcblxyXG4vKipcclxuICogRGVzY3JpYmUgYSBxdWVyeSByZXN1bHQgcmV0dXJuZWQgZnJvbSBFM0RCIEFQSS5cclxuICovXHJcbmNsYXNzIFF1ZXJ5UmVzdWx0IHtcclxuICBjb25zdHJ1Y3RvcihjbGllbnQsIHF1ZXJ5KSB7XHJcbiAgICB0aGlzLmFmdGVySW5kZXggPSAwXHJcbiAgICB0aGlzLmNsaWVudCA9IGNsaWVudFxyXG4gICAgdGhpcy5xdWVyeSA9IHF1ZXJ5XHJcbiAgICB0aGlzLmRvbmUgPSBmYWxzZVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogR2V0IHRoZSBuZXh0IHBhZ2Ugb2YgcmVzdWx0cyBmcm9tIHRoZSBjdXJyZW50IHF1ZXJ5XHJcbiAgICpcclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhcnJheT59XHJcbiAgICovXHJcbiAgYXN5bmMgbmV4dCgpIHtcclxuICAgIC8vIEZpbmlzaGVkIGl0ZXJhdGlvbiwgZXhpdCBlYXJseVxyXG4gICAgaWYgKHRoaXMuZG9uZSkge1xyXG4gICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKFtdKVxyXG4gICAgfVxyXG5cclxuICAgIGxldCBxdWVyeSA9IHRoaXMucXVlcnlcclxuICAgIHF1ZXJ5LmFmdGVySW5kZXggPSB0aGlzLmFmdGVySW5kZXhcclxuXHJcbiAgICBsZXQgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmNsaWVudC5fcXVlcnkocXVlcnkpXHJcbiAgICAvLyBJZiB3ZSd2ZSByZWFjaGVkIHRoZSBsYXN0IHBhZ2UsIGtlZXAgdHJhY2sgYW5kIGV4aXRcclxuICAgIGlmIChyZXNwb25zZS5yZXN1bHRzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICB0aGlzLmRvbmUgPSB0cnVlXHJcbiAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoW10pXHJcbiAgICB9XHJcblxyXG4gICAgLyogZXNsaW50LWRpc2FibGUgKi9cclxuICAgIGxldCByZWNvcmRzID0gYXdhaXQgUHJvbWlzZS5hbGwoXHJcbiAgICAgIHJlc3BvbnNlLnJlc3VsdHMubWFwKGFzeW5jIChyZXN1bHQpID0+IHtcclxuICAgICAgICBsZXQgbWV0YSA9IGF3YWl0IE1ldGEuZGVjb2RlKHJlc3VsdC5tZXRhKVxyXG4gICAgICAgIGxldCByZWNvcmQgPSBuZXcgUmVjb3JkKG1ldGEsIHJlc3VsdC5yZWNvcmRfZGF0YSlcclxuICAgICAgICBpZiAocXVlcnkuaW5jbHVkZURhdGEgJiYgcmVzdWx0LmFjY2Vzc19rZXkgIT09IG51bGwpIHtcclxuICAgICAgICAgIGxldCBlYWsgPSBhd2FpdCBFQUtJbmZvLmRlY29kZShyZXN1bHQuYWNjZXNzX2tleSlcclxuICAgICAgICAgIGxldCBhayA9IGF3YWl0IHRoaXMuY2xpZW50LmNyeXB0by5kZWNyeXB0RWFrKFxyXG4gICAgICAgICAgICB0aGlzLmNsaWVudC5jb25maWcucHJpdmF0ZUtleSxcclxuICAgICAgICAgICAgZWFrXHJcbiAgICAgICAgICApXHJcbiAgICAgICAgICByZXR1cm4gdGhpcy5jbGllbnQuY3J5cHRvLmRlY3J5cHRSZWNvcmQocmVjb3JkLCBhaylcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUocmVjb3JkKVxyXG4gICAgICB9KVxyXG4gICAgKVxyXG4gICAgLyogZXNsaW50LWVuYWJsZSAqL1xyXG5cclxuICAgIHRoaXMuYWZ0ZXJJbmRleCA9IHJlc3BvbnNlLmxhc3RfaW5kZXhcclxuXHJcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHJlY29yZHMpXHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IFF1ZXJ5UmVzdWx0XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./types/queryResult.js\n");

/***/ }),

/***/ "./types/record.js":
/*!*************************!*\
  !*** ./types/record.js ***!
  \*************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Meta = __webpack_require__(/*! ./meta */ \"./types/meta.js\")\r\nconst FileMeta = __webpack_require__(/*! ./fileMeta */ \"./types/fileMeta.js\")\r\nconst RecordData = __webpack_require__(/*! ./recordData */ \"./types/recordData.js\")\r\nconst Signable = __webpack_require__(/*! ./signable */ \"./types/signable.js\")\r\n\r\n/**\r\n * A E3DB record containing data and metadata. Records are\r\n * a key/value mapping containing data serialized\r\n * into strings. All records are encrypted prior to sending them\r\n * to the server for storage, and decrypted in the client after\r\n * they are read.\r\n *\r\n * @property {Meta}       meta      Meta information about the record.\r\n * @property {RecordData} data      Either plaintext or encrypted record fields\r\n * @property {string}     signature Signature over unencrypted record data\r\n */\r\nclass Record extends Signable {\r\n  constructor(meta, data, signature = null) {\r\n    super()\r\n    if (meta instanceof Meta) {\r\n      this.meta = meta\r\n    } else {\r\n      throw new Error('Record meta must be a Meta object!')\r\n    }\r\n    if (data instanceof RecordData || data === null) {\r\n      this.data = data\r\n    } else if (typeof data === 'object') {\r\n      this.data = new RecordData(data)\r\n    } else {\r\n      this.data = null\r\n    }\r\n\r\n    this.signature = signature\r\n  }\r\n\r\n  /**\r\n   * Whether or not this record has a file attached to it.\r\n   *\r\n   * @return {boolean} If file meta is present.\r\n   */\r\n  get isFile() {\r\n    return this.meta.fileMeta instanceof FileMeta\r\n  }\r\n\r\n  /* eslint-disable camelcase */\r\n\r\n  /**\r\n   * Generate a JSON.stringify-friendly version of the object\r\n   * automatically omitting any `null` fields.\r\n   *\r\n   * @returns {object}\r\n   */\r\n  serializable() {\r\n    const serial = {\r\n      meta: this.meta.serializable(),\r\n      rec_sig: this.signature,\r\n    }\r\n    if (this.data) {\r\n      serial.data = this.data.serializable()\r\n    }\r\n    return serial\r\n  }\r\n\r\n  /* eslint-enabled */\r\n\r\n  /**\r\n   * Specify how an already unserialized JSON array should be marshaled into\r\n   * an object representation.\r\n   *\r\n   * Records consist of two elements, meta and data. The array we deserialize into a Record instance\r\n   * must match this format. The meta element is itself an array representing the Meta class. The\r\n   * data element is a simpler array mapping string keys to either encrypted or plaintext string values.\r\n   *\r\n   * <code>\r\n   * record = Record::decode({\r\n   *   meta: {\r\n   *     record_id:     '',\r\n   *     writer_id:     '',\r\n   *     user_id:       '',\r\n   *     type:          '',\r\n   *     plain:         {},\r\n   *     created:       '',\r\n   *     last_modified: '',\r\n   *     version:       ''\r\n   *   },\r\n   *   data: {\r\n   *     key1: 'value',\r\n   *     key2: 'value'\r\n   *   },\r\n   *   rec_sig: ''\r\n   * })\r\n   * </code>\r\n   *\r\n   * @param {array} parsed\r\n   *\r\n   * @return {Promise<Record>}\r\n   */\r\n  static async decode(json) {\r\n    let meta = await Meta.decode(json.meta)\r\n    let signature = json.rec_sig === undefined ? null : json.rec_sig\r\n\r\n    return Promise.resolve(new Record(meta, json.data, signature))\r\n  }\r\n}\r\n\r\nmodule.exports = Record\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9yZWNvcmQuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdG96bnlzZWN1cmUvc2RrLy4vdHlwZXMvcmVjb3JkLmpzPzlkYzciXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgTWV0YSA9IHJlcXVpcmUoJy4vbWV0YScpXHJcbmNvbnN0IEZpbGVNZXRhID0gcmVxdWlyZSgnLi9maWxlTWV0YScpXHJcbmNvbnN0IFJlY29yZERhdGEgPSByZXF1aXJlKCcuL3JlY29yZERhdGEnKVxyXG5jb25zdCBTaWduYWJsZSA9IHJlcXVpcmUoJy4vc2lnbmFibGUnKVxyXG5cclxuLyoqXHJcbiAqIEEgRTNEQiByZWNvcmQgY29udGFpbmluZyBkYXRhIGFuZCBtZXRhZGF0YS4gUmVjb3JkcyBhcmVcclxuICogYSBrZXkvdmFsdWUgbWFwcGluZyBjb250YWluaW5nIGRhdGEgc2VyaWFsaXplZFxyXG4gKiBpbnRvIHN0cmluZ3MuIEFsbCByZWNvcmRzIGFyZSBlbmNyeXB0ZWQgcHJpb3IgdG8gc2VuZGluZyB0aGVtXHJcbiAqIHRvIHRoZSBzZXJ2ZXIgZm9yIHN0b3JhZ2UsIGFuZCBkZWNyeXB0ZWQgaW4gdGhlIGNsaWVudCBhZnRlclxyXG4gKiB0aGV5IGFyZSByZWFkLlxyXG4gKlxyXG4gKiBAcHJvcGVydHkge01ldGF9ICAgICAgIG1ldGEgICAgICBNZXRhIGluZm9ybWF0aW9uIGFib3V0IHRoZSByZWNvcmQuXHJcbiAqIEBwcm9wZXJ0eSB7UmVjb3JkRGF0YX0gZGF0YSAgICAgIEVpdGhlciBwbGFpbnRleHQgb3IgZW5jcnlwdGVkIHJlY29yZCBmaWVsZHNcclxuICogQHByb3BlcnR5IHtzdHJpbmd9ICAgICBzaWduYXR1cmUgU2lnbmF0dXJlIG92ZXIgdW5lbmNyeXB0ZWQgcmVjb3JkIGRhdGFcclxuICovXHJcbmNsYXNzIFJlY29yZCBleHRlbmRzIFNpZ25hYmxlIHtcclxuICBjb25zdHJ1Y3RvcihtZXRhLCBkYXRhLCBzaWduYXR1cmUgPSBudWxsKSB7XHJcbiAgICBzdXBlcigpXHJcbiAgICBpZiAobWV0YSBpbnN0YW5jZW9mIE1ldGEpIHtcclxuICAgICAgdGhpcy5tZXRhID0gbWV0YVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdSZWNvcmQgbWV0YSBtdXN0IGJlIGEgTWV0YSBvYmplY3QhJylcclxuICAgIH1cclxuICAgIGlmIChkYXRhIGluc3RhbmNlb2YgUmVjb3JkRGF0YSB8fCBkYXRhID09PSBudWxsKSB7XHJcbiAgICAgIHRoaXMuZGF0YSA9IGRhdGFcclxuICAgIH0gZWxzZSBpZiAodHlwZW9mIGRhdGEgPT09ICdvYmplY3QnKSB7XHJcbiAgICAgIHRoaXMuZGF0YSA9IG5ldyBSZWNvcmREYXRhKGRhdGEpXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmRhdGEgPSBudWxsXHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5zaWduYXR1cmUgPSBzaWduYXR1cmVcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFdoZXRoZXIgb3Igbm90IHRoaXMgcmVjb3JkIGhhcyBhIGZpbGUgYXR0YWNoZWQgdG8gaXQuXHJcbiAgICpcclxuICAgKiBAcmV0dXJuIHtib29sZWFufSBJZiBmaWxlIG1ldGEgaXMgcHJlc2VudC5cclxuICAgKi9cclxuICBnZXQgaXNGaWxlKCkge1xyXG4gICAgcmV0dXJuIHRoaXMubWV0YS5maWxlTWV0YSBpbnN0YW5jZW9mIEZpbGVNZXRhXHJcbiAgfVxyXG5cclxuICAvKiBlc2xpbnQtZGlzYWJsZSBjYW1lbGNhc2UgKi9cclxuXHJcbiAgLyoqXHJcbiAgICogR2VuZXJhdGUgYSBKU09OLnN0cmluZ2lmeS1mcmllbmRseSB2ZXJzaW9uIG9mIHRoZSBvYmplY3RcclxuICAgKiBhdXRvbWF0aWNhbGx5IG9taXR0aW5nIGFueSBgbnVsbGAgZmllbGRzLlxyXG4gICAqXHJcbiAgICogQHJldHVybnMge29iamVjdH1cclxuICAgKi9cclxuICBzZXJpYWxpemFibGUoKSB7XHJcbiAgICBjb25zdCBzZXJpYWwgPSB7XHJcbiAgICAgIG1ldGE6IHRoaXMubWV0YS5zZXJpYWxpemFibGUoKSxcclxuICAgICAgcmVjX3NpZzogdGhpcy5zaWduYXR1cmUsXHJcbiAgICB9XHJcbiAgICBpZiAodGhpcy5kYXRhKSB7XHJcbiAgICAgIHNlcmlhbC5kYXRhID0gdGhpcy5kYXRhLnNlcmlhbGl6YWJsZSgpXHJcbiAgICB9XHJcbiAgICByZXR1cm4gc2VyaWFsXHJcbiAgfVxyXG5cclxuICAvKiBlc2xpbnQtZW5hYmxlZCAqL1xyXG5cclxuICAvKipcclxuICAgKiBTcGVjaWZ5IGhvdyBhbiBhbHJlYWR5IHVuc2VyaWFsaXplZCBKU09OIGFycmF5IHNob3VsZCBiZSBtYXJzaGFsZWQgaW50b1xyXG4gICAqIGFuIG9iamVjdCByZXByZXNlbnRhdGlvbi5cclxuICAgKlxyXG4gICAqIFJlY29yZHMgY29uc2lzdCBvZiB0d28gZWxlbWVudHMsIG1ldGEgYW5kIGRhdGEuIFRoZSBhcnJheSB3ZSBkZXNlcmlhbGl6ZSBpbnRvIGEgUmVjb3JkIGluc3RhbmNlXHJcbiAgICogbXVzdCBtYXRjaCB0aGlzIGZvcm1hdC4gVGhlIG1ldGEgZWxlbWVudCBpcyBpdHNlbGYgYW4gYXJyYXkgcmVwcmVzZW50aW5nIHRoZSBNZXRhIGNsYXNzLiBUaGVcclxuICAgKiBkYXRhIGVsZW1lbnQgaXMgYSBzaW1wbGVyIGFycmF5IG1hcHBpbmcgc3RyaW5nIGtleXMgdG8gZWl0aGVyIGVuY3J5cHRlZCBvciBwbGFpbnRleHQgc3RyaW5nIHZhbHVlcy5cclxuICAgKlxyXG4gICAqIDxjb2RlPlxyXG4gICAqIHJlY29yZCA9IFJlY29yZDo6ZGVjb2RlKHtcclxuICAgKiAgIG1ldGE6IHtcclxuICAgKiAgICAgcmVjb3JkX2lkOiAgICAgJycsXHJcbiAgICogICAgIHdyaXRlcl9pZDogICAgICcnLFxyXG4gICAqICAgICB1c2VyX2lkOiAgICAgICAnJyxcclxuICAgKiAgICAgdHlwZTogICAgICAgICAgJycsXHJcbiAgICogICAgIHBsYWluOiAgICAgICAgIHt9LFxyXG4gICAqICAgICBjcmVhdGVkOiAgICAgICAnJyxcclxuICAgKiAgICAgbGFzdF9tb2RpZmllZDogJycsXHJcbiAgICogICAgIHZlcnNpb246ICAgICAgICcnXHJcbiAgICogICB9LFxyXG4gICAqICAgZGF0YToge1xyXG4gICAqICAgICBrZXkxOiAndmFsdWUnLFxyXG4gICAqICAgICBrZXkyOiAndmFsdWUnXHJcbiAgICogICB9LFxyXG4gICAqICAgcmVjX3NpZzogJydcclxuICAgKiB9KVxyXG4gICAqIDwvY29kZT5cclxuICAgKlxyXG4gICAqIEBwYXJhbSB7YXJyYXl9IHBhcnNlZFxyXG4gICAqXHJcbiAgICogQHJldHVybiB7UHJvbWlzZTxSZWNvcmQ+fVxyXG4gICAqL1xyXG4gIHN0YXRpYyBhc3luYyBkZWNvZGUoanNvbikge1xyXG4gICAgbGV0IG1ldGEgPSBhd2FpdCBNZXRhLmRlY29kZShqc29uLm1ldGEpXHJcbiAgICBsZXQgc2lnbmF0dXJlID0ganNvbi5yZWNfc2lnID09PSB1bmRlZmluZWQgPyBudWxsIDoganNvbi5yZWNfc2lnXHJcblxyXG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXcgUmVjb3JkKG1ldGEsIGpzb24uZGF0YSwgc2lnbmF0dXJlKSlcclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gUmVjb3JkXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./types/record.js\n");

/***/ }),

/***/ "./types/recordData.js":
/*!*****************************!*\
  !*** ./types/recordData.js ***!
  \*****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Signable = __webpack_require__(/*! ../types/signable */ \"./types/signable.js\")\r\n\r\n/**\r\n * Representation of either plaintext or encrypted data encapsulated in a record.\r\n */\r\nclass RecordData extends Signable {\r\n  constructor(data) {\r\n    super()\r\n\r\n    for (let key in data) {\r\n      // eslint-disable-next-line no-prototype-builtins\r\n      if (data.hasOwnProperty(key)) {\r\n        this[key] = data[key]\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = RecordData\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9yZWNvcmREYXRhLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHRvem55c2VjdXJlL3Nkay8uL3R5cGVzL3JlY29yZERhdGEuanM/NTM2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTaWduYWJsZSA9IHJlcXVpcmUoJy4uL3R5cGVzL3NpZ25hYmxlJylcclxuXHJcbi8qKlxyXG4gKiBSZXByZXNlbnRhdGlvbiBvZiBlaXRoZXIgcGxhaW50ZXh0IG9yIGVuY3J5cHRlZCBkYXRhIGVuY2Fwc3VsYXRlZCBpbiBhIHJlY29yZC5cclxuICovXHJcbmNsYXNzIFJlY29yZERhdGEgZXh0ZW5kcyBTaWduYWJsZSB7XHJcbiAgY29uc3RydWN0b3IoZGF0YSkge1xyXG4gICAgc3VwZXIoKVxyXG5cclxuICAgIGZvciAobGV0IGtleSBpbiBkYXRhKSB7XHJcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wcm90b3R5cGUtYnVpbHRpbnNcclxuICAgICAgaWYgKGRhdGEuaGFzT3duUHJvcGVydHkoa2V5KSkge1xyXG4gICAgICAgIHRoaXNba2V5XSA9IGRhdGFba2V5XVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IFJlY29yZERhdGFcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./types/recordData.js\n");

/***/ }),

/***/ "./types/recordInfo.js":
/*!*****************************!*\
  !*** ./types/recordInfo.js ***!
  \*****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Signable = __webpack_require__(/*! ./signable */ \"./types/signable.js\")\r\n\r\n/* eslint-disable camelcase */\r\n\r\n/**\r\n * Represents a signed, encrypted documents\r\n *\r\n * @property {object} clientMeta\r\n * @property {object} recordData\r\n */\r\nclass RecordInfo extends Signable {\r\n  constructor(clientMeta, recordData) {\r\n    super()\r\n\r\n    this.clientMeta = {\r\n      plain: clientMeta.plain,\r\n      type: clientMeta.type,\r\n      user_id: clientMeta.userId,\r\n      writer_id: clientMeta.writerId,\r\n    }\r\n    this.recordData = recordData\r\n  }\r\n\r\n  /* eslint-enabled */\r\n\r\n  /**\r\n   * Serialize the object to JSON\r\n   *\r\n   * @returns {string}\r\n   */\r\n  stringify() {\r\n    return JSON.stringify(this.clientMeta) + JSON.stringify(this.recordData)\r\n  }\r\n}\r\n\r\nmodule.exports = RecordInfo\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9yZWNvcmRJbmZvLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B0b3pueXNlY3VyZS9zZGsvLi90eXBlcy9yZWNvcmRJbmZvLmpzPzE4NGYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2lnbmFibGUgPSByZXF1aXJlKCcuL3NpZ25hYmxlJylcclxuXHJcbi8qIGVzbGludC1kaXNhYmxlIGNhbWVsY2FzZSAqL1xyXG5cclxuLyoqXHJcbiAqIFJlcHJlc2VudHMgYSBzaWduZWQsIGVuY3J5cHRlZCBkb2N1bWVudHNcclxuICpcclxuICogQHByb3BlcnR5IHtvYmplY3R9IGNsaWVudE1ldGFcclxuICogQHByb3BlcnR5IHtvYmplY3R9IHJlY29yZERhdGFcclxuICovXHJcbmNsYXNzIFJlY29yZEluZm8gZXh0ZW5kcyBTaWduYWJsZSB7XHJcbiAgY29uc3RydWN0b3IoY2xpZW50TWV0YSwgcmVjb3JkRGF0YSkge1xyXG4gICAgc3VwZXIoKVxyXG5cclxuICAgIHRoaXMuY2xpZW50TWV0YSA9IHtcclxuICAgICAgcGxhaW46IGNsaWVudE1ldGEucGxhaW4sXHJcbiAgICAgIHR5cGU6IGNsaWVudE1ldGEudHlwZSxcclxuICAgICAgdXNlcl9pZDogY2xpZW50TWV0YS51c2VySWQsXHJcbiAgICAgIHdyaXRlcl9pZDogY2xpZW50TWV0YS53cml0ZXJJZCxcclxuICAgIH1cclxuICAgIHRoaXMucmVjb3JkRGF0YSA9IHJlY29yZERhdGFcclxuICB9XHJcblxyXG4gIC8qIGVzbGludC1lbmFibGVkICovXHJcblxyXG4gIC8qKlxyXG4gICAqIFNlcmlhbGl6ZSB0aGUgb2JqZWN0IHRvIEpTT05cclxuICAgKlxyXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9XHJcbiAgICovXHJcbiAgc3RyaW5naWZ5KCkge1xyXG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHRoaXMuY2xpZW50TWV0YSkgKyBKU09OLnN0cmluZ2lmeSh0aGlzLnJlY29yZERhdGEpXHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IFJlY29yZEluZm9cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./types/recordInfo.js\n");

/***/ }),

/***/ "./types/search.js":
/*!*************************!*\
  !*** ./types/search.js ***!
  \*************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Serializable = __webpack_require__(/*! ./serializable */ \"./types/serializable.js\")\r\nconst SearchParam = __webpack_require__(/*! ./searchParam */ \"./types/searchParam.js\")\r\nconst SearchRange = __webpack_require__(/*! ./searchRange */ \"./types/searchRange.js\")\r\nconst SearchOrder = __webpack_require__(/*! ./searchOrder */ \"./types/searchOrder.js\")\r\nconst { DEFAULT_QUERY_COUNT } = __webpack_require__(/*! ../lib/utils/constants */ \"./lib/utils/constants.js\")\r\n\r\n/**\r\n * Create a search query against Tozny Platform.\r\n */\r\nclass Search extends Serializable {\r\n  constructor(\r\n    includeData = false,\r\n    includeAllWriters = false,\r\n    count = DEFAULT_QUERY_COUNT,\r\n    nextToken\r\n  ) {\r\n    super()\r\n    this.includeData = includeData\r\n    this.includeAllWriters = includeAllWriters\r\n    this.count = count\r\n    this.nextToken = nextToken\r\n    this.matches = []\r\n    this.excludes = []\r\n  }\r\n\r\n  match(terms, condition, strategy) {\r\n    this.matches.push(new SearchParam(terms, condition, strategy))\r\n    return this\r\n  }\r\n\r\n  exclude(terms, condition, strategy) {\r\n    this.excludes.push(new SearchParam(terms, condition, strategy))\r\n    return this\r\n  }\r\n\r\n  range(start, end, key) {\r\n    this.searchRange = new SearchRange(start, end, key)\r\n    return this\r\n  }\r\n\r\n  order(sortOrder) {\r\n    this.searchOrder = new SearchOrder(sortOrder)\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Generate a JSON.stringify-friendly version of the object\r\n   * automatically omitting any `null` fields.\r\n   *\r\n   * @returns {object}\r\n   */\r\n  serializable() {\r\n    let toSerialize = {\r\n      limit: this.count,\r\n      include_all_writers: this.includeAllWriters,\r\n      include_data: this.includeData,\r\n    }\r\n    if (this.nextToken) {\r\n      toSerialize.next_token = this.nextToken\r\n    }\r\n    if (this.matches.length > 0) {\r\n      toSerialize.match = this.matches.map((m) => m.serializable())\r\n    }\r\n    if (this.excludes.length > 0) {\r\n      toSerialize.exclude = this.excludes.map((e) => e.serializable())\r\n    }\r\n    if (this.searchRange) {\r\n      toSerialize.range = this.searchRange.serializable()\r\n    }\r\n    if (this.searchOrder) {\r\n      toSerialize.order = this.searchOrder.serializable()\r\n    }\r\n    return toSerialize\r\n  }\r\n}\r\n\r\nmodule.exports = Search\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9zZWFyY2guanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B0b3pueXNlY3VyZS9zZGsvLi90eXBlcy9zZWFyY2guanM/ZTlhNiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTZXJpYWxpemFibGUgPSByZXF1aXJlKCcuL3NlcmlhbGl6YWJsZScpXHJcbmNvbnN0IFNlYXJjaFBhcmFtID0gcmVxdWlyZSgnLi9zZWFyY2hQYXJhbScpXHJcbmNvbnN0IFNlYXJjaFJhbmdlID0gcmVxdWlyZSgnLi9zZWFyY2hSYW5nZScpXHJcbmNvbnN0IFNlYXJjaE9yZGVyID0gcmVxdWlyZSgnLi9zZWFyY2hPcmRlcicpXHJcbmNvbnN0IHsgREVGQVVMVF9RVUVSWV9DT1VOVCB9ID0gcmVxdWlyZSgnLi4vbGliL3V0aWxzL2NvbnN0YW50cycpXHJcblxyXG4vKipcclxuICogQ3JlYXRlIGEgc2VhcmNoIHF1ZXJ5IGFnYWluc3QgVG96bnkgUGxhdGZvcm0uXHJcbiAqL1xyXG5jbGFzcyBTZWFyY2ggZXh0ZW5kcyBTZXJpYWxpemFibGUge1xyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgaW5jbHVkZURhdGEgPSBmYWxzZSxcclxuICAgIGluY2x1ZGVBbGxXcml0ZXJzID0gZmFsc2UsXHJcbiAgICBjb3VudCA9IERFRkFVTFRfUVVFUllfQ09VTlQsXHJcbiAgICBuZXh0VG9rZW5cclxuICApIHtcclxuICAgIHN1cGVyKClcclxuICAgIHRoaXMuaW5jbHVkZURhdGEgPSBpbmNsdWRlRGF0YVxyXG4gICAgdGhpcy5pbmNsdWRlQWxsV3JpdGVycyA9IGluY2x1ZGVBbGxXcml0ZXJzXHJcbiAgICB0aGlzLmNvdW50ID0gY291bnRcclxuICAgIHRoaXMubmV4dFRva2VuID0gbmV4dFRva2VuXHJcbiAgICB0aGlzLm1hdGNoZXMgPSBbXVxyXG4gICAgdGhpcy5leGNsdWRlcyA9IFtdXHJcbiAgfVxyXG5cclxuICBtYXRjaCh0ZXJtcywgY29uZGl0aW9uLCBzdHJhdGVneSkge1xyXG4gICAgdGhpcy5tYXRjaGVzLnB1c2gobmV3IFNlYXJjaFBhcmFtKHRlcm1zLCBjb25kaXRpb24sIHN0cmF0ZWd5KSlcclxuICAgIHJldHVybiB0aGlzXHJcbiAgfVxyXG5cclxuICBleGNsdWRlKHRlcm1zLCBjb25kaXRpb24sIHN0cmF0ZWd5KSB7XHJcbiAgICB0aGlzLmV4Y2x1ZGVzLnB1c2gobmV3IFNlYXJjaFBhcmFtKHRlcm1zLCBjb25kaXRpb24sIHN0cmF0ZWd5KSlcclxuICAgIHJldHVybiB0aGlzXHJcbiAgfVxyXG5cclxuICByYW5nZShzdGFydCwgZW5kLCBrZXkpIHtcclxuICAgIHRoaXMuc2VhcmNoUmFuZ2UgPSBuZXcgU2VhcmNoUmFuZ2Uoc3RhcnQsIGVuZCwga2V5KVxyXG4gICAgcmV0dXJuIHRoaXNcclxuICB9XHJcblxyXG4gIG9yZGVyKHNvcnRPcmRlcikge1xyXG4gICAgdGhpcy5zZWFyY2hPcmRlciA9IG5ldyBTZWFyY2hPcmRlcihzb3J0T3JkZXIpXHJcbiAgICByZXR1cm4gdGhpc1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogR2VuZXJhdGUgYSBKU09OLnN0cmluZ2lmeS1mcmllbmRseSB2ZXJzaW9uIG9mIHRoZSBvYmplY3RcclxuICAgKiBhdXRvbWF0aWNhbGx5IG9taXR0aW5nIGFueSBgbnVsbGAgZmllbGRzLlxyXG4gICAqXHJcbiAgICogQHJldHVybnMge29iamVjdH1cclxuICAgKi9cclxuICBzZXJpYWxpemFibGUoKSB7XHJcbiAgICBsZXQgdG9TZXJpYWxpemUgPSB7XHJcbiAgICAgIGxpbWl0OiB0aGlzLmNvdW50LFxyXG4gICAgICBpbmNsdWRlX2FsbF93cml0ZXJzOiB0aGlzLmluY2x1ZGVBbGxXcml0ZXJzLFxyXG4gICAgICBpbmNsdWRlX2RhdGE6IHRoaXMuaW5jbHVkZURhdGEsXHJcbiAgICB9XHJcbiAgICBpZiAodGhpcy5uZXh0VG9rZW4pIHtcclxuICAgICAgdG9TZXJpYWxpemUubmV4dF90b2tlbiA9IHRoaXMubmV4dFRva2VuXHJcbiAgICB9XHJcbiAgICBpZiAodGhpcy5tYXRjaGVzLmxlbmd0aCA+IDApIHtcclxuICAgICAgdG9TZXJpYWxpemUubWF0Y2ggPSB0aGlzLm1hdGNoZXMubWFwKChtKSA9PiBtLnNlcmlhbGl6YWJsZSgpKVxyXG4gICAgfVxyXG4gICAgaWYgKHRoaXMuZXhjbHVkZXMubGVuZ3RoID4gMCkge1xyXG4gICAgICB0b1NlcmlhbGl6ZS5leGNsdWRlID0gdGhpcy5leGNsdWRlcy5tYXAoKGUpID0+IGUuc2VyaWFsaXphYmxlKCkpXHJcbiAgICB9XHJcbiAgICBpZiAodGhpcy5zZWFyY2hSYW5nZSkge1xyXG4gICAgICB0b1NlcmlhbGl6ZS5yYW5nZSA9IHRoaXMuc2VhcmNoUmFuZ2Uuc2VyaWFsaXphYmxlKClcclxuICAgIH1cclxuICAgIGlmICh0aGlzLnNlYXJjaE9yZGVyKSB7XHJcbiAgICAgIHRvU2VyaWFsaXplLm9yZGVyID0gdGhpcy5zZWFyY2hPcmRlci5zZXJpYWxpemFibGUoKVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRvU2VyaWFsaXplXHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IFNlYXJjaFxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./types/search.js\n");

/***/ }),

/***/ "./types/searchOrder.js":
/*!******************************!*\
  !*** ./types/searchOrder.js ***!
  \******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Serializable = __webpack_require__(/*! ./serializable */ \"./types/serializable.js\")\r\n\r\nconst sortOrderWhitelist = ['ASCENDING', 'DESCENDING']\r\n\r\n/**\r\n * Create a search query against Tozny Platform.\r\n */\r\nclass SearchOrder extends Serializable {\r\n  constructor(sortOrder = 'ASCENDING') {\r\n    super()\r\n    if (sortOrderWhitelist.indexOf(sortOrder) === -1) {\r\n      throw new Error(\r\n        `sort_order must be one of \"${sortOrderWhitelist.join('\",\"')}\"`\r\n      )\r\n    }\r\n    this.sortOrder = sortOrder\r\n  }\r\n\r\n  /**\r\n   * Generate a JSON.stringify-friendly version of the object\r\n   * automatically omitting any `null` fields.\r\n   *\r\n   * @returns {object}\r\n   */\r\n  serializable() {\r\n    let toSerialize = {\r\n      sort_order: this.sortOrder,\r\n    }\r\n    return toSerialize\r\n  }\r\n}\r\n\r\nmodule.exports = SearchOrder\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9zZWFyY2hPcmRlci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdG96bnlzZWN1cmUvc2RrLy4vdHlwZXMvc2VhcmNoT3JkZXIuanM/MDczOSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTZXJpYWxpemFibGUgPSByZXF1aXJlKCcuL3NlcmlhbGl6YWJsZScpXHJcblxyXG5jb25zdCBzb3J0T3JkZXJXaGl0ZWxpc3QgPSBbJ0FTQ0VORElORycsICdERVNDRU5ESU5HJ11cclxuXHJcbi8qKlxyXG4gKiBDcmVhdGUgYSBzZWFyY2ggcXVlcnkgYWdhaW5zdCBUb3pueSBQbGF0Zm9ybS5cclxuICovXHJcbmNsYXNzIFNlYXJjaE9yZGVyIGV4dGVuZHMgU2VyaWFsaXphYmxlIHtcclxuICBjb25zdHJ1Y3Rvcihzb3J0T3JkZXIgPSAnQVNDRU5ESU5HJykge1xyXG4gICAgc3VwZXIoKVxyXG4gICAgaWYgKHNvcnRPcmRlcldoaXRlbGlzdC5pbmRleE9mKHNvcnRPcmRlcikgPT09IC0xKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihcclxuICAgICAgICBgc29ydF9vcmRlciBtdXN0IGJlIG9uZSBvZiBcIiR7c29ydE9yZGVyV2hpdGVsaXN0LmpvaW4oJ1wiLFwiJyl9XCJgXHJcbiAgICAgIClcclxuICAgIH1cclxuICAgIHRoaXMuc29ydE9yZGVyID0gc29ydE9yZGVyXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBHZW5lcmF0ZSBhIEpTT04uc3RyaW5naWZ5LWZyaWVuZGx5IHZlcnNpb24gb2YgdGhlIG9iamVjdFxyXG4gICAqIGF1dG9tYXRpY2FsbHkgb21pdHRpbmcgYW55IGBudWxsYCBmaWVsZHMuXHJcbiAgICpcclxuICAgKiBAcmV0dXJucyB7b2JqZWN0fVxyXG4gICAqL1xyXG4gIHNlcmlhbGl6YWJsZSgpIHtcclxuICAgIGxldCB0b1NlcmlhbGl6ZSA9IHtcclxuICAgICAgc29ydF9vcmRlcjogdGhpcy5zb3J0T3JkZXIsXHJcbiAgICB9XHJcbiAgICByZXR1cm4gdG9TZXJpYWxpemVcclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gU2VhcmNoT3JkZXJcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./types/searchOrder.js\n");

/***/ }),

/***/ "./types/searchParam.js":
/*!******************************!*\
  !*** ./types/searchParam.js ***!
  \******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Serializable = __webpack_require__(/*! ./serializable */ \"./types/serializable.js\")\r\n\r\nconst conditionWhitelist = ['OR', 'AND']\r\nconst strategyWhitelist = ['EXACT', 'FUZZY', 'WILDCARD', 'REGEXP']\r\nconst termKeys = {\r\n  writers: 'writer_ids',\r\n  users: 'user_ids',\r\n  records: 'record_ids',\r\n  type: 'content_types',\r\n  keys: 'keys',\r\n  values: 'values',\r\n  plain: 'tags',\r\n}\r\n\r\n/**\r\n * Create a search query against Tozny Platform.\r\n */\r\nclass SearchParam extends Serializable {\r\n  constructor(terms, condition = 'OR', strategy = 'EXACT') {\r\n    super()\r\n    if (conditionWhitelist.indexOf(condition) === -1) {\r\n      throw new Error(\r\n        `condition must one of \"${conditionWhitelist.join('\", \"')}\"`\r\n      )\r\n    }\r\n    if (strategyWhitelist.indexOf(strategy) === -1) {\r\n      throw new Error(\r\n        `strategy must one of \"${strategyWhitelist.join('\", \"')}\"`\r\n      )\r\n    }\r\n    this.condition = condition\r\n    this.strategy = strategy\r\n    for (let key in termKeys) {\r\n      if (terms[key] === undefined) {\r\n        continue\r\n      } else if (typeof terms[key] === 'string') {\r\n        this[key] = [terms[key]]\r\n      } else if (\r\n        Array.isArray(terms[key]) &&\r\n        terms[key].every((t) => typeof t === 'string')\r\n      ) {\r\n        this[key] = terms[key]\r\n      } else if (typeof terms[key] === 'object') {\r\n        this[key] = terms[key]\r\n      } else {\r\n        throw new Error(\r\n          `unable to add ${key} to search parameters since it was not a string or array.`\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generate a JSON.stringify-friendly version of the object\r\n   * automatically omitting any `null` fields.\r\n   *\r\n   * @returns {object}\r\n   */\r\n  serializable() {\r\n    let toSerialize = {\r\n      condition: this.condition,\r\n      strategy: this.strategy,\r\n      terms: {},\r\n    }\r\n    for (let key in termKeys) {\r\n      if (Array.isArray(this[key])) {\r\n        toSerialize.terms[termKeys[key]] = this[key]\r\n      } else if (typeof this[key] === 'object') {\r\n        toSerialize.terms[termKeys[key]] = this[key]\r\n      }\r\n    }\r\n    return toSerialize\r\n  }\r\n}\r\n\r\nmodule.exports = SearchParam\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9zZWFyY2hQYXJhbS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B0b3pueXNlY3VyZS9zZGsvLi90eXBlcy9zZWFyY2hQYXJhbS5qcz82NWU3Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlcmlhbGl6YWJsZSA9IHJlcXVpcmUoJy4vc2VyaWFsaXphYmxlJylcclxuXHJcbmNvbnN0IGNvbmRpdGlvbldoaXRlbGlzdCA9IFsnT1InLCAnQU5EJ11cclxuY29uc3Qgc3RyYXRlZ3lXaGl0ZWxpc3QgPSBbJ0VYQUNUJywgJ0ZVWlpZJywgJ1dJTERDQVJEJywgJ1JFR0VYUCddXHJcbmNvbnN0IHRlcm1LZXlzID0ge1xyXG4gIHdyaXRlcnM6ICd3cml0ZXJfaWRzJyxcclxuICB1c2VyczogJ3VzZXJfaWRzJyxcclxuICByZWNvcmRzOiAncmVjb3JkX2lkcycsXHJcbiAgdHlwZTogJ2NvbnRlbnRfdHlwZXMnLFxyXG4gIGtleXM6ICdrZXlzJyxcclxuICB2YWx1ZXM6ICd2YWx1ZXMnLFxyXG4gIHBsYWluOiAndGFncycsXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDcmVhdGUgYSBzZWFyY2ggcXVlcnkgYWdhaW5zdCBUb3pueSBQbGF0Zm9ybS5cclxuICovXHJcbmNsYXNzIFNlYXJjaFBhcmFtIGV4dGVuZHMgU2VyaWFsaXphYmxlIHtcclxuICBjb25zdHJ1Y3Rvcih0ZXJtcywgY29uZGl0aW9uID0gJ09SJywgc3RyYXRlZ3kgPSAnRVhBQ1QnKSB7XHJcbiAgICBzdXBlcigpXHJcbiAgICBpZiAoY29uZGl0aW9uV2hpdGVsaXN0LmluZGV4T2YoY29uZGl0aW9uKSA9PT0gLTEpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKFxyXG4gICAgICAgIGBjb25kaXRpb24gbXVzdCBvbmUgb2YgXCIke2NvbmRpdGlvbldoaXRlbGlzdC5qb2luKCdcIiwgXCInKX1cImBcclxuICAgICAgKVxyXG4gICAgfVxyXG4gICAgaWYgKHN0cmF0ZWd5V2hpdGVsaXN0LmluZGV4T2Yoc3RyYXRlZ3kpID09PSAtMSkge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXHJcbiAgICAgICAgYHN0cmF0ZWd5IG11c3Qgb25lIG9mIFwiJHtzdHJhdGVneVdoaXRlbGlzdC5qb2luKCdcIiwgXCInKX1cImBcclxuICAgICAgKVxyXG4gICAgfVxyXG4gICAgdGhpcy5jb25kaXRpb24gPSBjb25kaXRpb25cclxuICAgIHRoaXMuc3RyYXRlZ3kgPSBzdHJhdGVneVxyXG4gICAgZm9yIChsZXQga2V5IGluIHRlcm1LZXlzKSB7XHJcbiAgICAgIGlmICh0ZXJtc1trZXldID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICBjb250aW51ZVxyXG4gICAgICB9IGVsc2UgaWYgKHR5cGVvZiB0ZXJtc1trZXldID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgIHRoaXNba2V5XSA9IFt0ZXJtc1trZXldXVxyXG4gICAgICB9IGVsc2UgaWYgKFxyXG4gICAgICAgIEFycmF5LmlzQXJyYXkodGVybXNba2V5XSkgJiZcclxuICAgICAgICB0ZXJtc1trZXldLmV2ZXJ5KCh0KSA9PiB0eXBlb2YgdCA9PT0gJ3N0cmluZycpXHJcbiAgICAgICkge1xyXG4gICAgICAgIHRoaXNba2V5XSA9IHRlcm1zW2tleV1cclxuICAgICAgfSBlbHNlIGlmICh0eXBlb2YgdGVybXNba2V5XSA9PT0gJ29iamVjdCcpIHtcclxuICAgICAgICB0aGlzW2tleV0gPSB0ZXJtc1trZXldXHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFxyXG4gICAgICAgICAgYHVuYWJsZSB0byBhZGQgJHtrZXl9IHRvIHNlYXJjaCBwYXJhbWV0ZXJzIHNpbmNlIGl0IHdhcyBub3QgYSBzdHJpbmcgb3IgYXJyYXkuYFxyXG4gICAgICAgIClcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogR2VuZXJhdGUgYSBKU09OLnN0cmluZ2lmeS1mcmllbmRseSB2ZXJzaW9uIG9mIHRoZSBvYmplY3RcclxuICAgKiBhdXRvbWF0aWNhbGx5IG9taXR0aW5nIGFueSBgbnVsbGAgZmllbGRzLlxyXG4gICAqXHJcbiAgICogQHJldHVybnMge29iamVjdH1cclxuICAgKi9cclxuICBzZXJpYWxpemFibGUoKSB7XHJcbiAgICBsZXQgdG9TZXJpYWxpemUgPSB7XHJcbiAgICAgIGNvbmRpdGlvbjogdGhpcy5jb25kaXRpb24sXHJcbiAgICAgIHN0cmF0ZWd5OiB0aGlzLnN0cmF0ZWd5LFxyXG4gICAgICB0ZXJtczoge30sXHJcbiAgICB9XHJcbiAgICBmb3IgKGxldCBrZXkgaW4gdGVybUtleXMpIHtcclxuICAgICAgaWYgKEFycmF5LmlzQXJyYXkodGhpc1trZXldKSkge1xyXG4gICAgICAgIHRvU2VyaWFsaXplLnRlcm1zW3Rlcm1LZXlzW2tleV1dID0gdGhpc1trZXldXHJcbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHRoaXNba2V5XSA9PT0gJ29iamVjdCcpIHtcclxuICAgICAgICB0b1NlcmlhbGl6ZS50ZXJtc1t0ZXJtS2V5c1trZXldXSA9IHRoaXNba2V5XVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdG9TZXJpYWxpemVcclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gU2VhcmNoUGFyYW1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./types/searchParam.js\n");

/***/ }),

/***/ "./types/searchRange.js":
/*!******************************!*\
  !*** ./types/searchRange.js ***!
  \******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Serializable = __webpack_require__(/*! ./serializable */ \"./types/serializable.js\")\r\n\r\nconst keySafelist = ['CREATED', 'MODIFIED']\r\n\r\n/**\r\n * Create a search query against Tozny Platform.\r\n */\r\nclass SearchRange extends Serializable {\r\n  /**\r\n   * @param {Date|string} start the start of the search range\r\n   * @param {Date|string} end the end of the search range\r\n   * @param {string} [key] the key to compare dates on, either \"CREATED\" or \"MODIFIED\"\r\n   */\r\n  constructor(start, end, key = 'CREATED') {\r\n    super()\r\n    if (keySafelist.indexOf(key) === -1) {\r\n      throw new Error(`key must one of \"${keySafelist.join('\", \"')}\"`)\r\n    }\r\n\r\n    const parsedStart = Date.parse(start)\r\n    const parsedEnd = Date.parse(start)\r\n    if (isNaN(parsedStart)) {\r\n      throw new Error(`start must be a Date: found ${start}`)\r\n    }\r\n    if (isNaN(parsedEnd)) {\r\n      throw new Error(`end must be a Date: found ${end}`)\r\n    }\r\n\r\n    this.key = key\r\n    this.start = new Date(start)\r\n    this.end = new Date(end)\r\n  }\r\n\r\n  /**\r\n   * Generate a JSON.stringify-friendly version of the object\r\n   * automatically omitting any `null` fields.\r\n   *\r\n   * @returns {object}\r\n   */\r\n  serializable() {\r\n    let toSerialize = {\r\n      range_key: this.key,\r\n      before: this.end.toISOString(),\r\n      after: this.start.toISOString(),\r\n    }\r\n    return toSerialize\r\n  }\r\n}\r\n\r\nmodule.exports = SearchRange\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9zZWFyY2hSYW5nZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHRvem55c2VjdXJlL3Nkay8uL3R5cGVzL3NlYXJjaFJhbmdlLmpzP2FkNWYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VyaWFsaXphYmxlID0gcmVxdWlyZSgnLi9zZXJpYWxpemFibGUnKVxyXG5cclxuY29uc3Qga2V5U2FmZWxpc3QgPSBbJ0NSRUFURUQnLCAnTU9ESUZJRUQnXVxyXG5cclxuLyoqXHJcbiAqIENyZWF0ZSBhIHNlYXJjaCBxdWVyeSBhZ2FpbnN0IFRvem55IFBsYXRmb3JtLlxyXG4gKi9cclxuY2xhc3MgU2VhcmNoUmFuZ2UgZXh0ZW5kcyBTZXJpYWxpemFibGUge1xyXG4gIC8qKlxyXG4gICAqIEBwYXJhbSB7RGF0ZXxzdHJpbmd9IHN0YXJ0IHRoZSBzdGFydCBvZiB0aGUgc2VhcmNoIHJhbmdlXHJcbiAgICogQHBhcmFtIHtEYXRlfHN0cmluZ30gZW5kIHRoZSBlbmQgb2YgdGhlIHNlYXJjaCByYW5nZVxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBba2V5XSB0aGUga2V5IHRvIGNvbXBhcmUgZGF0ZXMgb24sIGVpdGhlciBcIkNSRUFURURcIiBvciBcIk1PRElGSUVEXCJcclxuICAgKi9cclxuICBjb25zdHJ1Y3RvcihzdGFydCwgZW5kLCBrZXkgPSAnQ1JFQVRFRCcpIHtcclxuICAgIHN1cGVyKClcclxuICAgIGlmIChrZXlTYWZlbGlzdC5pbmRleE9mKGtleSkgPT09IC0xKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihga2V5IG11c3Qgb25lIG9mIFwiJHtrZXlTYWZlbGlzdC5qb2luKCdcIiwgXCInKX1cImApXHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgcGFyc2VkU3RhcnQgPSBEYXRlLnBhcnNlKHN0YXJ0KVxyXG4gICAgY29uc3QgcGFyc2VkRW5kID0gRGF0ZS5wYXJzZShzdGFydClcclxuICAgIGlmIChpc05hTihwYXJzZWRTdGFydCkpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBzdGFydCBtdXN0IGJlIGEgRGF0ZTogZm91bmQgJHtzdGFydH1gKVxyXG4gICAgfVxyXG4gICAgaWYgKGlzTmFOKHBhcnNlZEVuZCkpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBlbmQgbXVzdCBiZSBhIERhdGU6IGZvdW5kICR7ZW5kfWApXHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5rZXkgPSBrZXlcclxuICAgIHRoaXMuc3RhcnQgPSBuZXcgRGF0ZShzdGFydClcclxuICAgIHRoaXMuZW5kID0gbmV3IERhdGUoZW5kKVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogR2VuZXJhdGUgYSBKU09OLnN0cmluZ2lmeS1mcmllbmRseSB2ZXJzaW9uIG9mIHRoZSBvYmplY3RcclxuICAgKiBhdXRvbWF0aWNhbGx5IG9taXR0aW5nIGFueSBgbnVsbGAgZmllbGRzLlxyXG4gICAqXHJcbiAgICogQHJldHVybnMge29iamVjdH1cclxuICAgKi9cclxuICBzZXJpYWxpemFibGUoKSB7XHJcbiAgICBsZXQgdG9TZXJpYWxpemUgPSB7XHJcbiAgICAgIHJhbmdlX2tleTogdGhpcy5rZXksXHJcbiAgICAgIGJlZm9yZTogdGhpcy5lbmQudG9JU09TdHJpbmcoKSxcclxuICAgICAgYWZ0ZXI6IHRoaXMuc3RhcnQudG9JU09TdHJpbmcoKSxcclxuICAgIH1cclxuICAgIHJldHVybiB0b1NlcmlhbGl6ZVxyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBTZWFyY2hSYW5nZVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./types/searchRange.js\n");

/***/ }),

/***/ "./types/searchResult.js":
/*!*******************************!*\
  !*** ./types/searchResult.js ***!
  \*******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const EAKInfo = __webpack_require__(/*! ./eakInfo */ \"./types/eakInfo.js\")\r\nconst Meta = __webpack_require__(/*! ./meta */ \"./types/meta.js\")\r\nconst Record = __webpack_require__(/*! ./record */ \"./types/record.js\")\r\n\r\n/**\r\n * Describe a query result returned from E3DB API.\r\n */\r\nclass SearchResult {\r\n  constructor(client, searchRequest) {\r\n    this.client = client\r\n    this.request = searchRequest\r\n    this.done = false\r\n    this.totalResults = -1\r\n  }\r\n\r\n  /**\r\n   * Get the next page of results from the current query\r\n   *\r\n   * @returns {Promise<array>}\r\n   */\r\n  async next() {\r\n    // Finished iteration, exit early\r\n    if (this.done) {\r\n      return []\r\n    }\r\n\r\n    let response = await this.client._search(this.request)\r\n    // If we've reached the last page, keep track and exit\r\n    if (response.last_index === 0) {\r\n      this.done = true\r\n    }\r\n\r\n    if (!response.results) {\r\n      return []\r\n    }\r\n\r\n    /* eslint-disable */\r\n    let records = await Promise.all(\r\n      response.results.map(async (result) => {\r\n        const meta = await Meta.decode(result.meta)\r\n        const record = new Record(meta, result.record_data)\r\n        if (this.request.includeData && result.access_key !== null) {\r\n          const eak = await EAKInfo.decode(result.access_key)\r\n          const ak = await this.client.crypto.decryptEak(\r\n            this.client.config.privateKey,\r\n            eak\r\n          )\r\n          return this.client.crypto.decryptRecord(record, ak)\r\n        }\r\n\r\n        return record\r\n      })\r\n    )\r\n\r\n    this.request.nextToken = response.last_index\r\n    this.totalResults = response.total_results\r\n    if (response.search_id) {\r\n      this.searchId = response.search_id\r\n    }\r\n    if (records.length < this.request.count) {\r\n      this.done = true\r\n    }\r\n\r\n    return records\r\n  }\r\n}\r\n\r\nmodule.exports = SearchResult\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9zZWFyY2hSZXN1bHQuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B0b3pueXNlY3VyZS9zZGsvLi90eXBlcy9zZWFyY2hSZXN1bHQuanM/NTBjZiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBFQUtJbmZvID0gcmVxdWlyZSgnLi9lYWtJbmZvJylcclxuY29uc3QgTWV0YSA9IHJlcXVpcmUoJy4vbWV0YScpXHJcbmNvbnN0IFJlY29yZCA9IHJlcXVpcmUoJy4vcmVjb3JkJylcclxuXHJcbi8qKlxyXG4gKiBEZXNjcmliZSBhIHF1ZXJ5IHJlc3VsdCByZXR1cm5lZCBmcm9tIEUzREIgQVBJLlxyXG4gKi9cclxuY2xhc3MgU2VhcmNoUmVzdWx0IHtcclxuICBjb25zdHJ1Y3RvcihjbGllbnQsIHNlYXJjaFJlcXVlc3QpIHtcclxuICAgIHRoaXMuY2xpZW50ID0gY2xpZW50XHJcbiAgICB0aGlzLnJlcXVlc3QgPSBzZWFyY2hSZXF1ZXN0XHJcbiAgICB0aGlzLmRvbmUgPSBmYWxzZVxyXG4gICAgdGhpcy50b3RhbFJlc3VsdHMgPSAtMVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogR2V0IHRoZSBuZXh0IHBhZ2Ugb2YgcmVzdWx0cyBmcm9tIHRoZSBjdXJyZW50IHF1ZXJ5XHJcbiAgICpcclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhcnJheT59XHJcbiAgICovXHJcbiAgYXN5bmMgbmV4dCgpIHtcclxuICAgIC8vIEZpbmlzaGVkIGl0ZXJhdGlvbiwgZXhpdCBlYXJseVxyXG4gICAgaWYgKHRoaXMuZG9uZSkge1xyXG4gICAgICByZXR1cm4gW11cclxuICAgIH1cclxuXHJcbiAgICBsZXQgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmNsaWVudC5fc2VhcmNoKHRoaXMucmVxdWVzdClcclxuICAgIC8vIElmIHdlJ3ZlIHJlYWNoZWQgdGhlIGxhc3QgcGFnZSwga2VlcCB0cmFjayBhbmQgZXhpdFxyXG4gICAgaWYgKHJlc3BvbnNlLmxhc3RfaW5kZXggPT09IDApIHtcclxuICAgICAgdGhpcy5kb25lID0gdHJ1ZVxyXG4gICAgfVxyXG5cclxuICAgIGlmICghcmVzcG9uc2UucmVzdWx0cykge1xyXG4gICAgICByZXR1cm4gW11cclxuICAgIH1cclxuXHJcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSAqL1xyXG4gICAgbGV0IHJlY29yZHMgPSBhd2FpdCBQcm9taXNlLmFsbChcclxuICAgICAgcmVzcG9uc2UucmVzdWx0cy5tYXAoYXN5bmMgKHJlc3VsdCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IG1ldGEgPSBhd2FpdCBNZXRhLmRlY29kZShyZXN1bHQubWV0YSlcclxuICAgICAgICBjb25zdCByZWNvcmQgPSBuZXcgUmVjb3JkKG1ldGEsIHJlc3VsdC5yZWNvcmRfZGF0YSlcclxuICAgICAgICBpZiAodGhpcy5yZXF1ZXN0LmluY2x1ZGVEYXRhICYmIHJlc3VsdC5hY2Nlc3Nfa2V5ICE9PSBudWxsKSB7XHJcbiAgICAgICAgICBjb25zdCBlYWsgPSBhd2FpdCBFQUtJbmZvLmRlY29kZShyZXN1bHQuYWNjZXNzX2tleSlcclxuICAgICAgICAgIGNvbnN0IGFrID0gYXdhaXQgdGhpcy5jbGllbnQuY3J5cHRvLmRlY3J5cHRFYWsoXHJcbiAgICAgICAgICAgIHRoaXMuY2xpZW50LmNvbmZpZy5wcml2YXRlS2V5LFxyXG4gICAgICAgICAgICBlYWtcclxuICAgICAgICAgIClcclxuICAgICAgICAgIHJldHVybiB0aGlzLmNsaWVudC5jcnlwdG8uZGVjcnlwdFJlY29yZChyZWNvcmQsIGFrKVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIHJlY29yZFxyXG4gICAgICB9KVxyXG4gICAgKVxyXG5cclxuICAgIHRoaXMucmVxdWVzdC5uZXh0VG9rZW4gPSByZXNwb25zZS5sYXN0X2luZGV4XHJcbiAgICB0aGlzLnRvdGFsUmVzdWx0cyA9IHJlc3BvbnNlLnRvdGFsX3Jlc3VsdHNcclxuICAgIGlmIChyZXNwb25zZS5zZWFyY2hfaWQpIHtcclxuICAgICAgdGhpcy5zZWFyY2hJZCA9IHJlc3BvbnNlLnNlYXJjaF9pZFxyXG4gICAgfVxyXG4gICAgaWYgKHJlY29yZHMubGVuZ3RoIDwgdGhpcy5yZXF1ZXN0LmNvdW50KSB7XHJcbiAgICAgIHRoaXMuZG9uZSA9IHRydWVcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gcmVjb3Jkc1xyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBTZWFyY2hSZXN1bHRcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./types/searchResult.js\n");

/***/ }),

/***/ "./types/serializable.js":
/*!*******************************!*\
  !*** ./types/serializable.js ***!
  \*******************************/
/***/ ((module) => {

eval("/**\r\n * Interface for serializable (offline-signable) documents to implement\r\n */\r\nclass Serializable {\r\n  /**\r\n   * Generate a JSON.stringify-friendly version of the object\r\n   * automatically omitting any `null` fields.\r\n   *\r\n   * @returns {object}\r\n   */\r\n  serializable() {\r\n    throw new Error('Object must implement serializable().')\r\n  }\r\n\r\n  /**\r\n   * Serialize the object to JSON\r\n   *\r\n   * @returns {string}\r\n   */\r\n  stringify() {\r\n    return JSON.stringify(this.serializable())\r\n  }\r\n}\r\n\r\nmodule.exports = Serializable\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9zZXJpYWxpemFibGUuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdG96bnlzZWN1cmUvc2RrLy4vdHlwZXMvc2VyaWFsaXphYmxlLmpzP2RhYzMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEludGVyZmFjZSBmb3Igc2VyaWFsaXphYmxlIChvZmZsaW5lLXNpZ25hYmxlKSBkb2N1bWVudHMgdG8gaW1wbGVtZW50XHJcbiAqL1xyXG5jbGFzcyBTZXJpYWxpemFibGUge1xyXG4gIC8qKlxyXG4gICAqIEdlbmVyYXRlIGEgSlNPTi5zdHJpbmdpZnktZnJpZW5kbHkgdmVyc2lvbiBvZiB0aGUgb2JqZWN0XHJcbiAgICogYXV0b21hdGljYWxseSBvbWl0dGluZyBhbnkgYG51bGxgIGZpZWxkcy5cclxuICAgKlxyXG4gICAqIEByZXR1cm5zIHtvYmplY3R9XHJcbiAgICovXHJcbiAgc2VyaWFsaXphYmxlKCkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKCdPYmplY3QgbXVzdCBpbXBsZW1lbnQgc2VyaWFsaXphYmxlKCkuJylcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFNlcmlhbGl6ZSB0aGUgb2JqZWN0IHRvIEpTT05cclxuICAgKlxyXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9XHJcbiAgICovXHJcbiAgc3RyaW5naWZ5KCkge1xyXG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHRoaXMuc2VyaWFsaXphYmxlKCkpXHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IFNlcmlhbGl6YWJsZVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./types/serializable.js\n");

/***/ }),

/***/ "./types/signable.js":
/*!***************************!*\
  !*** ./types/signable.js ***!
  \***************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Serializable = __webpack_require__(/*! ./serializable */ \"./types/serializable.js\")\r\n\r\n/**\r\n * Recursively sort an object by its keys so we have a deterministic\r\n * output of the data when serialized. Keys are sorted by byte order first,\r\n * then a new object is created and populated with copies of the incoming object's\r\n * data (but using the new, sorted key order for insertion).\r\n *\r\n * If a value within the object is itself an object, the nested object will first\r\n * be sorted itself before being inserted into the new parent object.\r\n *\r\n * @param {object} obj Object to sort\r\n *\r\n * @returns {object}\r\n */\r\nfunction sortObject(obj) {\r\n  let keys = Object.keys(obj)\r\n  keys.sort()\r\n\r\n  let returner = {}\r\n  for (let key of keys) {\r\n    if (typeof obj[key] === 'object') {\r\n      returner[key] = sortObject(obj[key])\r\n    } else {\r\n      returner[key] = obj[key]\r\n    }\r\n  }\r\n\r\n  return returner\r\n}\r\n\r\n/**\r\n * Interface for serializable (offline-signable) documents to implement\r\n */\r\nclass Signable extends Serializable {\r\n  /**\r\n   * Generate a JSON.stringify-friendly version of the object\r\n   * automatically omitting any `null` fields.\r\n   *\r\n   * @returns {object}\r\n   */\r\n  serializable() {\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Serialize the object to JSON.\r\n   *\r\n   * Internally, JSON.stringify() will serialize keys in chronological order (the\r\n   * order in which they were added to the object). For deterministic signing,\r\n   * however, we want to ensure the keys are in ascending byte order instead. To\r\n   * achieve this, the object is passed into a recursive sorting mechanism that\r\n   * will create a _new_ object, then copy values from the existing object into it,\r\n   * but in the proper order. That object is then passed through the native\r\n   * JSON.stringify method to serialize everything as expected.\r\n   *\r\n   * @returns {string}\r\n   */\r\n  stringify() {\r\n    return JSON.stringify(sortObject(this.serializable()))\r\n  }\r\n}\r\n\r\nmodule.exports = Signable\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9zaWduYWJsZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B0b3pueXNlY3VyZS9zZGsvLi90eXBlcy9zaWduYWJsZS5qcz8zZjU1Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlcmlhbGl6YWJsZSA9IHJlcXVpcmUoJy4vc2VyaWFsaXphYmxlJylcclxuXHJcbi8qKlxyXG4gKiBSZWN1cnNpdmVseSBzb3J0IGFuIG9iamVjdCBieSBpdHMga2V5cyBzbyB3ZSBoYXZlIGEgZGV0ZXJtaW5pc3RpY1xyXG4gKiBvdXRwdXQgb2YgdGhlIGRhdGEgd2hlbiBzZXJpYWxpemVkLiBLZXlzIGFyZSBzb3J0ZWQgYnkgYnl0ZSBvcmRlciBmaXJzdCxcclxuICogdGhlbiBhIG5ldyBvYmplY3QgaXMgY3JlYXRlZCBhbmQgcG9wdWxhdGVkIHdpdGggY29waWVzIG9mIHRoZSBpbmNvbWluZyBvYmplY3Qnc1xyXG4gKiBkYXRhIChidXQgdXNpbmcgdGhlIG5ldywgc29ydGVkIGtleSBvcmRlciBmb3IgaW5zZXJ0aW9uKS5cclxuICpcclxuICogSWYgYSB2YWx1ZSB3aXRoaW4gdGhlIG9iamVjdCBpcyBpdHNlbGYgYW4gb2JqZWN0LCB0aGUgbmVzdGVkIG9iamVjdCB3aWxsIGZpcnN0XHJcbiAqIGJlIHNvcnRlZCBpdHNlbGYgYmVmb3JlIGJlaW5nIGluc2VydGVkIGludG8gdGhlIG5ldyBwYXJlbnQgb2JqZWN0LlxyXG4gKlxyXG4gKiBAcGFyYW0ge29iamVjdH0gb2JqIE9iamVjdCB0byBzb3J0XHJcbiAqXHJcbiAqIEByZXR1cm5zIHtvYmplY3R9XHJcbiAqL1xyXG5mdW5jdGlvbiBzb3J0T2JqZWN0KG9iaikge1xyXG4gIGxldCBrZXlzID0gT2JqZWN0LmtleXMob2JqKVxyXG4gIGtleXMuc29ydCgpXHJcblxyXG4gIGxldCByZXR1cm5lciA9IHt9XHJcbiAgZm9yIChsZXQga2V5IG9mIGtleXMpIHtcclxuICAgIGlmICh0eXBlb2Ygb2JqW2tleV0gPT09ICdvYmplY3QnKSB7XHJcbiAgICAgIHJldHVybmVyW2tleV0gPSBzb3J0T2JqZWN0KG9ialtrZXldKVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuZXJba2V5XSA9IG9ialtrZXldXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICByZXR1cm4gcmV0dXJuZXJcclxufVxyXG5cclxuLyoqXHJcbiAqIEludGVyZmFjZSBmb3Igc2VyaWFsaXphYmxlIChvZmZsaW5lLXNpZ25hYmxlKSBkb2N1bWVudHMgdG8gaW1wbGVtZW50XHJcbiAqL1xyXG5jbGFzcyBTaWduYWJsZSBleHRlbmRzIFNlcmlhbGl6YWJsZSB7XHJcbiAgLyoqXHJcbiAgICogR2VuZXJhdGUgYSBKU09OLnN0cmluZ2lmeS1mcmllbmRseSB2ZXJzaW9uIG9mIHRoZSBvYmplY3RcclxuICAgKiBhdXRvbWF0aWNhbGx5IG9taXR0aW5nIGFueSBgbnVsbGAgZmllbGRzLlxyXG4gICAqXHJcbiAgICogQHJldHVybnMge29iamVjdH1cclxuICAgKi9cclxuICBzZXJpYWxpemFibGUoKSB7XHJcbiAgICByZXR1cm4gdGhpc1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU2VyaWFsaXplIHRoZSBvYmplY3QgdG8gSlNPTi5cclxuICAgKlxyXG4gICAqIEludGVybmFsbHksIEpTT04uc3RyaW5naWZ5KCkgd2lsbCBzZXJpYWxpemUga2V5cyBpbiBjaHJvbm9sb2dpY2FsIG9yZGVyICh0aGVcclxuICAgKiBvcmRlciBpbiB3aGljaCB0aGV5IHdlcmUgYWRkZWQgdG8gdGhlIG9iamVjdCkuIEZvciBkZXRlcm1pbmlzdGljIHNpZ25pbmcsXHJcbiAgICogaG93ZXZlciwgd2Ugd2FudCB0byBlbnN1cmUgdGhlIGtleXMgYXJlIGluIGFzY2VuZGluZyBieXRlIG9yZGVyIGluc3RlYWQuIFRvXHJcbiAgICogYWNoaWV2ZSB0aGlzLCB0aGUgb2JqZWN0IGlzIHBhc3NlZCBpbnRvIGEgcmVjdXJzaXZlIHNvcnRpbmcgbWVjaGFuaXNtIHRoYXRcclxuICAgKiB3aWxsIGNyZWF0ZSBhIF9uZXdfIG9iamVjdCwgdGhlbiBjb3B5IHZhbHVlcyBmcm9tIHRoZSBleGlzdGluZyBvYmplY3QgaW50byBpdCxcclxuICAgKiBidXQgaW4gdGhlIHByb3BlciBvcmRlci4gVGhhdCBvYmplY3QgaXMgdGhlbiBwYXNzZWQgdGhyb3VnaCB0aGUgbmF0aXZlXHJcbiAgICogSlNPTi5zdHJpbmdpZnkgbWV0aG9kIHRvIHNlcmlhbGl6ZSBldmVyeXRoaW5nIGFzIGV4cGVjdGVkLlxyXG4gICAqXHJcbiAgICogQHJldHVybnMge3N0cmluZ31cclxuICAgKi9cclxuICBzdHJpbmdpZnkoKSB7XHJcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoc29ydE9iamVjdCh0aGlzLnNlcmlhbGl6YWJsZSgpKSlcclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gU2lnbmFibGVcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./types/signable.js\n");

/***/ }),

/***/ "./types/signedDocument.js":
/*!*********************************!*\
  !*** ./types/signedDocument.js ***!
  \*********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Signable = __webpack_require__(/*! ./signable */ \"./types/signable.js\")\r\n\r\n/**\r\n * Represents a signed document with an attached signature\r\n *\r\n * @property {Serializable} document\r\n * @property {string}       signature\r\n */\r\nclass SignedDocument extends Signable {\r\n  constructor(document, signature) {\r\n    super()\r\n\r\n    this.document = document\r\n    this.signature = signature\r\n  }\r\n\r\n  /**\r\n   * Generate a JSON.stringify-friendly version of the object\r\n   * automatically omitting any `null` fields.\r\n   *\r\n   * @returns {object}\r\n   */\r\n  serializable() {\r\n    let toSerialize = {\r\n      doc: this.document,\r\n      sig: this.signature,\r\n    }\r\n\r\n    return toSerialize\r\n  }\r\n\r\n  /**\r\n   * Specify how an already unserialized JSON array should be marshaled into\r\n   * an object representation.\r\n   *\r\n   * <code>\r\n   * signedDocument = SignedDocument.decode({\r\n   *   'doc': {},\r\n   *   'sig': {}\r\n   * })\r\n   * </code>\r\n   *\r\n   * @param {object} json\r\n   *\r\n   * @return {Promise<SignedDocument>}\r\n   */\r\n  static decode(json) {\r\n    let signedDocument = new SignedDocument(json.doc, json.sig)\r\n\r\n    return Promise.resolve(signedDocument)\r\n  }\r\n}\r\n\r\nmodule.exports = SignedDocument\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9zaWduZWREb2N1bWVudC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdG96bnlzZWN1cmUvc2RrLy4vdHlwZXMvc2lnbmVkRG9jdW1lbnQuanM/N2YwZSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTaWduYWJsZSA9IHJlcXVpcmUoJy4vc2lnbmFibGUnKVxyXG5cclxuLyoqXHJcbiAqIFJlcHJlc2VudHMgYSBzaWduZWQgZG9jdW1lbnQgd2l0aCBhbiBhdHRhY2hlZCBzaWduYXR1cmVcclxuICpcclxuICogQHByb3BlcnR5IHtTZXJpYWxpemFibGV9IGRvY3VtZW50XHJcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSAgICAgICBzaWduYXR1cmVcclxuICovXHJcbmNsYXNzIFNpZ25lZERvY3VtZW50IGV4dGVuZHMgU2lnbmFibGUge1xyXG4gIGNvbnN0cnVjdG9yKGRvY3VtZW50LCBzaWduYXR1cmUpIHtcclxuICAgIHN1cGVyKClcclxuXHJcbiAgICB0aGlzLmRvY3VtZW50ID0gZG9jdW1lbnRcclxuICAgIHRoaXMuc2lnbmF0dXJlID0gc2lnbmF0dXJlXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBHZW5lcmF0ZSBhIEpTT04uc3RyaW5naWZ5LWZyaWVuZGx5IHZlcnNpb24gb2YgdGhlIG9iamVjdFxyXG4gICAqIGF1dG9tYXRpY2FsbHkgb21pdHRpbmcgYW55IGBudWxsYCBmaWVsZHMuXHJcbiAgICpcclxuICAgKiBAcmV0dXJucyB7b2JqZWN0fVxyXG4gICAqL1xyXG4gIHNlcmlhbGl6YWJsZSgpIHtcclxuICAgIGxldCB0b1NlcmlhbGl6ZSA9IHtcclxuICAgICAgZG9jOiB0aGlzLmRvY3VtZW50LFxyXG4gICAgICBzaWc6IHRoaXMuc2lnbmF0dXJlLFxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB0b1NlcmlhbGl6ZVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU3BlY2lmeSBob3cgYW4gYWxyZWFkeSB1bnNlcmlhbGl6ZWQgSlNPTiBhcnJheSBzaG91bGQgYmUgbWFyc2hhbGVkIGludG9cclxuICAgKiBhbiBvYmplY3QgcmVwcmVzZW50YXRpb24uXHJcbiAgICpcclxuICAgKiA8Y29kZT5cclxuICAgKiBzaWduZWREb2N1bWVudCA9IFNpZ25lZERvY3VtZW50LmRlY29kZSh7XHJcbiAgICogICAnZG9jJzoge30sXHJcbiAgICogICAnc2lnJzoge31cclxuICAgKiB9KVxyXG4gICAqIDwvY29kZT5cclxuICAgKlxyXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBqc29uXHJcbiAgICpcclxuICAgKiBAcmV0dXJuIHtQcm9taXNlPFNpZ25lZERvY3VtZW50Pn1cclxuICAgKi9cclxuICBzdGF0aWMgZGVjb2RlKGpzb24pIHtcclxuICAgIGxldCBzaWduZWREb2N1bWVudCA9IG5ldyBTaWduZWREb2N1bWVudChqc29uLmRvYywganNvbi5zaWcpXHJcblxyXG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShzaWduZWREb2N1bWVudClcclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gU2lnbmVkRG9jdW1lbnRcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./types/signedDocument.js\n");

/***/ }),

/***/ "./types/signedString.js":
/*!*******************************!*\
  !*** ./types/signedString.js ***!
  \*******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Signable = __webpack_require__(/*! ./signable */ \"./types/signable.js\")\r\n\r\n/**\r\n * Represents a signed string\r\n *\r\n * @property {string} value\r\n */\r\nclass SignedString extends Signable {\r\n  constructor(value) {\r\n    super()\r\n\r\n    this.value = value\r\n  }\r\n\r\n  /**\r\n   * Serialize the object to JSON\r\n   *\r\n   * @returns {string}\r\n   */\r\n  stringify() {\r\n    return this.value\r\n  }\r\n}\r\n\r\nmodule.exports = SignedString\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9zaWduZWRTdHJpbmcuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdG96bnlzZWN1cmUvc2RrLy4vdHlwZXMvc2lnbmVkU3RyaW5nLmpzP2NiYTMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2lnbmFibGUgPSByZXF1aXJlKCcuL3NpZ25hYmxlJylcclxuXHJcbi8qKlxyXG4gKiBSZXByZXNlbnRzIGEgc2lnbmVkIHN0cmluZ1xyXG4gKlxyXG4gKiBAcHJvcGVydHkge3N0cmluZ30gdmFsdWVcclxuICovXHJcbmNsYXNzIFNpZ25lZFN0cmluZyBleHRlbmRzIFNpZ25hYmxlIHtcclxuICBjb25zdHJ1Y3Rvcih2YWx1ZSkge1xyXG4gICAgc3VwZXIoKVxyXG5cclxuICAgIHRoaXMudmFsdWUgPSB2YWx1ZVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU2VyaWFsaXplIHRoZSBvYmplY3QgdG8gSlNPTlxyXG4gICAqXHJcbiAgICogQHJldHVybnMge3N0cmluZ31cclxuICAgKi9cclxuICBzdHJpbmdpZnkoKSB7XHJcbiAgICByZXR1cm4gdGhpcy52YWx1ZVxyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBTaWduZWRTdHJpbmdcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./types/signedString.js\n");

/***/ }),

/***/ "./types/signingKey.js":
/*!*****************************!*\
  !*** ./types/signingKey.js ***!
  \*****************************/
/***/ ((module) => {

eval("/**\r\n * Describe an Ed25519 public key for use in Sodium-powered signing\r\n * operations.\r\n *\r\n * @property {string} ed25519 Public component of the Ed25519 key.\r\n */\r\nclass SigningKey {\r\n  constructor(ed25519) {\r\n    this.ed25519 = ed25519\r\n  }\r\n\r\n  /**\r\n   * Specify how an already unserialized JSON array should be marshaled into\r\n   * an object representation.\r\n   *\r\n   * The public key component of a Ed25519 key alone is serialized for transmission\r\n   * between various parties.\r\n   *\r\n   * <code>\r\n   * key = SigningKey::decode({\r\n   *   ed25519: ''\r\n   * })\r\n   * </code>\r\n   *\r\n   * @param {object} json\r\n   *\r\n   * @return {Promise<SigningKey>}\r\n   */\r\n  static decode(json) {\r\n    let key = new SigningKey(json.ed25519)\r\n\r\n    return Promise.resolve(key)\r\n  }\r\n}\r\n\r\nmodule.exports = SigningKey\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy9zaWduaW5nS2V5LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B0b3pueXNlY3VyZS9zZGsvLi90eXBlcy9zaWduaW5nS2V5LmpzPzRlOWYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIERlc2NyaWJlIGFuIEVkMjU1MTkgcHVibGljIGtleSBmb3IgdXNlIGluIFNvZGl1bS1wb3dlcmVkIHNpZ25pbmdcclxuICogb3BlcmF0aW9ucy5cclxuICpcclxuICogQHByb3BlcnR5IHtzdHJpbmd9IGVkMjU1MTkgUHVibGljIGNvbXBvbmVudCBvZiB0aGUgRWQyNTUxOSBrZXkuXHJcbiAqL1xyXG5jbGFzcyBTaWduaW5nS2V5IHtcclxuICBjb25zdHJ1Y3RvcihlZDI1NTE5KSB7XHJcbiAgICB0aGlzLmVkMjU1MTkgPSBlZDI1NTE5XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBTcGVjaWZ5IGhvdyBhbiBhbHJlYWR5IHVuc2VyaWFsaXplZCBKU09OIGFycmF5IHNob3VsZCBiZSBtYXJzaGFsZWQgaW50b1xyXG4gICAqIGFuIG9iamVjdCByZXByZXNlbnRhdGlvbi5cclxuICAgKlxyXG4gICAqIFRoZSBwdWJsaWMga2V5IGNvbXBvbmVudCBvZiBhIEVkMjU1MTkga2V5IGFsb25lIGlzIHNlcmlhbGl6ZWQgZm9yIHRyYW5zbWlzc2lvblxyXG4gICAqIGJldHdlZW4gdmFyaW91cyBwYXJ0aWVzLlxyXG4gICAqXHJcbiAgICogPGNvZGU+XHJcbiAgICoga2V5ID0gU2lnbmluZ0tleTo6ZGVjb2RlKHtcclxuICAgKiAgIGVkMjU1MTk6ICcnXHJcbiAgICogfSlcclxuICAgKiA8L2NvZGU+XHJcbiAgICpcclxuICAgKiBAcGFyYW0ge29iamVjdH0ganNvblxyXG4gICAqXHJcbiAgICogQHJldHVybiB7UHJvbWlzZTxTaWduaW5nS2V5Pn1cclxuICAgKi9cclxuICBzdGF0aWMgZGVjb2RlKGpzb24pIHtcclxuICAgIGxldCBrZXkgPSBuZXcgU2lnbmluZ0tleShqc29uLmVkMjU1MTkpXHJcblxyXG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShrZXkpXHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IFNpZ25pbmdLZXlcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./types/signingKey.js\n");

/***/ }),

/***/ "./types/tozIdEACP.js":
/*!****************************!*\
  !*** ./types/tozIdEACP.js ***!
  \****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Serializable = __webpack_require__(/*! ./serializable */ \"./types/serializable.js\")\r\n\r\n/**\r\n * Configuration for an extended access control policy based on the last access time of another note.\r\n */\r\nclass TozIDEACP extends Serializable {\r\n  /**\r\n   * The key used to identify this EACP in a JSON object.\r\n   *\r\n   * @return {String} the EACP key.\r\n   */\r\n  static get jsonKey() {\r\n    return 'tozid_eacp'\r\n  }\r\n\r\n  /**\r\n   * Configuration for a tozny ID token based EACP.\r\n   *\r\n   * @param {string} realmName The name of the realm the token should associate with\r\n   * @param {boolean} basic When true, no nonce enforcement is done when validating\r\n   */\r\n  constructor(realmName, basic) {\r\n    super()\r\n    this.realmName = realmName\r\n    this.basic = basic\r\n  }\r\n\r\n  /**\r\n   * Create a plain object representation of the TozID EACP. Used for JSON serialization.\r\n   *\r\n   * @return {Object} A plain JS object representing the TozID EACP configuration.\r\n   */\r\n  serializable() {\r\n    /* eslint-disable camelcase */\r\n    return {\r\n      realm_name: this.realmName,\r\n      basic: this.basic,\r\n    }\r\n    /* eslint-enable */\r\n  }\r\n\r\n  /**\r\n   * Create a new TozIDEACP instance from a Javascript object.\r\n   *\r\n   * @param {Object} json A plain JS object containing the needed TozIDEACP configuration.\r\n   *\r\n   * @return {LastAccessEACP} The constructed TozIDEACP object based on the passed JS object.\r\n   */\r\n  static decode(json) {\r\n    return new TozIDEACP(json.realm_name, json.basic)\r\n  }\r\n}\r\n\r\nmodule.exports = TozIDEACP\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy90b3pJZEVBQ1AuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHRvem55c2VjdXJlL3Nkay8uL3R5cGVzL3RveklkRUFDUC5qcz84NDZiIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNlcmlhbGl6YWJsZSA9IHJlcXVpcmUoJy4vc2VyaWFsaXphYmxlJylcclxuXHJcbi8qKlxyXG4gKiBDb25maWd1cmF0aW9uIGZvciBhbiBleHRlbmRlZCBhY2Nlc3MgY29udHJvbCBwb2xpY3kgYmFzZWQgb24gdGhlIGxhc3QgYWNjZXNzIHRpbWUgb2YgYW5vdGhlciBub3RlLlxyXG4gKi9cclxuY2xhc3MgVG96SURFQUNQIGV4dGVuZHMgU2VyaWFsaXphYmxlIHtcclxuICAvKipcclxuICAgKiBUaGUga2V5IHVzZWQgdG8gaWRlbnRpZnkgdGhpcyBFQUNQIGluIGEgSlNPTiBvYmplY3QuXHJcbiAgICpcclxuICAgKiBAcmV0dXJuIHtTdHJpbmd9IHRoZSBFQUNQIGtleS5cclxuICAgKi9cclxuICBzdGF0aWMgZ2V0IGpzb25LZXkoKSB7XHJcbiAgICByZXR1cm4gJ3RvemlkX2VhY3AnXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBDb25maWd1cmF0aW9uIGZvciBhIHRvem55IElEIHRva2VuIGJhc2VkIEVBQ1AuXHJcbiAgICpcclxuICAgKiBAcGFyYW0ge3N0cmluZ30gcmVhbG1OYW1lIFRoZSBuYW1lIG9mIHRoZSByZWFsbSB0aGUgdG9rZW4gc2hvdWxkIGFzc29jaWF0ZSB3aXRoXHJcbiAgICogQHBhcmFtIHtib29sZWFufSBiYXNpYyBXaGVuIHRydWUsIG5vIG5vbmNlIGVuZm9yY2VtZW50IGlzIGRvbmUgd2hlbiB2YWxpZGF0aW5nXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IocmVhbG1OYW1lLCBiYXNpYykge1xyXG4gICAgc3VwZXIoKVxyXG4gICAgdGhpcy5yZWFsbU5hbWUgPSByZWFsbU5hbWVcclxuICAgIHRoaXMuYmFzaWMgPSBiYXNpY1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ3JlYXRlIGEgcGxhaW4gb2JqZWN0IHJlcHJlc2VudGF0aW9uIG9mIHRoZSBUb3pJRCBFQUNQLiBVc2VkIGZvciBKU09OIHNlcmlhbGl6YXRpb24uXHJcbiAgICpcclxuICAgKiBAcmV0dXJuIHtPYmplY3R9IEEgcGxhaW4gSlMgb2JqZWN0IHJlcHJlc2VudGluZyB0aGUgVG96SUQgRUFDUCBjb25maWd1cmF0aW9uLlxyXG4gICAqL1xyXG4gIHNlcmlhbGl6YWJsZSgpIHtcclxuICAgIC8qIGVzbGludC1kaXNhYmxlIGNhbWVsY2FzZSAqL1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgcmVhbG1fbmFtZTogdGhpcy5yZWFsbU5hbWUsXHJcbiAgICAgIGJhc2ljOiB0aGlzLmJhc2ljLFxyXG4gICAgfVxyXG4gICAgLyogZXNsaW50LWVuYWJsZSAqL1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ3JlYXRlIGEgbmV3IFRveklERUFDUCBpbnN0YW5jZSBmcm9tIGEgSmF2YXNjcmlwdCBvYmplY3QuXHJcbiAgICpcclxuICAgKiBAcGFyYW0ge09iamVjdH0ganNvbiBBIHBsYWluIEpTIG9iamVjdCBjb250YWluaW5nIHRoZSBuZWVkZWQgVG96SURFQUNQIGNvbmZpZ3VyYXRpb24uXHJcbiAgICpcclxuICAgKiBAcmV0dXJuIHtMYXN0QWNjZXNzRUFDUH0gVGhlIGNvbnN0cnVjdGVkIFRveklERUFDUCBvYmplY3QgYmFzZWQgb24gdGhlIHBhc3NlZCBKUyBvYmplY3QuXHJcbiAgICovXHJcbiAgc3RhdGljIGRlY29kZShqc29uKSB7XHJcbiAgICByZXR1cm4gbmV3IFRveklERUFDUChqc29uLnJlYWxtX25hbWUsIGpzb24uYmFzaWMpXHJcbiAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IFRveklERUFDUFxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./types/tozIdEACP.js\n");

/***/ }),

/***/ "./types/toznyOTPEACP.js":
/*!*******************************!*\
  !*** ./types/toznyOTPEACP.js ***!
  \*******************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Serializable = __webpack_require__(/*! ./serializable */ \"./types/serializable.js\")\r\n\r\n/**\r\n * Configuration for an Tozny OTP based extended access control policy.\r\n */\r\nclass ToznyOTPEACP extends Serializable {\r\n  /**\r\n   * The key used to identify this EACP in a JSON object.\r\n   *\r\n   * @return {String} the EACP key.\r\n   */\r\n  static get jsonKey() {\r\n    return 'tozny_otp_eacp'\r\n  }\r\n\r\n  /**\r\n   * Configuration for an Tozny OTP EACP.\r\n   *\r\n   * @param {boolean} include A boolean to indicate that this EACP should be included\r\n   */\r\n  constructor(include) {\r\n    super()\r\n    this.include = include\r\n  }\r\n\r\n  /**\r\n   * Create a plain object representation of the Tozny OTP EACP. Used for JSON serialization.\r\n   *\r\n   * @return {Object} A plain JS object representing the Tozny OTP EACP configuration.\r\n   */\r\n  serializable() {\r\n    /* eslint-disable camelcase */\r\n    let toSerialize = {\r\n      include: this.include,\r\n    }\r\n    /* eslint-enable */\r\n    return toSerialize\r\n  }\r\n\r\n  /**\r\n   * Create a new ToznyOTPEACP instance from a Javascript object.\r\n   *\r\n   * @param {Object} json A plain JS object containing the needed EmailEACP configuration.\r\n   *\r\n   * @return {ToznyOTPEACP} The constructed EmailEACP object based on the passed JS object.\r\n   */\r\n  static decode(json) {\r\n    return new ToznyOTPEACP(json.include)\r\n  }\r\n}\r\n\r\nmodule.exports = ToznyOTPEACP\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90eXBlcy90b3pueU9UUEVBQ1AuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdG96bnlzZWN1cmUvc2RrLy4vdHlwZXMvdG96bnlPVFBFQUNQLmpzPzZjYjMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU2VyaWFsaXphYmxlID0gcmVxdWlyZSgnLi9zZXJpYWxpemFibGUnKVxyXG5cclxuLyoqXHJcbiAqIENvbmZpZ3VyYXRpb24gZm9yIGFuIFRvem55IE9UUCBiYXNlZCBleHRlbmRlZCBhY2Nlc3MgY29udHJvbCBwb2xpY3kuXHJcbiAqL1xyXG5jbGFzcyBUb3pueU9UUEVBQ1AgZXh0ZW5kcyBTZXJpYWxpemFibGUge1xyXG4gIC8qKlxyXG4gICAqIFRoZSBrZXkgdXNlZCB0byBpZGVudGlmeSB0aGlzIEVBQ1AgaW4gYSBKU09OIG9iamVjdC5cclxuICAgKlxyXG4gICAqIEByZXR1cm4ge1N0cmluZ30gdGhlIEVBQ1Aga2V5LlxyXG4gICAqL1xyXG4gIHN0YXRpYyBnZXQganNvbktleSgpIHtcclxuICAgIHJldHVybiAndG96bnlfb3RwX2VhY3AnXHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBDb25maWd1cmF0aW9uIGZvciBhbiBUb3pueSBPVFAgRUFDUC5cclxuICAgKlxyXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gaW5jbHVkZSBBIGJvb2xlYW4gdG8gaW5kaWNhdGUgdGhhdCB0aGlzIEVBQ1Agc2hvdWxkIGJlIGluY2x1ZGVkXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IoaW5jbHVkZSkge1xyXG4gICAgc3VwZXIoKVxyXG4gICAgdGhpcy5pbmNsdWRlID0gaW5jbHVkZVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ3JlYXRlIGEgcGxhaW4gb2JqZWN0IHJlcHJlc2VudGF0aW9uIG9mIHRoZSBUb3pueSBPVFAgRUFDUC4gVXNlZCBmb3IgSlNPTiBzZXJpYWxpemF0aW9uLlxyXG4gICAqXHJcbiAgICogQHJldHVybiB7T2JqZWN0fSBBIHBsYWluIEpTIG9iamVjdCByZXByZXNlbnRpbmcgdGhlIFRvem55IE9UUCBFQUNQIGNvbmZpZ3VyYXRpb24uXHJcbiAgICovXHJcbiAgc2VyaWFsaXphYmxlKCkge1xyXG4gICAgLyogZXNsaW50LWRpc2FibGUgY2FtZWxjYXNlICovXHJcbiAgICBsZXQgdG9TZXJpYWxpemUgPSB7XHJcbiAgICAgIGluY2x1ZGU6IHRoaXMuaW5jbHVkZSxcclxuICAgIH1cclxuICAgIC8qIGVzbGludC1lbmFibGUgKi9cclxuICAgIHJldHVybiB0b1NlcmlhbGl6ZVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ3JlYXRlIGEgbmV3IFRvem55T1RQRUFDUCBpbnN0YW5jZSBmcm9tIGEgSmF2YXNjcmlwdCBvYmplY3QuXHJcbiAgICpcclxuICAgKiBAcGFyYW0ge09iamVjdH0ganNvbiBBIHBsYWluIEpTIG9iamVjdCBjb250YWluaW5nIHRoZSBuZWVkZWQgRW1haWxFQUNQIGNvbmZpZ3VyYXRpb24uXHJcbiAgICpcclxuICAgKiBAcmV0dXJuIHtUb3pueU9UUEVBQ1B9IFRoZSBjb25zdHJ1Y3RlZCBFbWFpbEVBQ1Agb2JqZWN0IGJhc2VkIG9uIHRoZSBwYXNzZWQgSlMgb2JqZWN0LlxyXG4gICAqL1xyXG4gIHN0YXRpYyBkZWNvZGUoanNvbikge1xyXG4gICAgcmV0dXJuIG5ldyBUb3pueU9UUEVBQ1AoanNvbi5pbmNsdWRlKVxyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBUb3pueU9UUEVBQ1BcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./types/toznyOTPEACP.js\n");

/***/ }),

/***/ "?5162":
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?f0f8":
/*!********************!*\
  !*** fs (ignored) ***!
  \********************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?ebe9":
/*!**********************!*\
  !*** path (ignored) ***!
  \**********************/
/***/ (() => {

/* (ignored) */

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./browser/sodium/browser.js");
/******/ 	
/******/ })()
;